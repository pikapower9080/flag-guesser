(()=>{var t={74:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(537),o=n.n(i),a=n(645),r=n.n(a)()(o());r.push([t.id,":root {\n  --option-bg: #e9e9ed;\n  --option-hover-bg: #d5d3d3;\n  --option-border-color: #c4c4c5;\n  --progress-bar-color: #0d80bd;\n  --progress-bar-bg: #c6c6c6;\n  --text-color: #000000;\n  --secondary-text-color: #616161;\n  --link-color: #2e2ef1;\n  --gray-btn-color: #d4d4d4;\n  --gray-btn-hover: #c5c4c4;\n  --text-input-correct-outline: #1cda1f;\n  --text-input-incorrect-outline: #e50808;\n}\n.popup-backdrop {\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.65);\n  width: 100vw;\n  height: 100vh;\n}\n.popup-container {\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 35vw;\n  height: 320px;\n  background-color: var(--bg);\n  min-width: 320px;\n}\n.popup-close {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  margin: 4px;\n  padding: 0px;\n  min-width: 0px;\n  font-size: 18px;\n  color: var(--secondary-text-color);\n}\n.popup-title {\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  padding-right: calc(18px + 6px);\n  border-bottom: 1px solid rgba(128, 128, 128, 0.673);\n}\n.popup-header {\n  height: 20px;\n  background-color: var(--bg);\n  z-index: 2;\n}\n.popup-content {\n  padding-inline: 6px;\n  overflow-y: auto;\n  height: calc(calc(100% - 20px) - 9px);\n  margin-top: 9px;\n  z-index: 1;\n}\n.popup-content > ul > li::marker {\n  content: 'â˜ž ';\n}\n.view-flag-img {\n  width: 100%;\n}\n.btn-blue {\n  background-color: #6464ef;\n  color: white;\n}\n.btn-blue:hover {\n  background-color: #4e4edc;\n}\n.btn-green {\n  background-color: #07bb07;\n  color: white;\n}\n.btn-green:hover {\n  background-color: #1aa81a;\n}\n.thin {\n  padding: 4px;\n  padding-inline: 7px;\n  font-size: 16px;\n}\n.btn-red {\n  background-color: #e60808;\n  color: white;\n}\n.btn-red:hover {\n  background-color: #ce2020;\n}\n.btn-yellow {\n  background-color: #f5eb38;\n  color: black;\n}\n.btn-yellow:hover {\n  background-color: #eae138;\n}\n.btn-gray {\n  background-color: var(--gray-btn-color);\n  color: var(--text-color);\n}\n.btn-gray:hover {\n  background-color: var(--gray-btn-hover);\n}\n.btn-purple {\n  background-color: #a81cd7;\n  color: white;\n}\n.btn-purple:hover {\n  background-color: #9c34bf;\n}\nbody {\n  overflow: hidden;\n  color: var(--text-color);\n}\na {\n  color: var(--link-color);\n}\na:visited {\n  color: var(--link-color);\n}\n.screen {\n  width: 100vw;\n  height: 100vh;\n  overflow: auto;\n  position: fixed;\n  left: 0;\n  top: 0;\n  text-align: center;\n}\n.play {\n  margin-bottom: 15px;\n}\n#flag-svg {\n  height: 20vw;\n  padding: 20px;\n}\n#guessType-multi {\n  column-count: 2;\n  width: 100vw;\n  left: 0;\n}\n#close-btn {\n  width: 43px;\n  height: 43px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  margin: 5px;\n  margin-top: 0px;\n}\n.option {\n  width: 100%;\n  display: inline;\n  margin-bottom: 5px;\n  height: 50px;\n  transition: background 300ms;\n  border: var(--option-border-color) 1px solid;\n  background-color: var(--option-bg);\n  color: var(--text-color);\n}\n.option:hover {\n  background-color: var(--option-hover-bg);\n}\n#progress-container {\n  width: calc(100% - 85px);\n  height: 15px;\n  margin: 10px;\n  margin-inline: 25px;\n  border-radius: 20px;\n  background-color: var(--progress-bar-bg);\n}\n#progress-fill {\n  width: 0%;\n  height: 100%;\n  border-radius: 25px;\n  background-color: var(--progress-bar-color);\n  position: relative;\n  left: 0;\n  top: 0;\n  transition: width 200ms;\n}\nul {\n  list-style: none;\n  padding-left: 25px;\n}\n@media (max-width: 610px) {\n  #guessType-multi {\n    column-count: 1;\n  }\n}\n#streak-container,\n#sub-streak {\n  color: #ff8000;\n}\n#sub-quiz-score {\n  color: #0d80bd;\n}\n.capitalize {\n  text-transform: capitalize;\n}\n#difficulty-container {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  background-color: var(--bg);\n  padding: 6px;\n}\n.corner-item {\n  margin: 5px;\n  position: fixed;\n}\n#game-info {\n  color: var(--secondary-text-color);\n  bottom: 0;\n  right: 0;\n  background-color: var(--bg);\n  font-size: 12px;\n  text-align: right;\n  margin: 5px;\n  position: fixed;\n}\n.spacer {\n  margin-bottom: 15px;\n}\n#view-flag-btn {\n  cursor: pointer;\n  transform: scale(0.85);\n}\nfieldset.subset {\n  margin-top: 8px;\n}\n#typing-input {\n  background-color: transparent;\n  outline: solid 1px var(--option-border-color);\n  border: none;\n  color: var(--text-color);\n  font-size: 1.5rem;\n}\n#typing-input:focus {\n  outline: var(--option-border-color) 2px solid;\n  border: none;\n  transition: outline-color 300ms;\n}\n#typing-input.correct {\n  outline: var(--text-input-correct-outline) 2px solid;\n}\n#typing-input.incorrect {\n  outline: var(--text-input-incorrect-outline) 2px solid;\n}\n#correct-text {\n  color: var(--text-input-incorrect-outline);\n  text-align: center;\n  display: block;\n  margin-top: 5px;\n  font-weight: bold;\n}\n#correct-text .value {\n  font-weight: bolder;\n}\n","",{version:3,sources:["webpack://./src/styles/index.less","webpack://./src/styles/popup.less","webpack://./src/styles/buttons.less"],names:[],mappings:"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",sourcesContent:["// Styles are used only for index.html, see global.css for global styles like background color and fonts\n\n// Yes I'm using less.css and less.css variables are better, but these need to be changed with javascript\n:root {\n    // bg variable is added in global.css\n    --option-bg: #e9e9ed;\n    --option-hover-bg: rgb(213, 211, 211);\n    --option-border-color: #c4c4c5;\n    --progress-bar-color: #0d80bd;\n    --progress-bar-bg: #c6c6c6;\n    --text-color: #000000;\n    --secondary-text-color: rgb(97, 97, 97);\n    --link-color: #2e2ef1;\n    --gray-btn-color: rgb(212, 212, 212);\n    --gray-btn-hover: rgb(197, 196, 196);\n    --text-input-correct-outline: #1cda1f;\n    --text-input-incorrect-outline: #e50808;\n}\n\n@import url('popup.less');\n@import url('buttons.less');\n\nbody {\n    overflow: hidden;\n    color: var(--text-color);\n}\n\na {\n    color: var(--link-color);\n}\na:visited {\n    color: var(--link-color);\n}\n\n.screen {\n    width: 100vw;\n    height: 100vh;\n    overflow: auto;\n    position: fixed;\n    left: 0;\n    top: 0;\n    text-align: center;\n}\n\n.play {\n    margin-bottom: 15px;\n}\n\n#flag-svg {\n    height: 20vw;\n    padding: 20px;\n}\n\n#guessType-multi {\n    column-count: 2;\n    width: 100vw;\n    left: 0;\n}\n\n#close-btn {\n    width: 43px;\n    height: 43px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n    margin: 5px;\n    margin-top: 0px;\n}\n\n.option {\n    width: 100%;\n    display: inline;\n    margin-bottom: 5px;\n    height: 50px;\n    transition: background 300ms;\n    border: var(--option-border-color) 1px solid;\n    background-color: var(--option-bg);\n    color: var(--text-color);\n    &:hover {\n        background-color: var(--option-hover-bg);\n    }\n}\n\n#progress-container {\n    width: calc(100% - 85px);\n    height: 15px;\n    margin: 10px;\n    margin-inline: 25px;\n    border-radius: 20px;\n    background-color: var(--progress-bar-bg);\n}\n#progress-fill {\n    width: 0%;\n    height: 100%;\n    border-radius: 25px;\n    background-color: var(--progress-bar-color);\n    position: relative;\n    left: 0;\n    top: 0;\n    transition: width 200ms;\n}\nul {\n    list-style: none;\n    padding-left: 25px;\n}\n\n@media (max-width: 610px) {\n   #guessType-multi {\n    column-count: 1;\n   }\n}\n\n#streak-container, #sub-streak {\n    color: rgb(255, 128, 0);\n}\n#sub-quiz-score {\n    color: rgb(13, 128, 189);\n}\n.capitalize {\n    text-transform: capitalize;\n}\n\n// Difficulty display\n#difficulty-container {\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    background-color: var(--bg);\n    padding: 6px;\n}\n\n.corner-item {\n    margin: 5px;\n    position: fixed;\n}\n\n#game-info {\n    color: var(--secondary-text-color);\n    bottom: 0;\n    right: 0;\n    background-color: var(--bg);\n    font-size: 12px;\n    text-align: right;\n    .corner-item()\n}\n\n.spacer {\n    margin-bottom: 15px;\n}\n\n#view-flag-btn {\n    cursor: pointer;\n    transform: scale(0.85);\n}\n\nfieldset.subset {\n    margin-top: 8px;\n}\n\n#typing-input {\n    background-color: transparent;\n    outline: solid 1px var(--option-border-color);\n    border: none;\n    color: var(--text-color);\n    font-size: 1.5rem;\n}\n#typing-input:focus {\n    outline: var(--option-border-color) 2px solid;\n    border: none;\n    transition: outline-color 300ms;\n}\n#typing-input.correct {\n    outline: var(--text-input-correct-outline) 2px solid;\n}\n#typing-input.incorrect {\n    outline: var(--text-input-incorrect-outline) 2px solid;\n}\n#correct-text {\n    color: var(--text-input-incorrect-outline);\n    text-align: center;\n    display: block;\n    margin-top: 5px;\n    font-weight: bold;\n    .value {\n        font-weight: bolder;\n    }\n}",".popup-backdrop {\n    position: fixed;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.65);\n    width: 100vw;\n    height: 100vh;\n}\n\n.popup-container {\n    margin: auto;\n    position: absolute;\n    top: 0; left: 0; bottom: 0; right: 0;\n    width: 35vw;\n    height: 320px;\n    background-color: var(--bg);\n    min-width: 320px;\n}\n\n@xSize: 18px;\n.popup-close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: @xSize;\n    height: @xSize;\n    background: transparent;\n    margin: 4px;\n    padding: 0px;\n    min-width: 0px;\n    font-size: @xSize;\n    color: var(--secondary-text-color);\n}\n\n@header-height: 20px;\n.popup-title {\n    font-size: @header-height;\n    text-align: center;\n    display: block;\n    padding-right: calc(@xSize + 6px);\n    border-bottom: 1px solid rgba(128, 128, 128, 0.673);\n}\n\n.popup-header {\n    height: @header-height;\n    background-color: var(--bg);\n    z-index: 2;\n}\n\n.popup-content {\n    padding-inline: 6px;\n    overflow-y: auto;\n    height: calc(calc(100% - @header-height) - 9px);\n    margin-top: 9px;\n    z-index: 1;\n}\n\n.popup-content > ul> li::marker {\n    content: 'â˜ž ';\n}\n\n.view-flag-img {\n    width: 100%;\n}","@blueBg: rgb(100, 100, 239);\n@greenBg: rgb(7, 187, 7);\n@redBg: rgb(230, 8, 8);\n@yellowBg: rgb(245, 235, 56);\n@purpleBg: rgb(168, 28, 215);\n\n.btn-blue {\n    background-color: @blueBg;\n    color: white;\n    &:hover {\n        background-color: rgb(78, 78, 220);\n    }\n}\n\n.btn-green {\n    background-color: @greenBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@greenBg, 20%)\n    }\n}\n\n.thin {\n    padding: 4px;\n    padding-inline: 7px;\n    font-size: 16px;\n}\n\n.btn-red {\n    background-color: @redBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@redBg, 20%);\n    }\n}\n\n.btn-yellow {\n    background-color: @yellowBg;\n    color: black;\n    &:hover {\n        background-color: rgb(234, 225, 56);\n    }\n}\n\n.btn-gray {\n    background-color: var(--gray-btn-color);\n    color: var(--text-color);\n    &:hover {\n        background-color: var(--gray-btn-hover);\n    }\n}\n\n.btn-purple {\n    background-color: @purpleBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@purpleBg, 20%);\n    }\n}"],sourceRoot:""}]);const s=r},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(r[l]=!0)}for(var c=0;c<t.length;c++){var p=[].concat(t[c]);i&&r[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */"),r=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},642:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Show",i="Ask",o="Prompt",a={ID:"NotiflixConfirmWrap",className:"notiflix-confirm",width:"300px",zindex:4003,position:"center",distance:"10px",backgroundColor:"#f8f8f8",borderRadius:"25px",backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:"fade",plainText:!0,titleColor:"#32c682",titleFontSize:"16px",titleMaxLength:34,messageColor:"#1e1e1e",messageFontSize:"14px",messageMaxLength:110,buttonsFontSize:"15px",buttonsMaxLength:34,okButtonColor:"#f8f8f8",okButtonBackground:"#32c682",cancelButtonColor:"#f8f8f8",cancelButtonBackground:"#a9a9a9"},r=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},s=function(e){return e||(e="head"),null!==t.document[e]||(r('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},l=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=l(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},c=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},p=function(){return'[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*="-content"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-head"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*="-content"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*="-content"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},m=function(n,r,p,m,d,u,x,g,b){if(!s("body"))return!1;e||f.Confirm.init({});var y=l(!0,e,{});"object"!=typeof b||Array.isArray(b)||(e=l(!0,e,b)),"string"!=typeof r&&(r="Notiflix Confirm"),"string"!=typeof p&&(p="Do you agree with me?"),"string"!=typeof d&&(d="Yes"),"string"!=typeof u&&(u="No"),"function"!=typeof x&&(x=void 0),"function"!=typeof g&&(g=void 0),e.plainText&&(r=c(r),p=c(p),d=c(d),u=c(u)),e.plainText||(r.length>e.titleMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the title content length is more than "titleMaxLength" option.',d="Okay",u="..."),p.length>e.messageMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the message content length is more than "messageMaxLength" option.',d="Okay",u="..."),(d.length||u.length)>e.buttonsMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the buttons content length is more than "buttonsMaxLength" option.',d="Okay",u="...")),r.length>e.titleMaxLength&&(r=r.substring(0,e.titleMaxLength)+"..."),p.length>e.messageMaxLength&&(p=p.substring(0,e.messageMaxLength)+"..."),d.length>e.buttonsMaxLength&&(d=d.substring(0,e.buttonsMaxLength)+"..."),u.length>e.buttonsMaxLength&&(u=u.substring(0,e.buttonsMaxLength)+"..."),e.cssAnimation||(e.cssAnimationDuration=0);var h=t.document.createElement("div");h.id=a.ID,h.className=e.className+(e.cssAnimation?" nx-with-animation nx-"+e.cssAnimationStyle:""),h.style.zIndex=e.zindex,h.style.padding=e.distance,e.rtl&&(h.setAttribute("dir","rtl"),h.classList.add("nx-rtl-on"));var v="string"==typeof e.position?e.position.trim():"center";h.classList.add("nx-position-"+v),h.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif';var w="";e.backOverlay&&(w='<div class="'+e.className+"-overlay"+(e.cssAnimation?" nx-with-animation":"")+'" style="background:'+e.backOverlayColor+";animation-duration:"+e.cssAnimationDuration+'ms;"></div>');var k="";"function"==typeof x&&(k='<a id="NXConfirmButtonCancel" class="nx-confirm-button-cancel" style="color:'+e.cancelButtonColor+";background:"+e.cancelButtonBackground+";font-size:"+e.buttonsFontSize+';">'+u+"</a>");var A="",C=null,N=void 0;if(n===i||n===o){C=m||"";var E=n===i||C.length>200?Math.ceil(1.5*C.length):250;A='<div><input id="NXConfirmValidationInput" type="text" '+(n===o?'value="'+C+'"':"")+' maxlength="'+E+'" style="font-size:'+e.messageFontSize+";border-radius: "+e.borderRadius+';" autocomplete="off" spellcheck="false" autocapitalize="none" /></div>'}if(h.innerHTML=w+'<div class="'+e.className+'-content" style="width:'+e.width+"; background:"+e.backgroundColor+"; animation-duration:"+e.cssAnimationDuration+"ms; border-radius: "+e.borderRadius+';"><div class="'+e.className+'-head"><h5 style="color:'+e.titleColor+";font-size:"+e.titleFontSize+';">'+r+'</h5><div style="color:'+e.messageColor+";font-size:"+e.messageFontSize+';">'+p+A+'</div></div><div class="'+e.className+'-buttons"><a id="NXConfirmButtonOk" class="nx-confirm-button-ok'+("function"==typeof x?"":" nx-full")+'" style="color:'+e.okButtonColor+";background:"+e.okButtonBackground+";font-size:"+e.buttonsFontSize+';">'+d+"</a>"+k+"</div></div>",!t.document.getElementById(h.id)){t.document.body.appendChild(h);var z=t.document.getElementById(h.id),S=t.document.getElementById("NXConfirmButtonOk"),L=t.document.getElementById("NXConfirmValidationInput");L&&(L.focus(),L.setSelectionRange(0,(L.value||"").length),L.addEventListener("keyup",(function(t){var e=t.target.value;n===i&&e!==C?(t.preventDefault(),L.classList.add("nx-validation-failure"),L.classList.remove("nx-validation-success")):(n===i&&(L.classList.remove("nx-validation-failure"),L.classList.add("nx-validation-success")),("enter"===(t.key||"").toLocaleLowerCase("en")||13===t.keyCode)&&S.dispatchEvent(new Event("click")))}))),S.addEventListener("click",(function(t){if(n===i&&C&&L){if((L.value||"").toString()!==C)return L.focus(),L.classList.add("nx-validation-failure"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;L.classList.remove("nx-validation-failure")}"function"==typeof x&&(n===o&&L&&(N=L.value||""),x(N)),z.classList.add("nx-remove");var a=setTimeout((function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(a))}),e.cssAnimationDuration)})),"function"==typeof x&&t.document.getElementById("NXConfirmButtonCancel").addEventListener("click",(function(){"function"==typeof g&&(n===o&&L&&(N=L.value||""),g(N)),z.classList.add("nx-remove");var t=setTimeout((function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))}),e.cssAnimationDuration)}))}e=l(!0,e,y)},f={Confirm:{init:function(n){e=l(!0,a,n),function(e,n){if(!s("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(p,"NotiflixConfirmInternalCSS")},merge:function(t){if(!e)return r("You have to initialize the Confirm module before call Merge function."),!1;e=l(!0,e,t)},show:function(t,e,i,o,a,r,s){m(n,t,e,null,i,o,a,r,s)},ask:function(t,e,n,o,a,r,s,l){m(i,t,e,n,o,a,r,s,l)},prompt:function(t,e,n,i,a,r,s,l){m(o,t,e,n,i,a,r,s,l)}}};return"object"==typeof t.Notiflix?l(!0,t.Notiflix,{Confirm:f.Confirm}):{Confirm:f.Confirm}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},443:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Standard",i="Hourglass",o="Circle",a="Arrows",r="Dots",s="Pulse",l="Custom",c="Notiflix",p={ID:"NotiflixLoadingWrap",className:"notiflix-loading",zindex:4e3,backgroundColor:"rgba(0,0,0,0.8)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:"80px",svgColor:"#32c682",messageID:"NotiflixLoadingMessage",messageFontSize:"15px",messageMaxLength:34,messageColor:"#dcdcdc"},m=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},f=function(e){return e||(e="head"),null!==t.document[e]||(m('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},d=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=d(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},u=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},x=function(){return'[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}'},g=function(c,x,g,y,h){if(!f("body"))return!1;e||b.Loading.init({});var v=d(!0,e,{});if("object"==typeof x&&!Array.isArray(x)||"object"==typeof g&&!Array.isArray(g)){var w={};"object"==typeof x?w=x:"object"==typeof g&&(w=g),e=d(!0,e,w)}var k,A,C="";if("string"==typeof x&&x.length>0&&(C=x),y){var N="";(C=C.length>e.messageMaxLength?u(C).toString().substring(0,e.messageMaxLength)+"...":u(C).toString()).length>0&&(N='<p id="'+e.messageID+'" class="nx-loading-message" style="color:'+e.messageColor+";font-size:"+e.messageFontSize+';">'+C+"</p>"),e.cssAnimation||(e.cssAnimationDuration=0);var E="";if(c===n)k=e.svgSize,A=e.svgColor,k||(k="60px"),A||(A="#32c682"),E='<svg xmlns="http://www.w3.org/2000/svg" stroke="'+A+'" width="'+k+'" height="'+k+'" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>';else if(c===i)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>'}(e.svgSize,e.svgColor);else if(c===o)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+t+'" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:'+t+";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:"+t+';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="'+e+'" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>'}(e.svgSize,e.svgColor);else if(c===a)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>'}(e.svgSize,e.svgColor);else if(c===r)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>'}(e.svgSize,e.svgColor);else if(c===s)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>'}(e.svgSize,e.svgColor);else if(c===l&&null!==e.customSvgCode&&null===e.customSvgUrl)E=e.customSvgCode||"";else if(c===l&&null!==e.customSvgUrl&&null===e.customSvgCode)E='<img class="nx-custom-loading-icon" width="'+e.svgSize+'" height="'+e.svgSize+'" src="'+e.customSvgUrl+'" alt="Notiflix">';else{if(c===l&&(null===e.customSvgUrl||null===e.customSvgCode))return m('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.'),!1;E=function(t,e,n){return t||(t="60px"),e||(e="#f8f8f8"),n||(n="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:'+e+';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="'+n+'" stroke="'+n+'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>'}(e.svgSize,"#f8f8f8","#32c682")}var z=parseInt((e.svgSize||"").replace(/[^0-9]/g,"")),S=t.innerWidth,L=z>=S?S-40+"px":z+"px",I='<div style="width:'+L+"; height:"+L+';" class="'+e.className+"-icon"+(C.length>0?" nx-with-message":"")+'">'+E+"</div>",B=t.document.createElement("div");B.id=p.ID,B.className=e.className+(e.cssAnimation?" nx-with-animation":"")+(e.clickToClose?" nx-loading-click-to-close":""),B.style.zIndex=e.zindex,B.style.background=e.backgroundColor,B.style.animationDuration=e.cssAnimationDuration+"ms",B.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',B.style.display="flex",B.style.flexWrap="wrap",B.style.flexDirection="column",B.style.alignItems="center",B.style.justifyContent="center",e.rtl&&(B.setAttribute("dir","rtl"),B.classList.add("nx-rtl-on")),B.innerHTML=I+N,t.document.getElementById(B.id)||(t.document.body.appendChild(B),e.clickToClose&&t.document.getElementById(B.id).addEventListener("click",(function(){B.classList.add("nx-remove");var t=setTimeout((function(){null!==B.parentNode&&(B.parentNode.removeChild(B),clearTimeout(t))}),e.cssAnimationDuration)})))}else if(t.document.getElementById(p.ID))var T=t.document.getElementById(p.ID),R=setTimeout((function(){T.classList.add("nx-remove");var t=setTimeout((function(){null!==T.parentNode&&(T.parentNode.removeChild(T),clearTimeout(t))}),e.cssAnimationDuration);clearTimeout(R)}),h);e=d(!0,e,v)},b={Loading:{init:function(n){e=d(!0,p,n),function(e,n){if(!f("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(x,"NotiflixLoadingInternalCSS")},merge:function(t){if(!e)return m("You have to initialize the Loading module before call Merge function."),!1;e=d(!0,e,t)},standard:function(t,e){g(n,t,e,!0,0)},hourglass:function(t,e){g(i,t,e,!0,0)},circle:function(t,e){g(o,t,e,!0,0)},arrows:function(t,e){g(a,t,e,!0,0)},dots:function(t,e){g(r,t,e,!0,0)},pulse:function(t,e){g(s,t,e,!0,0)},custom:function(t,e){g(l,t,e,!0,0)},notiflix:function(t,e){g(c,t,e,!0,0)},remove:function(t){"number"!=typeof t&&(t=0),g(null,null,null,!1,t)},change:function(n){!function(n){"string"!=typeof n&&(n="");var i=t.document.getElementById(p.ID);if(i)if(n.length>0){n=n.length>e.messageMaxLength?u(n).substring(0,e.messageMaxLength)+"...":u(n);var o=i.getElementsByTagName("p")[0];if(o)o.innerHTML=n;else{var a=t.document.createElement("p");a.id=e.messageID,a.className="nx-loading-message nx-loading-message-new",a.style.color=e.messageColor,a.style.fontSize=e.messageFontSize,a.innerHTML=n,i.appendChild(a)}}else m("Where is the new message?")}(n)}}};return"object"==typeof t.Notiflix?d(!0,t.Notiflix,{Loading:b.Loading}):{Loading:b.Loading}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},980:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Success",i="Failure",o="Warning",a="Info",r={ID:"NotiflixReportWrap",className:"notiflix-report",width:"320px",backgroundColor:"#f8f8f8",borderRadius:"25px",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",backOverlayClickToClose:!1,fontFamily:"Quicksand",svgSize:"110px",plainText:!0,titleFontSize:"16px",titleMaxLength:34,messageFontSize:"13px",messageMaxLength:400,buttonFontSize:"14px",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:"fade",success:{svgColor:"#32c682",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#32c682",buttonColor:"#fff",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{svgColor:"#ff5549",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#ff5549",buttonColor:"#fff",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{svgColor:"#eebf31",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#eebf31",buttonColor:"#fff",backOverlayColor:"rgba(238,191,49,0.2)"},info:{svgColor:"#26c0d3",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#26c0d3",buttonColor:"#fff",backOverlayColor:"rgba(38,192,211,0.2)"}},s=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},l=function(e){return e||(e="head"),null!==t.document[e]||(s('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},c=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=c(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},p=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},m=function(){return'[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*="-content"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},f=function(s,m,f,u,x,g){if(!l("body"))return!1;e||d.Report.init({});var b={};if("object"==typeof x&&!Array.isArray(x)||"object"==typeof g&&!Array.isArray(g)){var y={};"object"==typeof x?y=x:"object"==typeof g&&(y=g),b=c(!0,e,{}),e=c(!0,e,y)}var h=e[s.toLocaleLowerCase("en")];"string"!=typeof m&&(m="Notiflix "+s),"string"!=typeof f&&(s===n?f='"Do not try to become a person of success but try to become a person of value." <br><br>- Albert Einstein':s===i?f='"Failure is simply the opportunity to begin again, this time more intelligently." <br><br>- Henry Ford':s===o?f='"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny." <br><br>- Mustafa Kemal Ataturk':s===a&&(f='"Knowledge rests not upon truth alone, but upon error also." <br><br>- Carl Gustav Jung')),"string"!=typeof u&&(u="Okay"),e.plainText&&(m=p(m),f=p(f),u=p(u)),e.plainText||(m.length>e.titleMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the title content length is more than the "titleMaxLength" option.',u="Okay"),f.length>e.messageMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the message content length is more than the "messageMaxLength" option.',u="Okay"),u.length>e.buttonMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the button content length is more than the "buttonMaxLength" option.',u="Okay")),m.length>e.titleMaxLength&&(m=m.substring(0,e.titleMaxLength)+"..."),f.length>e.messageMaxLength&&(f=f.substring(0,e.messageMaxLength)+"..."),u.length>e.buttonMaxLength&&(u=u.substring(0,e.buttonMaxLength)+"..."),e.cssAnimation||(e.cssAnimationDuration=0);var v=t.document.createElement("div");v.id=r.ID,v.className=e.className,v.style.zIndex=e.zindex,v.style.borderRadius=e.borderRadius,v.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',e.rtl&&(v.setAttribute("dir","rtl"),v.classList.add("nx-rtl-on")),v.style.display="flex",v.style.flexWrap="wrap",v.style.flexDirection="column",v.style.alignItems="center",v.style.justifyContent="center";var w="",k=!0===e.backOverlayClickToClose;e.backOverlay&&(w='<div class="'+e.className+"-overlay"+(e.cssAnimation?" nx-with-animation":"")+(k?" nx-report-click-to-close":"")+'" style="background:'+(h.backOverlayColor||e.backOverlayColor)+";animation-duration:"+e.cssAnimationDuration+'ms;"></div>');var A,C,N="";if(s===n?(A=e.svgSize,C=h.svgColor,A||(A="110px"),C||(C="#32c682"),N='<svg xmlns="http://www.w3.org/2000/svg" id="NXReportSuccess" width="'+A+'" height="'+A+'" fill="'+C+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z" style="-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'):s===i?N=function(t,e){return t||(t="110px"),e||(e="#ff5549"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportFailure" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z" style="-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z" style="-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor):s===o?N=function(t,e){return t||(t="110px"),e||(e="#eebf31"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportWarning" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z" style="-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)"><path d="M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z" style="-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor):s===a&&(N=function(t,e){return t||(t="110px"),e||(e="#26c0d3"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportInfo" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z" style="-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor)),v.innerHTML=w+'<div class="'+e.className+"-content"+(e.cssAnimation?" nx-with-animation ":"")+" nx-"+e.cssAnimationStyle+'" style="width:'+e.width+"; background:"+e.backgroundColor+"; animation-duration:"+e.cssAnimationDuration+'ms;"><div style="width:'+e.svgSize+"; height:"+e.svgSize+';" class="'+e.className+'-icon">'+N+'</div><h5 class="'+e.className+'-title" style="font-weight:500; font-size:'+e.titleFontSize+"; color:"+h.titleColor+';">'+m+'</h5><p class="'+e.className+'-message" style="font-size:'+e.messageFontSize+"; color:"+h.messageColor+';">'+f+'</p><a id="NXReportButton" class="'+e.className+'-button" style="font-weight:500; font-size:'+e.buttonFontSize+"; background:"+h.buttonBackground+"; color:"+h.buttonColor+';">'+u+"</a></div>",!t.document.getElementById(v.id)){t.document.body.appendChild(v);var E=function(){var n=t.document.getElementById(v.id);n.classList.add("nx-remove");var i=setTimeout((function(){null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)}),e.cssAnimationDuration)};t.document.getElementById("NXReportButton").addEventListener("click",(function(){"function"==typeof x&&x(),E()})),w&&k&&t.document.querySelector(".nx-report-click-to-close").addEventListener("click",(function(){E()}))}e=c(!0,e,b)},d={Report:{init:function(n){e=c(!0,r,n),function(e,n){if(!l("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(m,"NotiflixReportInternalCSS")},merge:function(t){if(!e)return s("You have to initialize the Report module before call Merge function."),!1;e=c(!0,e,t)},success:function(t,e,i,o,a){f(n,t,e,i,o,a)},failure:function(t,e,n,o,a){f(i,t,e,n,o,a)},warning:function(t,e,n,i,a){f(o,t,e,n,i,a)},info:function(t,e,n,i,o){f(a,t,e,n,i,o)}}};return"object"==typeof t.Notiflix?c(!0,t.Notiflix,{Report:d.Report}):{Report:d.Report}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},533:function(t,e,n){var i,o;o=void 0===n.g?"undefined"==typeof window?this:window:n.g,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n,i,o,a,r="\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation",s='-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',l="Success",c="Failure",p="Warning",m="Info",f={wrapID:"NotiflixNotifyWrap",overlayID:"NotiflixNotifyOverlay",width:"280px",position:"right-top",distance:"10px",opacity:1,borderRadius:"5px",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:"rgba(0,0,0,0.5)",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:"NotiflixNotify",className:"notiflix-notify",zindex:4001,fontFamily:"Quicksand",fontSize:"13px",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:"fade",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:"basic",fontAwesomeIconSize:"34px",success:{background:"#32c682",textColor:"#fff",childClassName:"notiflix-notify-success",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-check-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{background:"#ff5549",textColor:"#fff",childClassName:"notiflix-notify-failure",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-times-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{background:"#eebf31",textColor:"#fff",childClassName:"notiflix-notify-warning",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-exclamation-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(238,191,49,0.2)"},info:{background:"#26c0d3",textColor:"#fff",childClassName:"notiflix-notify-info",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-info-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(38,192,211,0.2)"}},d="Success",u="Failure",x="Warning",g="Info",b={ID:"NotiflixReportWrap",className:"notiflix-report",width:"320px",backgroundColor:"#f8f8f8",borderRadius:"25px",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",backOverlayClickToClose:!1,fontFamily:"Quicksand",svgSize:"110px",plainText:!0,titleFontSize:"16px",titleMaxLength:34,messageFontSize:"13px",messageMaxLength:400,buttonFontSize:"14px",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:"fade",success:{svgColor:"#32c682",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#32c682",buttonColor:"#fff",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{svgColor:"#ff5549",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#ff5549",buttonColor:"#fff",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{svgColor:"#eebf31",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#eebf31",buttonColor:"#fff",backOverlayColor:"rgba(238,191,49,0.2)"},info:{svgColor:"#26c0d3",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#26c0d3",buttonColor:"#fff",backOverlayColor:"rgba(38,192,211,0.2)"}},y="Show",h="Ask",v="Prompt",w={ID:"NotiflixConfirmWrap",className:"notiflix-confirm",width:"300px",zindex:4003,position:"center",distance:"10px",backgroundColor:"#f8f8f8",borderRadius:"25px",backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:"fade",plainText:!0,titleColor:"#32c682",titleFontSize:"16px",titleMaxLength:34,messageColor:"#1e1e1e",messageFontSize:"14px",messageMaxLength:110,buttonsFontSize:"15px",buttonsMaxLength:34,okButtonColor:"#f8f8f8",okButtonBackground:"#32c682",cancelButtonColor:"#f8f8f8",cancelButtonBackground:"#a9a9a9"},k="Standard",A="Hourglass",C="Circle",N="Arrows",E="Dots",z="Pulse",S="Custom",L="Notiflix",I={ID:"NotiflixLoadingWrap",className:"notiflix-loading",zindex:4e3,backgroundColor:"rgba(0,0,0,0.8)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:"80px",svgColor:"#32c682",messageID:"NotiflixLoadingMessage",messageFontSize:"15px",messageMaxLength:34,messageColor:"#dcdcdc"},B="Standard",T="Hourglass",R="Circle",M="Arrows",W="Dots",F="Pulse",O={ID:"NotiflixBlockWrap",querySelectorLimit:200,className:"notiflix-block",position:"absolute",zindex:1e3,backgroundColor:"rgba(255,255,255,0.9)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,svgSize:"45px",svgColor:"#383838",messageFontSize:"14px",messageMaxLength:34,messageColor:"#383838"},D=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+r)},X=function(t){return console.log("%c Notiflix Info ","padding:2px;border-radius:20px;color:#fff;background:#26c0d3","\n"+t+r)},j=function(e){return e||(e="head"),null!==t.document[e]||(D('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},H=function(e,n){if(!j("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}},q=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=e&&"[object Object]"===Object.prototype.toString.call(n[i])?q(t[i],n[i]):n[i])};n<arguments.length;n++)i(arguments[n]);return t},P=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},Y=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>'},V=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>'},J=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+t+'" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:'+t+";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:"+t+';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="'+e+'" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>'},U=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>'},Q=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>'},$=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>'},_=function(){return'[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}'},G=0,K=function(n,i,o,a){if(!j("body"))return!1;e||ct.Notify.init({});var r=q(!0,e,{});if("object"==typeof o&&!Array.isArray(o)||"object"==typeof a&&!Array.isArray(a)){var d={};"object"==typeof o?d=o:"object"==typeof a&&(d=a),e=q(!0,e,d)}var u=e[n.toLocaleLowerCase("en")];G++,"string"!=typeof i&&(i="Notiflix "+n),e.plainText&&(i=P(i)),!e.plainText&&i.length>e.messageMaxLength&&(e=q(!0,e,{closeButton:!0,messageMaxLength:150}),i='Possible HTML Tags Error: The "plainText" option is "false" and the notification content length is more than the "messageMaxLength" option.'),i.length>e.messageMaxLength&&(i=i.substring(0,e.messageMaxLength)+"..."),"shadow"===e.fontAwesomeIconStyle&&(u.fontAwesomeIconColor=u.background),e.cssAnimation||(e.cssAnimationDuration=0);var x=t.document.getElementById(f.wrapID)||t.document.createElement("div");if(x.id=f.wrapID,x.style.width=e.width,x.style.zIndex=e.zindex,x.style.opacity=e.opacity,"center-center"===e.position?(x.style.left=e.distance,x.style.top=e.distance,x.style.right=e.distance,x.style.bottom=e.distance,x.style.margin="auto",x.classList.add("nx-flex-center-center"),x.style.maxHeight="calc((100vh - "+e.distance+") - "+e.distance+")",x.style.display="flex",x.style.flexWrap="wrap",x.style.flexDirection="column",x.style.justifyContent="center",x.style.alignItems="center",x.style.pointerEvents="none"):"center-top"===e.position?(x.style.left=e.distance,x.style.right=e.distance,x.style.top=e.distance,x.style.bottom="auto",x.style.margin="auto"):"center-bottom"===e.position?(x.style.left=e.distance,x.style.right=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.margin="auto"):"right-bottom"===e.position?(x.style.right=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.left="auto"):"left-top"===e.position?(x.style.left=e.distance,x.style.top=e.distance,x.style.right="auto",x.style.bottom="auto"):"left-bottom"===e.position?(x.style.left=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.right="auto"):(x.style.right=e.distance,x.style.top=e.distance,x.style.left="auto",x.style.bottom="auto"),e.backOverlay){var g=t.document.getElementById(f.overlayID)||t.document.createElement("div");g.id=f.overlayID,g.style.width="100%",g.style.height="100%",g.style.position="fixed",g.style.zIndex=e.zindex-1,g.style.left=0,g.style.top=0,g.style.right=0,g.style.bottom=0,g.style.background=u.backOverlayColor||e.backOverlayColor,g.className=e.cssAnimation?"nx-with-animation":"",g.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+"ms":"",t.document.getElementById(f.overlayID)||t.document.body.appendChild(g)}t.document.getElementById(f.wrapID)||t.document.body.appendChild(x);var b=t.document.createElement("div");b.id=e.ID+"-"+G,b.className=e.className+" "+u.childClassName+" "+(e.cssAnimation?"nx-with-animation":"")+" "+(e.useIcon?"nx-with-icon":"")+" nx-"+e.cssAnimationStyle+" "+(e.closeButton&&"function"!=typeof o?"nx-with-close-button":"")+" "+("function"==typeof o?"nx-with-callback":"")+" "+(e.clickToClose?"nx-notify-click-to-close":""),b.style.fontSize=e.fontSize,b.style.color=u.textColor,b.style.background=u.background,b.style.borderRadius=e.borderRadius,b.style.pointerEvents="all",e.rtl&&(b.setAttribute("dir","rtl"),b.classList.add("nx-rtl-on")),b.style.fontFamily='"'+e.fontFamily+'", '+s,e.cssAnimation&&(b.style.animationDuration=e.cssAnimationDuration+"ms");var y="";if(e.closeButton&&"function"!=typeof o&&(y='<span class="nx-close-button"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><g><path fill="'+u.notiflixIconColor+'" d="M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z"/></g></svg></span>'),e.useIcon)if(e.useFontAwesome)b.innerHTML='<i style="color:'+u.fontAwesomeIconColor+"; font-size:"+e.fontAwesomeIconSize+';" class="nx-message-icon nx-message-icon-fa '+u.fontAwesomeClassName+" "+("shadow"===e.fontAwesomeIconStyle?"nx-message-icon-fa-shadow":"nx-message-icon-fa-basic")+'"></i><span class="nx-message nx-with-icon">'+i+"</span>"+(e.closeButton?y:"");else{var h="";n===l?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z"/></g></svg>':n===c?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z"/></g></svg>':n===p?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z"/></g></svg>':n===m&&(h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z"/></g></svg>'),b.innerHTML=h+'<span class="nx-message nx-with-icon">'+i+"</span>"+(e.closeButton?y:"")}else b.innerHTML='<span class="nx-message">'+i+"</span>"+(e.closeButton?y:"");if("left-bottom"===e.position||"right-bottom"===e.position){var v=t.document.getElementById(f.wrapID);v.insertBefore(b,v.firstChild)}else t.document.getElementById(f.wrapID).appendChild(b);var w=t.document.getElementById(b.id);if(w){var k,A,C=function(){w.classList.add("nx-remove");var e=t.document.getElementById(f.overlayID);e&&0>=x.childElementCount&&e.classList.add("nx-remove"),clearTimeout(k)},N=function(){if(w&&null!==w.parentNode&&w.parentNode.removeChild(w),0>=x.childElementCount&&null!==x.parentNode){x.parentNode.removeChild(x);var e=t.document.getElementById(f.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(A)};if(e.closeButton&&"function"!=typeof o&&t.document.getElementById(b.id).querySelector("span.nx-close-button").addEventListener("click",(function(){C();var t=setTimeout((function(){N(),clearTimeout(t)}),e.cssAnimationDuration)})),("function"==typeof o||e.clickToClose)&&w.addEventListener("click",(function(){"function"==typeof o&&o(),C();var t=setTimeout((function(){N(),clearTimeout(t)}),e.cssAnimationDuration)})),!e.closeButton&&"function"!=typeof o){var E=function(){k=setTimeout((function(){C()}),e.timeout),A=setTimeout((function(){N()}),e.timeout+e.cssAnimationDuration)};E(),e.pauseOnHover&&(w.addEventListener("mouseenter",(function(){w.classList.add("nx-paused"),clearTimeout(k),clearTimeout(A)})),w.addEventListener("mouseleave",(function(){w.classList.remove("nx-paused"),E()})))}}if(e.showOnlyTheLastOne&&0<G)for(var z,S=t.document.querySelectorAll("[id^="+e.ID+"-]:not([id="+e.ID+"-"+G+"])"),L=0;L<S.length;L++)null!==(z=S[L]).parentNode&&z.parentNode.removeChild(z);e=q(!0,e,r)},Z=function(){return'[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*="-content"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},tt=function(e,i,o,a,r,l){if(!j("body"))return!1;n||ct.Report.init({});var c={};if("object"==typeof r&&!Array.isArray(r)||"object"==typeof l&&!Array.isArray(l)){var p={};"object"==typeof r?p=r:"object"==typeof l&&(p=l),c=q(!0,n,{}),n=q(!0,n,p)}var m=n[e.toLocaleLowerCase("en")];"string"!=typeof i&&(i="Notiflix "+e),"string"!=typeof o&&(e===d?o='"Do not try to become a person of success but try to become a person of value." <br><br>- Albert Einstein':e===u?o='"Failure is simply the opportunity to begin again, this time more intelligently." <br><br>- Henry Ford':e===x?o='"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny." <br><br>- Mustafa Kemal Ataturk':e===g&&(o='"Knowledge rests not upon truth alone, but upon error also." <br><br>- Carl Gustav Jung')),"string"!=typeof a&&(a="Okay"),n.plainText&&(i=P(i),o=P(o),a=P(a)),n.plainText||(i.length>n.titleMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the title content length is more than the "titleMaxLength" option.',a="Okay"),o.length>n.messageMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the message content length is more than the "messageMaxLength" option.',a="Okay"),a.length>n.buttonMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the button content length is more than the "buttonMaxLength" option.',a="Okay")),i.length>n.titleMaxLength&&(i=i.substring(0,n.titleMaxLength)+"..."),o.length>n.messageMaxLength&&(o=o.substring(0,n.messageMaxLength)+"..."),a.length>n.buttonMaxLength&&(a=a.substring(0,n.buttonMaxLength)+"..."),n.cssAnimation||(n.cssAnimationDuration=0);var f=t.document.createElement("div");f.id=b.ID,f.className=n.className,f.style.zIndex=n.zindex,f.style.borderRadius=n.borderRadius,f.style.fontFamily='"'+n.fontFamily+'", '+s,n.rtl&&(f.setAttribute("dir","rtl"),f.classList.add("nx-rtl-on")),f.style.display="flex",f.style.flexWrap="wrap",f.style.flexDirection="column",f.style.alignItems="center",f.style.justifyContent="center";var y="",h=!0===n.backOverlayClickToClose;n.backOverlay&&(y='<div class="'+n.className+"-overlay"+(n.cssAnimation?" nx-with-animation":"")+(h?" nx-report-click-to-close":"")+'" style="background:'+(m.backOverlayColor||n.backOverlayColor)+";animation-duration:"+n.cssAnimationDuration+'ms;"></div>');var v="";if(e===d?v=function(t,e){return t||(t="110px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportSuccess" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z" style="-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===u?v=function(t,e){return t||(t="110px"),e||(e="#ff5549"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportFailure" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z" style="-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z" style="-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===x?v=function(t,e){return t||(t="110px"),e||(e="#eebf31"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportWarning" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z" style="-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)"><path d="M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z" style="-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===g&&(v=function(t,e){return t||(t="110px"),e||(e="#26c0d3"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportInfo" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z" style="-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor)),f.innerHTML=y+'<div class="'+n.className+"-content"+(n.cssAnimation?" nx-with-animation ":"")+" nx-"+n.cssAnimationStyle+'" style="width:'+n.width+"; background:"+n.backgroundColor+"; animation-duration:"+n.cssAnimationDuration+'ms;"><div style="width:'+n.svgSize+"; height:"+n.svgSize+';" class="'+n.className+'-icon">'+v+'</div><h5 class="'+n.className+'-title" style="font-weight:500; font-size:'+n.titleFontSize+"; color:"+m.titleColor+';">'+i+'</h5><p class="'+n.className+'-message" style="font-size:'+n.messageFontSize+"; color:"+m.messageColor+';">'+o+'</p><a id="NXReportButton" class="'+n.className+'-button" style="font-weight:500; font-size:'+n.buttonFontSize+"; background:"+m.buttonBackground+"; color:"+m.buttonColor+';">'+a+"</a></div>",!t.document.getElementById(f.id)){t.document.body.appendChild(f);var w=function(){var e=t.document.getElementById(f.id);e.classList.add("nx-remove");var i=setTimeout((function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(i)}),n.cssAnimationDuration)};t.document.getElementById("NXReportButton").addEventListener("click",(function(){"function"==typeof r&&r(),w()})),y&&h&&t.document.querySelector(".nx-report-click-to-close").addEventListener("click",(function(){w()}))}n=q(!0,n,c)},et=function(){return'[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*="-content"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-head"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*="-content"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*="-content"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},nt=function(e,n,o,a,r,l,c,p,m){if(!j("body"))return!1;i||ct.Confirm.init({});var f=q(!0,i,{});"object"!=typeof m||Array.isArray(m)||(i=q(!0,i,m)),"string"!=typeof n&&(n="Notiflix Confirm"),"string"!=typeof o&&(o="Do you agree with me?"),"string"!=typeof r&&(r="Yes"),"string"!=typeof l&&(l="No"),"function"!=typeof c&&(c=void 0),"function"!=typeof p&&(p=void 0),i.plainText&&(n=P(n),o=P(o),r=P(r),l=P(l)),i.plainText||(n.length>i.titleMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the title content length is more than "titleMaxLength" option.',r="Okay",l="..."),o.length>i.messageMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the message content length is more than "messageMaxLength" option.',r="Okay",l="..."),(r.length||l.length)>i.buttonsMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the buttons content length is more than "buttonsMaxLength" option.',r="Okay",l="...")),n.length>i.titleMaxLength&&(n=n.substring(0,i.titleMaxLength)+"..."),o.length>i.messageMaxLength&&(o=o.substring(0,i.messageMaxLength)+"..."),r.length>i.buttonsMaxLength&&(r=r.substring(0,i.buttonsMaxLength)+"..."),l.length>i.buttonsMaxLength&&(l=l.substring(0,i.buttonsMaxLength)+"..."),i.cssAnimation||(i.cssAnimationDuration=0);var d=t.document.createElement("div");d.id=w.ID,d.className=i.className+(i.cssAnimation?" nx-with-animation nx-"+i.cssAnimationStyle:""),d.style.zIndex=i.zindex,d.style.padding=i.distance,i.rtl&&(d.setAttribute("dir","rtl"),d.classList.add("nx-rtl-on"));var u="string"==typeof i.position?i.position.trim():"center";d.classList.add("nx-position-"+u),d.style.fontFamily='"'+i.fontFamily+'", '+s;var x="";i.backOverlay&&(x='<div class="'+i.className+"-overlay"+(i.cssAnimation?" nx-with-animation":"")+'" style="background:'+i.backOverlayColor+";animation-duration:"+i.cssAnimationDuration+'ms;"></div>');var g="";"function"==typeof c&&(g='<a id="NXConfirmButtonCancel" class="nx-confirm-button-cancel" style="color:'+i.cancelButtonColor+";background:"+i.cancelButtonBackground+";font-size:"+i.buttonsFontSize+';">'+l+"</a>");var b="",y=null,k=void 0;if(e===h||e===v){y=a||"";var A=e===h||200<y.length?Math.ceil(1.5*y.length):250;b='<div><input id="NXConfirmValidationInput" type="text" '+(e===v?'value="'+y+'"':"")+' maxlength="'+A+'" style="font-size:'+i.messageFontSize+";border-radius: "+i.borderRadius+';" autocomplete="off" spellcheck="false" autocapitalize="none" /></div>'}if(d.innerHTML=x+'<div class="'+i.className+'-content" style="width:'+i.width+"; background:"+i.backgroundColor+"; animation-duration:"+i.cssAnimationDuration+"ms; border-radius: "+i.borderRadius+';"><div class="'+i.className+'-head"><h5 style="color:'+i.titleColor+";font-size:"+i.titleFontSize+';">'+n+'</h5><div style="color:'+i.messageColor+";font-size:"+i.messageFontSize+';">'+o+b+'</div></div><div class="'+i.className+'-buttons"><a id="NXConfirmButtonOk" class="nx-confirm-button-ok'+("function"==typeof c?"":" nx-full")+'" style="color:'+i.okButtonColor+";background:"+i.okButtonBackground+";font-size:"+i.buttonsFontSize+';">'+r+"</a>"+g+"</div></div>",!t.document.getElementById(d.id)){t.document.body.appendChild(d);var C=t.document.getElementById(d.id),N=t.document.getElementById("NXConfirmButtonOk"),E=t.document.getElementById("NXConfirmValidationInput");E&&(E.focus(),E.setSelectionRange(0,(E.value||"").length),E.addEventListener("keyup",(function(t){var n=t.target.value;e===h&&n!==y?(t.preventDefault(),E.classList.add("nx-validation-failure"),E.classList.remove("nx-validation-success")):(e===h&&(E.classList.remove("nx-validation-failure"),E.classList.add("nx-validation-success")),("enter"===(t.key||"").toLocaleLowerCase("en")||13===t.keyCode)&&N.dispatchEvent(new Event("click")))}))),N.addEventListener("click",(function(t){if(e===h&&y&&E){if((E.value||"").toString()!==y)return E.focus(),E.classList.add("nx-validation-failure"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;E.classList.remove("nx-validation-failure")}"function"==typeof c&&(e===v&&E&&(k=E.value||""),c(k)),C.classList.add("nx-remove");var n=setTimeout((function(){null!==C.parentNode&&(C.parentNode.removeChild(C),clearTimeout(n))}),i.cssAnimationDuration)})),"function"==typeof c&&t.document.getElementById("NXConfirmButtonCancel").addEventListener("click",(function(){"function"==typeof p&&(e===v&&E&&(k=E.value||""),p(k)),C.classList.add("nx-remove");var t=setTimeout((function(){null!==C.parentNode&&(C.parentNode.removeChild(C),clearTimeout(t))}),i.cssAnimationDuration)}))}i=q(!0,i,f)},it=function(){return'[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}'},ot=function(e,n,i,a,r){if(!j("body"))return!1;o||ct.Loading.init({});var l=q(!0,o,{});if("object"==typeof n&&!Array.isArray(n)||"object"==typeof i&&!Array.isArray(i)){var c={};"object"==typeof n?c=n:"object"==typeof i&&(c=i),o=q(!0,o,c)}var p="";if("string"==typeof n&&0<n.length&&(p=n),a){var m="";0<(p=p.length>o.messageMaxLength?P(p).toString().substring(0,o.messageMaxLength)+"...":P(p).toString()).length&&(m='<p id="'+o.messageID+'" class="nx-loading-message" style="color:'+o.messageColor+";font-size:"+o.messageFontSize+';">'+p+"</p>"),o.cssAnimation||(o.cssAnimationDuration=0);var f="";if(e===k)f=Y(o.svgSize,o.svgColor);else if(e===A)f=V(o.svgSize,o.svgColor);else if(e===C)f=J(o.svgSize,o.svgColor);else if(e===N)f=U(o.svgSize,o.svgColor);else if(e===E)f=Q(o.svgSize,o.svgColor);else if(e===z)f=$(o.svgSize,o.svgColor);else if(e===S&&null!==o.customSvgCode&&null===o.customSvgUrl)f=o.customSvgCode||"";else if(e===S&&null!==o.customSvgUrl&&null===o.customSvgCode)f='<img class="nx-custom-loading-icon" width="'+o.svgSize+'" height="'+o.svgSize+'" src="'+o.customSvgUrl+'" alt="Notiflix">';else{if(e===S&&(null===o.customSvgUrl||null===o.customSvgCode))return D('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.'),!1;f=function(t,e,n){return t||(t="60px"),e||(e="#f8f8f8"),n||(n="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:'+e+';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="'+n+'" stroke="'+n+'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>'}(o.svgSize,"#f8f8f8","#32c682")}var d=parseInt((o.svgSize||"").replace(/[^0-9]/g,"")),u=t.innerWidth,x=d>=u?u-40+"px":d+"px",g='<div style="width:'+x+"; height:"+x+';" class="'+o.className+"-icon"+(0<p.length?" nx-with-message":"")+'">'+f+"</div>",b=t.document.createElement("div");b.id=I.ID,b.className=o.className+(o.cssAnimation?" nx-with-animation":"")+(o.clickToClose?" nx-loading-click-to-close":""),b.style.zIndex=o.zindex,b.style.background=o.backgroundColor,b.style.animationDuration=o.cssAnimationDuration+"ms",b.style.fontFamily='"'+o.fontFamily+'", '+s,b.style.display="flex",b.style.flexWrap="wrap",b.style.flexDirection="column",b.style.alignItems="center",b.style.justifyContent="center",o.rtl&&(b.setAttribute("dir","rtl"),b.classList.add("nx-rtl-on")),b.innerHTML=g+m,!t.document.getElementById(b.id)&&(t.document.body.appendChild(b),o.clickToClose)&&t.document.getElementById(b.id).addEventListener("click",(function(){b.classList.add("nx-remove");var t=setTimeout((function(){null!==b.parentNode&&(b.parentNode.removeChild(b),clearTimeout(t))}),o.cssAnimationDuration)}))}else if(t.document.getElementById(I.ID))var y=t.document.getElementById(I.ID),h=setTimeout((function(){y.classList.add("nx-remove");var t=setTimeout((function(){null!==y.parentNode&&(y.parentNode.removeChild(y),clearTimeout(t))}),o.cssAnimationDuration);clearTimeout(h)}),r);o=q(!0,o,l)},at=function(e){"string"!=typeof e&&(e="");var n=t.document.getElementById(I.ID);if(n)if(0<e.length){e=e.length>o.messageMaxLength?P(e).substring(0,o.messageMaxLength)+"...":P(e);var i=n.getElementsByTagName("p")[0];if(i)i.innerHTML=e;else{var a=t.document.createElement("p");a.id=o.messageID,a.className="nx-loading-message nx-loading-message-new",a.style.color=o.messageColor,a.style.fontSize=o.messageFontSize,a.innerHTML=e,n.appendChild(a)}}else D("Where is the new message?")},rt=function(){return'[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*="-icon"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*="-icon"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*="-message"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}'},st=0,lt=function(e,n,i,o,r,l){var c;if(Array.isArray(i)){if(1>i.length)return D("Array of HTMLElements should contains at least one HTMLElement."),!1;c=i}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,i)){if(1>i.length)return D("NodeListOf<HTMLElement> should contains at least one HTMLElement."),!1;c=Array.prototype.slice.call(i)}else{if("string"!=typeof i||1>(i||"").length||1===(i||"").length&&("#"===(i||"")[0]||"."===(i||"")[0]))return D("The selector parameter must be a string and matches a specified CSS selector(s)."),!1;var p=t.document.querySelectorAll(i);if(1>p.length)return D('You called the "Notiflix.Block..." function with "'+i+'" selector, but there is no such element(s) in the document.'),!1;c=p}a||ct.Block.init({});var m=q(!0,a,{});if("object"==typeof o&&!Array.isArray(o)||"object"==typeof r&&!Array.isArray(r)){var f={};"object"==typeof o?f=o:"object"==typeof r&&(f=r),a=q(!0,a,f)}var d="";"string"==typeof o&&0<o.length&&(d=o),a.cssAnimation||(a.cssAnimationDuration=0);var u=O.className;"string"==typeof a.className&&(u=a.className.trim());var x="number"==typeof a.querySelectorLimit?a.querySelectorLimit:200,g=(c||[]).length>=x?x:c.length,b="nx-block-temporary-position";if(e){for(var y,h=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","html","head","title","script","style","iframe"],v=0;v<g;v++)if(y=c[v]){if(-1<h.indexOf(y.tagName.toLocaleLowerCase("en")))break;var w=y.querySelectorAll("[id^="+O.ID+"]");if(1>w.length){var k="";n&&(k=n===T?V(a.svgSize,a.svgColor):n===R?J(a.svgSize,a.svgColor):n===M?U(a.svgSize,a.svgColor):n===W?Q(a.svgSize,a.svgColor):n===F?$(a.svgSize,a.svgColor):Y(a.svgSize,a.svgColor));var A='<span class="'+u+'-icon" style="width:'+a.svgSize+";height:"+a.svgSize+';">'+k+"</span>",C="";0<d.length&&(d=d.length>a.messageMaxLength?P(d).substring(0,a.messageMaxLength)+"...":P(d),C='<span style="font-size:'+a.messageFontSize+";color:"+a.messageColor+';" class="'+u+'-message">'+d+"</span>"),st++;var N=t.document.createElement("div");N.id=O.ID+"-"+st,N.className=u+(a.cssAnimation?" nx-with-animation":""),N.style.position=a.position,N.style.zIndex=a.zindex,N.style.background=a.backgroundColor,N.style.animationDuration=a.cssAnimationDuration+"ms",N.style.fontFamily='"'+a.fontFamily+'", '+s,N.style.display="flex",N.style.flexWrap="wrap",N.style.flexDirection="column",N.style.alignItems="center",N.style.justifyContent="center",a.rtl&&(N.setAttribute("dir","rtl"),N.classList.add("nx-rtl-on")),N.innerHTML=A+C;var E=t.getComputedStyle(y).getPropertyValue("position"),z="string"==typeof E?E.toLocaleLowerCase("en"):"relative",S=Math.round(1.25*parseInt(a.svgSize))+40,L="";S>(y.offsetHeight||0)&&(L="min-height:"+S+"px;");var I;I=y.getAttribute("id")?"#"+y.getAttribute("id"):y.classList[0]?"."+y.classList[0]:(y.tagName||"").toLocaleLowerCase("en");var B="",H=-1>=["absolute","relative","fixed","sticky"].indexOf(z);if(H||0<L.length){if(!j("head"))return!1;H&&(B="position:relative!important;");var _='<style id="Style-'+O.ID+"-"+st+'">'+I+"."+b+"{"+B+L+"}</style>",G=t.document.createRange();G.selectNode(t.document.head);var K=G.createContextualFragment(_);t.document.head.appendChild(K),y.classList.add(b)}y.appendChild(N)}}}else var Z=function(e){var n=setTimeout((function(){null!==e.parentNode&&e.parentNode.removeChild(e);var i=e.getAttribute("id"),o=t.document.getElementById("Style-"+i);o&&null!==o.parentNode&&o.parentNode.removeChild(o),clearTimeout(n)}),a.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)(e=t[n])&&(e.classList.add("nx-remove"),Z(e));else X("string"==typeof i?'"Notiflix.Block.remove();" function called with "'+i+'" selector, but this selector does not have a "Block" element to remove.':'"Notiflix.Block.remove();" function called with "'+i+'", but this "Array<HTMLElement>" or "NodeListOf<HTMLElement>" does not have a "Block" element to remove.')},et=function(t){var e=setTimeout((function(){t.classList.remove(b),clearTimeout(e)}),a.cssAnimationDuration+300)},nt=setTimeout((function(){for(var t,e=0;e<g;e++)(t=c[e])&&(et(t),w=t.querySelectorAll("[id^="+O.ID+"]"),tt(w));clearTimeout(nt)}),l);a=q(!0,a,m)},ct={Notify:{init:function(t){e=q(!0,f,t),H(_,"NotiflixNotifyInternalCSS")},merge:function(t){return e?void(e=q(!0,e,t)):(D("You have to initialize the Notify module before call Merge function."),!1)},success:function(t,e,n){K(l,t,e,n)},failure:function(t,e,n){K(c,t,e,n)},warning:function(t,e,n){K(p,t,e,n)},info:function(t,e,n){K(m,t,e,n)}},Report:{init:function(t){n=q(!0,b,t),H(Z,"NotiflixReportInternalCSS")},merge:function(t){return n?void(n=q(!0,n,t)):(D("You have to initialize the Report module before call Merge function."),!1)},success:function(t,e,n,i,o){tt(d,t,e,n,i,o)},failure:function(t,e,n,i,o){tt(u,t,e,n,i,o)},warning:function(t,e,n,i,o){tt(x,t,e,n,i,o)},info:function(t,e,n,i,o){tt(g,t,e,n,i,o)}},Confirm:{init:function(t){i=q(!0,w,t),H(et,"NotiflixConfirmInternalCSS")},merge:function(t){return i?void(i=q(!0,i,t)):(D("You have to initialize the Confirm module before call Merge function."),!1)},show:function(t,e,n,i,o,a,r){nt(y,t,e,null,n,i,o,a,r)},ask:function(t,e,n,i,o,a,r,s){nt(h,t,e,n,i,o,a,r,s)},prompt:function(t,e,n,i,o,a,r,s){nt(v,t,e,n,i,o,a,r,s)}},Loading:{init:function(t){o=q(!0,I,t),H(it,"NotiflixLoadingInternalCSS")},merge:function(t){return o?void(o=q(!0,o,t)):(D("You have to initialize the Loading module before call Merge function."),!1)},standard:function(t,e){ot(k,t,e,!0,0)},hourglass:function(t,e){ot(A,t,e,!0,0)},circle:function(t,e){ot(C,t,e,!0,0)},arrows:function(t,e){ot(N,t,e,!0,0)},dots:function(t,e){ot(E,t,e,!0,0)},pulse:function(t,e){ot(z,t,e,!0,0)},custom:function(t,e){ot(S,t,e,!0,0)},notiflix:function(t,e){ot(L,t,e,!0,0)},remove:function(t){"number"!=typeof t&&(t=0),ot(null,null,null,!1,t)},change:function(t){at(t)}},Block:{init:function(t){a=q(!0,O,t),H(rt,"NotiflixBlockInternalCSS")},merge:function(t){return a?void(a=q(!0,a,t)):(D('You have to initialize the "Notiflix.Block" module before call Merge function.'),!1)},standard:function(t,e,n){lt(!0,B,t,e,n)},hourglass:function(t,e,n){lt(!0,T,t,e,n)},circle:function(t,e,n){lt(!0,R,t,e,n)},arrows:function(t,e,n){lt(!0,M,t,e,n)},dots:function(t,e,n){lt(!0,W,t,e,n)},pulse:function(t,e,n){lt(!0,F,t,e,n)},remove:function(t,e){"number"!=typeof e&&(e=0),lt(!1,null,t,null,null,e)}}};return"object"==typeof t.Notiflix?q(!0,t.Notiflix,{Notify:ct.Notify,Report:ct.Report,Confirm:ct.Confirm,Loading:ct.Loading,Block:ct.Block}):{Notify:ct.Notify,Report:ct.Report,Confirm:ct.Confirm,Loading:ct.Loading,Block:ct.Block}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},r=[],s=0;s<t.length;s++){var l=t[s],c=i.base?l[0]+i.base:l[0],p=a[c]||0,m="".concat(c," ").concat(p);a[c]=p+1;var f=n(m),d={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var u=o(d,i);i.byIndex=s,e.splice(s,0,{identifier:m,updater:u,references:1})}r.push(m)}return r}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var a=i(t=t||[],o=o||{});return function(t){t=t||[];for(var r=0;r<a.length;r++){var s=n(a[r]);e[s].references--}for(var l=i(t,o),c=0;c<a.length;c++){var p=n(a[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return t[i].call(a.exports,a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var i={};(()=>{"use strict";n.d(i,{k:()=>yn});var t=n(980),e=n(443),o=n(642);let a={},r={borderRadius:10};const s={dark:{bg:"#232323","text-color":"#FFFFFF","secondary-text-color":"#d1d1d1","option-bg":"#434343","option-hover-bg":"#303030","option-border-color":"#8a8a8a","progress-bar-color":"#1963bd","progress-bar-bg":"#636363","radio-bg":"#4D4D4D","radio-selected-bg":"#76EA5D","gray-btn-color":"#606060","gray-btn-hover":"#545454","card-border":"#626262","fieldset-border":"#6d6d6d","link-color":"#2BA7DE","nx-global":{messageColor:"#FFFFFF",backgroundColor:"#353535",success:{titleColor:"#FFFFFF",messageColor:"#FFFFFF"},failure:{titleColor:"#FFFFFF",messageColor:"#FFFFFF"}}},dim:{bg:"#38393D","text-color":"#F0F0F0","secondary-text-color":"#D0D3D4","option-bg":"#515A5A","option-hover-bg":"#424949","option-border-color":"#8a8a8a","progress-bar-color":"#3498DB","progress-bar-bg":"#636363","radio-bg":"#4d4d4d","radio-selected-bg":"#76EA5D","gray-btn-color":"#606060","gray-btn-hover":"#545454","card-border":"#626262","fieldset-border":"#808B96","link-color":"#2874A6","nx-global":{messageColor:"#F0F0F0",backgroundColor:"#38393D",success:{titleColor:"#f0f0f0",messageColor:"#f0f0f0"},failure:{titleColor:"#f0f0f0",messageColor:"#f0f0f0"}}}};function l(t){if("default-theme"==t||"default"==t)return;c(!0);let e=s[t];if(!e)return void console.warn(`Theme "${t}" not found!`);for(let t in e)t.startsWith("nx-")||document.documentElement.style.setProperty(`--${t}`,e[t]);let n=e["nx-global"],i={};for(let t in n)"all"!=t&&(i[t]=n[t]);i.plainText=!1,i.cssAnimationStyle=g("popup-animation"),a=i,i.borderRadius=10,r=i;try{document.querySelector(`#s-popup-${g("popup-animation")}`).checked=!0,document.querySelector(`#s-${t}`).checked=!0}catch(t){alert(t)}document.querySelector("meta[name='theme-color']").content=e.bg}function c(t){document.documentElement.setAttribute("style",""),r={plainText:!1,borderRadius:10,cssAnimationStyle:g("popup-animation")},a={plainText:!1,cssAnimationStyle:g("popup-animation")},t||(document.querySelector("meta[name='theme-color']").content="#ededed")}const p=Array.from(document.querySelectorAll("input[type='radio']"));let m={},f={theme:"default-theme","popup-animation":"fade"};function d(){return"us-states-by-map"==m.set?"data/us-states-opt.json":`data/${m.set}-opt.json`}function u(){return JSON.parse(localStorage.getItem("flag-guesser-settings"))}function x(t){localStorage.setItem("flag-guesser-settings",JSON.stringify(t))}function g(t){return f[t]}if(p.forEach((t=>{t.id.startsWith("s-")?t.addEventListener("input",(()=>{f[t.name]=t.value,console.debug(f),x(f),"default"!=f.theme?l(f.theme):c()})):(t.addEventListener("input",(()=>{m[t.name]=t.id,console.debug(m),b()})),m[t.name]||(m[t.name]=document.querySelector(`input[name='${t.name}']:checked`).id))})),u()){let t=u();for(let e in f)void 0===t[e]&&(console.log("Adding newly added setting "+e+", this should only appear once."),t[e]=f[e],x(t),b());f=t}else x(f);function b(){document.querySelectorAll("fieldset.subset[data-requires]").forEach((t=>{t.dataset.requires&&document.getElementById(t.dataset.requires)&&"radio"==document.getElementById(t.dataset.requires).type&&(document.getElementById(t.dataset.requires).checked?t.classList.remove("hidden"):t.classList.add("hidden"))}))}l(f.theme),b();for(let t in f){const e=`input[value="${f[t]}"]`;document.querySelector(e)&&(document.querySelector(e).checked=!0)}var y=n(533);let h={streak:0,totalQuestions:0,totalCorrect:0,totalIncorrect:0,totalGames:0,flagsSeen:[]},v={totalQuestions:0,totalCorrect:0,totalIncorrect:0,playtime:0,difficulty:0};function w(t){localStorage.setItem("flag-guesser-stats",JSON.stringify(t)),L()}function k(){return JSON.parse(localStorage.getItem("flag-guesser-stats"))}function A(t){return h[t]}function C(t,e){"practice-on"!==g("practice")&&(h[t]=e,w(h))}function N(t){C(t,h[t]+1)}function E(t,e){v[t]=e}function z(t){E(t,v[t]+1)}function S(t,e=0,n=0,i=0,o=""){yn(),document.getElementById("end").style.display="unset";for(let t in v){let e=document.getElementById("tg-"+t);e&&(e.querySelector(".stat").innerText=v[t].toString().replaceAll("-"," "))}var a,r,s;document.getElementById("tsg-playtime").querySelector(".stat").innerText=(a=v.playtime,`${(r=Math.floor(a/3600))>0?r+" hours,":""} ${(s=Math.floor(a%3600/60))>0?s+" minutes,":""} ${Math.floor(a%3600%60)} seconds`);let l=document.getElementById("sub-streak"),c=document.getElementById("sub-quiz-score");"questions"==t?(c.style.display="block",l.style.display="none"):"streak"==t&&(c.style.display="none",l.style.display="block"),l.querySelector(".stat").innerText=e,document.getElementById("score-value").innerText=n,document.getElementById("score-max").innerText=i.split("q-")[1],document.getElementById("end-title").innerText="questions"==t?"Game Complete!":"Game Over!";let p=Math.floor(100*v.totalCorrect/v.totalQuestions),m=document.getElementById("end-correct-answer"),f=document.getElementById("tg-questions");document.getElementById("tsp-winRate").querySelector("span.stat").innerText=p,""==o?m.style.display="none":(m.style.display="block",m.querySelector(".stat").innerText=o),f.style.display="questions"==t?"unset":"none",Array.from(document.querySelectorAll(".no-streak")).forEach((e=>{e&&(e.style.display="streak"==t?"none":"block")})),function(){for(let t in v)v[t]=0}()}function L(){for(let t in h)document.getElementById(`s-${t}`)&&(document.getElementById(`s-${t}`).querySelector("span.stat").innerText=A(t));let t=Math.floor(100*A("totalCorrect")/A("totalQuestions"));isNaN(t)&&(t=0),document.getElementById("sp-winRate").querySelector("span.stat").innerText=t;let e=Math.floor(100*A("flagsSeen").length/254);isNaN(e)&&(e=0),e>100&&(e=100),document.getElementById("sp-flagsPercent").querySelector("span.stat").innerText=e}if(k()){let t=k();for(let e in h)void 0===t[e]&&(console.log("Adding stat "+e+", this should only appear once."),t[e]=h[e],w(t));h=t}else w(h);function I(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function B(t){return t instanceof I(t).Element||t instanceof Element}function T(t){return t instanceof I(t).HTMLElement||t instanceof HTMLElement}function R(t){return"undefined"!=typeof ShadowRoot&&(t instanceof I(t).ShadowRoot||t instanceof ShadowRoot)}L(),document.getElementById("reset-stats").addEventListener("click",(()=>{o.Confirm.show("Are you sure?","This cannot be undone!","Clear Stats","Cancel",(()=>{localStorage.removeItem("flag-guesser-stats"),window.location.reload()}),void 0,r)})),document.getElementById("copy-stats").addEventListener("click",(()=>{try{const t=document.createElement("textarea");t.value=function(){let t=[];return Array.from(document.querySelectorAll("#stats-container > ul > li")).forEach((e=>{e.getAttribute("icon")&&t.push(`${e.getAttribute("icon")}${e.innerText}`)})),t.join("\n")}(),document.body.appendChild(t),t.select(),document.execCommand("copy"),t.remove(),y.Report.success("Copied!","Successfully copied to clipboard.","Ok",a)}catch(t){console.error(t),y.Report.failure("Error","Failed to copy text, sorry about that :(","Ok",a)}}));var M=Math.max,W=Math.min,F=Math.round;function O(){var t=navigator.userAgentData;return null!=t&&t.brands?t.brands.map((function(t){return t.brand+"/"+t.version})).join(" "):navigator.userAgent}function D(){return!/^((?!chrome|android).)*safari/i.test(O())}function X(t,e,n){void 0===e&&(e=!1),void 0===n&&(n=!1);var i=t.getBoundingClientRect(),o=1,a=1;e&&T(t)&&(o=t.offsetWidth>0&&F(i.width)/t.offsetWidth||1,a=t.offsetHeight>0&&F(i.height)/t.offsetHeight||1);var r=(B(t)?I(t):window).visualViewport,s=!D()&&n,l=(i.left+(s&&r?r.offsetLeft:0))/o,c=(i.top+(s&&r?r.offsetTop:0))/a,p=i.width/o,m=i.height/a;return{width:p,height:m,top:c,right:l+p,bottom:c+m,left:l,x:l,y:c}}function j(t){var e=I(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function H(t){return t?(t.nodeName||"").toLowerCase():null}function q(t){return((B(t)?t.ownerDocument:t.document)||window.document).documentElement}function P(t){return X(q(t)).left+j(t).scrollLeft}function Y(t){return I(t).getComputedStyle(t)}function V(t){var e=Y(t),n=e.overflow,i=e.overflowX,o=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+o+i)}function J(t,e,n){void 0===n&&(n=!1);var i,o,a=T(e),r=T(e)&&function(t){var e=t.getBoundingClientRect(),n=F(e.width)/t.offsetWidth||1,i=F(e.height)/t.offsetHeight||1;return 1!==n||1!==i}(e),s=q(e),l=X(t,r,n),c={scrollLeft:0,scrollTop:0},p={x:0,y:0};return(a||!a&&!n)&&(("body"!==H(e)||V(s))&&(c=(i=e)!==I(i)&&T(i)?{scrollLeft:(o=i).scrollLeft,scrollTop:o.scrollTop}:j(i)),T(e)?((p=X(e,!0)).x+=e.clientLeft,p.y+=e.clientTop):s&&(p.x=P(s))),{x:l.left+c.scrollLeft-p.x,y:l.top+c.scrollTop-p.y,width:l.width,height:l.height}}function U(t){var e=X(t),n=t.offsetWidth,i=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-i)<=1&&(i=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:i}}function Q(t){return"html"===H(t)?t:t.assignedSlot||t.parentNode||(R(t)?t.host:null)||q(t)}function $(t){return["html","body","#document"].indexOf(H(t))>=0?t.ownerDocument.body:T(t)&&V(t)?t:$(Q(t))}function _(t,e){var n;void 0===e&&(e=[]);var i=$(t),o=i===(null==(n=t.ownerDocument)?void 0:n.body),a=I(i),r=o?[a].concat(a.visualViewport||[],V(i)?i:[]):i,s=e.concat(r);return o?s:s.concat(_(Q(r)))}function G(t){return["table","td","th"].indexOf(H(t))>=0}function K(t){return T(t)&&"fixed"!==Y(t).position?t.offsetParent:null}function Z(t){for(var e=I(t),n=K(t);n&&G(n)&&"static"===Y(n).position;)n=K(n);return n&&("html"===H(n)||"body"===H(n)&&"static"===Y(n).position)?e:n||function(t){var e=/firefox/i.test(O());if(/Trident/i.test(O())&&T(t)&&"fixed"===Y(t).position)return null;var n=Q(t);for(R(n)&&(n=n.host);T(n)&&["html","body"].indexOf(H(n))<0;){var i=Y(n);if("none"!==i.transform||"none"!==i.perspective||"paint"===i.contain||-1!==["transform","perspective"].indexOf(i.willChange)||e&&"filter"===i.willChange||e&&i.filter&&"none"!==i.filter)return n;n=n.parentNode}return null}(t)||e}var tt="top",et="bottom",nt="right",it="left",ot="auto",at=[tt,et,nt,it],rt="start",st="end",lt="viewport",ct="popper",pt=at.reduce((function(t,e){return t.concat([e+"-"+rt,e+"-"+st])}),[]),mt=[].concat(at,[ot]).reduce((function(t,e){return t.concat([e,e+"-"+rt,e+"-"+st])}),[]),ft=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function dt(t){var e=new Map,n=new Set,i=[];function o(t){n.add(t.name),[].concat(t.requires||[],t.requiresIfExists||[]).forEach((function(t){if(!n.has(t)){var i=e.get(t);i&&o(i)}})),i.push(t)}return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){n.has(t.name)||o(t)})),i}var ut={placement:"bottom",modifiers:[],strategy:"absolute"};function xt(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function gt(t){void 0===t&&(t={});var e=t,n=e.defaultModifiers,i=void 0===n?[]:n,o=e.defaultOptions,a=void 0===o?ut:o;return function(t,e,n){void 0===n&&(n=a);var o,r,s={placement:"bottom",orderedModifiers:[],options:Object.assign({},ut,a),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},l=[],c=!1,p={state:s,setOptions:function(n){var o="function"==typeof n?n(s.options):n;m(),s.options=Object.assign({},a,s.options,o),s.scrollParents={reference:B(t)?_(t):t.contextElement?_(t.contextElement):[],popper:_(e)};var r,c,f=function(t){var e=dt(t);return ft.reduce((function(t,n){return t.concat(e.filter((function(t){return t.phase===n})))}),[])}((r=[].concat(i,s.options.modifiers),c=r.reduce((function(t,e){var n=t[e.name];return t[e.name]=n?Object.assign({},n,e,{options:Object.assign({},n.options,e.options),data:Object.assign({},n.data,e.data)}):e,t}),{}),Object.keys(c).map((function(t){return c[t]}))));return s.orderedModifiers=f.filter((function(t){return t.enabled})),s.orderedModifiers.forEach((function(t){var e=t.name,n=t.options,i=void 0===n?{}:n,o=t.effect;if("function"==typeof o){var a=o({state:s,name:e,instance:p,options:i});l.push(a||function(){})}})),p.update()},forceUpdate:function(){if(!c){var t=s.elements,e=t.reference,n=t.popper;if(xt(e,n)){s.rects={reference:J(e,Z(n),"fixed"===s.options.strategy),popper:U(n)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(t){return s.modifiersData[t.name]=Object.assign({},t.data)}));for(var i=0;i<s.orderedModifiers.length;i++)if(!0!==s.reset){var o=s.orderedModifiers[i],a=o.fn,r=o.options,l=void 0===r?{}:r,m=o.name;"function"==typeof a&&(s=a({state:s,options:l,name:m,instance:p})||s)}else s.reset=!1,i=-1}}},update:(o=function(){return new Promise((function(t){p.forceUpdate(),t(s)}))},function(){return r||(r=new Promise((function(t){Promise.resolve().then((function(){r=void 0,t(o())}))}))),r}),destroy:function(){m(),c=!0}};if(!xt(t,e))return p;function m(){l.forEach((function(t){return t()})),l=[]}return p.setOptions(n).then((function(t){!c&&n.onFirstUpdate&&n.onFirstUpdate(t)})),p}}var bt={passive:!0};const yt={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,n=t.instance,i=t.options,o=i.scroll,a=void 0===o||o,r=i.resize,s=void 0===r||r,l=I(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return a&&c.forEach((function(t){t.addEventListener("scroll",n.update,bt)})),s&&l.addEventListener("resize",n.update,bt),function(){a&&c.forEach((function(t){t.removeEventListener("scroll",n.update,bt)})),s&&l.removeEventListener("resize",n.update,bt)}},data:{}};function ht(t){return t.split("-")[0]}function vt(t){return t.split("-")[1]}function wt(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function kt(t){var e,n=t.reference,i=t.element,o=t.placement,a=o?ht(o):null,r=o?vt(o):null,s=n.x+n.width/2-i.width/2,l=n.y+n.height/2-i.height/2;switch(a){case tt:e={x:s,y:n.y-i.height};break;case et:e={x:s,y:n.y+n.height};break;case nt:e={x:n.x+n.width,y:l};break;case it:e={x:n.x-i.width,y:l};break;default:e={x:n.x,y:n.y}}var c=a?wt(a):null;if(null!=c){var p="y"===c?"height":"width";switch(r){case rt:e[c]=e[c]-(n[p]/2-i[p]/2);break;case st:e[c]=e[c]+(n[p]/2-i[p]/2)}}return e}var At={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Ct(t){var e,n=t.popper,i=t.popperRect,o=t.placement,a=t.variation,r=t.offsets,s=t.position,l=t.gpuAcceleration,c=t.adaptive,p=t.roundOffsets,m=t.isFixed,f=r.x,d=void 0===f?0:f,u=r.y,x=void 0===u?0:u,g="function"==typeof p?p({x:d,y:x}):{x:d,y:x};d=g.x,x=g.y;var b=r.hasOwnProperty("x"),y=r.hasOwnProperty("y"),h=it,v=tt,w=window;if(c){var k=Z(n),A="clientHeight",C="clientWidth";k===I(n)&&"static"!==Y(k=q(n)).position&&"absolute"===s&&(A="scrollHeight",C="scrollWidth"),(o===tt||(o===it||o===nt)&&a===st)&&(v=et,x-=(m&&k===w&&w.visualViewport?w.visualViewport.height:k[A])-i.height,x*=l?1:-1),o!==it&&(o!==tt&&o!==et||a!==st)||(h=nt,d-=(m&&k===w&&w.visualViewport?w.visualViewport.width:k[C])-i.width,d*=l?1:-1)}var N,E=Object.assign({position:s},c&&At),z=!0===p?function(t){var e=t.x,n=t.y,i=window.devicePixelRatio||1;return{x:F(e*i)/i||0,y:F(n*i)/i||0}}({x:d,y:x}):{x:d,y:x};return d=z.x,x=z.y,l?Object.assign({},E,((N={})[v]=y?"0":"",N[h]=b?"0":"",N.transform=(w.devicePixelRatio||1)<=1?"translate("+d+"px, "+x+"px)":"translate3d("+d+"px, "+x+"px, 0)",N)):Object.assign({},E,((e={})[v]=y?x+"px":"",e[h]=b?d+"px":"",e.transform="",e))}const Nt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,n=t.options,i=n.gpuAcceleration,o=void 0===i||i,a=n.adaptive,r=void 0===a||a,s=n.roundOffsets,l=void 0===s||s,c={placement:ht(e.placement),variation:vt(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:o,isFixed:"fixed"===e.options.strategy};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,Ct(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:r,roundOffsets:l})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,Ct(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}},Et={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var n=e.styles[t]||{},i=e.attributes[t]||{},o=e.elements[t];T(o)&&H(o)&&(Object.assign(o.style,n),Object.keys(i).forEach((function(t){var e=i[t];!1===e?o.removeAttribute(t):o.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach((function(t){var i=e.elements[t],o=e.attributes[t]||{},a=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:n[t]).reduce((function(t,e){return t[e]="",t}),{});T(i)&&H(i)&&(Object.assign(i.style,a),Object.keys(o).forEach((function(t){i.removeAttribute(t)})))}))}},requires:["computeStyles"]},zt={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var e=t.state,n=t.options,i=t.name,o=n.offset,a=void 0===o?[0,0]:o,r=mt.reduce((function(t,n){return t[n]=function(t,e,n){var i=ht(t),o=[it,tt].indexOf(i)>=0?-1:1,a="function"==typeof n?n(Object.assign({},e,{placement:t})):n,r=a[0],s=a[1];return r=r||0,s=(s||0)*o,[it,nt].indexOf(i)>=0?{x:s,y:r}:{x:r,y:s}}(n,e.rects,a),t}),{}),s=r[e.placement],l=s.x,c=s.y;null!=e.modifiersData.popperOffsets&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[i]=r}};var St={left:"right",right:"left",bottom:"top",top:"bottom"};function Lt(t){return t.replace(/left|right|bottom|top/g,(function(t){return St[t]}))}var It={start:"end",end:"start"};function Bt(t){return t.replace(/start|end/g,(function(t){return It[t]}))}function Tt(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&R(n)){var i=e;do{if(i&&t.isSameNode(i))return!0;i=i.parentNode||i.host}while(i)}return!1}function Rt(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Mt(t,e,n){return e===lt?Rt(function(t,e){var n=I(t),i=q(t),o=n.visualViewport,a=i.clientWidth,r=i.clientHeight,s=0,l=0;if(o){a=o.width,r=o.height;var c=D();(c||!c&&"fixed"===e)&&(s=o.offsetLeft,l=o.offsetTop)}return{width:a,height:r,x:s+P(t),y:l}}(t,n)):B(e)?function(t,e){var n=X(t,!1,"fixed"===e);return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}(e,n):Rt(function(t){var e,n=q(t),i=j(t),o=null==(e=t.ownerDocument)?void 0:e.body,a=M(n.scrollWidth,n.clientWidth,o?o.scrollWidth:0,o?o.clientWidth:0),r=M(n.scrollHeight,n.clientHeight,o?o.scrollHeight:0,o?o.clientHeight:0),s=-i.scrollLeft+P(t),l=-i.scrollTop;return"rtl"===Y(o||n).direction&&(s+=M(n.clientWidth,o?o.clientWidth:0)-a),{width:a,height:r,x:s,y:l}}(q(t)))}function Wt(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function Ft(t,e){return e.reduce((function(e,n){return e[n]=t,e}),{})}function Ot(t,e){void 0===e&&(e={});var n=e,i=n.placement,o=void 0===i?t.placement:i,a=n.strategy,r=void 0===a?t.strategy:a,s=n.boundary,l=void 0===s?"clippingParents":s,c=n.rootBoundary,p=void 0===c?lt:c,m=n.elementContext,f=void 0===m?ct:m,d=n.altBoundary,u=void 0!==d&&d,x=n.padding,g=void 0===x?0:x,b=Wt("number"!=typeof g?g:Ft(g,at)),y=f===ct?"reference":ct,h=t.rects.popper,v=t.elements[u?y:f],w=function(t,e,n,i){var o="clippingParents"===e?function(t){var e=_(Q(t)),n=["absolute","fixed"].indexOf(Y(t).position)>=0&&T(t)?Z(t):t;return B(n)?e.filter((function(t){return B(t)&&Tt(t,n)&&"body"!==H(t)})):[]}(t):[].concat(e),a=[].concat(o,[n]),r=a[0],s=a.reduce((function(e,n){var o=Mt(t,n,i);return e.top=M(o.top,e.top),e.right=W(o.right,e.right),e.bottom=W(o.bottom,e.bottom),e.left=M(o.left,e.left),e}),Mt(t,r,i));return s.width=s.right-s.left,s.height=s.bottom-s.top,s.x=s.left,s.y=s.top,s}(B(v)?v:v.contextElement||q(t.elements.popper),l,p,r),k=X(t.elements.reference),A=kt({reference:k,element:h,strategy:"absolute",placement:o}),C=Rt(Object.assign({},h,A)),N=f===ct?C:k,E={top:w.top-N.top+b.top,bottom:N.bottom-w.bottom+b.bottom,left:w.left-N.left+b.left,right:N.right-w.right+b.right},z=t.modifiersData.offset;if(f===ct&&z){var S=z[o];Object.keys(E).forEach((function(t){var e=[nt,et].indexOf(t)>=0?1:-1,n=[tt,et].indexOf(t)>=0?"y":"x";E[t]+=S[n]*e}))}return E}const Dt={name:"flip",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,i=t.name;if(!e.modifiersData[i]._skip){for(var o=n.mainAxis,a=void 0===o||o,r=n.altAxis,s=void 0===r||r,l=n.fallbackPlacements,c=n.padding,p=n.boundary,m=n.rootBoundary,f=n.altBoundary,d=n.flipVariations,u=void 0===d||d,x=n.allowedAutoPlacements,g=e.options.placement,b=ht(g),y=l||(b!==g&&u?function(t){if(ht(t)===ot)return[];var e=Lt(t);return[Bt(t),e,Bt(e)]}(g):[Lt(g)]),h=[g].concat(y).reduce((function(t,n){return t.concat(ht(n)===ot?function(t,e){void 0===e&&(e={});var n=e,i=n.placement,o=n.boundary,a=n.rootBoundary,r=n.padding,s=n.flipVariations,l=n.allowedAutoPlacements,c=void 0===l?mt:l,p=vt(i),m=p?s?pt:pt.filter((function(t){return vt(t)===p})):at,f=m.filter((function(t){return c.indexOf(t)>=0}));0===f.length&&(f=m);var d=f.reduce((function(e,n){return e[n]=Ot(t,{placement:n,boundary:o,rootBoundary:a,padding:r})[ht(n)],e}),{});return Object.keys(d).sort((function(t,e){return d[t]-d[e]}))}(e,{placement:n,boundary:p,rootBoundary:m,padding:c,flipVariations:u,allowedAutoPlacements:x}):n)}),[]),v=e.rects.reference,w=e.rects.popper,k=new Map,A=!0,C=h[0],N=0;N<h.length;N++){var E=h[N],z=ht(E),S=vt(E)===rt,L=[tt,et].indexOf(z)>=0,I=L?"width":"height",B=Ot(e,{placement:E,boundary:p,rootBoundary:m,altBoundary:f,padding:c}),T=L?S?nt:it:S?et:tt;v[I]>w[I]&&(T=Lt(T));var R=Lt(T),M=[];if(a&&M.push(B[z]<=0),s&&M.push(B[T]<=0,B[R]<=0),M.every((function(t){return t}))){C=E,A=!1;break}k.set(E,M)}if(A)for(var W=function(t){var e=h.find((function(e){var n=k.get(e);if(n)return n.slice(0,t).every((function(t){return t}))}));if(e)return C=e,"break"},F=u?3:1;F>0&&"break"!==W(F);F--);e.placement!==C&&(e.modifiersData[i]._skip=!0,e.placement=C,e.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function Xt(t,e,n){return M(t,W(e,n))}const jt={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,i=t.name,o=n.mainAxis,a=void 0===o||o,r=n.altAxis,s=void 0!==r&&r,l=n.boundary,c=n.rootBoundary,p=n.altBoundary,m=n.padding,f=n.tether,d=void 0===f||f,u=n.tetherOffset,x=void 0===u?0:u,g=Ot(e,{boundary:l,rootBoundary:c,padding:m,altBoundary:p}),b=ht(e.placement),y=vt(e.placement),h=!y,v=wt(b),w="x"===v?"y":"x",k=e.modifiersData.popperOffsets,A=e.rects.reference,C=e.rects.popper,N="function"==typeof x?x(Object.assign({},e.rects,{placement:e.placement})):x,E="number"==typeof N?{mainAxis:N,altAxis:N}:Object.assign({mainAxis:0,altAxis:0},N),z=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,S={x:0,y:0};if(k){if(a){var L,I="y"===v?tt:it,B="y"===v?et:nt,T="y"===v?"height":"width",R=k[v],F=R+g[I],O=R-g[B],D=d?-C[T]/2:0,X=y===rt?A[T]:C[T],j=y===rt?-C[T]:-A[T],H=e.elements.arrow,q=d&&H?U(H):{width:0,height:0},P=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Y=P[I],V=P[B],J=Xt(0,A[T],q[T]),Q=h?A[T]/2-D-J-Y-E.mainAxis:X-J-Y-E.mainAxis,$=h?-A[T]/2+D+J+V+E.mainAxis:j+J+V+E.mainAxis,_=e.elements.arrow&&Z(e.elements.arrow),G=_?"y"===v?_.clientTop||0:_.clientLeft||0:0,K=null!=(L=null==z?void 0:z[v])?L:0,ot=R+$-K,at=Xt(d?W(F,R+Q-K-G):F,R,d?M(O,ot):O);k[v]=at,S[v]=at-R}if(s){var st,lt="x"===v?tt:it,ct="x"===v?et:nt,pt=k[w],mt="y"===w?"height":"width",ft=pt+g[lt],dt=pt-g[ct],ut=-1!==[tt,it].indexOf(b),xt=null!=(st=null==z?void 0:z[w])?st:0,gt=ut?ft:pt-A[mt]-C[mt]-xt+E.altAxis,bt=ut?pt+A[mt]+C[mt]-xt-E.altAxis:dt,yt=d&&ut?function(t,e,n){var i=Xt(t,e,n);return i>n?n:i}(gt,pt,bt):Xt(d?gt:ft,pt,d?bt:dt);k[w]=yt,S[w]=yt-pt}e.modifiersData[i]=S}},requiresIfExists:["offset"]},Ht={name:"arrow",enabled:!0,phase:"main",fn:function(t){var e,n=t.state,i=t.name,o=t.options,a=n.elements.arrow,r=n.modifiersData.popperOffsets,s=ht(n.placement),l=wt(s),c=[it,nt].indexOf(s)>=0?"height":"width";if(a&&r){var p=function(t,e){return Wt("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:Ft(t,at))}(o.padding,n),m=U(a),f="y"===l?tt:it,d="y"===l?et:nt,u=n.rects.reference[c]+n.rects.reference[l]-r[l]-n.rects.popper[c],x=r[l]-n.rects.reference[l],g=Z(a),b=g?"y"===l?g.clientHeight||0:g.clientWidth||0:0,y=u/2-x/2,h=p[f],v=b-m[c]-p[d],w=b/2-m[c]/2+y,k=Xt(h,w,v),A=l;n.modifiersData[i]=((e={})[A]=k,e.centerOffset=k-w,e)}},effect:function(t){var e=t.state,n=t.options.element,i=void 0===n?"[data-popper-arrow]":n;null!=i&&("string"!=typeof i||(i=e.elements.popper.querySelector(i)))&&Tt(e.elements.popper,i)&&(e.elements.arrow=i)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function qt(t,e,n){return void 0===n&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function Pt(t){return[tt,nt,et,it].some((function(e){return t[e]>=0}))}var Yt=gt({defaultModifiers:[yt,{name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,n=t.name;e.modifiersData[n]=kt({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}},Nt,Et,zt,Dt,jt,Ht,{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,n=t.name,i=e.rects.reference,o=e.rects.popper,a=e.modifiersData.preventOverflow,r=Ot(e,{elementContext:"reference"}),s=Ot(e,{altBoundary:!0}),l=qt(r,i),c=qt(s,o,a),p=Pt(l),m=Pt(c);e.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:p,hasPopperEscaped:m},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":p,"data-popper-escaped":m})}}]}),Vt="tippy-content",Jt="tippy-arrow",Ut="tippy-svg-arrow",Qt={passive:!0,capture:!0},$t=function(){return document.body};function _t(t,e,n){if(Array.isArray(t)){var i=t[e];return null==i?Array.isArray(n)?n[e]:n:i}return t}function Gt(t,e){var n={}.toString.call(t);return 0===n.indexOf("[object")&&n.indexOf(e+"]")>-1}function Kt(t,e){return"function"==typeof t?t.apply(void 0,e):t}function Zt(t,e){return 0===e?t:function(i){clearTimeout(n),n=setTimeout((function(){t(i)}),e)};var n}function te(t){return[].concat(t)}function ee(t,e){-1===t.indexOf(e)&&t.push(e)}function ne(t){return[].slice.call(t)}function ie(t){return Object.keys(t).reduce((function(e,n){return void 0!==t[n]&&(e[n]=t[n]),e}),{})}function oe(){return document.createElement("div")}function ae(t){return["Element","Fragment"].some((function(e){return Gt(t,e)}))}function re(t,e){t.forEach((function(t){t&&(t.style.transitionDuration=e+"ms")}))}function se(t,e){t.forEach((function(t){t&&t.setAttribute("data-state",e)}))}function le(t,e,n){var i=e+"EventListener";["transitionend","webkitTransitionEnd"].forEach((function(e){t[i](e,n)}))}function ce(t,e){for(var n=e;n;){var i;if(t.contains(n))return!0;n=null==n.getRootNode||null==(i=n.getRootNode())?void 0:i.host}return!1}var pe={isTouch:!1},me=0;function fe(){pe.isTouch||(pe.isTouch=!0,window.performance&&document.addEventListener("mousemove",de))}function de(){var t=performance.now();t-me<20&&(pe.isTouch=!1,document.removeEventListener("mousemove",de)),me=t}function ue(){var t,e=document.activeElement;if((t=e)&&t._tippy&&t._tippy.reference===t){var n=e._tippy;e.blur&&!n.state.isVisible&&e.blur()}}var xe=!("undefined"==typeof window||"undefined"==typeof document||!window.msCrypto),ge=Object.assign({appendTo:$t,aria:{content:"auto",expanded:"auto"},delay:0,duration:[300,250],getReferenceClientRect:null,hideOnClick:!0,ignoreAttributes:!1,interactive:!1,interactiveBorder:2,interactiveDebounce:0,moveTransition:"",offset:[0,10],onAfterUpdate:function(){},onBeforeUpdate:function(){},onCreate:function(){},onDestroy:function(){},onHidden:function(){},onHide:function(){},onMount:function(){},onShow:function(){},onShown:function(){},onTrigger:function(){},onUntrigger:function(){},onClickOutside:function(){},placement:"top",plugins:[],popperOptions:{},render:null,showOnCreate:!1,touch:!0,trigger:"mouseenter focus",triggerTarget:null},{animateFill:!1,followCursor:!1,inlinePositioning:!1,sticky:!1},{allowHTML:!1,animation:"fade",arrow:!0,content:"",inertia:!1,maxWidth:350,role:"tooltip",theme:"",zIndex:9999}),be=Object.keys(ge);function ye(t){var e=(t.plugins||[]).reduce((function(e,n){var i,o=n.name,a=n.defaultValue;return o&&(e[o]=void 0!==t[o]?t[o]:null!=(i=ge[o])?i:a),e}),{});return Object.assign({},t,e)}function he(t,e){var n=Object.assign({},e,{content:Kt(e.content,[t])},e.ignoreAttributes?{}:function(t,e){return(e?Object.keys(ye(Object.assign({},ge,{plugins:e}))):be).reduce((function(e,n){var i=(t.getAttribute("data-tippy-"+n)||"").trim();if(!i)return e;if("content"===n)e[n]=i;else try{e[n]=JSON.parse(i)}catch(t){e[n]=i}return e}),{})}(t,e.plugins));return n.aria=Object.assign({},ge.aria,n.aria),n.aria={expanded:"auto"===n.aria.expanded?e.interactive:n.aria.expanded,content:"auto"===n.aria.content?e.interactive?null:"describedby":n.aria.content},n}function ve(t,e){t.innerHTML=e}function we(t){var e=oe();return!0===t?e.className=Jt:(e.className=Ut,ae(t)?e.appendChild(t):ve(e,t)),e}function ke(t,e){ae(e.content)?(ve(t,""),t.appendChild(e.content)):"function"!=typeof e.content&&(e.allowHTML?ve(t,e.content):t.textContent=e.content)}function Ae(t){var e=t.firstElementChild,n=ne(e.children);return{box:e,content:n.find((function(t){return t.classList.contains(Vt)})),arrow:n.find((function(t){return t.classList.contains(Jt)||t.classList.contains(Ut)})),backdrop:n.find((function(t){return t.classList.contains("tippy-backdrop")}))}}function Ce(t){var e=oe(),n=oe();n.className="tippy-box",n.setAttribute("data-state","hidden"),n.setAttribute("tabindex","-1");var i=oe();function o(n,i){var o=Ae(e),a=o.box,r=o.content,s=o.arrow;i.theme?a.setAttribute("data-theme",i.theme):a.removeAttribute("data-theme"),"string"==typeof i.animation?a.setAttribute("data-animation",i.animation):a.removeAttribute("data-animation"),i.inertia?a.setAttribute("data-inertia",""):a.removeAttribute("data-inertia"),a.style.maxWidth="number"==typeof i.maxWidth?i.maxWidth+"px":i.maxWidth,i.role?a.setAttribute("role",i.role):a.removeAttribute("role"),n.content===i.content&&n.allowHTML===i.allowHTML||ke(r,t.props),i.arrow?s?n.arrow!==i.arrow&&(a.removeChild(s),a.appendChild(we(i.arrow))):a.appendChild(we(i.arrow)):s&&a.removeChild(s)}return i.className=Vt,i.setAttribute("data-state","hidden"),ke(i,t.props),e.appendChild(n),n.appendChild(i),o(t.props,t.props),{popper:e,onUpdate:o}}Ce.$$tippy=!0;var Ne=1,Ee=[],ze=[];function Se(t,e){var n,i,o,a,r,s,l,c,p=he(t,Object.assign({},ge,ye(ie(e)))),m=!1,f=!1,d=!1,u=!1,x=[],g=Zt(U,p.interactiveDebounce),b=Ne++,y=(c=p.plugins).filter((function(t,e){return c.indexOf(t)===e})),h={id:b,reference:t,popper:oe(),popperInstance:null,props:p,state:{isEnabled:!0,isVisible:!1,isDestroyed:!1,isMounted:!1,isShown:!1},plugins:y,clearDelayTimeouts:function(){clearTimeout(n),clearTimeout(i),cancelAnimationFrame(o)},setProps:function(e){if(!h.state.isDestroyed){R("onBeforeUpdate",[h,e]),V();var n=h.props,i=he(t,Object.assign({},n,ie(e),{ignoreAttributes:!0}));h.props=i,Y(),n.interactiveDebounce!==i.interactiveDebounce&&(F(),g=Zt(U,i.interactiveDebounce)),n.triggerTarget&&!i.triggerTarget?te(n.triggerTarget).forEach((function(t){t.removeAttribute("aria-expanded")})):i.triggerTarget&&t.removeAttribute("aria-expanded"),W(),T(),k&&k(n,i),h.popperInstance&&(G(),Z().forEach((function(t){requestAnimationFrame(t._tippy.popperInstance.forceUpdate)}))),R("onAfterUpdate",[h,e])}},setContent:function(t){h.setProps({content:t})},show:function(){var t=h.state.isVisible,e=h.state.isDestroyed,n=!h.state.isEnabled,i=pe.isTouch&&!h.props.touch,o=_t(h.props.duration,0,ge.duration);if(!(t||e||n||i||S().hasAttribute("disabled")||(R("onShow",[h],!1),!1===h.props.onShow(h)))){if(h.state.isVisible=!0,z()&&(w.style.visibility="visible"),T(),j(),h.state.isMounted||(w.style.transition="none"),z()){var a=I();re([a.box,a.content],0)}var r,l,c;s=function(){var t;if(h.state.isVisible&&!u){if(u=!0,w.offsetHeight,w.style.transition=h.props.moveTransition,z()&&h.props.animation){var e=I(),n=e.box,i=e.content;re([n,i],o),se([n,i],"visible")}M(),W(),ee(ze,h),null==(t=h.popperInstance)||t.forceUpdate(),R("onMount",[h]),h.props.animation&&z()&&function(t,e){q(t,(function(){h.state.isShown=!0,R("onShown",[h])}))}(o)}},l=h.props.appendTo,c=S(),(r=h.props.interactive&&l===$t||"parent"===l?c.parentNode:Kt(l,[c])).contains(w)||r.appendChild(w),h.state.isMounted=!0,G()}},hide:function(){var t=!h.state.isVisible,e=h.state.isDestroyed,n=!h.state.isEnabled,i=_t(h.props.duration,1,ge.duration);if(!(t||e||n)&&(R("onHide",[h],!1),!1!==h.props.onHide(h))){if(h.state.isVisible=!1,h.state.isShown=!1,u=!1,m=!1,z()&&(w.style.visibility="hidden"),F(),H(),T(!0),z()){var o=I(),a=o.box,r=o.content;h.props.animation&&(re([a,r],i),se([a,r],"hidden"))}M(),W(),h.props.animation?z()&&function(t,e){q(t,(function(){!h.state.isVisible&&w.parentNode&&w.parentNode.contains(w)&&e()}))}(i,h.unmount):h.unmount()}},hideWithInteractivity:function(t){L().addEventListener("mousemove",g),ee(Ee,g),g(t)},enable:function(){h.state.isEnabled=!0},disable:function(){h.hide(),h.state.isEnabled=!1},unmount:function(){h.state.isVisible&&h.hide(),h.state.isMounted&&(K(),Z().forEach((function(t){t._tippy.unmount()})),w.parentNode&&w.parentNode.removeChild(w),ze=ze.filter((function(t){return t!==h})),h.state.isMounted=!1,R("onHidden",[h]))},destroy:function(){h.state.isDestroyed||(h.clearDelayTimeouts(),h.unmount(),V(),delete t._tippy,h.state.isDestroyed=!0,R("onDestroy",[h]))}};if(!p.render)return h;var v=p.render(h),w=v.popper,k=v.onUpdate;w.setAttribute("data-tippy-root",""),w.id="tippy-"+h.id,h.popper=w,t._tippy=h,w._tippy=h;var A=y.map((function(t){return t.fn(h)})),C=t.hasAttribute("aria-expanded");return Y(),W(),T(),R("onCreate",[h]),p.showOnCreate&&tt(),w.addEventListener("mouseenter",(function(){h.props.interactive&&h.state.isVisible&&h.clearDelayTimeouts()})),w.addEventListener("mouseleave",(function(){h.props.interactive&&h.props.trigger.indexOf("mouseenter")>=0&&L().addEventListener("mousemove",g)})),h;function N(){var t=h.props.touch;return Array.isArray(t)?t:[t,0]}function E(){return"hold"===N()[0]}function z(){var t;return!(null==(t=h.props.render)||!t.$$tippy)}function S(){return l||t}function L(){var t,e,n=S().parentNode;return n?null!=(e=te(n)[0])&&null!=(t=e.ownerDocument)&&t.body?e.ownerDocument:document:document}function I(){return Ae(w)}function B(t){return h.state.isMounted&&!h.state.isVisible||pe.isTouch||a&&"focus"===a.type?0:_t(h.props.delay,t?0:1,ge.delay)}function T(t){void 0===t&&(t=!1),w.style.pointerEvents=h.props.interactive&&!t?"":"none",w.style.zIndex=""+h.props.zIndex}function R(t,e,n){var i;void 0===n&&(n=!0),A.forEach((function(n){n[t]&&n[t].apply(n,e)})),n&&(i=h.props)[t].apply(i,e)}function M(){var e=h.props.aria;if(e.content){var n="aria-"+e.content,i=w.id;te(h.props.triggerTarget||t).forEach((function(t){var e=t.getAttribute(n);if(h.state.isVisible)t.setAttribute(n,e?e+" "+i:i);else{var o=e&&e.replace(i,"").trim();o?t.setAttribute(n,o):t.removeAttribute(n)}}))}}function W(){!C&&h.props.aria.expanded&&te(h.props.triggerTarget||t).forEach((function(t){h.props.interactive?t.setAttribute("aria-expanded",h.state.isVisible&&t===S()?"true":"false"):t.removeAttribute("aria-expanded")}))}function F(){L().removeEventListener("mousemove",g),Ee=Ee.filter((function(t){return t!==g}))}function O(e){if(!pe.isTouch||!d&&"mousedown"!==e.type){var n=e.composedPath&&e.composedPath()[0]||e.target;if(!h.props.interactive||!ce(w,n)){if(te(h.props.triggerTarget||t).some((function(t){return ce(t,n)}))){if(pe.isTouch)return;if(h.state.isVisible&&h.props.trigger.indexOf("click")>=0)return}else R("onClickOutside",[h,e]);!0===h.props.hideOnClick&&(h.clearDelayTimeouts(),h.hide(),f=!0,setTimeout((function(){f=!1})),h.state.isMounted||H())}}}function D(){d=!0}function X(){d=!1}function j(){var t=L();t.addEventListener("mousedown",O,!0),t.addEventListener("touchend",O,Qt),t.addEventListener("touchstart",X,Qt),t.addEventListener("touchmove",D,Qt)}function H(){var t=L();t.removeEventListener("mousedown",O,!0),t.removeEventListener("touchend",O,Qt),t.removeEventListener("touchstart",X,Qt),t.removeEventListener("touchmove",D,Qt)}function q(t,e){var n=I().box;function i(t){t.target===n&&(le(n,"remove",i),e())}if(0===t)return e();le(n,"remove",r),le(n,"add",i),r=i}function P(e,n,i){void 0===i&&(i=!1),te(h.props.triggerTarget||t).forEach((function(t){t.addEventListener(e,n,i),x.push({node:t,eventType:e,handler:n,options:i})}))}function Y(){var t;E()&&(P("touchstart",J,{passive:!0}),P("touchend",Q,{passive:!0})),(t=h.props.trigger,t.split(/\s+/).filter(Boolean)).forEach((function(t){if("manual"!==t)switch(P(t,J),t){case"mouseenter":P("mouseleave",Q);break;case"focus":P(xe?"focusout":"blur",$);break;case"focusin":P("focusout",$)}}))}function V(){x.forEach((function(t){var e=t.node,n=t.eventType,i=t.handler,o=t.options;e.removeEventListener(n,i,o)})),x=[]}function J(t){var e,n=!1;if(h.state.isEnabled&&!_(t)&&!f){var i="focus"===(null==(e=a)?void 0:e.type);a=t,l=t.currentTarget,W(),!h.state.isVisible&&Gt(t,"MouseEvent")&&Ee.forEach((function(e){return e(t)})),"click"===t.type&&(h.props.trigger.indexOf("mouseenter")<0||m)&&!1!==h.props.hideOnClick&&h.state.isVisible?n=!0:tt(t),"click"===t.type&&(m=!n),n&&!i&&et(t)}}function U(t){var e=t.target,n=S().contains(e)||w.contains(e);if("mousemove"!==t.type||!n){var i=Z().concat(w).map((function(t){var e,n=null==(e=t._tippy.popperInstance)?void 0:e.state;return n?{popperRect:t.getBoundingClientRect(),popperState:n,props:p}:null})).filter(Boolean);(function(t,e){var n=e.clientX,i=e.clientY;return t.every((function(t){var e=t.popperRect,o=t.popperState,a=t.props.interactiveBorder,r=o.placement.split("-")[0],s=o.modifiersData.offset;if(!s)return!0;var l="bottom"===r?s.top.y:0,c="top"===r?s.bottom.y:0,p="right"===r?s.left.x:0,m="left"===r?s.right.x:0,f=e.top-i+l>a,d=i-e.bottom-c>a,u=e.left-n+p>a,x=n-e.right-m>a;return f||d||u||x}))})(i,t)&&(F(),et(t))}}function Q(t){_(t)||h.props.trigger.indexOf("click")>=0&&m||(h.props.interactive?h.hideWithInteractivity(t):et(t))}function $(t){h.props.trigger.indexOf("focusin")<0&&t.target!==S()||h.props.interactive&&t.relatedTarget&&w.contains(t.relatedTarget)||et(t)}function _(t){return!!pe.isTouch&&E()!==t.type.indexOf("touch")>=0}function G(){K();var e=h.props,n=e.popperOptions,i=e.placement,o=e.offset,a=e.getReferenceClientRect,r=e.moveTransition,l=z()?Ae(w).arrow:null,c=a?{getBoundingClientRect:a,contextElement:a.contextElement||S()}:t,p=[{name:"offset",options:{offset:o}},{name:"preventOverflow",options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:"flip",options:{padding:5}},{name:"computeStyles",options:{adaptive:!r}},{name:"$$tippy",enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:function(t){var e=t.state;if(z()){var n=I().box;["placement","reference-hidden","escaped"].forEach((function(t){"placement"===t?n.setAttribute("data-placement",e.placement):e.attributes.popper["data-popper-"+t]?n.setAttribute("data-"+t,""):n.removeAttribute("data-"+t)})),e.attributes.popper={}}}}];z()&&l&&p.push({name:"arrow",options:{element:l,padding:3}}),p.push.apply(p,(null==n?void 0:n.modifiers)||[]),h.popperInstance=Yt(c,w,Object.assign({},n,{placement:i,onFirstUpdate:s,modifiers:p}))}function K(){h.popperInstance&&(h.popperInstance.destroy(),h.popperInstance=null)}function Z(){return ne(w.querySelectorAll("[data-tippy-root]"))}function tt(t){h.clearDelayTimeouts(),t&&R("onTrigger",[h,t]),j();var e=B(!0),i=N(),o=i[0],a=i[1];pe.isTouch&&"hold"===o&&a&&(e=a),e?n=setTimeout((function(){h.show()}),e):h.show()}function et(t){if(h.clearDelayTimeouts(),R("onUntrigger",[h,t]),h.state.isVisible){if(!(h.props.trigger.indexOf("mouseenter")>=0&&h.props.trigger.indexOf("click")>=0&&["mouseleave","mousemove"].indexOf(t.type)>=0&&m)){var e=B(!1);e?i=setTimeout((function(){h.state.isVisible&&h.hide()}),e):o=requestAnimationFrame((function(){h.hide()}))}}else H()}}function Le(t,e){void 0===e&&(e={});var n=ge.plugins.concat(e.plugins||[]);document.addEventListener("touchstart",fe,Qt),window.addEventListener("blur",ue);var i,o=Object.assign({},e,{plugins:n}),a=(i=t,ae(i)?[i]:function(t){return Gt(t,"NodeList")}(i)?ne(i):Array.isArray(i)?i:ne(document.querySelectorAll(i))).reduce((function(t,e){var n=e&&Se(e,o);return n&&t.push(n),t}),[]);return ae(t)?a[0]:a}Le.defaultProps=ge,Le.setDefaultProps=function(t){Object.keys(t).forEach((function(e){ge[e]=t[e]}))},Le.currentInput=pe,Object.assign({},Et,{effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow)}}),Le.setDefaultProps({render:Ce});const Ie=Le,Be={"easy-label":"Mostly well known countries and flags","normal-label":"Many smaller and lesser known countries are included, but there aren't any tiny island nations","expert-label":"Almost every country and territory is included, only for geography super nerds","endless-label":"Keep going forever and ever, no consequences","questions-label":"Ask an arbitrary number of questions before the game is over and you get a score","streak-label":"Keep playing and growing your streak until you get a question wrong","sp-flagsPercent":"Percentage of the world's flags that you've encountered while playing","replay-btn":"Start over using the same options"};for(let t in Be)Ie(document.getElementById(t),{content:Be[t],placement:"top",animation:"shift-away-subtle"});function Te(t,e,n){n.plainText?t.innerText=e:t.innerHTML=e}const Re=class{constructor(t){"content"in t||(t.content="Lorem ipsum dolor sit amet consectetur adipisicing elit."),"title"in t||(t.title=""),"plainText"in t||(t.plainText=!0),"clickBackdropToClose"in t||(t.clickBackdropToClose=!0),"closeKeys"in t||(t.closeKeys=["Escape"]);const e=document.createElement("div");e.className="popup-backdrop",document.body.appendChild(e);const n=document.createElement("div");n.className="popup-container",document.body.appendChild(n);const i=document.createElement("header");i.className="popup-header",n.appendChild(i);const o=document.createElement("span");o.className="popup-title",Te(o,t.title,t),i.appendChild(o);const a=document.createElement("button");a.innerHTML="X",a.className="popup-close",i.appendChild(a);const r=document.createElement("div");function s(e){(t.closeKeys.includes(e.key)||t.closeKeys.includes(e.keyCode))&&a.click()}r.className="popup-content",Te(r,t.content,t),n.appendChild(r),this.close=function(){t.callbackReplaceDefault||(n.remove(),e.remove()),"onClose"in t&&t.onClose(),document.removeEventListener("keydown",s)},document.addEventListener("keydown",s),a.addEventListener("click",this.close),t.clickBackdropToClose&&e.addEventListener("click",this.close)}};var Me=n(379),We=n.n(Me),Fe=n(795),Oe=n.n(Fe),De=n(569),Xe=n.n(De),je=n(565),He=n.n(je),qe=n(216),Pe=n.n(qe),Ye=n(589),Ve=n.n(Ye),Je=n(74),Ue={};Ue.styleTagTransform=Ve(),Ue.setAttributes=He(),Ue.insert=Xe().bind(null,"head"),Ue.domAPI=Oe(),Ue.insertStyleElement=Pe(),We()(Je.Z,Ue),Je.Z&&Je.Z.locals&&Je.Z.locals;const Qe={incorrectEndlessMessages:["Dust yourself off! The correct answer was %%","Oops! The correct answer was %%","Sorry! The actual answer was %%","You'll get it next time! The answer was %%.","I believe in you! The correct answer was %%","Don't sweat! The correct answer was %%","Nice try, the correct answer was %%"],streakCorrectMessages:["Awesome! Your streak is now %%!","Your streak is now %%!","Sick! Your new streak is %%!","Sweet! Streak: %%","Keep going! Streak: %%","GG! Streak: %%"],loseStreakMessages:["Aw man! Better luck next time. You got a streak of %% questions.","Better luck next time! Your streak was %% questions.","%% questions, not bad!","Maybe next time! You got a streak of %% questions."],questionsFail:["You finished with a score of %% out of %%. Better luck next time!","You got %%/%%. I bet you'll do better next time!","Keep trying! You finished with a score of %%/%%."],questionsFinish:["Awesome! Your score is %%/%%!","Nice job! You finished with a score of %% out of %%!","Super! Your score is %%/%%","Nice! You got %% out of %% correct!"]};document.getElementById("version").innerText="Version: 2.4.0";let $e,_e,Ge=4,Ke={},Ze=0,tn=10,en=0,nn=!0;const on=["AC","CP","DG","EA","IC","TA"];let an=0,rn={},sn=0,ln=!1;const cn=document.getElementById("progress-fill"),pn=document.getElementById("streak-num"),mn=document.getElementById("streak-container"),fn=document.getElementById("typing-form"),dn=document.getElementById("typing-input"),un=document.getElementById("correct-text");function xn(t,e){let n=[];return n.push(e.name.toLowerCase()),"alt"in e&&e.alt.forEach((t=>{n.push(t.toLowerCase())})),n.includes(t.toLowerCase().trim())}function gn(n){e.Loading.remove(),console.error(n),t.Report.failure("Error",n.toString()||"An unknown error occurred.","Ok",a)}function bn(){return Ke[Math.floor(Math.random()*Ke.length)]}function yn(){Array.from(document.getElementsByClassName("screen")).forEach((t=>{t.style.display="none"}))}function hn(){$e=null,_e=null,Ze=0,an=0,en=0,sn=0,ln=!1}function vn(){hn(),yn(),document.getElementById("welcome").style.display="unset"}function wn(t){return"us-states"==rn.set?"flags/state/"+t.code+".png":"us-states-by-map"==rn.set?`flags/state/maps/${t.code}.png`:on.includes(t.code)?"https://cdn.jsdelivr.net/npm/country-flag-emoji-json@2.0.0/dist/images/"+t.image:"flags/"+t.code+".svg"}fn.addEventListener("submit",(t=>{t.preventDefault()}));const kn=document.getElementById("guess"),An=document.getElementById("flag-svg"),Cn=document.getElementById("guessType-multi"),Nn=[];function En(t){if(Ze++,an=100*Ze/tn,cn.style.width=an+"%",_e=t,N("totalQuestions"),z("totalQuestions"),Ze+1>tn&&"questions"==rn.mode)return ln=!1,S(rn.mode,sn,en,rn.questions);zn(bn())}function zn(e){let n=[];if($e=e,$e!=_e){if(An.src=wn(e),"multi"==rn.answerType){Array.from(document.getElementsByClassName("option")).forEach((t=>{t.remove()}));for(let t=0;t<Ge-1;t++)i();const s=Math.floor(Math.random()*(n.length+1));n.splice(s,0,e.name),n.forEach((n=>{let i=document.createElement("button");i.className="option",i.innerText=n,Cn.appendChild(i),i.addEventListener("click",(function(){i.getAttribute("clicked")||(xn(n,e)?(sn++,pn.innerText=sn,t.Report.success("Correct!","streak"==rn.mode?Qe.streakCorrectMessages[Math.floor(Math.random()*Qe.streakCorrectMessages.length)].replaceAll("%%",sn):"","Next Question",(()=>{nn&&(o(),N("totalCorrect"),z("totalCorrect"),"streak"==rn.mode&&A("streak")<sn&&C("streak",sn),en++,En(e))}),a)):"streak"==rn.mode?r():t.Report.failure("Incorrect",Qe.incorrectEndlessMessages[Math.floor(Math.random()*Qe.incorrectEndlessMessages.length)].replaceAll("%%","<b>"+e.name+"</b>"),"Next Question",(()=>{nn&&(o(),N("totalIncorrect"),z("totalIncorrect"),En(e),_e=e)}),a),i.setAttribute("clicked",!0))}))}))}else if("typing"==rn.answerType){const t=()=>{const n=dn.value;""!==n&&(dn.value="",dn.focus(),xn(n,e)?(dn.classList.add("correct"),sn++,pn.innerText=sn,N("totalCorrect"),z("totalCorrect"),"streak"==rn.mode&&A("streak")<sn&&C("streak",sn),en++,setTimeout((()=>{dn.classList.remove("correct"),En()}),600)):(dn.classList.add("incorrect"),un.style.visibility="visible",un.querySelector(".value").innerText=e.name,setTimeout((()=>{un.style.visibility="hidden",dn.classList.remove("incorrect"),"streak"==rn.mode?r():(N("totalIncorrect"),z("totalIncorrect"),En())}),600)),fn.removeEventListener("submit",t))};fn.addEventListener("submit",t)}try{if("us-states"!=rn.set&&"us-states-by-map"!=rn.set&&!A("flagsSeen").includes(e.code)){let t=A("flagsSeen");t.push(e.code),C("flagsSeen",t)}}catch(t){console.error("Failed to update statistics!"),console.error(t)}}else zn(bn());function i(){const t=bn();if(n.includes(t.name)||t.name==e.name)return console.debug("Duplicate detected: "+t.name),void i();n.push(t.name)}function o(){nn=!1,setTimeout((()=>{nn=!0}),370)}function r(){if("streak"==rn.mode){if(!nn)return;return o(),N("totalQuestions"),z("totalQuestions"),N("totalIncorrect"),z("totalIncorrect"),A("streak")<sn&&C("streak",sn),ln=!1,S(rn.mode,sn,en,rn.questions,e.name)}}}function Sn(){rn=m,"practice-on"===g("practice")&&o.Confirm.show("Practice Mode","Your stats won't count while playing in practice mode. Check your settings to disable it.","Ok",void 0,void 0,void 0,r),Ge=rn.options.split("opt-")[1],tn=rn.questions.split("q-")[1],console.log("Data url: "+d()),console.log("Option count: "+Ge),N("totalGames"),function(t){Nn.forEach((t=>{(t=document.getElementById("guessType-"+t)).style.display="none"}));let e=document.querySelector(`#guessType-${t}`);e&&e.setAttribute("style","")}(rn.answerType),ln=!0,"questions"!==rn.mode?cn.parentElement.style.display="none":cn.parentElement.setAttribute("style",""),"streak"!==rn.mode?mn.style.display="none":mn.style.display="block","autocomplete-on"==rn.autocomplete?dn.setAttribute("list","countries-auto"):dn.setAttribute("list",""),dn.value="",E("difficulty",rn.set),E("questions",rn.questions.split("q-")[1]),document.querySelector("#info-difficulty > span").innerText=rn.set.replaceAll("-"," "),pn.innerText=sn,e.Loading.circle("Fetching data..."),fetch(d()).then((t=>{e.Loading.change("Parsing data..."),t.json().then((t=>{Ke=t;const n=document.getElementById("countries-auto");n.querySelectorAll("option").forEach((t=>{t.remove()})),Ke.forEach((t=>{let e=document.createElement("option");e.value=t.name,n.appendChild(e)})),"typing"==rn.answerType&&setTimeout((()=>{dn.focus()}),300),e.Loading.remove(),yn(),kn.style.display="unset",cn.style.width=an+"%",zn(bn())})).catch(gn)})).catch(gn)}document.querySelectorAll("input[name='answerType']").forEach((t=>{Nn.push(t.id)})),window.addEventListener("keydown",(t=>{"Enter"!=t.key&&" "!=t.key&&"Escape"!=t.key||document.getElementById("NXReportButton")&&document.getElementById("NXReportButton").click()})),window.addEventListener("beforeunload",(t=>{ln&&(t.returnValue=!0)})),setInterval((()=>{ln&&z("playtime")}),1e3),document.getElementById("close-btn").addEventListener("click",(()=>{o.Confirm.show("Are you sure?","Your statistics are already saved, but any current game progress will be lost.","Leave","Stay",vn,void 0,r)})),document.getElementById("replay-btn").addEventListener("click",(()=>{yn(),hn(),Sn()})),document.getElementById("view-flag-btn").addEventListener("click",(()=>{new Re({title:`Flag of ${$e.name}`,content:`<img src="${wn($e)}" class="view-flag-img">`,plainText:!1})})),document.getElementById("home-btn").addEventListener("click",vn),document.getElementById("play-btn").addEventListener("click",Sn),document.getElementById("about-btn").addEventListener("click",(function(){new Re({title:"About",plainText:!1,content:'\n<h3>What is this?</h3>\nFlag guesser is an <a href="https://github.com/pikapower9080/flag-guesser" target="_blank">open source</a> vanilla javascript game about guessing world flags.\n<h3>Difficulty</h3>\nIn an attempt to make the game fun for everyone, a difficulty option has been added. The three difficulties are described when you hover over their buttons. You might not agree with these presets, and if you have any feedback please open a <a href="https://github.com/pikapower9080/flag-guesser/issues" target="_blank">github issue</a>.\n<h3>Customization</h3>\nFlag guesser is extremely customizable! Below the play button you\'ll find a menu with many options. After the game ends, you can press the play again button to retry with the exact same options.\n<h3>Bugs / Feature Requests</h3>\nIf you\'ve found a bug or have an idea for a feature, please <a href="https://github.com/pikapower9080/flag-guesser/issues" target="_blank">open an issue</a> on github. You unfortunately will need to sign up for an account.\n<h3>Acknowledgements</h3>\n<ul>\n<li>Extra special thanks to <a href="https://github.com/risan/country-flag-emoji-json" target="_blank">country-flag-emoji-json</a>, this project would not be possible without it.</li>\n<li>Flag images courtesy of <a href="https://countryflagsapi.com/" target="_blank">countryflagsapi.com</a></li>\n<li>Radio button styles taken from <a href="https://markheath.net/post/customize-radio-button-css" target="_blank">here</a></li>\n<li>Icons by <a href="https://fontawesome.com/" target="_blank">FontAwesome</a></li>\n</ul>\n'})}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Qiw0QkFBNEIrSCxTQUFTM1gsSUFDM0R5a0MsR0FBWXZwQyxLQUFLOEUsRUFBUTVFLEdBQUUsSUF1Ty9Cc0MsT0FBT3FHLGlCQUFpQixXQUFZK0gsSUFDbkIsU0FBVEEsRUFBRXpILEtBQTJCLEtBQVR5SCxFQUFFekgsS0FBdUIsVUFBVHlILEVBQUV6SCxLQUNsQzFHLFNBQVMyRixlQUFlLG1CQUN4QjNGLFNBQVMyRixlQUFlLGtCQUFrQjIrQixPQUVsRCxJQUlKdmtDLE9BQU9xRyxpQkFBaUIsZ0JBQWdCQyxJQUNoQ2svQixLQUNBbC9CLEVBQU1XLGFBQWMsRUFDeEIsSUFJSnloQyxhQUFZLEtBQ0psRCxJQUNBeHBCLEVBQWtCLFdBQ3RCLEdBQ0QsS0FFSC9iLFNBQVMyRixlQUFlLGFBQWFTLGlCQUFpQixTQUFTLEtBQzNELEVBQUFoQyxRQUFBLEtBQWEsZ0JBQWlCLGlGQUFrRixRQUFTLE9BQVFtaUMsUUFBYzNuQyxFQUFXb1osRUFBYyxJQUU1S2hZLFNBQVMyRixlQUFlLGNBQWNTLGlCQUFpQixTQUFTLEtBQzVEaVcsS0FDQSxLQUNBLElBQU0sSUFFVnJjLFNBQVMyRixlQUFlLGlCQUFpQlMsaUJBQWlCLFNBQVMsS0FDL0QsSUFBSSxHQUFNLENBQ056QyxNQUFPLFdBQVdvaEMsR0FBZTdxQixPQUNqQ2pjLFFBQVMsYUFBYXVvQyxHQUFXekIsOEJBQ2pDNWpDLFdBQVcsR0FDZCxJQUVMbkIsU0FBUzJGLGVBQWUsWUFBWVMsaUJBQWlCLFFBQVNtZ0MsSUFDOUR2bUMsU0FBUzJGLGVBQWUsWUFBWVMsaUJBQWlCLFFBQVMsSUFDOURwRyxTQUFTMkYsZUFBZSxhQUFhUyxpQkFBaUIsU0M3Vy9DLFdBQ0gsSUFBSSxHQUFNLENBQ056QyxNQUFPLFFBQ1B4QyxXQUFXLEVBQ1hsRCxRQXRCUSwraURBd0JoQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0eWxlcy9pbmRleC5sZXNzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL25vdGlmbGl4L2J1aWxkL25vdGlmbGl4LWNvbmZpcm0tYWlvLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9ub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1sb2FkaW5nLWFpby5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvbm90aWZsaXgvYnVpbGQvbm90aWZsaXgtcmVwb3J0LWFpby5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvbm90aWZsaXgvZGlzdC9ub3RpZmxpeC1haW8tMy4yLjUubWluLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3RoZW1lcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9zcmMvb3B0aW9ucy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9zcmMvc3RhdGlzdGljcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy91c2VyQWdlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNMYXlvdXRWaWV3cG9ydC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNTY3JvbGxQYXJlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlU2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldExheW91dFJlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0UGFyZW50Tm9kZS5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRTY3JvbGxQYXJlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvbGlzdFNjcm9sbFBhcmVudHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNUYWJsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9vcmRlck1vZGlmaWVycy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RlYm91bmNlLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VCeU5hbWUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0VmFyaWF0aW9uLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZU9mZnNldHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcHBseVN0eWxlcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9vZmZzZXQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVBsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2NvbnRhaW5zLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDbGlwcGluZ1JlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Vmlld3BvcnRSZWN0LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50UmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEZyZXNoU2lkZU9iamVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2V4cGFuZFRvSGFzaE1hcC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2ZsaXAuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlQXV0b1BsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRBbHRBeGlzLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2Fycm93LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXIuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvdGlwcHkuanMvZGlzdC90aXBweS5lc20uanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3Rvb2x0aXBzLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdXBlci1zaW1wbGUtcG9wdXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0eWxlcy9pbmRleC5sZXNzP2UyNDciLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0cmluZ3MuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL3NyYy9hYm91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tb3B0aW9uLWJnOiAjZTllOWVkO1xcbiAgLS1vcHRpb24taG92ZXItYmc6ICNkNWQzZDM7XFxuICAtLW9wdGlvbi1ib3JkZXItY29sb3I6ICNjNGM0YzU7XFxuICAtLXByb2dyZXNzLWJhci1jb2xvcjogIzBkODBiZDtcXG4gIC0tcHJvZ3Jlc3MtYmFyLWJnOiAjYzZjNmM2O1xcbiAgLS10ZXh0LWNvbG9yOiAjMDAwMDAwO1xcbiAgLS1zZWNvbmRhcnktdGV4dC1jb2xvcjogIzYxNjE2MTtcXG4gIC0tbGluay1jb2xvcjogIzJlMmVmMTtcXG4gIC0tZ3JheS1idG4tY29sb3I6ICNkNGQ0ZDQ7XFxuICAtLWdyYXktYnRuLWhvdmVyOiAjYzVjNGM0O1xcbiAgLS10ZXh0LWlucHV0LWNvcnJlY3Qtb3V0bGluZTogIzFjZGExZjtcXG4gIC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZTogI2U1MDgwODtcXG59XFxuLnBvcHVwLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjUpO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuLnBvcHVwLWNvbnRhaW5lciB7XFxuICBtYXJnaW46IGF1dG87XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMzV2dztcXG4gIGhlaWdodDogMzIwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBtaW4td2lkdGg6IDMyMHB4O1xcbn1cXG4ucG9wdXAtY2xvc2Uge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICB0b3A6IDA7XFxuICB3aWR0aDogMThweDtcXG4gIGhlaWdodDogMThweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgbWFyZ2luOiA0cHg7XFxuICBwYWRkaW5nOiAwcHg7XFxuICBtaW4td2lkdGg6IDBweDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XFxufVxcbi5wb3B1cC10aXRsZSB7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBhZGRpbmctcmlnaHQ6IGNhbGMoMThweCArIDZweCk7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjY3Myk7XFxufVxcbi5wb3B1cC1oZWFkZXIge1xcbiAgaGVpZ2h0OiAyMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgei1pbmRleDogMjtcXG59XFxuLnBvcHVwLWNvbnRlbnQge1xcbiAgcGFkZGluZy1pbmxpbmU6IDZweDtcXG4gIG92ZXJmbG93LXk6IGF1dG87XFxuICBoZWlnaHQ6IGNhbGMoY2FsYygxMDAlIC0gMjBweCkgLSA5cHgpO1xcbiAgbWFyZ2luLXRvcDogOXB4O1xcbiAgei1pbmRleDogMTtcXG59XFxuLnBvcHVwLWNvbnRlbnQgPiB1bCA+IGxpOjptYXJrZXIge1xcbiAgY29udGVudDogJ+KYniAnO1xcbn1cXG4udmlldy1mbGFnLWltZyB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmJ0bi1ibHVlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2NDY0ZWY7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5idG4tYmx1ZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGU0ZWRjO1xcbn1cXG4uYnRuLWdyZWVuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwN2JiMDc7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5idG4tZ3JlZW46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFhYTgxYTtcXG59XFxuLnRoaW4ge1xcbiAgcGFkZGluZzogNHB4O1xcbiAgcGFkZGluZy1pbmxpbmU6IDdweDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuLmJ0bi1yZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2MDgwODtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuLmJ0bi1yZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NlMjAyMDtcXG59XFxuLmJ0bi15ZWxsb3cge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZWIzODtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuLmJ0bi15ZWxsb3c6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VhZTEzODtcXG59XFxuLmJ0bi1ncmF5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktYnRuLWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG59XFxuLmJ0bi1ncmF5OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktYnRuLWhvdmVyKTtcXG59XFxuLmJ0bi1wdXJwbGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2E4MWNkNztcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuLmJ0bi1wdXJwbGU6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzljMzRiZjtcXG59XFxuYm9keSB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xcbn1cXG5hIHtcXG4gIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuYTp2aXNpdGVkIHtcXG4gIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuLnNjcmVlbiB7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG4ucGxheSB7XFxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG4jZmxhZy1zdmcge1xcbiAgaGVpZ2h0OiAyMHZ3O1xcbiAgcGFkZGluZzogMjBweDtcXG59XFxuI2d1ZXNzVHlwZS1tdWx0aSB7XFxuICBjb2x1bW4tY291bnQ6IDI7XFxuICB3aWR0aDogMTAwdnc7XFxuICBsZWZ0OiAwO1xcbn1cXG4jY2xvc2UtYnRuIHtcXG4gIHdpZHRoOiA0M3B4O1xcbiAgaGVpZ2h0OiA0M3B4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW46IDVweDtcXG4gIG1hcmdpbi10b3A6IDBweDtcXG59XFxuLm9wdGlvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGlubGluZTtcXG4gIG1hcmdpbi1ib3R0b206IDVweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMzAwbXM7XFxuICBib3JkZXI6IHZhcigtLW9wdGlvbi1ib3JkZXItY29sb3IpIDFweCBzb2xpZDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW9wdGlvbi1iZyk7XFxuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxufVxcbi5vcHRpb246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3B0aW9uLWhvdmVyLWJnKTtcXG59XFxuI3Byb2dyZXNzLWNvbnRhaW5lciB7XFxuICB3aWR0aDogY2FsYygxMDAlIC0gODVweCk7XFxuICBoZWlnaHQ6IDE1cHg7XFxuICBtYXJnaW46IDEwcHg7XFxuICBtYXJnaW4taW5saW5lOiAyNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByb2dyZXNzLWJhci1iZyk7XFxufVxcbiNwcm9ncmVzcy1maWxsIHtcXG4gIHdpZHRoOiAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcm9ncmVzcy1iYXItY29sb3IpO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgbGVmdDogMDtcXG4gIHRvcDogMDtcXG4gIHRyYW5zaXRpb246IHdpZHRoIDIwMG1zO1xcbn1cXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgcGFkZGluZy1sZWZ0OiAyNXB4O1xcbn1cXG5AbWVkaWEgKG1heC13aWR0aDogNjEwcHgpIHtcXG4gICNndWVzc1R5cGUtbXVsdGkge1xcbiAgICBjb2x1bW4tY291bnQ6IDE7XFxuICB9XFxufVxcbiNzdHJlYWstY29udGFpbmVyLFxcbiNzdWItc3RyZWFrIHtcXG4gIGNvbG9yOiAjZmY4MDAwO1xcbn1cXG4jc3ViLXF1aXotc2NvcmUge1xcbiAgY29sb3I6ICMwZDgwYmQ7XFxufVxcbi5jYXBpdGFsaXplIHtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcbn1cXG4jZGlmZmljdWx0eS1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgcmlnaHQ6IDA7XFxuICBib3R0b206IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBwYWRkaW5nOiA2cHg7XFxufVxcbi5jb3JuZXItaXRlbSB7XFxuICBtYXJnaW46IDVweDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuI2dhbWUtaW5mbyB7XFxuICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBmb250LXNpemU6IDEycHg7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIG1hcmdpbjogNXB4O1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG4uc3BhY2VyIHtcXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcbiN2aWV3LWZsYWctYnRuIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMC44NSk7XFxufVxcbmZpZWxkc2V0LnN1YnNldCB7XFxuICBtYXJnaW4tdG9wOiA4cHg7XFxufVxcbiN0eXBpbmctaW5wdXQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBvdXRsaW5lOiBzb2xpZCAxcHggdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcik7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICBmb250LXNpemU6IDEuNXJlbTtcXG59XFxuI3R5cGluZy1pbnB1dDpmb2N1cyB7XFxuICBvdXRsaW5lOiB2YXIoLS1vcHRpb24tYm9yZGVyLWNvbG9yKSAycHggc29saWQ7XFxuICBib3JkZXI6IG5vbmU7XFxuICB0cmFuc2l0aW9uOiBvdXRsaW5lLWNvbG9yIDMwMG1zO1xcbn1cXG4jdHlwaW5nLWlucHV0LmNvcnJlY3Qge1xcbiAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1jb3JyZWN0LW91dGxpbmUpIDJweCBzb2xpZDtcXG59XFxuI3R5cGluZy1pbnB1dC5pbmNvcnJlY3Qge1xcbiAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZSkgMnB4IHNvbGlkO1xcbn1cXG4jY29ycmVjdC10ZXh0IHtcXG4gIGNvbG9yOiB2YXIoLS10ZXh0LWlucHV0LWluY29ycmVjdC1vdXRsaW5lKTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLXRvcDogNXB4O1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcbiNjb3JyZWN0LXRleHQgLnZhbHVlIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvaW5kZXgubGVzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlcy9wb3B1cC5sZXNzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2J1dHRvbnMubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQTtFQUVJLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSw4QkFBQTtFQUNBLDZCQUFBO0VBQ0EsMEJBQUE7RUFDQSxxQkFBQTtFQUNBLCtCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0EscUNBQUE7RUFDQSx1Q0FBQTtBQUhKO0FDYkE7RUFDSSxlQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxxQ0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FEZUo7QUNaQTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFBUSxPQUFBO0VBQVMsU0FBQTtFQUFXLFFBQUE7RUFDNUIsV0FBQTtFQUNBLGFBQUE7RUFDQSwyQkFBQTtFQUNBLGdCQUFBO0FEaUJKO0FDYkE7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7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QkFBQTtBQWtGSjtBQWhGQTtFQUNJLG9EQUFBO0FBa0ZKO0FBaEZBO0VBQ0ksc0RBQUE7QUFrRko7QUFoRkE7RUFDSSwwQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQWtGSjtBQXZGQTtFQU9RLG1CQUFBO0FBbUZSXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8vIFN0eWxlcyBhcmUgdXNlZCBvbmx5IGZvciBpbmRleC5odG1sLCBzZWUgZ2xvYmFsLmNzcyBmb3IgZ2xvYmFsIHN0eWxlcyBsaWtlIGJhY2tncm91bmQgY29sb3IgYW5kIGZvbnRzXFxuXFxuLy8gWWVzIEknbSB1c2luZyBsZXNzLmNzcyBhbmQgbGVzcy5jc3MgdmFyaWFibGVzIGFyZSBiZXR0ZXIsIGJ1dCB0aGVzZSBuZWVkIHRvIGJlIGNoYW5nZWQgd2l0aCBqYXZhc2NyaXB0XFxuOnJvb3Qge1xcbiAgICAvLyBiZyB2YXJpYWJsZSBpcyBhZGRlZCBpbiBnbG9iYWwuY3NzXFxuICAgIC0tb3B0aW9uLWJnOiAjZTllOWVkO1xcbiAgICAtLW9wdGlvbi1ob3Zlci1iZzogcmdiKDIxMywgMjExLCAyMTEpO1xcbiAgICAtLW9wdGlvbi1ib3JkZXItY29sb3I6ICNjNGM0YzU7XFxuICAgIC0tcHJvZ3Jlc3MtYmFyLWNvbG9yOiAjMGQ4MGJkO1xcbiAgICAtLXByb2dyZXNzLWJhci1iZzogI2M2YzZjNjtcXG4gICAgLS10ZXh0LWNvbG9yOiAjMDAwMDAwO1xcbiAgICAtLXNlY29uZGFyeS10ZXh0LWNvbG9yOiByZ2IoOTcsIDk3LCA5Nyk7XFxuICAgIC0tbGluay1jb2xvcjogIzJlMmVmMTtcXG4gICAgLS1ncmF5LWJ0bi1jb2xvcjogcmdiKDIxMiwgMjEyLCAyMTIpO1xcbiAgICAtLWdyYXktYnRuLWhvdmVyOiByZ2IoMTk3LCAxOTYsIDE5Nik7XFxuICAgIC0tdGV4dC1pbnB1dC1jb3JyZWN0LW91dGxpbmU6ICMxY2RhMWY7XFxuICAgIC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZTogI2U1MDgwODtcXG59XFxuXFxuQGltcG9ydCB1cmwoJ3BvcHVwLmxlc3MnKTtcXG5AaW1wb3J0IHVybCgnYnV0dG9ucy5sZXNzJyk7XFxuXFxuYm9keSB7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuYSB7XFxuICAgIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuYTp2aXNpdGVkIHtcXG4gICAgY29sb3I6IHZhcigtLWxpbmstY29sb3IpO1xcbn1cXG5cXG4uc2NyZWVuIHtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnBsYXkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG4jZmxhZy1zdmcge1xcbiAgICBoZWlnaHQ6IDIwdnc7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxufVxcblxcbiNndWVzc1R5cGUtbXVsdGkge1xcbiAgICBjb2x1bW4tY291bnQ6IDI7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgbGVmdDogMDtcXG59XFxuXFxuI2Nsb3NlLWJ0biB7XFxuICAgIHdpZHRoOiA0M3B4O1xcbiAgICBoZWlnaHQ6IDQzcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBtYXJnaW46IDVweDtcXG4gICAgbWFyZ2luLXRvcDogMHB4O1xcbn1cXG5cXG4ub3B0aW9uIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGRpc3BsYXk6IGlubGluZTtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbiAgICBoZWlnaHQ6IDUwcHg7XFxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMzAwbXM7XFxuICAgIGJvcmRlcjogdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcikgMXB4IHNvbGlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1vcHRpb24tYmcpO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3B0aW9uLWhvdmVyLWJnKTtcXG4gICAgfVxcbn1cXG5cXG4jcHJvZ3Jlc3MtY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDg1cHgpO1xcbiAgICBoZWlnaHQ6IDE1cHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgbWFyZ2luLWlubGluZTogMjVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWJnKTtcXG59XFxuI3Byb2dyZXNzLWZpbGwge1xcbiAgICB3aWR0aDogMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWNvbG9yKTtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHRyYW5zaXRpb246IHdpZHRoIDIwMG1zO1xcbn1cXG51bCB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDYxMHB4KSB7XFxuICAgI2d1ZXNzVHlwZS1tdWx0aSB7XFxuICAgIGNvbHVtbi1jb3VudDogMTtcXG4gICB9XFxufVxcblxcbiNzdHJlYWstY29udGFpbmVyLCAjc3ViLXN0cmVhayB7XFxuICAgIGNvbG9yOiByZ2IoMjU1LCAxMjgsIDApO1xcbn1cXG4jc3ViLXF1aXotc2NvcmUge1xcbiAgICBjb2xvcjogcmdiKDEzLCAxMjgsIDE4OSk7XFxufVxcbi5jYXBpdGFsaXplIHtcXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxufVxcblxcbi8vIERpZmZpY3VsdHkgZGlzcGxheVxcbiNkaWZmaWN1bHR5LWNvbnRhaW5lciB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgICBwYWRkaW5nOiA2cHg7XFxufVxcblxcbi5jb3JuZXItaXRlbSB7XFxuICAgIG1hcmdpbjogNXB4O1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxufVxcblxcbiNnYW1lLWluZm8ge1xcbiAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbiAgICBib3R0b206IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICAgIC5jb3JuZXItaXRlbSgpXFxufVxcblxcbi5zcGFjZXIge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG4jdmlldy1mbGFnLWJ0biB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjg1KTtcXG59XFxuXFxuZmllbGRzZXQuc3Vic2V0IHtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbn1cXG5cXG4jdHlwaW5nLWlucHV0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIG91dGxpbmU6IHNvbGlkIDFweCB2YXIoLS1vcHRpb24tYm9yZGVyLWNvbG9yKTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbn1cXG4jdHlwaW5nLWlucHV0OmZvY3VzIHtcXG4gICAgb3V0bGluZTogdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcikgMnB4IHNvbGlkO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IG91dGxpbmUtY29sb3IgMzAwbXM7XFxufVxcbiN0eXBpbmctaW5wdXQuY29ycmVjdCB7XFxuICAgIG91dGxpbmU6IHZhcigtLXRleHQtaW5wdXQtY29ycmVjdC1vdXRsaW5lKSAycHggc29saWQ7XFxufVxcbiN0eXBpbmctaW5wdXQuaW5jb3JyZWN0IHtcXG4gICAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZSkgMnB4IHNvbGlkO1xcbn1cXG4jY29ycmVjdC10ZXh0IHtcXG4gICAgY29sb3I6IHZhcigtLXRleHQtaW5wdXQtaW5jb3JyZWN0LW91dGxpbmUpO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAudmFsdWUge1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG4gICAgfVxcbn1cIixcIi5wb3B1cC1iYWNrZHJvcCB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjUpO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbi5wb3B1cC1jb250YWluZXIge1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwOyBsZWZ0OiAwOyBib3R0b206IDA7IHJpZ2h0OiAwO1xcbiAgICB3aWR0aDogMzV2dztcXG4gICAgaGVpZ2h0OiAzMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xcbn1cXG5cXG5AeFNpemU6IDE4cHg7XFxuLnBvcHVwLWNsb3NlIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogQHhTaXplO1xcbiAgICBoZWlnaHQ6IEB4U2l6ZTtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICAgIG1hcmdpbjogNHB4O1xcbiAgICBwYWRkaW5nOiAwcHg7XFxuICAgIG1pbi13aWR0aDogMHB4O1xcbiAgICBmb250LXNpemU6IEB4U2l6ZTtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuQGhlYWRlci1oZWlnaHQ6IDIwcHg7XFxuLnBvcHVwLXRpdGxlIHtcXG4gICAgZm9udC1zaXplOiBAaGVhZGVyLWhlaWdodDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgcGFkZGluZy1yaWdodDogY2FsYyhAeFNpemUgKyA2cHgpO1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjY3Myk7XFxufVxcblxcbi5wb3B1cC1oZWFkZXIge1xcbiAgICBoZWlnaHQ6IEBoZWFkZXItaGVpZ2h0O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICAgIHotaW5kZXg6IDI7XFxufVxcblxcbi5wb3B1cC1jb250ZW50IHtcXG4gICAgcGFkZGluZy1pbmxpbmU6IDZweDtcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXG4gICAgaGVpZ2h0OiBjYWxjKGNhbGMoMTAwJSAtIEBoZWFkZXItaGVpZ2h0KSAtIDlweCk7XFxuICAgIG1hcmdpbi10b3A6IDlweDtcXG4gICAgei1pbmRleDogMTtcXG59XFxuXFxuLnBvcHVwLWNvbnRlbnQgPiB1bD4gbGk6Om1hcmtlciB7XFxuICAgIGNvbnRlbnQ6ICfimJ4gJztcXG59XFxuXFxuLnZpZXctZmxhZy1pbWcge1xcbiAgICB3aWR0aDogMTAwJTtcXG59XCIsXCJAYmx1ZUJnOiByZ2IoMTAwLCAxMDAsIDIzOSk7XFxuQGdyZWVuQmc6IHJnYig3LCAxODcsIDcpO1xcbkByZWRCZzogcmdiKDIzMCwgOCwgOCk7XFxuQHllbGxvd0JnOiByZ2IoMjQ1LCAyMzUsIDU2KTtcXG5AcHVycGxlQmc6IHJnYigxNjgsIDI4LCAyMTUpO1xcblxcbi5idG4tYmx1ZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IEBibHVlQmc7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgJjpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNzgsIDc4LCAyMjApO1xcbiAgICB9XFxufVxcblxcbi5idG4tZ3JlZW4ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAZ3JlZW5CZztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICAmOmhvdmVyIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRlc2F0dXJhdGUoQGdyZWVuQmcsIDIwJSlcXG4gICAgfVxcbn1cXG5cXG4udGhpbiB7XFxuICAgIHBhZGRpbmc6IDRweDtcXG4gICAgcGFkZGluZy1pbmxpbmU6IDdweDtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4uYnRuLXJlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IEByZWRCZztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICAmOmhvdmVyIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRlc2F0dXJhdGUoQHJlZEJnLCAyMCUpO1xcbiAgICB9XFxufVxcblxcbi5idG4teWVsbG93IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHllbGxvd0JnO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNCwgMjI1LCA1Nik7XFxuICAgIH1cXG59XFxuXFxuLmJ0bi1ncmF5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheS1idG4tY29sb3IpO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheS1idG4taG92ZXIpO1xcbiAgICB9XFxufVxcblxcbi5idG4tcHVycGxlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHB1cnBsZUJnO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGVzYXR1cmF0ZShAcHVycGxlQmcsIDIwJSk7XFxuICAgIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKlxuKiBOb3RpZmxpeCBDb25maXJtIEFJTyAoaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8pXG4qIERlc2NyaXB0aW9uOiBUaGlzIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBhdXRvbWF0aWNhbGx5IHRoYXQgdXNpbmcgXCJub3RpZmxpeC5qc1wiLCBhbmQgXCJub3RpZmxpeC5jc3NcIiBmaWxlcy5cbiogVmVyc2lvbjogMy4yLjVcbiogQXV0aG9yOiBGdXJrYW4gTVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9mdXJjYW4pXG4qIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKVxuKi9cblxuLyogZ2xvYmFsIGRlZmluZSAqL1xuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KHJvb3QpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnkocm9vdCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5Ob3RpZmxpeCA9IGZhY3Rvcnkocm9vdCk7XG4gIH1cbn0pKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiAod2luZG93KSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBiZWdpblxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBlbmRcblxuICAvLyBDT01NT046IFZhcmlhYmxlczogYmVnaW5cbiAgdmFyIG5vdGlmbGl4TmFtZXNwYWNlID0gJ05vdGlmbGl4JztcclxuICB2YXIgbm90aWZsaXhDb25zb2xlRG9jcyA9ICdcXG5cXG5WaXNpdCBkb2N1bWVudGF0aW9uIHBhZ2UgdG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8vZG9jdW1lbnRhdGlvbic7XHJcbiAgdmFyIGRlZmF1bHRGb250RmFtaWx5ID0gJy1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWYnO1xuICAvLyBDT01NT046IFZhcmlhYmxlczogZW5kXG5cbiAgLy8gQ09ORklSTTogRGVmYXVsdCBTZXR0aW5nczogYmVnaW5cbiAgdmFyIHR5cGVzQ29uZmlybSA9IHtcclxuICAgIFNob3c6ICdTaG93JyxcclxuICAgIEFzazogJ0FzaycsXHJcbiAgICBQcm9tcHQ6ICdQcm9tcHQnLFxyXG4gIH07XHJcbiAgdmFyIG5ld0NvbmZpcm1TZXR0aW5ncztcclxuICB2YXIgY29uZmlybVNldHRpbmdzID0ge1xyXG4gICAgSUQ6ICdOb3RpZmxpeENvbmZpcm1XcmFwJywgLy8gY2FuIG5vdCBjdXN0b21pemFibGVcclxuICAgIGNsYXNzTmFtZTogJ25vdGlmbGl4LWNvbmZpcm0nLFxyXG4gICAgd2lkdGg6ICczMDBweCcsXHJcbiAgICB6aW5kZXg6IDQwMDMsXHJcbiAgICBwb3NpdGlvbjogJ2NlbnRlcicsIC8vICdjZW50ZXInIC0gJ2NlbnRlci10b3AnIC0gJ2NlbnRlci1ib3R0b20nIC0gJ3JpZ2h0LXRvcCcgLSAncmlnaHQtY2VudGVyJyAtICdyaWdodC1ib3R0b20nIC0gJ2xlZnQtdG9wJyAtICdsZWZ0LWNlbnRlcicgLSAnbGVmdC1ib3R0b20nXHJcbiAgICBkaXN0YW5jZTogJzEwcHgnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2Y4ZjhmOCcsXHJcbiAgICBib3JkZXJSYWRpdXM6ICcyNXB4JyxcclxuICAgIGJhY2tPdmVybGF5OiB0cnVlLFxyXG4gICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMCwwLDAsMC41KScsXHJcbiAgICBydGw6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBjc3NBbmltYXRpb246IHRydWUsXHJcbiAgICBjc3NBbmltYXRpb25EdXJhdGlvbjogMzAwLFxyXG4gICAgY3NzQW5pbWF0aW9uU3R5bGU6ICdmYWRlJywgLy8gJ3pvb20nIC0gJ2ZhZGUnXHJcbiAgICBwbGFpblRleHQ6IHRydWUsXHJcblxuICAgIHRpdGxlQ29sb3I6ICcjMzJjNjgyJyxcclxuICAgIHRpdGxlRm9udFNpemU6ICcxNnB4JyxcclxuICAgIHRpdGxlTWF4TGVuZ3RoOiAzNCxcclxuXG4gICAgbWVzc2FnZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICBtZXNzYWdlRm9udFNpemU6ICcxNHB4JyxcclxuICAgIG1lc3NhZ2VNYXhMZW5ndGg6IDExMCxcclxuXG4gICAgYnV0dG9uc0ZvbnRTaXplOiAnMTVweCcsXHJcbiAgICBidXR0b25zTWF4TGVuZ3RoOiAzNCxcclxuICAgIG9rQnV0dG9uQ29sb3I6ICcjZjhmOGY4JyxcclxuICAgIG9rQnV0dG9uQmFja2dyb3VuZDogJyMzMmM2ODInLFxyXG4gICAgY2FuY2VsQnV0dG9uQ29sb3I6ICcjZjhmOGY4JyxcclxuICAgIGNhbmNlbEJ1dHRvbkJhY2tncm91bmQ6ICcjYTlhOWE5JyxcclxuICB9O1xuICAvLyBDT05GSVJNOiBEZWZhdWx0IFNldHRpbmdzOiBlbmRcblxuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGJlZ2luXG4gIHZhciBjb21tb25Db25zb2xlRXJyb3IgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJyVjICcgKyBub3RpZmxpeE5hbWVzcGFjZSArICcgRXJyb3IgJywgJ3BhZGRpbmc6MnB4O2JvcmRlci1yYWRpdXM6MjBweDtjb2xvcjojZmZmO2JhY2tncm91bmQ6I2ZmNTU0OScsICdcXG4nICsgbWVzc2FnZSArIG5vdGlmbGl4Q29uc29sZURvY3MpO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ29uc29sZSBFcnJvcjogZW5kXG5cbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGJlZ2luXG4gIHZhciBjb21tb25DaGVja0hlYWRPckJvZHkgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgaWYgKCFlbGVtZW50KSB7IGVsZW1lbnQgPSAnaGVhZCc7IH1cclxuICAgIGlmICh3aW5kb3cuZG9jdW1lbnRbZWxlbWVudF0gPT09IG51bGwpIHtcclxuICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQsIGJ1dCB5b3UgY2FsbGVkIGl0IGJlZm9yZSB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQgaGFzIGJlZW4gY3JlYXRlZC4nKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGVuZFxuXG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGNvbW1vblNldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoZ2V0SW50ZXJuYWxDU1NDb2Rlcywgc3R5bGVFbGVtZW50SWQpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBoZWFkXHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnaGVhZCcpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpbnRlcm5hbCBjc3NcclxuICAgIGlmIChnZXRJbnRlcm5hbENTU0NvZGVzKCkgIT09IG51bGwgJiYgIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdHlsZUVsZW1lbnRJZCkpIHtcclxuICAgICAgdmFyIGludGVybmFsQ1NTID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgIGludGVybmFsQ1NTLmlkID0gc3R5bGVFbGVtZW50SWQ7XHJcbiAgICAgIGludGVybmFsQ1NTLmlubmVySFRNTCA9IGdldEludGVybmFsQ1NTQ29kZXMoKTtcclxuICAgICAgd2luZG93LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoaW50ZXJuYWxDU1MpO1xyXG4gICAgfVxyXG4gIH07XG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09NTU9OOiBFeHRlbmQgT3B0aW9uczogYmVnaW5cbiAgdmFyIGNvbW1vbkV4dGVuZE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyB2YXJpYWJsZXNcclxuICAgIHZhciBleHRlbmRlZCA9IHt9O1xyXG4gICAgdmFyIGRlZXAgPSBmYWxzZTtcclxuICAgIHZhciBpID0gMDtcclxuICAgIC8vIGNoZWNrIGlmIGEgZGVlcCBtZXJnZVxyXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHNbMF0pID09PSAnW29iamVjdCBCb29sZWFuXScpIHtcclxuICAgICAgZGVlcCA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgaSsrO1xyXG4gICAgfVxyXG4gICAgLy8gbWVyZ2UgdGhlIG9iamVjdCBpbnRvIHRoZSBleHRlbmRlZCBvYmplY3RcclxuICAgIHZhciBtZXJnZSA9IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIHtcclxuICAgICAgICAgIC8vIGlmIHByb3BlcnR5IGlzIGFuIG9iamVjdCwgbWVyZ2UgcHJvcGVydGllc1xyXG4gICAgICAgICAgaWYgKGRlZXAgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9ialtwcm9wXSkgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gY29tbW9uRXh0ZW5kT3B0aW9ucyhleHRlbmRlZFtwcm9wXSwgb2JqW3Byb3BdKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gb2JqW3Byb3BdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIG9iamVjdCBhbmQgY29uZHVjdCBhIG1lcmdlXHJcbiAgICBmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBtZXJnZShhcmd1bWVudHNbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGV4dGVuZGVkO1xyXG4gIH07XG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGVuZFxuXG4gIC8vIENPTU1PTjogR2V0IFBsYWludGV4dDogYmVnaW5cbiAgdmFyIGNvbW1vbkdldFBsYWludGV4dCA9IGZ1bmN0aW9uIChodG1sKSB7XHJcbiAgICB2YXIgaHRtbFBvb2wgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBodG1sUG9vbC5pbm5lckhUTUwgPSBodG1sO1xyXG4gICAgcmV0dXJuIGh0bWxQb29sLnRleHRDb250ZW50IHx8IGh0bWxQb29sLmlubmVyVGV4dCB8fCAnJztcclxuICB9O1xuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGVuZFxuXG4gIC8vIENPTkZJUk06IEdldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGJlZ2luXG4gIHZhciBjb25maXJtR2V0SW50ZXJuYWxDU1NDb2RlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBjb25maXJtQ1NTID0gJ1tpZF49Tm90aWZsaXhDb25maXJtV3JhcF17cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo0MDAzO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO3BhZGRpbmc6MTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtmb250LWZhbWlseTpcIlF1aWNrc2FuZFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLHNhbnMtc2VyaWY7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWNlbnRlci10b3B7LXdlYmtpdC1ib3gtcGFjazpzdGFydDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1jZW50ZXItYm90dG9tey13ZWJraXQtYm94LXBhY2s6ZW5kOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtZW5kOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWxlZnQtdG9wey13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tbGVmdC1jZW50ZXJ7LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1sZWZ0LWJvdHRvbXstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1wYWNrOmVuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWVuZDstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1yaWdodC10b3B7LXdlYmtpdC1ib3gtYWxpZ246ZW5kOy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1lbmQ7LW1zLWZsZXgtYWxpZ246ZW5kO2FsaWduLWl0ZW1zOmZsZXgtZW5kOy13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tcmlnaHQtY2VudGVyey13ZWJraXQtYm94LWFsaWduOmVuZDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtZW5kOy1tcy1mbGV4LWFsaWduOmVuZDthbGlnbi1pdGVtczpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLXJpZ2h0LWJvdHRvbXstd2Via2l0LWJveC1hbGlnbjplbmQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LWVuZDstbXMtZmxleC1hbGlnbjplbmQ7YWxpZ24taXRlbXM6ZmxleC1lbmQ7LXdlYmtpdC1ib3gtcGFjazplbmQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0gKnstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl17d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC41KTtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjB9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1vdmVybGF5LWFuaW1hdGlvbiAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJde3dpZHRoOjMwMHB4O21heC13aWR0aDoxMDAlO21heC1oZWlnaHQ6OTZ2aDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG87Ym9yZGVyLXJhZGl1czoyNXB4O3BhZGRpbmc6MTBweDttYXJnaW46MDstd2Via2l0LWZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwwLDAsMC4wNSkpO2ZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwgMCwgMCwgLjA1KSk7YmFja2dyb3VuZDojZjhmOGY4O2NvbG9yOiMxZTFlMWU7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10aHVtYntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5oNXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjA7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtjb2xvcjojMzJjNjgyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDo1MDA7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXZ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7bWFyZ2luOjE1cHggMCAyMHB4O3BhZGRpbmc6MCAxMHB4O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoxLjQ7Zm9udC13ZWlnaHQ6bm9ybWFsO2NvbG9yOmluaGVyaXQ7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTttYXJnaW46MTVweCAwIDA7cGFkZGluZzowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2PmlucHV0e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtoZWlnaHQ6NDBweDttYXJnaW46MDtwYWRkaW5nOjAgMTVweDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6MjVweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MTstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RleHQtYWxpZ246bGVmdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1oZWFkXCJdPmRpdj5kaXY+aW5wdXR7dGV4dC1hbGlnbjpyaWdodH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWhlYWRcIl0+ZGl2PmRpdj5pbnB1dDpob3Zlcntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMSl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1oZWFkXCJdPmRpdj5kaXY+aW5wdXQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjMpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2PmlucHV0Lm54LXZhbGlkYXRpb24tZmFpbHVyZXtib3JkZXItY29sb3I6I2ZmNTU0OX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWhlYWRcIl0+ZGl2PmRpdj5pbnB1dC5ueC12YWxpZGF0aW9uLXN1Y2Nlc3N7Ym9yZGVyLWNvbG9yOiMzMmM2ODJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtib3JkZXItcmFkaXVzOmluaGVyaXQ7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YXtjdXJzb3I6cG9pbnRlcjtmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O2Zsb2F0OmxlZnQ7d2lkdGg6NDglO3BhZGRpbmc6OXB4IDVweDtib3JkZXItcmFkaXVzOmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoxLjQ7Y29sb3I6I2Y4ZjhmODt0ZXh0LWFsaWduOmluaGVyaXR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmEubngtY29uZmlybS1idXR0b24tb2t7bWFyZ2luOjAgMiUgMCAwO2JhY2tncm91bmQ6IzMyYzY4Mn1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YS5ueC1jb25maXJtLWJ1dHRvbi1jYW5jZWx7bWFyZ2luOjAgMCAwIDIlO2JhY2tncm91bmQ6I2E5YTlhOX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YS5ueC1mdWxse21hcmdpbjowO3dpZHRoOjEwMCV9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmE6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpO2JveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1ydGwtb24+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItYnV0dG9uc1wiXSxbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmF7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRlPmRpdltjbGFzcyo9XCItY29udGVudFwiXXstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl17LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi16b29tezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNSk7dHJhbnNmb3JtOnNjYWxlKC41KX01MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZS5ueC1yZW1vdmU+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJde29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb20ubngtcmVtb3ZlPmRpdltjbGFzcyo9XCItY29udGVudFwiXXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmV7MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7b3BhY2l0eTouNTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19JztcclxuICAgIHJldHVybiBjb25maXJtQ1NTIHx8IG51bGw7XHJcbiAgfTtcbiAgLy8gQ09ORklSTTogR2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09ORklSTTogQ3JlYXRlOiBiZWdpblxuICB2YXIgY29uZmlybUNyZWF0ZSA9IGZ1bmN0aW9uIChjb25maXJtVHlwZSwgdGl0bGUsIG1lc3NhZ2VPclF1ZXN0aW9uLCBhbnN3ZXIsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBib2R5XHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnYm9keScpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpZiBub3QgaW5pdGlhbGl6ZWQgcHJldGVuZCBsaWtlIGluaXRcclxuICAgIGlmICghbmV3Q29uZmlybVNldHRpbmdzKSB7XHJcbiAgICAgIE5vdGlmbGl4LkNvbmZpcm0uaW5pdCh7fSk7XHJcbiAgICB9XHJcblxuICAgIC8vIGNyZWF0ZSBhIGJhY2t1cCBmb3IgbmV3IHNldHRpbmdzXHJcbiAgICB2YXIgbmV3Q29uZmlybVNldHRpbmdzQmFja3VwID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdDb25maXJtU2V0dGluZ3MsIHt9KTtcclxuXG4gICAgLy8gY2hlY2sgdGhlIFwib3B0aW9uc1wiOiBiZWdpblxyXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xyXG4gICAgICAvLyBleHRlbmQgbmV3IHNldHRpbmdzIHdpdGggdGhlIG5ldyBvcHRpb25zXHJcbiAgICAgIG5ld0NvbmZpcm1TZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3Q29uZmlybVNldHRpbmdzLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8vIGNoZWNrIHRoZSBcIm9wdGlvbnNcIjogZW5kXHJcblxuICAgIC8vIGNoZWNrIHRoZSBhcmd1bWVudHM6IGJlZ2luXHJcbiAgICBpZiAodHlwZW9mIHRpdGxlICE9PSAnc3RyaW5nJykgeyB0aXRsZSA9ICdOb3RpZmxpeCBDb25maXJtJzsgfVxyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlT3JRdWVzdGlvbiAhPT0gJ3N0cmluZycpIHsgbWVzc2FnZU9yUXVlc3Rpb24gPSAnRG8geW91IGFncmVlIHdpdGggbWU/JzsgfVxyXG4gICAgaWYgKHR5cGVvZiBva0J1dHRvblRleHQgIT09ICdzdHJpbmcnKSB7IG9rQnV0dG9uVGV4dCA9ICdZZXMnOyB9XHJcbiAgICBpZiAodHlwZW9mIGNhbmNlbEJ1dHRvblRleHQgIT09ICdzdHJpbmcnKSB7IGNhbmNlbEJ1dHRvblRleHQgPSAnTm8nOyB9XHJcbiAgICBpZiAodHlwZW9mIG9rQnV0dG9uQ2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHsgb2tCdXR0b25DYWxsYmFjayA9IHVuZGVmaW5lZDsgfVxyXG4gICAgaWYgKHR5cGVvZiBjYW5jZWxCdXR0b25DYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykgeyBjYW5jZWxCdXR0b25DYWxsYmFjayA9IHVuZGVmaW5lZDsgfVxyXG4gICAgLy8gY2hlY2sgdGhlIGFyZ3VtZW50czogZW5kXHJcblxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyB0cnVlID0+IEhUTUwgdGFncyBub3QgYWxsb3dlZDogYmVnaW5cclxuICAgIGlmIChuZXdDb25maXJtU2V0dGluZ3MucGxhaW5UZXh0KSB7XHJcbiAgICAgIHRpdGxlID0gY29tbW9uR2V0UGxhaW50ZXh0KHRpdGxlKTtcclxuICAgICAgbWVzc2FnZU9yUXVlc3Rpb24gPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZU9yUXVlc3Rpb24pO1xyXG4gICAgICBva0J1dHRvblRleHQgPSBjb21tb25HZXRQbGFpbnRleHQob2tCdXR0b25UZXh0KTtcclxuICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9IGNvbW1vbkdldFBsYWludGV4dChjYW5jZWxCdXR0b25UZXh0KTtcclxuICAgIH1cclxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyB0cnVlID0+IEhUTUwgdGFncyBub3QgYWxsb3dlZDogZW5kXHJcblxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyBmYWxzZSBidXQgdGhlIGNvbnRlbnRzIGxlbmd0aCBtb3JlIHRoYW4gKioqTWF4TGVuZ3RoID0+IFBvc3NpYmxlIEhUTUwgdGFncyBlcnJvcjogYmVnaW5cclxuICAgIGlmICghbmV3Q29uZmlybVNldHRpbmdzLnBsYWluVGV4dCkge1xyXG4gICAgICBpZiAodGl0bGUubGVuZ3RoID4gbmV3Q29uZmlybVNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlT3JRdWVzdGlvbiA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgdGl0bGUgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFwidGl0bGVNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBva0J1dHRvblRleHQgPSAnT2theSc7XHJcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9ICcuLi4nO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChtZXNzYWdlT3JRdWVzdGlvbi5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MubWVzc2FnZU1heExlbmd0aCkge1xyXG4gICAgICAgIHRpdGxlID0gJ1Bvc3NpYmxlIEhUTUwgVGFncyBFcnJvcic7XHJcbiAgICAgICAgbWVzc2FnZU9yUXVlc3Rpb24gPSAnVGhlIFwicGxhaW5UZXh0XCIgb3B0aW9uIGlzIFwiZmFsc2VcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFwibWVzc2FnZU1heExlbmd0aFwiIG9wdGlvbi4nO1xyXG4gICAgICAgIG9rQnV0dG9uVGV4dCA9ICdPa2F5JztcclxuICAgICAgICBjYW5jZWxCdXR0b25UZXh0ID0gJy4uLic7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKChva0J1dHRvblRleHQubGVuZ3RoIHx8IGNhbmNlbEJ1dHRvblRleHQubGVuZ3RoKSA+IG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlT3JRdWVzdGlvbiA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgYnV0dG9ucyBjb250ZW50IGxlbmd0aCBpcyBtb3JlIHRoYW4gXCJidXR0b25zTWF4TGVuZ3RoXCIgb3B0aW9uLic7XHJcbiAgICAgICAgb2tCdXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICAgIGNhbmNlbEJ1dHRvblRleHQgPSAnLi4uJztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gaWYgcGxhaW5UZXh0IGlzIGZhbHNlIGJ1dCB0aGUgY29udGVudHMgbGVuZ3RoIG1vcmUgdGhhbiAqKipNYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBlbmRcclxuXG4gICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgIGlmICh0aXRsZS5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVNYXhMZW5ndGgpIHtcclxuICAgICAgdGl0bGUgPSB0aXRsZS5zdWJzdHJpbmcoMCwgbmV3Q29uZmlybVNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKG1lc3NhZ2VPclF1ZXN0aW9uLmxlbmd0aCA+IG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSB7XHJcbiAgICAgIG1lc3NhZ2VPclF1ZXN0aW9uID0gbWVzc2FnZU9yUXVlc3Rpb24uc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKG9rQnV0dG9uVGV4dC5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MuYnV0dG9uc01heExlbmd0aCkge1xyXG4gICAgICBva0J1dHRvblRleHQgPSBva0J1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKGNhbmNlbEJ1dHRvblRleHQubGVuZ3RoID4gbmV3Q29uZmlybVNldHRpbmdzLmJ1dHRvbnNNYXhMZW5ndGgpIHtcclxuICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9IGNhbmNlbEJ1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgLy8gbWF4IGxlbmd0aDogZW5kXHJcblxuICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBiZWdpblxyXG4gICAgaWYgKCFuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uKSB7XHJcbiAgICAgIG5ld0NvbmZpcm1TZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbiA9IDA7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBjc3NBbmltYWlvbiBpcyBmYWxzZSA9PiBkdXJhdGlvbjogZW5kXHJcblxuICAgIC8vIGNvbmZpcm0gd3JhcDogYmVnaW5cclxuICAgIHZhciBudGZseENvbmZpcm1XcmFwID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5pZCA9IGNvbmZpcm1TZXR0aW5ncy5JRDtcclxuICAgIG50Zmx4Q29uZmlybVdyYXAuY2xhc3NOYW1lID0gbmV3Q29uZmlybVNldHRpbmdzLmNsYXNzTmFtZSArIChuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbiBueC0nICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvblN0eWxlIDogJycpO1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS56SW5kZXggPSBuZXdDb25maXJtU2V0dGluZ3MuemluZGV4O1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS5wYWRkaW5nID0gbmV3Q29uZmlybVNldHRpbmdzLmRpc3RhbmNlO1xyXG5cbiAgICAvLyBydGw6IGJlZ2luXHJcbiAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzLnJ0bCkge1xyXG4gICAgICBudGZseENvbmZpcm1XcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICBudGZseENvbmZpcm1XcmFwLmNsYXNzTGlzdC5hZGQoJ254LXJ0bC1vbicpO1xyXG4gICAgfVxyXG4gICAgLy8gcnRsOiBlbmRcclxuXG4gICAgLy8gcG9zaXRpb246IGJlZ2luXHJcbiAgICB2YXIgY29uZmlybVBvc2l0aW9uID0gdHlwZW9mIG5ld0NvbmZpcm1TZXR0aW5ncy5wb3NpdGlvbiA9PT0gJ3N0cmluZycgPyBuZXdDb25maXJtU2V0dGluZ3MucG9zaXRpb24udHJpbSgpIDogJ2NlbnRlcic7XHJcbiAgICBudGZseENvbmZpcm1XcmFwLmNsYXNzTGlzdC5hZGQoJ254LXBvc2l0aW9uLScgKyBjb25maXJtUG9zaXRpb24pO1xyXG4gICAgLy8gcG9zaXRpb246IGVuZFxyXG5cbiAgICAvLyBmb250LWZhbWlseVxyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS5mb250RmFtaWx5ID0gJ1wiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5mb250RmFtaWx5ICsgJ1wiLCAnICsgZGVmYXVsdEZvbnRGYW1pbHk7XHJcblxuICAgIC8vIGlmIGJhY2tncm91bmQgb3ZlcmxheSBpcyB0cnVlOiBiZWdpblxyXG4gICAgdmFyIGNvbmZpcm1PdmVybGF5ID0gJyc7XHJcbiAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzLmJhY2tPdmVybGF5KSB7XHJcbiAgICAgIGNvbmZpcm1PdmVybGF5ID0gJzxkaXYgY2xhc3M9XCInICsgbmV3Q29uZmlybVNldHRpbmdzLmNsYXNzTmFtZSArICctb3ZlcmxheScgKyAobmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbiA/ICcgbngtd2l0aC1hbmltYXRpb24nIDogJycpICsgJ1wiIHN0eWxlPVwiYmFja2dyb3VuZDonICsgbmV3Q29uZmlybVNldHRpbmdzLmJhY2tPdmVybGF5Q29sb3IgKyAnO2FuaW1hdGlvbi1kdXJhdGlvbjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBiYWNrZ3JvdW5kIG92ZXJsYXkgaXMgdHJ1ZTogZW5kXHJcblxuICAgIC8vIGlmIGhhdmUgYSBjYWxsYmFjayA9PiBhZGQgY2FuY2VsIGJ1dHRvbjogYmVnaW5cclxuICAgIHZhciBjYW5jZWxCdXR0b25IVE1MID0gJyc7XHJcbiAgICBpZiAodHlwZW9mIG9rQnV0dG9uQ2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgY2FuY2VsQnV0dG9uSFRNTCA9ICc8YSBpZD1cIk5YQ29uZmlybUJ1dHRvbkNhbmNlbFwiIGNsYXNzPVwibngtY29uZmlybS1idXR0b24tY2FuY2VsXCIgc3R5bGU9XCJjb2xvcjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNhbmNlbEJ1dHRvbkNvbG9yICsgJztiYWNrZ3JvdW5kOicgKyBuZXdDb25maXJtU2V0dGluZ3MuY2FuY2VsQnV0dG9uQmFja2dyb3VuZCArICc7Zm9udC1zaXplOicgKyBuZXdDb25maXJtU2V0dGluZ3MuYnV0dG9uc0ZvbnRTaXplICsgJztcIj4nICsgY2FuY2VsQnV0dG9uVGV4dCArICc8L2E+JztcclxuICAgIH1cclxuICAgIC8vIGlmIGhhdmUgYSBjYWxsYmFjayA9PiBhZGQgY2FuY2VsIGJ1dHRvbjogZW5kXHJcblxuICAgIC8vIGNoZWNrIHRoZSB2YWxpZGF0aW9uIG1vZHVsZTogYmVnaW5cclxuICAgIHZhciBzZXRWYWxpZGF0aW9uSW5wdXQgPSAnJztcclxuICAgIHZhciB0aGVFeHBlY3RlZEFuc3dlciA9IG51bGw7XHJcbiAgICB2YXIgdGhlQ2xpZW50QW5zd2VyID0gdW5kZWZpbmVkO1xyXG4gICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrIHx8IGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uUHJvbXB0KSB7XHJcbiAgICAgIHRoZUV4cGVjdGVkQW5zd2VyID0gYW5zd2VyIHx8ICcnO1xyXG4gICAgICB2YXIgaW5wdXRNYXhMZW5ndGggPSAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Bc2spID8gTWF0aC5jZWlsKHRoZUV4cGVjdGVkQW5zd2VyLmxlbmd0aCAqIDEuNSkgOiAodGhlRXhwZWN0ZWRBbnN3ZXIubGVuZ3RoID4gMjAwID8gTWF0aC5jZWlsKHRoZUV4cGVjdGVkQW5zd2VyLmxlbmd0aCAqIDEuNSkgOiAyNTApO1xyXG4gICAgICB2YXIgaW5wdXREZWZhdWx0VmFsdWVBdHRyID0gY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Qcm9tcHQgPyAoJ3ZhbHVlPVwiJyArIHRoZUV4cGVjdGVkQW5zd2VyICsgJ1wiJykgOiAnJztcclxuICAgICAgc2V0VmFsaWRhdGlvbklucHV0ID0gJzxkaXY+PGlucHV0IGlkPVwiTlhDb25maXJtVmFsaWRhdGlvbklucHV0XCIgdHlwZT1cInRleHRcIiAnICsgaW5wdXREZWZhdWx0VmFsdWVBdHRyICsgJyBtYXhsZW5ndGg9XCInICsgaW5wdXRNYXhMZW5ndGggKyAnXCIgc3R5bGU9XCJmb250LXNpemU6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlRm9udFNpemUgKyAnO2JvcmRlci1yYWRpdXM6ICcgKyBuZXdDb25maXJtU2V0dGluZ3MuYm9yZGVyUmFkaXVzICsgJztcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIiBhdXRvY2FwaXRhbGl6ZT1cIm5vbmVcIiAvPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBjaGVjayB0aGUgdmFsaWRhdGlvbiBtb2R1bGU6IGVuZFxyXG5cbiAgICAvLyBjb25maXJtIHdyYXAgY29udGVudDogYmVnaW5cclxuICAgIG50Zmx4Q29uZmlybVdyYXAuaW5uZXJIVE1MID0gY29uZmlybU92ZXJsYXkgK1xyXG4gICAgICAnPGRpdiBjbGFzcz1cIicgKyBuZXdDb25maXJtU2V0dGluZ3MuY2xhc3NOYW1lICsgJy1jb250ZW50XCIgc3R5bGU9XCJ3aWR0aDonICsgbmV3Q29uZmlybVNldHRpbmdzLndpZHRoICsgJzsgYmFja2dyb3VuZDonICsgbmV3Q29uZmlybVNldHRpbmdzLmJhY2tncm91bmRDb2xvciArICc7IGFuaW1hdGlvbi1kdXJhdGlvbjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zOyBib3JkZXItcmFkaXVzOiAnICsgbmV3Q29uZmlybVNldHRpbmdzLmJvcmRlclJhZGl1cyArICc7XCI+JyArXHJcbiAgICAgICc8ZGl2IGNsYXNzPVwiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5jbGFzc05hbWUgKyAnLWhlYWRcIj4nICtcclxuICAgICAgJzxoNSBzdHlsZT1cImNvbG9yOicgKyBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVDb2xvciArICc7Zm9udC1zaXplOicgKyBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVGb250U2l6ZSArICc7XCI+JyArIHRpdGxlICsgJzwvaDU+JyArXHJcbiAgICAgICc8ZGl2IHN0eWxlPVwiY29sb3I6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlQ29sb3IgKyAnO2ZvbnQtc2l6ZTonICsgbmV3Q29uZmlybVNldHRpbmdzLm1lc3NhZ2VGb250U2l6ZSArICc7XCI+JyArIG1lc3NhZ2VPclF1ZXN0aW9uICsgc2V0VmFsaWRhdGlvbklucHV0ICsgJzwvZGl2PicgK1xyXG4gICAgICAnPC9kaXY+JyArXHJcbiAgICAgICc8ZGl2IGNsYXNzPVwiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5jbGFzc05hbWUgKyAnLWJ1dHRvbnNcIj4nICtcclxuICAgICAgJzxhIGlkPVwiTlhDb25maXJtQnV0dG9uT2tcIiBjbGFzcz1cIm54LWNvbmZpcm0tYnV0dG9uLW9rJyArICh0eXBlb2Ygb2tCdXR0b25DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJyA/ICcnIDogJyBueC1mdWxsJykgKyAnXCIgc3R5bGU9XCJjb2xvcjonICsgbmV3Q29uZmlybVNldHRpbmdzLm9rQnV0dG9uQ29sb3IgKyAnO2JhY2tncm91bmQ6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5va0J1dHRvbkJhY2tncm91bmQgKyAnO2ZvbnQtc2l6ZTonICsgbmV3Q29uZmlybVNldHRpbmdzLmJ1dHRvbnNGb250U2l6ZSArICc7XCI+JyArIG9rQnV0dG9uVGV4dCArICc8L2E+JyArXHJcbiAgICAgIGNhbmNlbEJ1dHRvbkhUTUwgK1xyXG4gICAgICAnPC9kaXY+JyArXHJcbiAgICAgICc8L2Rpdj4nO1xyXG4gICAgLy8gY29uZmlybSB3cmFwIGNvbnRlbnQ6IGVuZFxyXG4gICAgLy8gY29uZmlybSB3cmFwOiBlbmRcclxuXG4gICAgLy8gaWYgdGhlcmUgaXMgbm8gY29uZmlybSBib3g6IGJlZ2luXHJcbiAgICBpZiAoIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseENvbmZpcm1XcmFwLmlkKSkge1xyXG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChudGZseENvbmZpcm1XcmFwKTtcclxuXG4gICAgICAvLyBidXR0b25zICYmIGlucHV0IGxpc3RlbmVyOiBiZWdpblxyXG4gICAgICB2YXIgY29uZmlybUNsb3NlV3JhcCA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseENvbmZpcm1XcmFwLmlkKTtcclxuICAgICAgdmFyIG9rQnV0dG9uID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdOWENvbmZpcm1CdXR0b25PaycpO1xyXG5cbiAgICAgIC8vIHZhbGlkYXRpb24gaW5wdXQgbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgIHZhciB2YWxpZGF0aW9uSW5wdXQgPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ05YQ29uZmlybVZhbGlkYXRpb25JbnB1dCcpO1xyXG4gICAgICBpZiAodmFsaWRhdGlvbklucHV0KSB7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LmZvY3VzKCk7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LnNldFNlbGVjdGlvblJhbmdlKDAsICh2YWxpZGF0aW9uSW5wdXQudmFsdWUgfHwgJycpLmxlbmd0aCk7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICB2YXIgdGhpc1ZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Bc2spICYmXHJcbiAgICAgICAgICAgICh0aGlzVmFsdWUgIT09IHRoZUV4cGVjdGVkQW5zd2VyKVxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5jbGFzc0xpc3QuYWRkKCdueC12YWxpZGF0aW9uLWZhaWx1cmUnKTtcclxuICAgICAgICAgICAgdmFsaWRhdGlvbklucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ254LXZhbGlkYXRpb24tc3VjY2VzcycpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrKSB7XHJcbiAgICAgICAgICAgICAgdmFsaWRhdGlvbklucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ254LXZhbGlkYXRpb24tZmFpbHVyZScpO1xyXG4gICAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5jbGFzc0xpc3QuYWRkKCdueC12YWxpZGF0aW9uLXN1Y2Nlc3MnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgaXNFbnRlciA9IChldmVudC5rZXkgfHwgJycpLnRvTG9jYWxlTG93ZXJDYXNlKCdlbicpID09PSAnZW50ZXInIHx8IGV2ZW50LmtleUNvZGUgPT09IDEzO1xyXG4gICAgICAgICAgICBpZiAoaXNFbnRlcikge1xyXG4gICAgICAgICAgICAgIG9rQnV0dG9uLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjbGljaycpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIHZhbGlkYXRpb24gaW5wdXQgbGlzdGVuZXI6IGVuZFxyXG5cbiAgICAgIC8vIG9rIGJ1dHRvbiBsaXN0ZW5lcjogYmVnaW5cclxuICAgICAgb2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAvLyBjaGVjayB0aGUgYW5zd2VyIGlmIHRoZSB0eXBlIGlzIFwiQXNrXCI6IGJlZ2luXHJcbiAgICAgICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrICYmIHRoZUV4cGVjdGVkQW5zd2VyICYmIHZhbGlkYXRpb25JbnB1dCkge1xyXG4gICAgICAgICAgdmFyIGlucHV0VmFsdWUgPSAodmFsaWRhdGlvbklucHV0LnZhbHVlIHx8ICcnKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgaWYgKGlucHV0VmFsdWUgIT09IHRoZUV4cGVjdGVkQW5zd2VyKSB7XHJcbiAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5mb2N1cygpO1xyXG4gICAgICAgICAgICB2YWxpZGF0aW9uSW5wdXQuY2xhc3NMaXN0LmFkZCgnbngtdmFsaWRhdGlvbi1mYWlsdXJlJyk7XHJcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBldmVudC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YWxpZGF0aW9uSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnbngtdmFsaWRhdGlvbi1mYWlsdXJlJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNoZWNrIHRoZSBhbnN3ZXIgaWYgdGhlIHR5cGUgaXMgXCJBc2tcIjogZW5kXHJcblxuICAgICAgICAvLyBpZiBvayBjYWxsYmFjayAmJiBpZiBvayBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uXHJcbiAgICAgICAgaWYgKHR5cGVvZiBva0J1dHRvbkNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICBpZiAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Qcm9tcHQgJiYgdmFsaWRhdGlvbklucHV0KSB7XHJcbiAgICAgICAgICAgIHRoZUNsaWVudEFuc3dlciA9IHZhbGlkYXRpb25JbnB1dC52YWx1ZSB8fCAnJztcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIG9rQnV0dG9uQ2FsbGJhY2sodGhlQ2xpZW50QW5zd2VyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uZmlybUNsb3NlV3JhcC5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuXG4gICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpZiAoY29uZmlybUNsb3NlV3JhcC5wYXJlbnROb2RlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbmZpcm1DbG9zZVdyYXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjb25maXJtQ2xvc2VXcmFwKTtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sIG5ld0NvbmZpcm1TZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgIH0pO1xyXG4gICAgICAvLyBvayBidXR0b24gbGlzdGVuZXI6IGVuZFxyXG5cbiAgICAgIC8vIGlmIG9rIGNhbGxiYWNrICYmIGlmIG9rIGNhbGxiYWNrIGEgZnVuY3Rpb24gPT4gYWRkIENhbmNlbCBCdXR0b24gbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgIGlmICh0eXBlb2Ygb2tCdXR0b25DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgIC8vIGNhbmNlbCBidXR0b24gbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgICAgdmFyIGNhbmNlbEJ1dHRvbiA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnTlhDb25maXJtQnV0dG9uQ2FuY2VsJyk7XHJcbiAgICAgICAgY2FuY2VsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgLy8gaWYgY2FuY2VsIGNhbGxiYWNrICYmIGlmIGNhbmNlbCBjYWxsYmFjayBhIGZ1bmN0aW9uXHJcbiAgICAgICAgICBpZiAodHlwZW9mIGNhbmNlbEJ1dHRvbkNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIGlmIChjb25maXJtVHlwZSA9PT0gdHlwZXNDb25maXJtLlByb21wdCAmJiB2YWxpZGF0aW9uSW5wdXQpIHtcclxuICAgICAgICAgICAgICB0aGVDbGllbnRBbnN3ZXIgPSB2YWxpZGF0aW9uSW5wdXQudmFsdWUgfHwgJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FuY2VsQnV0dG9uQ2FsbGJhY2sodGhlQ2xpZW50QW5zd2VyKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbmZpcm1DbG9zZVdyYXAuY2xhc3NMaXN0LmFkZCgnbngtcmVtb3ZlJyk7XHJcblxuICAgICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChjb25maXJtQ2xvc2VXcmFwLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICBjb25maXJtQ2xvc2VXcmFwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY29uZmlybUNsb3NlV3JhcCk7XHJcbiAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LCBuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIGNhbmNlbCBidXR0b24gbGlzdGVuZXI6IGVuZFxyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIG9rIGNhbGxiYWNrICYmIGlmIG9rIGNhbGxiYWNrIGEgZnVuY3Rpb24gPT4gYWRkIENhbmNlbCBCdXR0b24gbGlzdGVuZXI6IGVuZFxyXG4gICAgICAvLyBidXR0b25zICYmIGlucHV0IGxpc3RlbmVyOiBlbmRcclxuICAgIH1cclxuICAgIC8vIGlmIHRoZXJlIGlzIG5vIGNvbmZpcm0gYm94OiBlbmRcclxuXG4gICAgLy8gZXh0ZW5kIG5ldyBzZXR0aW5ncyB3aXRoIHRoZSBiYWNrdXAgc2V0dGluZ3NcclxuICAgIG5ld0NvbmZpcm1TZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3Q29uZmlybVNldHRpbmdzLCBuZXdDb25maXJtU2V0dGluZ3NCYWNrdXApO1xyXG4gIH07XG4gIC8vIENPTkZJUk06IENyZWF0ZTogZW5kXG5cbiAgdmFyIE5vdGlmbGl4ID0ge1xuICAgIENvbmZpcm06IHtcclxuICAgICAgLy8gSW5pdFxyXG4gICAgICBpbml0OiBmdW5jdGlvbiAodXNlckNvbmZpcm1PcHRpb25zKSB7XHJcbiAgICAgICAgLy8gZXh0ZW5kIG9wdGlvbnNcclxuICAgICAgICBuZXdDb25maXJtU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIGNvbmZpcm1TZXR0aW5ncywgdXNlckNvbmZpcm1PcHRpb25zKTtcclxuICAgICAgICAvLyBpbnRlcm5hbCBjc3MgaWYgZXhpc3RcclxuICAgICAgICBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzKGNvbmZpcm1HZXRJbnRlcm5hbENTU0NvZGVzLCAnTm90aWZsaXhDb25maXJtSW50ZXJuYWxDU1MnKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gTWVyZ2UgRmlyc3QgSW5pdFxyXG4gICAgICBtZXJnZTogZnVuY3Rpb24gKHVzZXJDb25maXJtRXh0ZW5kT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGlmIGluaXRpYWxpemVkIGFscmVhZHlcclxuICAgICAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzKSB7XHJcbiAgICAgICAgICBuZXdDb25maXJtU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0NvbmZpcm1TZXR0aW5ncywgdXNlckNvbmZpcm1FeHRlbmRPcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaW5pdGlhbGl6ZSBmaXJzdFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdZb3UgaGF2ZSB0byBpbml0aWFsaXplIHRoZSBDb25maXJtIG1vZHVsZSBiZWZvcmUgY2FsbCBNZXJnZSBmdW5jdGlvbi4nKTtcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIFNob3dcclxuICAgICAgc2hvdzogZnVuY3Rpb24gKHRpdGxlLCBtZXNzYWdlLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKSB7XHJcbiAgICAgICAgY29uZmlybUNyZWF0ZSh0eXBlc0NvbmZpcm0uU2hvdywgdGl0bGUsIG1lc3NhZ2UsIG51bGwsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpO1xyXG4gICAgICB9LFxyXG4gICAgICAvLyBBc2tcclxuICAgICAgYXNrOiBmdW5jdGlvbiAodGl0bGUsIHF1ZXN0aW9uLCBhbnN3ZXIsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpIHtcclxuICAgICAgICBjb25maXJtQ3JlYXRlKHR5cGVzQ29uZmlybS5Bc2ssIHRpdGxlLCBxdWVzdGlvbiwgYW5zd2VyLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gUHJvbXB0XHJcbiAgICAgIHByb21wdDogZnVuY3Rpb24gKHRpdGxlLCBxdWVzdGlvbiwgZGVmYXVsdEFuc3dlciwgb2tCdXR0b25UZXh0LCBjYW5jZWxCdXR0b25UZXh0LCBva0J1dHRvbkNhbGxiYWNrLCBjYW5jZWxCdXR0b25DYWxsYmFjaywgb3B0aW9ucykge1xyXG4gICAgICAgIGNvbmZpcm1DcmVhdGUodHlwZXNDb25maXJtLlByb21wdCwgdGl0bGUsIHF1ZXN0aW9uLCBkZWZhdWx0QW5zd2VyLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgIH0sXG4gIH07XG5cbiAgaWYgKHR5cGVvZiB3aW5kb3cuTm90aWZsaXggPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgd2luZG93Lk5vdGlmbGl4LCB7IENvbmZpcm06IE5vdGlmbGl4LkNvbmZpcm0gfSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgQ29uZmlybTogTm90aWZsaXguQ29uZmlybSB9O1xuICB9XG5cbn0pOyIsIi8qXG4qIE5vdGlmbGl4IExvYWRpbmcgQUlPIChodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pbylcbiogRGVzY3JpcHRpb246IFRoaXMgZmlsZSBoYXMgYmVlbiBjcmVhdGVkIGF1dG9tYXRpY2FsbHkgdGhhdCB1c2luZyBcIm5vdGlmbGl4LmpzXCIsIGFuZCBcIm5vdGlmbGl4LmNzc1wiIGZpbGVzLlxuKiBWZXJzaW9uOiAzLjIuNVxuKiBBdXRob3I6IEZ1cmthbiBNVCAoaHR0cHM6Ly9naXRodWIuY29tL2Z1cmNhbilcbiogQ29weXJpZ2h0IDIwMTkgLSAyMDIyIE5vdGlmbGl4LCBNSVQgTGljZW5jZSAoaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQpXG4qL1xuXG4vKiBnbG9iYWwgZGVmaW5lICovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXSwgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZhY3Rvcnkocm9vdCk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyb290KTtcbiAgfSBlbHNlIHtcbiAgICByb290Lk5vdGlmbGl4ID0gZmFjdG9yeShyb290KTtcbiAgfVxufSkodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uICh3aW5kb3cpIHtcblxuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gQ09NTU9OOiBTU1IgY2hlY2s6IGJlZ2luXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cbiAgLy8gQ09NTU9OOiBTU1IgY2hlY2s6IGVuZFxuXG4gIC8vIENPTU1PTjogVmFyaWFibGVzOiBiZWdpblxuICB2YXIgbm90aWZsaXhOYW1lc3BhY2UgPSAnTm90aWZsaXgnO1xyXG4gIHZhciBub3RpZmxpeENvbnNvbGVEb2NzID0gJ1xcblxcblZpc2l0IGRvY3VtZW50YXRpb24gcGFnZSB0byBsZWFybiBtb3JlOiBodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pby9kb2N1bWVudGF0aW9uJztcclxuICB2YXIgZGVmYXVsdEZvbnRGYW1pbHkgPSAnLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgXCJOb3RvIFNhbnNcIiwgc2Fucy1zZXJpZic7XG4gIC8vIENPTU1PTjogVmFyaWFibGVzOiBlbmRcblxuICAvLyBMT0FESU5HOiBEZWZhdWx0IFNldHRpbmdzOiBiZWdpblxuICB2YXIgdHlwZXNMb2FkaW5nID0ge1xyXG4gICAgU3RhbmRhcmQ6ICdTdGFuZGFyZCcsXHJcbiAgICBIb3VyZ2xhc3M6ICdIb3VyZ2xhc3MnLFxyXG4gICAgQ2lyY2xlOiAnQ2lyY2xlJyxcclxuICAgIEFycm93czogJ0Fycm93cycsXHJcbiAgICBEb3RzOiAnRG90cycsXHJcbiAgICBQdWxzZTogJ1B1bHNlJyxcclxuICAgIEN1c3RvbTogJ0N1c3RvbScsXHJcbiAgICBOb3RpZmxpeDogJ05vdGlmbGl4JyxcclxuICB9O1xyXG4gIHZhciBuZXdMb2FkaW5nU2V0dGluZ3M7XHJcbiAgdmFyIGxvYWRpbmdTZXR0aW5ncyA9IHtcclxuICAgIElEOiAnTm90aWZsaXhMb2FkaW5nV3JhcCcsIC8vIGNhbiBub3QgY3VzdG9taXphYmxlXHJcbiAgICBjbGFzc05hbWU6ICdub3RpZmxpeC1sb2FkaW5nJyxcclxuICAgIHppbmRleDogNDAwMCxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMC44KScsXHJcbiAgICBydGw6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBjc3NBbmltYXRpb246IHRydWUsXHJcbiAgICBjc3NBbmltYXRpb25EdXJhdGlvbjogNDAwLFxyXG4gICAgY2xpY2tUb0Nsb3NlOiBmYWxzZSxcclxuICAgIGN1c3RvbVN2Z1VybDogbnVsbCxcclxuICAgIGN1c3RvbVN2Z0NvZGU6IG51bGwsXHJcbiAgICBzdmdTaXplOiAnODBweCcsXHJcbiAgICBzdmdDb2xvcjogJyMzMmM2ODInLFxyXG4gICAgbWVzc2FnZUlEOiAnTm90aWZsaXhMb2FkaW5nTWVzc2FnZScsXHJcbiAgICBtZXNzYWdlRm9udFNpemU6ICcxNXB4JyxcclxuICAgIG1lc3NhZ2VNYXhMZW5ndGg6IDM0LFxyXG4gICAgbWVzc2FnZUNvbG9yOiAnI2RjZGNkYycsXHJcbiAgfTtcbiAgLy8gTE9BRElORzogRGVmYXVsdCBTZXR0aW5nczogZW5kXG5cbiAgLy8gQ09NTU9OOiBDb25zb2xlIEVycm9yOiBiZWdpblxuICB2YXIgY29tbW9uQ29uc29sZUVycm9yID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcclxuICAgIHJldHVybiBjb25zb2xlLmVycm9yKCclYyAnICsgbm90aWZsaXhOYW1lc3BhY2UgKyAnIEVycm9yICcsICdwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjIwcHg7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiNmZjU1NDknLCAnXFxuJyArIG1lc3NhZ2UgKyBub3RpZmxpeENvbnNvbGVEb2NzKTtcclxuICB9O1xuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGVuZFxuXG4gIC8vIENPTU1PTjogQ2hlY2sgSGVhZCBvciBCb2R5OiBiZWdpblxuICB2YXIgY29tbW9uQ2hlY2tIZWFkT3JCb2R5ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgIGlmICghZWxlbWVudCkgeyBlbGVtZW50ID0gJ2hlYWQnOyB9XHJcbiAgICBpZiAod2luZG93LmRvY3VtZW50W2VsZW1lbnRdID09PSBudWxsKSB7XHJcbiAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignXFxuTm90aWZsaXggbmVlZHMgdG8gYmUgYXBwZW5kZWQgdG8gdGhlIFwiPCcgKyBlbGVtZW50ICsgJz5cIiBlbGVtZW50LCBidXQgeW91IGNhbGxlZCBpdCBiZWZvcmUgdGhlIFwiPCcgKyBlbGVtZW50ICsgJz5cIiBlbGVtZW50IGhhcyBiZWVuIGNyZWF0ZWQuJyk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ2hlY2sgSGVhZCBvciBCb2R5OiBlbmRcblxuICAvLyBDT01NT046IFNldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGJlZ2luXG4gIHZhciBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzID0gZnVuY3Rpb24gKGdldEludGVybmFsQ1NTQ29kZXMsIHN0eWxlRWxlbWVudElkKSB7XHJcbiAgICAvLyBjaGVjayBkb2MgaGVhZFxyXG4gICAgaWYgKCFjb21tb25DaGVja0hlYWRPckJvZHkoJ2hlYWQnKSkgeyByZXR1cm4gZmFsc2U7IH1cclxuXG4gICAgLy8gaW50ZXJuYWwgY3NzXHJcbiAgICBpZiAoZ2V0SW50ZXJuYWxDU1NDb2RlcygpICE9PSBudWxsICYmICF3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc3R5bGVFbGVtZW50SWQpKSB7XHJcbiAgICAgIHZhciBpbnRlcm5hbENTUyA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICBpbnRlcm5hbENTUy5pZCA9IHN0eWxlRWxlbWVudElkO1xyXG4gICAgICBpbnRlcm5hbENTUy5pbm5lckhUTUwgPSBnZXRJbnRlcm5hbENTU0NvZGVzKCk7XHJcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGludGVybmFsQ1NTKTtcclxuICAgIH1cclxuICB9O1xuICAvLyBDT01NT046IFNldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGVuZFxuXG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGJlZ2luXG4gIHZhciBjb21tb25FeHRlbmRPcHRpb25zID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gdmFyaWFibGVzXHJcbiAgICB2YXIgZXh0ZW5kZWQgPSB7fTtcclxuICAgIHZhciBkZWVwID0gZmFsc2U7XHJcbiAgICB2YXIgaSA9IDA7XHJcbiAgICAvLyBjaGVjayBpZiBhIGRlZXAgbWVyZ2VcclxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzWzBdKSA9PT0gJ1tvYmplY3QgQm9vbGVhbl0nKSB7XHJcbiAgICAgIGRlZXAgPSBhcmd1bWVudHNbMF07XHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuICAgIC8vIG1lcmdlIHRoZSBvYmplY3QgaW50byB0aGUgZXh0ZW5kZWQgb2JqZWN0XHJcbiAgICB2YXIgbWVyZ2UgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgICAgIGZvciAodmFyIHByb3AgaW4gb2JqKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSB7XHJcbiAgICAgICAgICAvLyBpZiBwcm9wZXJ0eSBpcyBhbiBvYmplY3QsIG1lcmdlIHByb3BlcnRpZXNcclxuICAgICAgICAgIGlmIChkZWVwICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmpbcHJvcF0pID09PSAnW29iamVjdCBPYmplY3RdJykge1xyXG4gICAgICAgICAgICBleHRlbmRlZFtwcm9wXSA9IGNvbW1vbkV4dGVuZE9wdGlvbnMoZXh0ZW5kZWRbcHJvcF0sIG9ialtwcm9wXSk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBleHRlbmRlZFtwcm9wXSA9IG9ialtwcm9wXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBsb29wIHRocm91Z2ggZWFjaCBvYmplY3QgYW5kIGNvbmR1Y3QgYSBtZXJnZVxyXG4gICAgZm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbWVyZ2UoYXJndW1lbnRzW2ldKTtcclxuICAgIH1cclxuICAgIHJldHVybiBleHRlbmRlZDtcclxuICB9O1xuICAvLyBDT01NT046IEV4dGVuZCBPcHRpb25zOiBlbmRcblxuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGJlZ2luXG4gIHZhciBjb21tb25HZXRQbGFpbnRleHQgPSBmdW5jdGlvbiAoaHRtbCkge1xyXG4gICAgdmFyIGh0bWxQb29sID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgaHRtbFBvb2wuaW5uZXJIVE1MID0gaHRtbDtcclxuICAgIHJldHVybiBodG1sUG9vbC50ZXh0Q29udGVudCB8fCBodG1sUG9vbC5pbm5lclRleHQgfHwgJyc7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBHZXQgUGxhaW50ZXh0OiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBTdGFuZGFyZDogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25TdGFuZGFyZCA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBzdGFuZGFyZCA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBzdHJva2U9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHRyYW5zZm9ybT1cInNjYWxlKC44KVwiIHZpZXdCb3g9XCIwIDAgMzggMzhcIj48ZyBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBzdHJva2Utd2lkdGg9XCIyXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDEgMSlcIj48Y2lyY2xlIGN4PVwiMThcIiBjeT1cIjE4XCIgcj1cIjE4XCIgc3Ryb2tlLW9wYWNpdHk9XCIuMjVcIi8+PHBhdGggZD1cIk0zNiAxOGMwLTkuOTQtOC4wNi0xOC0xOC0xOFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBkdXI9XCIxc1wiIGZyb209XCIwIDE4IDE4XCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdG89XCIzNjAgMTggMThcIiB0eXBlPVwicm90YXRlXCIvPjwvcGF0aD48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiBzdGFuZGFyZDtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBTdGFuZGFyZDogZW5kXG5cbiAgLy8gTE9BRElORyAmJiBCTE9DSzogU1ZHIEljb24gSG91cmdsYXNzOiBiZWdpblxuICB2YXIgbG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkhvdXJnbGFzcyA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBob3VyZ2xhc3MgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWExvYWRpbmdIb3VyZ2xhc3NcIiBmaWxsPVwiJyArIGNvbG9yICsgJ1wiIHdpZHRoPVwiJyArIHdpZHRoICsgJ1wiIGhlaWdodD1cIicgKyB3aWR0aCArICdcIiB2aWV3Qm94PVwiMCAwIDIwMCAyMDBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzNS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX0xNi42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuOCk7dHJhbnNmb3JtOnNjYWxlKDEsLjgpfTMzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguODgsLjYpO3RyYW5zZm9ybTpzY2FsZSguODgsLjYpfTM3LjUley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpO3RyYW5zZm9ybTpzY2FsZSguODUsLjU1KX00MS42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjgsLjUpO3RyYW5zZm9ybTpzY2FsZSguOCwuNSl9NDUuODMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpO3RyYW5zZm9ybTpzY2FsZSguNzUsLjQ1KX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjcsLjQpO3RyYW5zZm9ybTpzY2FsZSguNywuNCl9NTQuMTcley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC42LC4zNSk7dHJhbnNmb3JtOnNjYWxlKC42LC4zNSl9NTguMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41LC4zKTt0cmFuc2Zvcm06c2NhbGUoLjUsLjMpfTgzLjMzJSx0b3std2Via2l0LXRyYW5zZm9ybTpzY2FsZSguMiwwKTt0cmFuc2Zvcm06c2NhbGUoLjIsMCl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3M1LWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLDEpO3RyYW5zZm9ybTpzY2FsZSgxLDEpfTE2LjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC44KTt0cmFuc2Zvcm06c2NhbGUoMSwuOCl9MzMuMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44OCwuNik7dHJhbnNmb3JtOnNjYWxlKC44OCwuNil9MzcuNSV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjg1LC41NSk7dHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpfTQxLjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguOCwuNSk7dHJhbnNmb3JtOnNjYWxlKC44LC41KX00NS44MyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjc1LC40NSk7dHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNywuNCk7dHJhbnNmb3JtOnNjYWxlKC43LC40KX01NC4xNyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjYsLjM1KTt0cmFuc2Zvcm06c2NhbGUoLjYsLjM1KX01OC4zMyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUsLjMpO3RyYW5zZm9ybTpzY2FsZSguNSwuMyl9ODMuMzMlLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC4yLDApO3RyYW5zZm9ybTpzY2FsZSguMiwwKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuMDIpO3RyYW5zZm9ybTpzY2FsZSgxLC4wMil9NzkuMTclLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEsMSk7dHJhbnNmb3JtOnNjYWxlKDEsMSl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3MzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC4wMik7dHJhbnNmb3JtOnNjYWxlKDEsLjAyKX03OS4xNyUsdG97LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMS1hbmltYXRpb257MCUsODMuMzMley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKX19QGtleWZyYW1lcyBOWGhvdXJnbGFzczEtYW5pbWF0aW9uezAlLDgzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX10b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9fSNOWExvYWRpbmdIb3VyZ2xhc3MgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjFcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3MxLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczEtYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgNTAlO3RyYW5zZm9ybS1vcmlnaW46NTAlIDUwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XCI+PGcgaWQ9XCJOWGhvdXJnbGFzczJcIiBmaWxsPVwiaW5oZXJpdFwiPjxnIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSAxMDAlO3RyYW5zZm9ybS1ib3g6ZmlsbC1ib3hcIiBvcGFjaXR5PVwiLjRcIj48cGF0aCBpZD1cIk5YaG91cmdsYXNzNFwiIGQ9XCJNMTAwIDEwMGwtMzQuMzggMzIuMDh2MzEuMTRoNjguNzZ2LTMxLjE0elwiLz48L2c+PGcgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzNS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3M1LWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDEwMCU7dHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XCIgb3BhY2l0eT1cIi40XCI+PHBhdGggaWQ9XCJOWGhvdXJnbGFzczZcIiBkPVwiTTEwMCAxMDBMNjUuNjIgNjcuOTJWMzYuNzhoNjguNzZ2MzEuMTR6XCIvPjwvZz48cGF0aCBkPVwiTTUxLjE0IDM4Ljg5aDguMzN2MTQuOTNjMCAxNS4xIDguMjkgMjguOTkgMjMuMzQgMzkuMSAxLjg4IDEuMjUgMy4wNCAzLjk3IDMuMDQgNy4wOHMtMS4xNiA1LjgzLTMuMDQgNy4wOWMtMTUuMDUgMTAuMS0yMy4zNCAyMy45OS0yMy4zNCAzOS4wOXYxNC45M2gtOC4zM2E0Ljg1OSA0Ljg1OSAwIDEgMCAwIDkuNzJoOTcuNzJhNC44NTkgNC44NTkgMCAxIDAgMC05LjcyaC04LjMzdi0xNC45M2MwLTE1LjEtOC4yOS0yOC45OS0yMy4zNC0zOS4wOS0xLjg4LTEuMjYtMy4wNC0zLjk4LTMuMDQtNy4wOXMxLjE2LTUuODMgMy4wNC03LjA4YzE1LjA1LTEwLjExIDIzLjM0LTI0IDIzLjM0LTM5LjFWMzguODloOC4zM2E0Ljg1OSA0Ljg1OSAwIDEgMCAwLTkuNzJINTEuMTRhNC44NTkgNC44NTkgMCAxIDAgMCA5Ljcyem03OS42NyAxNC45M2MwIDE1Ljg3LTExLjkzIDI2LjI1LTE5LjA0IDMxLjAzLTQuNiAzLjA4LTcuMzQgOC43NS03LjM0IDE1LjE1IDAgNi40MSAyLjc0IDEyLjA3IDcuMzQgMTUuMTUgNy4xMSA0Ljc4IDE5LjA0IDE1LjE2IDE5LjA0IDMxLjAzdjE0LjkzSDY5LjE5di0xNC45M2MwLTE1Ljg3IDExLjkzLTI2LjI1IDE5LjA0LTMxLjAyIDQuNi0zLjA5IDcuMzQtOC43NSA3LjM0LTE1LjE2IDAtNi40LTIuNzQtMTIuMDctNy4zNC0xNS4xNS03LjExLTQuNzgtMTkuMDQtMTUuMTYtMTkuMDQtMzEuMDNWMzguODloNjEuNjJ2MTQuOTN6XCIvPjwvZz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiBob3VyZ2xhc3M7XHJcbiAgfTtcbiAgLy8gTE9BRElORyAmJiBCTE9DSzogU1ZHIEljb24gSG91cmdsYXNzOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBDaXJjbGU6IGJlZ2luXG4gIHZhciBsb2FkaW5nQW5kQmxvY2tTdmdJY29uQ2lyY2xlID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICc2MHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjMzJjNjgyJzsgfVxyXG4gICAgdmFyIGNpcmNsZSA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgdmlld0JveD1cIjI1IDI1IDUwIDUwXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbjpyb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO2FuaW1hdGlvbjpyb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO2hlaWdodDonICsgd2lkdGggKyAnOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyOy1tcy10cmFuc2Zvcm0tb3JpZ2luOmNlbnRlciBjZW50ZXI7dHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyO3dpZHRoOicgKyB3aWR0aCArICc7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO21hcmdpbjphdXRvXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGV7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHJvdGF0ZXt0b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fUAtd2Via2l0LWtleWZyYW1lcyBkYXNoezAle3N0cm9rZS1kYXNoYXJyYXk6MSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6MH01MCV7c3Ryb2tlLWRhc2hhcnJheTo4OSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6LTM1fXRve3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0xMjR9fUBrZXlmcmFtZXMgZGFzaHswJXtzdHJva2UtZGFzaGFycmF5OjEsMjAwO3N0cm9rZS1kYXNob2Zmc2V0OjB9NTAle3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0zNX10b3tzdHJva2UtZGFzaGFycmF5Ojg5LDIwMDtzdHJva2UtZGFzaG9mZnNldDotMTI0fX08L3N0eWxlPjxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiByPVwiMjBcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cIicgKyBjb2xvciArICdcIiBzdHJva2Utd2lkdGg9XCIyXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbjpkYXNoIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGUsY29sb3IgMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZTthbmltYXRpb246ZGFzaCAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlLGNvbG9yIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGVcIiBzdHJva2UtZGFzaGFycmF5PVwiMTUwIDIwMFwiIHN0cm9rZS1kYXNob2Zmc2V0PVwiLTEwXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiLz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIGNpcmNsZTtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBDaXJjbGU6IGVuZFxuXG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIEFycm93czogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25BcnJvd3MgPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzYwcHgnOyB9XHJcbiAgICBpZiAoIWNvbG9yKSB7IGNvbG9yID0gJyMzMmM2ODInOyB9XHJcbiAgICB2YXIgYXJyb3dzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgMTI4IDEyOFwiPjxnPjxwYXRoIGZpbGw9XCJpbmhlcml0XCIgZD1cIk0xMDkuMjUgNTUuNWgtMzZsMTItMTJhMjkuNTQgMjkuNTQgMCAwIDAtNDkuNTMgMTJIMTguNzVBNDYuMDQgNDYuMDQgMCAwIDEgOTYuOSAzMS44NGwxMi4zNS0xMi4zNHYzNnptLTkwLjUgMTdoMzZsLTEyIDEyYTI5LjU0IDI5LjU0IDAgMCAwIDQ5LjUzLTEyaDE2Ljk3QTQ2LjA0IDQ2LjA0IDAgMCAxIDMxLjEgOTYuMTZMMTguNzQgMTA4LjV2LTM2elwiLz48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCIgZHVyPVwiMS41c1wiIGZyb209XCIwIDY0IDY0XCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdG89XCIzNjAgNjQgNjRcIiB0eXBlPVwicm90YXRlXCIvPjwvZz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIGFycm93cztcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBBcnJvd3M6IGVuZFxuXG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIERvdHM6IGJlZ2luXG4gIHZhciBsb2FkaW5nQW5kQmxvY2tTdmdJY29uRG90cyA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBkb3RzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPjxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgyNSA1MClcIj48Y2lyY2xlIHI9XCI5XCIgZmlsbD1cImluaGVyaXRcIiB0cmFuc2Zvcm09XCJzY2FsZSguMjM5KVwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBiZWdpbj1cIi0wLjI2NnNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjAuOHNcIiBrZXlTcGxpbmVzPVwiMC4zIDAgMC43IDE7MC4zIDAgMC43IDFcIiBrZXlUaW1lcz1cIjA7MC41OzFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB0eXBlPVwic2NhbGVcIiB2YWx1ZXM9XCIwOzE7MFwiLz48L2NpcmNsZT48L2c+PGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDUwIDUwKVwiPjxjaXJjbGUgcj1cIjlcIiBmaWxsPVwiaW5oZXJpdFwiIHRyYW5zZm9ybT1cInNjYWxlKC4wMDE1MilcIj48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCIgYmVnaW49XCItMC4xMzNzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIwLjhzXCIga2V5U3BsaW5lcz1cIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXCIga2V5VGltZXM9XCIwOzAuNTsxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdHlwZT1cInNjYWxlXCIgdmFsdWVzPVwiMDsxOzBcIi8+PC9jaXJjbGU+PC9nPjxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg3NSA1MClcIj48Y2lyY2xlIHI9XCI5XCIgZmlsbD1cImluaGVyaXRcIiB0cmFuc2Zvcm09XCJzY2FsZSguMjk5KVwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBiZWdpbj1cIjBzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIwLjhzXCIga2V5U3BsaW5lcz1cIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXCIga2V5VGltZXM9XCIwOzAuNTsxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdHlwZT1cInNjYWxlXCIgdmFsdWVzPVwiMDsxOzBcIi8+PC9jaXJjbGU+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gZG90cztcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBEb3RzOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBQdWxzZTogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25QdWxzZSA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBwdWxzZSA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBzdHJva2U9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgNDQgNDRcIj48ZyBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBzdHJva2Utd2lkdGg9XCIyXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyMlwiIHI9XCIxXCI+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cInJcIiBiZWdpbj1cIjBzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIxLjhzXCIga2V5U3BsaW5lcz1cIjAuMTY1LCAwLjg0LCAwLjQ0LCAxXCIga2V5VGltZXM9XCIwOyAxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdmFsdWVzPVwiMTsgMjBcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cInN0cm9rZS1vcGFjaXR5XCIgYmVnaW49XCIwc1wiIGNhbGNNb2RlPVwic3BsaW5lXCIgZHVyPVwiMS44c1wiIGtleVNwbGluZXM9XCIwLjMsIDAuNjEsIDAuMzU1LCAxXCIga2V5VGltZXM9XCIwOyAxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdmFsdWVzPVwiMTsgMFwiLz48L2NpcmNsZT48Y2lyY2xlIGN4PVwiMjJcIiBjeT1cIjIyXCIgcj1cIjFcIj48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwiclwiIGJlZ2luPVwiLTAuOXNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjEuOHNcIiBrZXlTcGxpbmVzPVwiMC4xNjUsIDAuODQsIDAuNDQsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAyMFwiLz48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwic3Ryb2tlLW9wYWNpdHlcIiBiZWdpbj1cIi0wLjlzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIxLjhzXCIga2V5U3BsaW5lcz1cIjAuMywgMC42MSwgMC4zNTUsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAwXCIvPjwvY2lyY2xlPjwvZz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIHB1bHNlO1xyXG4gIH07XG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIFB1bHNlOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBOb3RpZmxpeDogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Ob3RpZmxpeCA9IGZ1bmN0aW9uICh3aWR0aCwgd2hpdGUsIGdyZWVuKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzYwcHgnOyB9XHJcbiAgICBpZiAoIXdoaXRlKSB7IHdoaXRlID0gJyNmOGY4ZjgnOyB9XHJcbiAgICBpZiAoIWdyZWVuKSB7IGdyZWVuID0gJyMzMmM2ODInOyB9XHJcbiAgICB2YXIgbm90aWZsaXhJY29uID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhMb2FkaW5nTm90aWZsaXhMaWJcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgdmlld0JveD1cIjAgMCAyMDAgMjAwXCI+PGRlZnM+PHN0eWxlPkBrZXlmcmFtZXMgbm90aWZsaXgtbnswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgteHswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgtZG90ezAlLHRve3N0cm9rZS13aWR0aDowfTUwJXtzdHJva2Utd2lkdGg6MTJ9fS5ueC1pY29uLWxpbmV7c3Ryb2tlOicgKyB3aGl0ZSArICc7c3Ryb2tlLXdpZHRoOjEyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoyMjtmaWxsOm5vbmV9PC9zdHlsZT48L2RlZnM+PHBhdGggZD1cIk00Ny45NyAxMzUuMDVhNi41IDYuNSAwIDEgMSAwIDEzIDYuNSA2LjUgMCAwIDEgMC0xM3pcIiBzdHlsZT1cImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LWRvdDthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2UtaW4tb3V0O2FuaW1hdGlvbi1kdXJhdGlvbjoxLjI1czthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXCIgZmlsbD1cIicgKyBncmVlbiArICdcIiBzdHJva2U9XCInICsgZ3JlZW4gKyAnXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlLW1pdGVybGltaXQ9XCIyMlwiIHN0cm9rZS13aWR0aD1cIjEyXCIvPjxwYXRoIGNsYXNzPVwibngtaWNvbi1saW5lXCIgZD1cIk0xMC4xNCAxNDQuNzZWODcuNTVjMC01LjY4LTQuNTQtNDEuMzYgMzcuODMtNDEuMzYgNDIuMzYgMCAzNy44MiAzNS42OCAzNy44MiA0MS4zNnY1Ny4yMVwiIHN0eWxlPVwiYW5pbWF0aW9uLW5hbWU6bm90aWZsaXgtbjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tZHVyYXRpb246Mi41czthbmltYXRpb24tZGVsYXk6MHM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFwiIHN0cm9rZS1kYXNoYXJyYXk9XCI1MDBcIi8+PHBhdGggY2xhc3M9XCJueC1pY29uLWxpbmVcIiBkPVwiTTExNS4wNiAxNDQuNDljMjQuOTgtMzIuNjggNDkuOTYtNjUuMzUgNzQuOTQtOTguMDNNMTE0Ljg5IDQ2LjZjMjUuMDkgMzIuNTggNTAuMTkgNjUuMTcgNzUuMjkgOTcuNzVcIiBzdHlsZT1cImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LXg7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7YW5pbWF0aW9uLWR1cmF0aW9uOjIuNXM7YW5pbWF0aW9uLWRlbGF5Oi4yczthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXCIgc3Ryb2tlLWRhc2hhcnJheT1cIjUwMFwiLz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIG5vdGlmbGl4SWNvbjtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBOb3RpZmxpeDogZW5kXG5cbiAgLy8gTE9BRElORzogR2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGxvYWRpbmdHZXRJbnRlcm5hbENTU0NvZGVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGxvYWRpbmdDU1MgPSAnW2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXXstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo0MDAwO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC44KTtmb250LWZhbWlseTpcIlF1aWNrc2FuZFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLHNhbnMtc2VyaWZ9W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXSAqey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LWxvYWRpbmctY2xpY2stdG8tY2xvc2V7Y3Vyc29yOnBvaW50ZXJ9W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVwiLWljb25cIl17d2lkdGg6NjBweDtoZWlnaHQ6NjBweDtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LXRyYW5zaXRpb246dG9wIC4ycyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOnRvcCAuMnMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0b3AgLjJzIGVhc2UtaW4tb3V0O21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVwiLWljb25cIl0gaW1nLFtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+ZGl2W2NsYXNzKj1cIi1pY29uXCJdIHN2Z3ttYXgtd2lkdGg6dW5zZXQ7bWF4LWhlaWdodDp1bnNldDt3aWR0aDoxMDAlO2hlaWdodDphdXRvO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MH1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPnB7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjEwcHggYXV0byAwO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoxLjQ7cGFkZGluZzowIDEwcHg7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uey13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1yZW1vdmV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+cC5ueC1sb2FkaW5nLW1lc3NhZ2UtbmV3ey13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZGluZy1uZXctbWVzc2FnZS1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX0nO1xyXG4gICAgcmV0dXJuIGxvYWRpbmdDU1MgfHwgbnVsbDtcclxuICB9O1xuICAvLyBMT0FESU5HOiBHZXQgSW50ZXJuYWwgQ1NTIENvZGVzOiBlbmRcblxuICAvLyBMT0FESU5HOiBDcmVhdGU6IGJlZ2luXG4gIHZhciBsb2FkaW5nQ3JlYXRlID0gZnVuY3Rpb24gKGxvYWRpbmdUeXBlLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCBkaXNwbGF5LCBkZWxheSkge1xyXG4gICAgLy8gY2hlY2sgZG9jIGJvZHlcclxuICAgIGlmICghY29tbW9uQ2hlY2tIZWFkT3JCb2R5KCdib2R5JykpIHsgcmV0dXJuIGZhbHNlOyB9XHJcblxuICAgIC8vIGlmIG5vdCBpbml0aWFsaXplZCBwcmV0ZW5kIGxpa2UgaW5pdFxyXG4gICAgaWYgKCFuZXdMb2FkaW5nU2V0dGluZ3MpIHtcclxuICAgICAgTm90aWZsaXguTG9hZGluZy5pbml0KHt9KTtcclxuICAgIH1cclxuXG4gICAgLy8gY3JlYXRlIGEgYmFja3VwIGZvciBuZXcgc2V0dGluZ3NcclxuICAgIHZhciBuZXdMb2FkaW5nU2V0dGluZ3NCYWNrdXAgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywge30pO1xyXG5cbiAgICAvLyBjaGVjayBcIm1lc3NhZ2VPck9wdGlvbnNcIiBhbmQgXCJvcHRpb25zXCI6IGJlZ2luXHJcbiAgICBpZiAoKHR5cGVvZiBtZXNzYWdlT3JPcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShtZXNzYWdlT3JPcHRpb25zKSkgfHwgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvcHRpb25zKSkpIHtcclxuICAgICAgLy8gbmV3IG9wdGlvbnNcclxuICAgICAgdmFyIG5ld09wdGlvbnMgPSB7fTtcclxuICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlT3JPcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBtZXNzYWdlT3JPcHRpb25zO1xyXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBvcHRpb25zO1xyXG4gICAgICB9XHJcblxuICAgICAgLy8gZXh0ZW5kIG5ldyBzZXR0aW5ncyB3aXRoIHRoZSBuZXcgb3B0aW9uc1xyXG4gICAgICBuZXdMb2FkaW5nU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywgbmV3T3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgICAvLyBjaGVjayBcIm1lc3NhZ2VPck9wdGlvbnNcIiBhbmQgXCJvcHRpb25zXCI6IGVuZFxyXG5cbiAgICAvLyBjaGVjayB0aGUgbWVzc2FnZVxyXG4gICAgdmFyIG1lc3NhZ2UgPSAnJztcclxuICAgIGlmICh0eXBlb2YgbWVzc2FnZU9yT3B0aW9ucyA9PT0gJ3N0cmluZycgJiYgbWVzc2FnZU9yT3B0aW9ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlT3JPcHRpb25zO1xyXG4gICAgfVxyXG5cbiAgICAvLyBzaG93IGxvYWRpbmdcclxuICAgIGlmIChkaXNwbGF5KSB7XHJcblxuICAgICAgLy8gaWYgbWVzc2FnZSBzZXR0aW5nczogYmVnaW5cclxuICAgICAgaWYgKG1lc3NhZ2UubGVuZ3RoID4gbmV3TG9hZGluZ1NldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgICBtZXNzYWdlID0gY29tbW9uR2V0UGxhaW50ZXh0KG1lc3NhZ2UpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG1lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZSkudG9TdHJpbmcoKTtcclxuICAgICAgfVxyXG4gICAgICB2YXIgbWVzc2FnZUhUTUwgPSAnJztcclxuICAgICAgaWYgKG1lc3NhZ2UubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIG1lc3NhZ2VIVE1MID0gJzxwIGlkPVwiJyArIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlSUQgKyAnXCIgY2xhc3M9XCJueC1sb2FkaW5nLW1lc3NhZ2VcIiBzdHlsZT1cImNvbG9yOicgKyBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUNvbG9yICsgJztmb250LXNpemU6JyArIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlRm9udFNpemUgKyAnO1wiPicgKyBtZXNzYWdlICsgJzwvcD4nO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIG1lc3NhZ2Ugc2V0dGluZ3M6IGVuZFxyXG5cbiAgICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBiZWdpblxyXG4gICAgICBpZiAoIW5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb24pIHtcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24gPSAwO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBlbmRcclxuXG4gICAgICAvLyBzdmdJY29uOiBiZWdpblxyXG4gICAgICB2YXIgc3ZnSWNvbiA9ICcnO1xyXG4gICAgICBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5TdGFuZGFyZCkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBsb2FkaW5nQW5kQmxvY2tTdmdJY29uU3RhbmRhcmQobmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUsIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdDb2xvcik7XHJcbiAgICAgIH0gZWxzZSBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5Ib3VyZ2xhc3MpIHtcclxuICAgICAgICBzdmdJY29uID0gbG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkhvdXJnbGFzcyhuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSwgbmV3TG9hZGluZ1NldHRpbmdzLnN2Z0NvbG9yKTtcclxuICAgICAgfSBlbHNlIGlmIChsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkNpcmNsZSkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBsb2FkaW5nQW5kQmxvY2tTdmdJY29uQ2lyY2xlKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuQXJyb3dzKSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25BcnJvd3MobmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUsIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdDb2xvcik7XHJcbiAgICAgIH0gZWxzZSBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5Eb3RzKSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Eb3RzKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuUHVsc2UpIHtcclxuICAgICAgICBzdmdJY29uID0gbG9hZGluZ0FuZEJsb2NrU3ZnSWNvblB1bHNlKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgIGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuQ3VzdG9tICYmXHJcbiAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzLmN1c3RvbVN2Z0NvZGUgIT09IG51bGwgJiZcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsID09PSBudWxsXHJcbiAgICAgICkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnQ29kZSB8fCAnJztcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkN1c3RvbSAmJlxyXG4gICAgICAgIG5ld0xvYWRpbmdTZXR0aW5ncy5jdXN0b21TdmdVcmwgIT09IG51bGwgJiZcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnQ29kZSA9PT0gbnVsbFxyXG4gICAgICApIHtcclxuICAgICAgICBzdmdJY29uID0gJzxpbWcgY2xhc3M9XCJueC1jdXN0b20tbG9hZGluZy1pY29uXCIgd2lkdGg9XCInICsgbmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUgKyAnXCIgaGVpZ2h0PVwiJyArIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplICsgJ1wiIHNyYz1cIicgKyBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsICsgJ1wiIGFsdD1cIk5vdGlmbGl4XCI+JztcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkN1c3RvbSAmJlxyXG4gICAgICAgIChuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsID09PSBudWxsIHx8IG5ld0xvYWRpbmdTZXR0aW5ncy5jdXN0b21TdmdDb2RlID09PSBudWxsKVxyXG4gICAgICApIHtcclxuICAgICAgICBjb21tb25Db25zb2xlRXJyb3IoJ1lvdSBoYXZlIHRvIHNldCBhIHN0YXRpYyBTVkcgdXJsIHRvIFwiY3VzdG9tU3ZnVXJsXCIgb3B0aW9uIHRvIHVzZSBMb2FkaW5nIEN1c3RvbS4nKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Ob3RpZmxpeChuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSwgJyNmOGY4ZjgnLCAnIzMyYzY4MicpO1xyXG4gICAgICB9XHJcbiAgICAgIHZhciBzdmdTaXplQXNEaWdpdCA9IHBhcnNlSW50KChuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSB8fCAnJykucmVwbGFjZSgvW14wLTldL2csICcnKSk7XHJcbiAgICAgIHZhciB3aW5XaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gICAgICB2YXIgbWF4U3ZnV2lkdGhQeCA9IHN2Z1NpemVBc0RpZ2l0ID49IHdpbldpZHRoID8gKHdpbldpZHRoIC0gNDApICsgJ3B4JyA6IHN2Z1NpemVBc0RpZ2l0ICsgJ3B4JztcclxuICAgICAgdmFyIHN2Z0ljb25IVE1MID0gJzxkaXYgc3R5bGU9XCJ3aWR0aDonICsgbWF4U3ZnV2lkdGhQeCArICc7IGhlaWdodDonICsgbWF4U3ZnV2lkdGhQeCArICc7XCIgY2xhc3M9XCInICsgbmV3TG9hZGluZ1NldHRpbmdzLmNsYXNzTmFtZSArICctaWNvbicgKyAobWVzc2FnZS5sZW5ndGggPiAwID8gJyBueC13aXRoLW1lc3NhZ2UnIDogJycpICsgJ1wiPicgKyBzdmdJY29uICsgJzwvZGl2Pic7XHJcbiAgICAgIC8vIHN2Z0ljb246IGVuZFxyXG5cbiAgICAgIC8vIGxvYWRpbmcgd3JhcDogYmVnaW5cclxuICAgICAgdmFyIG50Zmx4TG9hZGluZ1dyYXAgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuaWQgPSBsb2FkaW5nU2V0dGluZ3MuSUQ7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuY2xhc3NOYW1lID0gbmV3TG9hZGluZ1NldHRpbmdzLmNsYXNzTmFtZSArIChuZXdMb2FkaW5nU2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbicgOiAnJykgKyAobmV3TG9hZGluZ1NldHRpbmdzLmNsaWNrVG9DbG9zZSA/ICcgbngtbG9hZGluZy1jbGljay10by1jbG9zZScgOiAnJyk7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuekluZGV4ID0gbmV3TG9hZGluZ1NldHRpbmdzLnppbmRleDtcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5iYWNrZ3JvdW5kID0gbmV3TG9hZGluZ1NldHRpbmdzLmJhY2tncm91bmRDb2xvcjtcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbiA9IG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZm9udEZhbWlseSA9ICdcIicgKyBuZXdMb2FkaW5nU2V0dGluZ3MuZm9udEZhbWlseSArICdcIiwgJyArIGRlZmF1bHRGb250RmFtaWx5O1xyXG4gICAgICBudGZseExvYWRpbmdXcmFwLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZmxleFdyYXAgPSAnd3JhcCc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZmxleERpcmVjdGlvbiA9ICdjb2x1bW4nO1xyXG4gICAgICBudGZseExvYWRpbmdXcmFwLnN0eWxlLmFsaWduSXRlbXMgPSAnY2VudGVyJztcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdjZW50ZXInO1xyXG5cbiAgICAgIC8vIHJ0bDogYmVnaW5cclxuICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncy5ydGwpIHtcclxuICAgICAgICBudGZseExvYWRpbmdXcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICAgIG50Zmx4TG9hZGluZ1dyYXAuY2xhc3NMaXN0LmFkZCgnbngtcnRsLW9uJyk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gcnRsOiBlbmRcclxuXG4gICAgICAvLyBhcHBlbmQ6IGJlZ2luXHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuaW5uZXJIVE1MID0gc3ZnSWNvbkhUTUwgKyBtZXNzYWdlSFRNTDtcclxuXG4gICAgICAvLyBpZiB0aGVyZSBpcyBubyBsb2FkaW5nIGVsZW1lbnRcclxuICAgICAgaWYgKCF3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobnRmbHhMb2FkaW5nV3JhcC5pZCkpIHtcclxuICAgICAgICAvLyBhcHBlbmRcclxuICAgICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChudGZseExvYWRpbmdXcmFwKTtcclxuXG4gICAgICAgIC8vIGlmIGNsaWNrIHRvIGNsb3NlXHJcbiAgICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncy5jbGlja1RvQ2xvc2UpIHtcclxuICAgICAgICAgIHZhciBsb2FkaW5nV3JhcEVsbSA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseExvYWRpbmdXcmFwLmlkKTtcclxuICAgICAgICAgIGxvYWRpbmdXcmFwRWxtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBudGZseExvYWRpbmdXcmFwLmNsYXNzTGlzdC5hZGQoJ254LXJlbW92ZScpO1xyXG4gICAgICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGlmIChudGZseExvYWRpbmdXcmFwLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIG50Zmx4TG9hZGluZ1dyYXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChudGZseExvYWRpbmdXcmFwKTtcclxuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sIG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLy8gYXBwZW5kOiBlbmRcclxuICAgIH1cclxuICAgIC8vIHJlbW92ZSBsb2FkaW5nXHJcbiAgICBlbHNlIHtcclxuICAgICAgLy8gaWYgdGhlcmUgaXMgYSBsb2FkaW5nIGVsZW1lbnRcclxuICAgICAgaWYgKHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nU2V0dGluZ3MuSUQpKSB7XHJcbiAgICAgICAgdmFyIGxvYWRpbmdFbG0gPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobG9hZGluZ1NldHRpbmdzLklEKTtcclxuICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgbG9hZGluZ0VsbS5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuICAgICAgICAgIHZhciB0aW1lb3V0MiA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAobG9hZGluZ0VsbS5wYXJlbnROb2RlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgbG9hZGluZ0VsbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGxvYWRpbmdFbG0pO1xyXG4gICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0Mik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0sIG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgfSwgZGVsYXkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxuICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgYmFja3VwIHNldHRpbmdzXHJcbiAgICBuZXdMb2FkaW5nU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywgbmV3TG9hZGluZ1NldHRpbmdzQmFja3VwKTtcclxuICB9O1xuICAvLyBMT0FESU5HOiBDcmVhdGU6IGVuZFxuXG4gIC8vIExPQURJTkc6IENoYW5nZSBNZXNzYWdlOiBiZWdpblxuICB2YXIgbG9hZGluZ0NoYW5nZU1lc3NhZ2UgPSBmdW5jdGlvbiAobmV3TWVzc2FnZSkge1xyXG4gICAgLy8gY2hlY2sgdGhlIG5ldyBtZXNzYWdlXHJcbiAgICBpZiAodHlwZW9mIG5ld01lc3NhZ2UgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIG5ld01lc3NhZ2UgPSAnJztcclxuICAgIH1cclxuICAgIC8vIGlmIGhhcyBhbnkgbG9hZGluZ1xyXG4gICAgdmFyIG1lc3NhZ2VXcmFwID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxvYWRpbmdTZXR0aW5ncy5JRCk7XHJcbiAgICBpZiAobWVzc2FnZVdyYXApIHtcclxuICAgICAgLy8gaWYgdGhlcmUgaXMgYSBuZXcgbWVzc2FnZVxyXG4gICAgICBpZiAobmV3TWVzc2FnZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgICAgICBpZiAobmV3TWVzc2FnZS5sZW5ndGggPiBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZU1heExlbmd0aCkge1xyXG4gICAgICAgICAgbmV3TWVzc2FnZSA9IGNvbW1vbkdldFBsYWludGV4dChuZXdNZXNzYWdlKS5zdWJzdHJpbmcoMCwgbmV3TG9hZGluZ1NldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpICsgJy4uLic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIG5ld01lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobmV3TWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIG1heCBsZW5ndGg6IGVuZFxyXG5cbiAgICAgICAgLy8gdGhlcmUgaXMgYSBtZXNzYWdlIGVsZW1lbnRcclxuICAgICAgICB2YXIgb2xkTWVzc2FnZUVsbSA9IG1lc3NhZ2VXcmFwLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdwJylbMF07XHJcbiAgICAgICAgaWYgKG9sZE1lc3NhZ2VFbG0pIHtcclxuICAgICAgICAgIG9sZE1lc3NhZ2VFbG0uaW5uZXJIVE1MID0gbmV3TWVzc2FnZTsgLy8gY2hhbmdlIHRoZSBtZXNzYWdlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHRoZXJlIGlzIG5vIG1lc3NhZ2UgZWxlbWVudFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgLy8gY3JlYXRlIGEgbmV3IG1lc3NhZ2UgZWxlbWVudDogYmVnaW5cclxuICAgICAgICAgIHZhciBuZXdNZXNzYWdlSFRNTCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgICBuZXdNZXNzYWdlSFRNTC5pZCA9IG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlSUQ7XHJcbiAgICAgICAgICBuZXdNZXNzYWdlSFRNTC5jbGFzc05hbWUgPSAnbngtbG9hZGluZy1tZXNzYWdlIG54LWxvYWRpbmctbWVzc2FnZS1uZXcnO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuc3R5bGUuY29sb3IgPSBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUNvbG9yO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuc3R5bGUuZm9udFNpemUgPSBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUZvbnRTaXplO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuaW5uZXJIVE1MID0gbmV3TWVzc2FnZTtcclxuICAgICAgICAgIG1lc3NhZ2VXcmFwLmFwcGVuZENoaWxkKG5ld01lc3NhZ2VIVE1MKTtcclxuICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBtZXNzYWdlIGVsZW1lbnQ6IGVuZFxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvLyBpZiBubyBtZXNzYWdlXHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignV2hlcmUgaXMgdGhlIG5ldyBtZXNzYWdlPycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcbiAgLy8gTE9BRElORzogQ2hhbmdlIE1lc3NhZ2U6IGVuZFxuXG4gIHZhciBOb3RpZmxpeCA9IHtcbiAgICBMb2FkaW5nOiB7XHJcbiAgICAgIC8vIEluaXRcclxuICAgICAgaW5pdDogZnVuY3Rpb24gKHVzZXJMb2FkaW5nT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGV4dGVuZCBvcHRpb25zXHJcbiAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBsb2FkaW5nU2V0dGluZ3MsIHVzZXJMb2FkaW5nT3B0aW9ucyk7XHJcbiAgICAgICAgLy8gaW50ZXJuYWwgY3NzIGlmIGV4aXN0XHJcbiAgICAgICAgY29tbW9uU2V0SW50ZXJuYWxDU1NDb2Rlcyhsb2FkaW5nR2V0SW50ZXJuYWxDU1NDb2RlcywgJ05vdGlmbGl4TG9hZGluZ0ludGVybmFsQ1NTJyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE1lcmdlIEZpcnN0IEluaXRcclxuICAgICAgbWVyZ2U6IGZ1bmN0aW9uICh1c2VyTG9hZGluZ0V4dGVuZE9wdGlvbnMpIHtcclxuICAgICAgICAvLyBpZiBpbml0aWFsaXplZCBhbHJlYWR5XHJcbiAgICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncykge1xyXG4gICAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdMb2FkaW5nU2V0dGluZ3MsIHVzZXJMb2FkaW5nRXh0ZW5kT3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGluaXRpYWxpemUgZmlyc3RcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgTG9hZGluZyBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uJyk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBTdGFuZGFyZFxyXG4gICAgICBzdGFuZGFyZDogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5TdGFuZGFyZCwgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIEhvdXJnbGFzc1xyXG4gICAgICBob3VyZ2xhc3M6IGZ1bmN0aW9uIChtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZSh0eXBlc0xvYWRpbmcuSG91cmdsYXNzLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gQ2lyY2xlXHJcbiAgICAgIGNpcmNsZTogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5DaXJjbGUsIG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMsIHRydWUsIDApOyAvLyB0cnVlID0+IHNob3cgJiYgMCA9PiBkZWxheVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBBcnJvd3NcclxuICAgICAgYXJyb3dzOiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLkFycm93cywgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIERvdHNcclxuICAgICAgZG90czogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5Eb3RzLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gUHVsc2VcclxuICAgICAgcHVsc2U6IGZ1bmN0aW9uIChtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZSh0eXBlc0xvYWRpbmcuUHVsc2UsIG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMsIHRydWUsIDApOyAvLyB0cnVlID0+IHNob3cgJiYgMCA9PiBkZWxheVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBDdXN0b21cclxuICAgICAgY3VzdG9tOiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLkN1c3RvbSwgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE5vdGlmbGl4XHJcbiAgICAgIG5vdGlmbGl4OiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLk5vdGlmbGl4LCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gUmVtb3ZlXHJcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gKGRlbGF5KSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBkZWxheSAhPT0gJ251bWJlcicpIHsgZGVsYXkgPSAwOyB9XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZShudWxsLCBudWxsLCBudWxsLCBmYWxzZSwgZGVsYXkpOyAvLyBmYWxzZSA9PiBoaWRlL3JlbW92ZVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBDaGFuZ2UgVGhlIE1lc3NhZ2VcclxuICAgICAgY2hhbmdlOiBmdW5jdGlvbiAobmV3TWVzc2FnZSkge1xyXG4gICAgICAgIGxvYWRpbmdDaGFuZ2VNZXNzYWdlKG5ld01lc3NhZ2UpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcbiAgfTtcblxuICBpZiAodHlwZW9mIHdpbmRvdy5Ob3RpZmxpeCA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCB3aW5kb3cuTm90aWZsaXgsIHsgTG9hZGluZzogTm90aWZsaXguTG9hZGluZyB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geyBMb2FkaW5nOiBOb3RpZmxpeC5Mb2FkaW5nIH07XG4gIH1cblxufSk7IiwiLypcbiogTm90aWZsaXggUmVwb3J0IEFJTyAoaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8pXG4qIERlc2NyaXB0aW9uOiBUaGlzIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBhdXRvbWF0aWNhbGx5IHRoYXQgdXNpbmcgXCJub3RpZmxpeC5qc1wiLCBhbmQgXCJub3RpZmxpeC5jc3NcIiBmaWxlcy5cbiogVmVyc2lvbjogMy4yLjVcbiogQXV0aG9yOiBGdXJrYW4gTVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9mdXJjYW4pXG4qIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKVxuKi9cblxuLyogZ2xvYmFsIGRlZmluZSAqL1xuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KHJvb3QpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnkocm9vdCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5Ob3RpZmxpeCA9IGZhY3Rvcnkocm9vdCk7XG4gIH1cbn0pKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiAod2luZG93KSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBiZWdpblxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBlbmRcblxuICAvLyBDT01NT046IFZhcmlhYmxlczogYmVnaW5cbiAgdmFyIG5vdGlmbGl4TmFtZXNwYWNlID0gJ05vdGlmbGl4JztcclxuICB2YXIgbm90aWZsaXhDb25zb2xlRG9jcyA9ICdcXG5cXG5WaXNpdCBkb2N1bWVudGF0aW9uIHBhZ2UgdG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8vZG9jdW1lbnRhdGlvbic7XHJcbiAgdmFyIGRlZmF1bHRGb250RmFtaWx5ID0gJy1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWYnO1xuICAvLyBDT01NT046IFZhcmlhYmxlczogZW5kXG5cbiAgLy8gUkVQT1JUOiBEZWZhdWx0IFNldHRpbmdzOiBiZWdpblxuICB2YXIgdHlwZXNSZXBvcnQgPSB7XHJcbiAgICBTdWNjZXNzOiAnU3VjY2VzcycsXHJcbiAgICBGYWlsdXJlOiAnRmFpbHVyZScsXHJcbiAgICBXYXJuaW5nOiAnV2FybmluZycsXHJcbiAgICBJbmZvOiAnSW5mbycsXHJcbiAgfTtcclxuICB2YXIgbmV3UmVwb3J0U2V0dGluZ3M7XHJcbiAgdmFyIHJlcG9ydFNldHRpbmdzID0ge1xyXG4gICAgSUQ6ICdOb3RpZmxpeFJlcG9ydFdyYXAnLCAvLyBjYW4gbm90IGN1c3RvbWl6YWJsZVxyXG4gICAgY2xhc3NOYW1lOiAnbm90aWZsaXgtcmVwb3J0JyxcclxuICAgIHdpZHRoOiAnMzIwcHgnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2Y4ZjhmOCcsXHJcbiAgICBib3JkZXJSYWRpdXM6ICcyNXB4JyxcclxuICAgIHJ0bDogZmFsc2UsXHJcbiAgICB6aW5kZXg6IDQwMDIsXHJcbiAgICBiYWNrT3ZlcmxheTogdHJ1ZSxcclxuICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDAsMCwwLDAuNSknLFxyXG4gICAgYmFja092ZXJsYXlDbGlja1RvQ2xvc2U6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBzdmdTaXplOiAnMTEwcHgnLFxyXG4gICAgcGxhaW5UZXh0OiB0cnVlLFxyXG4gICAgdGl0bGVGb250U2l6ZTogJzE2cHgnLFxyXG4gICAgdGl0bGVNYXhMZW5ndGg6IDM0LFxyXG4gICAgbWVzc2FnZUZvbnRTaXplOiAnMTNweCcsXHJcbiAgICBtZXNzYWdlTWF4TGVuZ3RoOiA0MDAsXHJcbiAgICBidXR0b25Gb250U2l6ZTogJzE0cHgnLFxyXG4gICAgYnV0dG9uTWF4TGVuZ3RoOiAzNCxcclxuICAgIGNzc0FuaW1hdGlvbjogdHJ1ZSxcclxuICAgIGNzc0FuaW1hdGlvbkR1cmF0aW9uOiAzNjAsXHJcbiAgICBjc3NBbmltYXRpb25TdHlsZTogJ2ZhZGUnLCAvLyAnZmFkZScgLSAnem9vbSdcclxuXG4gICAgc3VjY2Vzczoge1xyXG4gICAgICBzdmdDb2xvcjogJyMzMmM2ODInLFxyXG4gICAgICB0aXRsZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICAgIG1lc3NhZ2VDb2xvcjogJyMyNDI0MjQnLFxyXG4gICAgICBidXR0b25CYWNrZ3JvdW5kOiAnIzMyYzY4MicsXHJcbiAgICAgIGJ1dHRvbkNvbG9yOiAnI2ZmZicsXHJcbiAgICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDUwLDE5OCwxMzAsMC4yKScsXHJcbiAgICB9LFxyXG5cbiAgICBmYWlsdXJlOiB7XHJcbiAgICAgIHN2Z0NvbG9yOiAnI2ZmNTU0OScsXHJcbiAgICAgIHRpdGxlQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgbWVzc2FnZUNvbG9yOiAnIzI0MjQyNCcsXHJcbiAgICAgIGJ1dHRvbkJhY2tncm91bmQ6ICcjZmY1NTQ5JyxcclxuICAgICAgYnV0dG9uQ29sb3I6ICcjZmZmJyxcclxuICAgICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMjU1LDg1LDczLDAuMiknLFxyXG4gICAgfSxcclxuXG4gICAgd2FybmluZzoge1xyXG4gICAgICBzdmdDb2xvcjogJyNlZWJmMzEnLFxyXG4gICAgICB0aXRsZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICAgIG1lc3NhZ2VDb2xvcjogJyMyNDI0MjQnLFxyXG4gICAgICBidXR0b25CYWNrZ3JvdW5kOiAnI2VlYmYzMScsXHJcbiAgICAgIGJ1dHRvbkNvbG9yOiAnI2ZmZicsXHJcbiAgICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDIzOCwxOTEsNDksMC4yKScsXHJcbiAgICB9LFxyXG5cbiAgICBpbmZvOiB7XHJcbiAgICAgIHN2Z0NvbG9yOiAnIzI2YzBkMycsXHJcbiAgICAgIHRpdGxlQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgbWVzc2FnZUNvbG9yOiAnIzI0MjQyNCcsXHJcbiAgICAgIGJ1dHRvbkJhY2tncm91bmQ6ICcjMjZjMGQzJyxcclxuICAgICAgYnV0dG9uQ29sb3I6ICcjZmZmJyxcclxuICAgICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMzgsMTkyLDIxMSwwLjIpJyxcclxuICAgIH0sXHJcbiAgfTtcbiAgLy8gUkVQT1JUOiBEZWZhdWx0IFNldHRpbmdzOiBlbmRcblxuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGJlZ2luXG4gIHZhciBjb21tb25Db25zb2xlRXJyb3IgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJyVjICcgKyBub3RpZmxpeE5hbWVzcGFjZSArICcgRXJyb3IgJywgJ3BhZGRpbmc6MnB4O2JvcmRlci1yYWRpdXM6MjBweDtjb2xvcjojZmZmO2JhY2tncm91bmQ6I2ZmNTU0OScsICdcXG4nICsgbWVzc2FnZSArIG5vdGlmbGl4Q29uc29sZURvY3MpO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ29uc29sZSBFcnJvcjogZW5kXG5cbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGJlZ2luXG4gIHZhciBjb21tb25DaGVja0hlYWRPckJvZHkgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgaWYgKCFlbGVtZW50KSB7IGVsZW1lbnQgPSAnaGVhZCc7IH1cclxuICAgIGlmICh3aW5kb3cuZG9jdW1lbnRbZWxlbWVudF0gPT09IG51bGwpIHtcclxuICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQsIGJ1dCB5b3UgY2FsbGVkIGl0IGJlZm9yZSB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQgaGFzIGJlZW4gY3JlYXRlZC4nKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGVuZFxuXG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGNvbW1vblNldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoZ2V0SW50ZXJuYWxDU1NDb2Rlcywgc3R5bGVFbGVtZW50SWQpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBoZWFkXHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnaGVhZCcpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpbnRlcm5hbCBjc3NcclxuICAgIGlmIChnZXRJbnRlcm5hbENTU0NvZGVzKCkgIT09IG51bGwgJiYgIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdHlsZUVsZW1lbnRJZCkpIHtcclxuICAgICAgdmFyIGludGVybmFsQ1NTID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgIGludGVybmFsQ1NTLmlkID0gc3R5bGVFbGVtZW50SWQ7XHJcbiAgICAgIGludGVybmFsQ1NTLmlubmVySFRNTCA9IGdldEludGVybmFsQ1NTQ29kZXMoKTtcclxuICAgICAgd2luZG93LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoaW50ZXJuYWxDU1MpO1xyXG4gICAgfVxyXG4gIH07XG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09NTU9OOiBFeHRlbmQgT3B0aW9uczogYmVnaW5cbiAgdmFyIGNvbW1vbkV4dGVuZE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyB2YXJpYWJsZXNcclxuICAgIHZhciBleHRlbmRlZCA9IHt9O1xyXG4gICAgdmFyIGRlZXAgPSBmYWxzZTtcclxuICAgIHZhciBpID0gMDtcclxuICAgIC8vIGNoZWNrIGlmIGEgZGVlcCBtZXJnZVxyXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHNbMF0pID09PSAnW29iamVjdCBCb29sZWFuXScpIHtcclxuICAgICAgZGVlcCA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgaSsrO1xyXG4gICAgfVxyXG4gICAgLy8gbWVyZ2UgdGhlIG9iamVjdCBpbnRvIHRoZSBleHRlbmRlZCBvYmplY3RcclxuICAgIHZhciBtZXJnZSA9IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIHtcclxuICAgICAgICAgIC8vIGlmIHByb3BlcnR5IGlzIGFuIG9iamVjdCwgbWVyZ2UgcHJvcGVydGllc1xyXG4gICAgICAgICAgaWYgKGRlZXAgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9ialtwcm9wXSkgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gY29tbW9uRXh0ZW5kT3B0aW9ucyhleHRlbmRlZFtwcm9wXSwgb2JqW3Byb3BdKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gb2JqW3Byb3BdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIG9iamVjdCBhbmQgY29uZHVjdCBhIG1lcmdlXHJcbiAgICBmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBtZXJnZShhcmd1bWVudHNbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGV4dGVuZGVkO1xyXG4gIH07XG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGVuZFxuXG4gIC8vIENPTU1PTjogR2V0IFBsYWludGV4dDogYmVnaW5cbiAgdmFyIGNvbW1vbkdldFBsYWludGV4dCA9IGZ1bmN0aW9uIChodG1sKSB7XHJcbiAgICB2YXIgaHRtbFBvb2wgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBodG1sUG9vbC5pbm5lckhUTUwgPSBodG1sO1xyXG4gICAgcmV0dXJuIGh0bWxQb29sLnRleHRDb250ZW50IHx8IGh0bWxQb29sLmlubmVyVGV4dCB8fCAnJztcclxuICB9O1xuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGVuZFxuXG4gIC8vIFJFUE9SVDogU1ZHIEljb24gU3VjY2VzczogYmVnaW5cbiAgdmFyIHJlcG9ydFN2Z0ljb25TdWNjZXNzID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICcxMTBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciByZXBvcnRTdmdTdWNjZXNzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhSZXBvcnRTdWNjZXNzXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMi1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MyLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX0jTlhSZXBvcnRTdWNjZXNzICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIj48cGF0aCBkPVwiTTYwIDExNS4zOEMyOS40NiAxMTUuMzggNC42MiA5MC41NCA0LjYyIDYwIDQuNjIgMjkuNDYgMjkuNDYgNC42MiA2MCA0LjYyYzMwLjU0IDAgNTUuMzggMjQuODQgNTUuMzggNTUuMzggMCAzMC41NC0yNC44NCA1NS4zOC01NS4zOCA1NS4zOHpNNjAgMEMyNi45MiAwIDAgMjYuOTIgMCA2MHMyNi45MiA2MCA2MCA2MCA2MC0yNi45MiA2MC02MFM5My4wOCAwIDYwIDB6XCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVwiIGZpbGw9XCJpbmhlcml0XCIgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIvPjwvZz48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIj48cGF0aCBkPVwiTTg4LjI3IDM1LjM5TDUyLjggNzUuMjkgMzEuNDMgNTguMmMtLjk4LS44MS0yLjQ0LS42My0zLjI0LjM2LS43OS45OS0uNjMgMi40NC4zNiAzLjI0bDIzLjA4IDE4LjQ2Yy40My4zNC45My41MSAxLjQ0LjUxLjY0IDAgMS4yNy0uMjYgMS43NC0uNzhsMzYuOTEtNDEuNTNhMi4zIDIuMyAwIDAgMC0uMTktMy4yNmMtLjk1LS44Ni0yLjQxLS43Ny0zLjI2LjE5elwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiByZXBvcnRTdmdTdWNjZXNzO1xyXG4gIH07XG4gIC8vIFJFUE9SVDogU1ZHIEljb24gU3VjY2VzczogZW5kXG5cbiAgLy8gUkVQT1JUOiBTVkcgSWNvbiBGYWlsdXJlOiBiZWdpblxuICB2YXIgcmVwb3J0U3ZnSWNvbkZhaWx1cmUgPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzExMHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjZmY1NTQ5JzsgfVxyXG4gICAgdmFyIHJlcG9ydFN2Z0ZhaWx1cmUgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWFJlcG9ydEZhaWx1cmVcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgZmlsbD1cIicgKyBjb2xvciArICdcIiB2aWV3Qm94PVwiMCAwIDEyMCAxMjBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fSNOWFJlcG9ydEZhaWx1cmUgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVwiPjxwYXRoIGQ9XCJNNC4zNSAzNC45NWMwLTE2LjgyIDEzLjc4LTMwLjYgMzAuNi0zMC42aDUwLjFjMTYuODIgMCAzMC42IDEzLjc4IDMwLjYgMzAuNnY1MC4xYzAgMTYuODItMTMuNzggMzAuNi0zMC42IDMwLjZoLTUwLjFjLTE2LjgyIDAtMzAuNi0xMy43OC0zMC42LTMwLjZ2LTUwLjF6TTM0Ljk1IDEyMGg1MC4xYzE5LjIyIDAgMzQuOTUtMTUuNzMgMzQuOTUtMzQuOTV2LTUwLjFDMTIwIDE1LjczIDEwNC4yNyAwIDg1LjA1IDBoLTUwLjFDMTUuNzMgMCAwIDE1LjczIDAgMzQuOTV2NTAuMUMwIDEwNC4yNyAxNS43MyAxMjAgMzQuOTUgMTIwelwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcIj48cGF0aCBkPVwiTTgyLjQgMzcuNmMtLjktLjktMi4zNy0uOS0zLjI3IDBMNjAgNTYuNzMgNDAuODYgMzcuNmEyLjMwNiAyLjMwNiAwIDAgMC0zLjI2IDMuMjZMNTYuNzMgNjAgMzcuNiA3OS4xM2MtLjkuOS0uOSAyLjM3IDAgMy4yNy40NS40NSAxLjA0LjY4IDEuNjMuNjguNTkgMCAxLjE4LS4yMyAxLjYzLS42OEw2MCA2My4yNiA3OS4xMyA4Mi40Yy40NS40NSAxLjA1LjY4IDEuNjQuNjguNTggMCAxLjE4LS4yMyAxLjYzLS42OC45LS45LjktMi4zNyAwLTMuMjdMNjMuMjYgNjAgODIuNCA0MC44NmMuOS0uOTEuOS0yLjM2IDAtMy4yNnpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gcmVwb3J0U3ZnRmFpbHVyZTtcclxuICB9O1xuICAvLyBSRVBPUlQ6IFNWRyBJY29uIEZhaWx1cmU6IGVuZFxuXG4gIC8vIFJFUE9SVDogU1ZHIEljb24gV2FybmluZzogYmVnaW5cbiAgdmFyIHJlcG9ydFN2Z0ljb25XYXJuaW5nID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICcxMTBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnI2VlYmYzMSc7IH1cclxuICAgIHZhciByZXBvcnRTdmdXYXJuaW5nID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhSZXBvcnRXYXJuaW5nXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX0jTlhSZXBvcnRXYXJuaW5nICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcIj48cGF0aCBkPVwiTTExNS40NiAxMDYuMTVsLTU0LjA0LTkzLjhjLS42MS0xLjA2LTIuMjMtMS4wNi0yLjg0IDBsLTU0LjA0IDkzLjhjLS42MiAxLjA3LjIxIDIuMjkgMS40MiAyLjI5aDEwOC4wOGMxLjIxIDAgMi4wNC0xLjIyIDEuNDItMi4yOXpNNjUuMTcgMTAuMmw1NC4wNCA5My44YzIuMjggMy45Ni0uNjUgOC43OC01LjE3IDguNzhINS45NmMtNC41MiAwLTcuNDUtNC44Mi01LjE3LTguNzhsNTQuMDQtOTMuOGMyLjI4LTMuOTUgOC4wMy00IDEwLjM0IDB6XCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzItYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVwiIGZpbGw9XCJpbmhlcml0XCIgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIvPjwvZz48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweClcIj48cGF0aCBkPVwiTTU3LjgzIDk0LjAxYzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN3YtMy4yYzAtMS4yLS45Ny0yLjE3LTIuMTctMi4xN3MtMi4xNy45Ny0yLjE3IDIuMTd2My4yem0wLTE0LjE1YzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN1YzOS4yMWMwLTEuMi0uOTctMi4xNy0yLjE3LTIuMTdzLTIuMTcuOTctMi4xNyAyLjE3djQwLjY1elwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmc0LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmc0LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiByZXBvcnRTdmdXYXJuaW5nO1xyXG4gIH07XG4gIC8vIFJFUE9SVDogU1ZHIEljb24gV2FybmluZzogZW5kXG5cbiAgLy8gUkVQT1JUOiBTVkcgSWNvbiBJbmZvOiBiZWdpblxuICB2YXIgcmVwb3J0U3ZnSWNvbkluZm8gPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzExMHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjMjZjMGQzJzsgfVxyXG4gICAgdmFyIHJlcG9ydFN2Z0luZm8gPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWFJlcG9ydEluZm9cIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgZmlsbD1cIicgKyBjb2xvciArICdcIiB2aWV3Qm94PVwiMCAwIDEyMCAxMjBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm8zLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRJbmZvMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEluZm8xLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fSNOWFJlcG9ydEluZm8gKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVwiPjxwYXRoIGQ9XCJNNjAgMTE1LjM4QzI5LjQ2IDExNS4zOCA0LjYyIDkwLjU0IDQuNjIgNjAgNC42MiAyOS40NiAyOS40NiA0LjYyIDYwIDQuNjJjMzAuNTQgMCA1NS4zOCAyNC44NCA1NS4zOCA1NS4zOCAwIDMwLjU0LTI0Ljg0IDU1LjM4LTU1LjM4IDU1LjM4ek02MCAwQzI2LjkyIDAgMCAyNi45MiAwIDYwczI2LjkyIDYwIDYwIDYwIDYwLTI2LjkyIDYwLTYwUzkzLjA4IDAgNjAgMHpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMi1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMi1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjxnIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXCI+PHBhdGggZD1cIk01Ny43NSA0My44NWMwLTEuMjQgMS4wMS0yLjI1IDIuMjUtMi4yNXMyLjI1IDEuMDEgMi4yNSAyLjI1djQ4LjE4YzAgMS4yNC0xLjAxIDIuMjUtMi4yNSAyLjI1cy0yLjI1LTEuMDEtMi4yNS0yLjI1VjQzLjg1em0wLTE1Ljg4YzAtMS4yNCAxLjAxLTIuMjUgMi4yNS0yLjI1czIuMjUgMS4wMSAyLjI1IDIuMjV2My4zMmMwIDEuMjUtMS4wMSAyLjI1LTIuMjUgMi4yNXMtMi4yNS0xLTIuMjUtMi4yNXYtMy4zMnpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gcmVwb3J0U3ZnSW5mbztcclxuICB9O1xuICAvLyBSRVBPUlQ6IFNWRyBJY29uIEluZm86IGVuZFxuXG4gIC8vIFJFUE9SVDogR2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIHJlcG9ydEdldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcmVwb3J0Q1NTID0gJ1tpZF49Tm90aWZsaXhSZXBvcnRXcmFwXXtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjQwMDI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Zm9udC1mYW1pbHk6XCJRdWlja3NhbmRcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcIlNlZ29lIFVJXCIsUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixBcmlhbCxzYW5zLXNlcmlmO2xlZnQ6MDt0b3A6MDtwYWRkaW5nOjEwcHg7Y29sb3I6IzFlMWUxZTtib3JkZXItcmFkaXVzOjI1cHg7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXSAqey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1vdmVybGF5XCJde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuNSk7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDowfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXYubngtcmVwb3J0LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl17d2lkdGg6MzIwcHg7bWF4LXdpZHRoOjEwMCU7bWF4LWhlaWdodDo5NnZoO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bztib3JkZXItcmFkaXVzOmluaGVyaXQ7cGFkZGluZzoxMHB4Oy13ZWJraXQtZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLDAsMCwwLjA1KSk7ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLCAwLCAwLCAuMDUpKTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjAzKTtiYWNrZ3JvdW5kOiNmOGY4Zjg7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl06Oi13ZWJraXQtc2Nyb2xsYmFye3dpZHRoOjA7aGVpZ2h0OjB9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzJD1cIi1pY29uXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt3aWR0aDoxMTBweDtoZWlnaHQ6MTEwcHg7ZGlzcGxheTpibG9jazttYXJnaW46NnB4IGF1dG8gMTJweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyQ9XCItaWNvblwiXSBzdmd7bWluLXdpZHRoOjEwMCU7bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG99W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPio+aDV7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OjUwMDtsaW5lLWhlaWdodDoxLjQ7bWFyZ2luOjAgMCAxMHB4O3BhZGRpbmc6MCAwIDEwcHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMSk7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT4qPnB7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDpub3JtYWw7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3BhZGRpbmc6MCAxMHB4O21hcmdpbjowIDAgMTBweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0gYSNOWFJlcG9ydEJ1dHRvbnt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50Oy13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6cmlnaHQ7cGFkZGluZzo3cHggMTdweDtiYWNrZ3JvdW5kOiMzMmM2ODI7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40O2ZvbnQtd2VpZ2h0OjUwMDtib3JkZXItcmFkaXVzOmluaGVyaXQhaW1wb3J0YW50O2NvbG9yOiNmZmZ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdIGEjTlhSZXBvcnRCdXR0b246aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpO2JveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSl9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJ0bC1vbiBhI05YUmVwb3J0QnV0dG9ue2Zsb2F0OmxlZnR9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItb3ZlcmxheVwiXS5ueC13aXRoLWFuaW1hdGlvbnstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtb3ZlcmxheS1hbmltYXRpb24gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRley13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb217LXdlYmtpdC1hbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcmVtb3ZlPmRpdltjbGFzcyo9XCItY29udGVudFwiXS5ueC13aXRoLWFuaW1hdGlvbi5ueC16b29te29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZXswJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfTUwJXtvcGFjaXR5Oi41Oy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9fUBrZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZXswJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfTUwJXtvcGFjaXR5Oi41Oy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9fSc7XHJcbiAgICByZXR1cm4gcmVwb3J0Q1NTIHx8IG51bGw7XHJcbiAgfTtcbiAgLy8gUkVQT1JUOiBHZXQgSW50ZXJuYWwgQ1NTIENvZGVzOiBlbmRcblxuICAvLyBSRVBPUlQ6IENyZWF0ZTogYmVnaW5cbiAgdmFyIHJlcG9ydENyZWF0ZSA9IGZ1bmN0aW9uIChyZXBvcnRUeXBlLCB0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBib2R5XHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnYm9keScpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpZiBub3QgaW5pdGlhbGl6ZWQgcHJldGVuZCBsaWtlIGluaXRcclxuICAgIGlmICghbmV3UmVwb3J0U2V0dGluZ3MpIHtcclxuICAgICAgTm90aWZsaXguUmVwb3J0LmluaXQoe30pO1xyXG4gICAgfVxyXG5cbiAgICAvLyBjcmVhdGUgYSBiYWNrdXAgZm9yIHNldHRpbmdzXHJcbiAgICB2YXIgbmV3UmVwb3J0U2V0dGluZ3NCYWNrdXAgPSB7fTtcclxuXG4gICAgLy8gY2hlY2sgY2FsbGJhY2tPck9wdGlvbnMgYW5kIG9wdGlvbnM6IGJlZ2luXHJcbiAgICBpZiAoKHR5cGVvZiBjYWxsYmFja09yT3B0aW9ucyA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoY2FsbGJhY2tPck9wdGlvbnMpKSB8fCAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KG9wdGlvbnMpKSkge1xyXG4gICAgICAvLyBuZXcgb3B0aW9uc1xyXG4gICAgICB2YXIgbmV3T3B0aW9ucyA9IHt9O1xyXG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrT3JPcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBjYWxsYmFja09yT3B0aW9ucztcclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICBuZXdPcHRpb25zID0gb3B0aW9ucztcclxuICAgICAgfVxyXG5cbiAgICAgIC8vIGV4dGVuZCB0aGUgYmFja3VwIHNldHRpbmdzIHdpdGggbmV3IHNldHRpbmdzXHJcbiAgICAgIG5ld1JlcG9ydFNldHRpbmdzQmFja3VwID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdSZXBvcnRTZXR0aW5ncywge30pO1xyXG5cbiAgICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgb3B0aW9uc1xyXG4gICAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3UmVwb3J0U2V0dGluZ3MsIG5ld09wdGlvbnMpO1xyXG4gICAgfVxyXG4gICAgLy8gY2hlY2sgY2FsbGJhY2tPck9wdGlvbnMgYW5kIGNhbGxiYWNrOiBlbmRcclxuXG4gICAgLy8gcmVwb3J0IHR5cGVcclxuICAgIHZhciB0aGVUeXBlID0gbmV3UmVwb3J0U2V0dGluZ3NbcmVwb3J0VHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgnZW4nKV07XHJcblxuICAgIC8vIGNoZWNrIHRoZSBhcmd1bWVudHM6IGJlZ2luXHJcbiAgICBpZiAodHlwZW9mIHRpdGxlICE9PSAnc3RyaW5nJykgeyB0aXRsZSA9ICdOb3RpZmxpeCAnICsgcmVwb3J0VHlwZTsgfVxyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSAnc3RyaW5nJykge1xyXG4gICAgICBpZiAocmVwb3J0VHlwZSA9PT0gdHlwZXNSZXBvcnQuU3VjY2Vzcykge1xyXG4gICAgICAgIG1lc3NhZ2UgPSAnXCJEbyBub3QgdHJ5IHRvIGJlY29tZSBhIHBlcnNvbiBvZiBzdWNjZXNzIGJ1dCB0cnkgdG8gYmVjb21lIGEgcGVyc29uIG9mIHZhbHVlLlwiIDxicj48YnI+LSBBbGJlcnQgRWluc3RlaW4nO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkZhaWx1cmUpIHtcclxuICAgICAgICBtZXNzYWdlID0gJ1wiRmFpbHVyZSBpcyBzaW1wbHkgdGhlIG9wcG9ydHVuaXR5IHRvIGJlZ2luIGFnYWluLCB0aGlzIHRpbWUgbW9yZSBpbnRlbGxpZ2VudGx5LlwiIDxicj48YnI+LSBIZW5yeSBGb3JkJztcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmIChyZXBvcnRUeXBlID09PSB0eXBlc1JlcG9ydC5XYXJuaW5nKSB7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdcIlRoZSBwZW9wbGVzIHdobyB3YW50IHRvIGxpdmUgY29tZm9ydGFibHkgd2l0aG91dCBwcm9kdWNpbmcgYW5kIGZhdGlndWU7IHRoZXkgYXJlIGRvb21lZCB0byBsb3NlIHRoZWlyIGRpZ25pdHksIHRoZW4gbGliZXJ0eSwgYW5kIHRoZW4gaW5kZXBlbmRlbmNlIGFuZCBkZXN0aW55LlwiIDxicj48YnI+LSBNdXN0YWZhIEtlbWFsIEF0YXR1cmsnO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkluZm8pIHtcclxuICAgICAgICBtZXNzYWdlID0gJ1wiS25vd2xlZGdlIHJlc3RzIG5vdCB1cG9uIHRydXRoIGFsb25lLCBidXQgdXBvbiBlcnJvciBhbHNvLlwiIDxicj48YnI+LSBDYXJsIEd1c3RhdiBKdW5nJztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBidXR0b25UZXh0ICE9PSAnc3RyaW5nJykgeyBidXR0b25UZXh0ID0gJ09rYXknOyB9XHJcbiAgICAvLyBjaGVjayB0aGUgYXJndW1lbnRzOiBlbmRcclxuXG4gICAgLy8gaWYgcGxhaW5UZXh0IGlzIHRydWUgPT4gSFRNTCB0YWdzIG5vdCBhbGxvd2VkOiBiZWdpblxyXG4gICAgaWYgKG5ld1JlcG9ydFNldHRpbmdzLnBsYWluVGV4dCkge1xyXG4gICAgICB0aXRsZSA9IGNvbW1vbkdldFBsYWludGV4dCh0aXRsZSk7XHJcbiAgICAgIG1lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZSk7XHJcbiAgICAgIGJ1dHRvblRleHQgPSBjb21tb25HZXRQbGFpbnRleHQoYnV0dG9uVGV4dCk7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBwbGFpblRleHQgaXMgdHJ1ZSA9PiBIVE1MIHRhZ3Mgbm90IGFsbG93ZWQ6IGVuZFxyXG5cbiAgICAvLyBpZiBwbGFpblRleHQgaXMgZmFsc2UgYnV0IHRoZSBjb250ZW50cyBsZW5ndGggbW9yZSB0aGFuICR7dGl0bGUgfCBtZXNzYWdlIHwgYnV0dG9uVGV4dH1NYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBiZWdpblxyXG4gICAgaWYgKCFuZXdSZXBvcnRTZXR0aW5ncy5wbGFpblRleHQpIHtcclxuICAgICAgaWYgKHRpdGxlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlID0gJ1RoZSBcInBsYWluVGV4dFwiIG9wdGlvbiBpcyBcImZhbHNlXCIgYW5kIHRoZSB0aXRsZSBjb250ZW50IGxlbmd0aCBpcyBtb3JlIHRoYW4gdGhlIFwidGl0bGVNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChtZXNzYWdlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgICB0aXRsZSA9ICdQb3NzaWJsZSBIVE1MIFRhZ3MgRXJyb3InO1xyXG4gICAgICAgIG1lc3NhZ2UgPSAnVGhlIFwicGxhaW5UZXh0XCIgb3B0aW9uIGlzIFwiZmFsc2VcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcIm1lc3NhZ2VNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChidXR0b25UZXh0Lmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLmJ1dHRvbk1heExlbmd0aCkge1xyXG4gICAgICAgIHRpdGxlID0gJ1Bvc3NpYmxlIEhUTUwgVGFncyBFcnJvcic7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgYnV0dG9uIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiB0aGUgXCJidXR0b25NYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBpZiBwbGFpblRleHQgaXMgZmFsc2UgYnV0IHRoZSBjb250ZW50cyBsZW5ndGggbW9yZSB0aGFuICR7dGl0bGUgfCBtZXNzYWdlIHwgYnV0dG9uVGV4dH1NYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBlbmRcclxuXG4gICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgIGlmICh0aXRsZS5sZW5ndGggPiBuZXdSZXBvcnRTZXR0aW5ncy50aXRsZU1heExlbmd0aCkge1xyXG4gICAgICB0aXRsZSA9IHRpdGxlLnN1YnN0cmluZygwLCBuZXdSZXBvcnRTZXR0aW5ncy50aXRsZU1heExlbmd0aCkgKyAnLi4uJztcclxuICAgIH1cclxuICAgIGlmIChtZXNzYWdlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgbWVzc2FnZSA9IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpICsgJy4uLic7XHJcbiAgICB9XHJcbiAgICBpZiAoYnV0dG9uVGV4dC5sZW5ndGggPiBuZXdSZXBvcnRTZXR0aW5ncy5idXR0b25NYXhMZW5ndGgpIHtcclxuICAgICAgYnV0dG9uVGV4dCA9IGJ1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld1JlcG9ydFNldHRpbmdzLmJ1dHRvbk1heExlbmd0aCkgKyAnLi4uJztcclxuICAgIH1cclxuICAgIC8vIG1heCBsZW5ndGg6IGVuZFxyXG5cbiAgICAvLyBpZiBjc3NBbmltYWlvbiBpcyBmYWxzZSA9PiBkdXJhdGlvbjogYmVnaW5cclxuICAgIGlmICghbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uKSB7XHJcbiAgICAgIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uID0gMDtcclxuICAgIH1cclxuICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBlbmRcclxuXG4gICAgLy8gcmVwb3J0IHdyYXA6IGJlZ2luXHJcbiAgICB2YXIgbnRmbHhSZXBvcnRXcmFwID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLmlkID0gcmVwb3J0U2V0dGluZ3MuSUQ7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuY2xhc3NOYW1lID0gbmV3UmVwb3J0U2V0dGluZ3MuY2xhc3NOYW1lO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLnpJbmRleCA9IG5ld1JlcG9ydFNldHRpbmdzLnppbmRleDtcclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBuZXdSZXBvcnRTZXR0aW5ncy5ib3JkZXJSYWRpdXM7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuc3R5bGUuZm9udEZhbWlseSA9ICdcIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5mb250RmFtaWx5ICsgJ1wiLCAnICsgZGVmYXVsdEZvbnRGYW1pbHk7XHJcblxuICAgIC8vIHJ0bDogYmVnaW5cclxuICAgIGlmIChuZXdSZXBvcnRTZXR0aW5ncy5ydGwpIHtcclxuICAgICAgbnRmbHhSZXBvcnRXcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICBudGZseFJlcG9ydFdyYXAuY2xhc3NMaXN0LmFkZCgnbngtcnRsLW9uJyk7XHJcbiAgICB9XHJcbiAgICAvLyBydGw6IGVuZFxyXG5cbiAgICAvLyBwb3NpdGlvbjogYmVnaW5cclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLmZsZXhXcmFwID0gJ3dyYXAnO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSAnY29sdW1uJztcclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5hbGlnbkl0ZW1zID0gJ2NlbnRlcic7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnY2VudGVyJztcclxuICAgIC8vIHBvc2l0aW9uOiBlbmRcclxuXG4gICAgLy8gb3ZlcmxheTogYmVnaW5cclxuICAgIHZhciByZXBvcnRPdmVybGF5ID0gJyc7XHJcbiAgICB2YXIgcmVwb3J0T3ZlcmxheUNsaWNrVG9DbG9zZSA9IG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5Q2xpY2tUb0Nsb3NlID09PSB0cnVlO1xyXG4gICAgaWYgKG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5KSB7XHJcbiAgICAgIHJlcG9ydE92ZXJsYXkgPSAnPGRpdiBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLW92ZXJsYXknICsgKG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbiA/ICcgbngtd2l0aC1hbmltYXRpb24nIDogJycpICsgKHJlcG9ydE92ZXJsYXlDbGlja1RvQ2xvc2UgPyAnIG54LXJlcG9ydC1jbGljay10by1jbG9zZScgOiAnJykgKyAnXCIgc3R5bGU9XCJiYWNrZ3JvdW5kOicgKyAodGhlVHlwZS5iYWNrT3ZlcmxheUNvbG9yIHx8IG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5Q29sb3IpICsgJzthbmltYXRpb24tZHVyYXRpb246JyArIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBvdmVybGF5OiBlbmRcclxuXG4gICAgLy8gc3ZnIGljb246IGJlZ2luXHJcbiAgICB2YXIgc3ZnSWNvbiA9ICcnO1xyXG4gICAgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LlN1Y2Nlc3MpIHtcclxuICAgICAgc3ZnSWNvbiA9IHJlcG9ydFN2Z0ljb25TdWNjZXNzKG5ld1JlcG9ydFNldHRpbmdzLnN2Z1NpemUsIHRoZVR5cGUuc3ZnQ29sb3IpO1xyXG4gICAgfSBlbHNlIGlmIChyZXBvcnRUeXBlID09PSB0eXBlc1JlcG9ydC5GYWlsdXJlKSB7XHJcbiAgICAgIHN2Z0ljb24gPSByZXBvcnRTdmdJY29uRmFpbHVyZShuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplLCB0aGVUeXBlLnN2Z0NvbG9yKTtcclxuICAgIH0gZWxzZSBpZiAocmVwb3J0VHlwZSA9PT0gdHlwZXNSZXBvcnQuV2FybmluZykge1xyXG4gICAgICBzdmdJY29uID0gcmVwb3J0U3ZnSWNvbldhcm5pbmcobmV3UmVwb3J0U2V0dGluZ3Muc3ZnU2l6ZSwgdGhlVHlwZS5zdmdDb2xvcik7XHJcbiAgICB9IGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkluZm8pIHtcclxuICAgICAgc3ZnSWNvbiA9IHJlcG9ydFN2Z0ljb25JbmZvKG5ld1JlcG9ydFNldHRpbmdzLnN2Z1NpemUsIHRoZVR5cGUuc3ZnQ29sb3IpO1xyXG4gICAgfVxyXG4gICAgLy8gc3ZnIGljb246IGVuZFxyXG5cbiAgICBudGZseFJlcG9ydFdyYXAuaW5uZXJIVE1MID0gcmVwb3J0T3ZlcmxheSArICc8ZGl2IGNsYXNzPVwiJyArIG5ld1JlcG9ydFNldHRpbmdzLmNsYXNzTmFtZSArICctY29udGVudCcgKyAobmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbiAnIDogJycpICsgJyBueC0nICsgbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uU3R5bGUgKyAnXCIgc3R5bGU9XCJ3aWR0aDonICsgbmV3UmVwb3J0U2V0dGluZ3Mud2lkdGggKyAnOyBiYWNrZ3JvdW5kOicgKyBuZXdSZXBvcnRTZXR0aW5ncy5iYWNrZ3JvdW5kQ29sb3IgKyAnOyBhbmltYXRpb24tZHVyYXRpb246JyArIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPicgK1xyXG4gICAgICAnPGRpdiBzdHlsZT1cIndpZHRoOicgKyBuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplICsgJzsgaGVpZ2h0OicgKyBuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplICsgJztcIiBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLWljb25cIj4nICsgc3ZnSWNvbiArICc8L2Rpdj4nICtcclxuICAgICAgJzxoNSBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLXRpdGxlXCIgc3R5bGU9XCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTonICsgbmV3UmVwb3J0U2V0dGluZ3MudGl0bGVGb250U2l6ZSArICc7IGNvbG9yOicgKyB0aGVUeXBlLnRpdGxlQ29sb3IgKyAnO1wiPicgKyB0aXRsZSArICc8L2g1PicgK1xyXG4gICAgICAnPHAgY2xhc3M9XCInICsgbmV3UmVwb3J0U2V0dGluZ3MuY2xhc3NOYW1lICsgJy1tZXNzYWdlXCIgc3R5bGU9XCJmb250LXNpemU6JyArIG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VGb250U2l6ZSArICc7IGNvbG9yOicgKyB0aGVUeXBlLm1lc3NhZ2VDb2xvciArICc7XCI+JyArIG1lc3NhZ2UgKyAnPC9wPicgK1xyXG4gICAgICAnPGEgaWQ9XCJOWFJlcG9ydEJ1dHRvblwiIGNsYXNzPVwiJyArIG5ld1JlcG9ydFNldHRpbmdzLmNsYXNzTmFtZSArICctYnV0dG9uXCIgc3R5bGU9XCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTonICsgbmV3UmVwb3J0U2V0dGluZ3MuYnV0dG9uRm9udFNpemUgKyAnOyBiYWNrZ3JvdW5kOicgKyB0aGVUeXBlLmJ1dHRvbkJhY2tncm91bmQgKyAnOyBjb2xvcjonICsgdGhlVHlwZS5idXR0b25Db2xvciArICc7XCI+JyArIGJ1dHRvblRleHQgKyAnPC9hPicgK1xyXG4gICAgICAnPC9kaXY+JztcclxuXG4gICAgLy8gaWYgdGhlcmUgaXMgbm8gcmVwb3J0IGVsZW1lbnRcclxuICAgIGlmICghd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG50Zmx4UmVwb3J0V3JhcC5pZCkpIHtcclxuICAgICAgLy8gYXBwZW5kXHJcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG50Zmx4UmVwb3J0V3JhcCk7XHJcblxuICAgICAgLy8gcmVwb3J0IHJlbW92ZTogYmVnaW5cclxuICAgICAgdmFyIHJlcG9ydFJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZWxlbWVudFdyYXBwZXIgPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobnRmbHhSZXBvcnRXcmFwLmlkKTtcclxuICAgICAgICBlbGVtZW50V3JhcHBlci5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKGVsZW1lbnRXcmFwcGVyLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgZWxlbWVudFdyYXBwZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50V3JhcHBlcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgfSwgbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24pO1xyXG4gICAgICB9O1xyXG4gICAgICAvLyByZXBvcnQgcmVtb3ZlOiBlbmRcclxuXG4gICAgICAvLyBjYWxsYmFjazogYmVnaW5cclxuICAgICAgdmFyIGVsZW1lbnRCdXR0b24gPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ05YUmVwb3J0QnV0dG9uJyk7XHJcbiAgICAgIGVsZW1lbnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gaWYgY2FsbGJhY2s6IGJlZ2luXHJcbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFja09yT3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgY2FsbGJhY2tPck9wdGlvbnMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaWYgY2FsbGJhY2s6IGVuZFxyXG5cbiAgICAgICAgLy8gcmVtb3ZlIHJlcG9ydFxyXG4gICAgICAgIHJlcG9ydFJlbW92ZSgpO1xyXG4gICAgICB9KTtcclxuICAgICAgLy8gY2FsbGJhY2s6IGVuZFxyXG5cbiAgICAgIC8vIG92ZXJsYXkgY2xpY2sgdG8gY2xvc2U6IGJlZ2luXHJcbiAgICAgIGlmIChyZXBvcnRPdmVybGF5ICYmIHJlcG9ydE92ZXJsYXlDbGlja1RvQ2xvc2UpIHtcclxuICAgICAgICB2YXIgZWxlbWVudE92ZXJsYXkgPSB3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm54LXJlcG9ydC1jbGljay10by1jbG9zZScpO1xyXG4gICAgICAgIGVsZW1lbnRPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgcmVwb3J0UmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gb3ZlcmxheSBjbGljayB0byBjbG9zZTogZW5kXHJcbiAgICB9XHJcbiAgICAvLyByZXBvcnQgd3JhcDogZW5kXHJcblxuICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgYmFja3VwIHNldHRpbmdzXHJcbiAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3UmVwb3J0U2V0dGluZ3MsIG5ld1JlcG9ydFNldHRpbmdzQmFja3VwKTtcclxuXG4gIH07XG4gIC8vIFJFUE9SVDogQ3JlYXRlOiBlbmRcblxuICB2YXIgTm90aWZsaXggPSB7XG4gICAgUmVwb3J0OiB7XHJcbiAgICAgIC8vIEluaXRcclxuICAgICAgaW5pdDogZnVuY3Rpb24gKHVzZXJSZXBvcnRPcHRpb25zKSB7XHJcbiAgICAgICAgLy8gZXh0ZW5kIG9wdGlvbnNcclxuICAgICAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgcmVwb3J0U2V0dGluZ3MsIHVzZXJSZXBvcnRPcHRpb25zKTtcclxuICAgICAgICAvLyBpbnRlcm5hbCBjc3MgaWYgZXhpc3RcclxuICAgICAgICBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzKHJlcG9ydEdldEludGVybmFsQ1NTQ29kZXMsICdOb3RpZmxpeFJlcG9ydEludGVybmFsQ1NTJyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE1lcmdlIEZpcnN0IEluaXRcclxuICAgICAgbWVyZ2U6IGZ1bmN0aW9uICh1c2VyUmVwb3J0RXh0ZW5kT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGlmIGluaXRpYWxpemVkIGFscmVhZHlcclxuICAgICAgICBpZiAobmV3UmVwb3J0U2V0dGluZ3MpIHtcclxuICAgICAgICAgIG5ld1JlcG9ydFNldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdSZXBvcnRTZXR0aW5ncywgdXNlclJlcG9ydEV4dGVuZE9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpbml0aWFsaXplIGZpcnN0XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICBjb21tb25Db25zb2xlRXJyb3IoJ1lvdSBoYXZlIHRvIGluaXRpYWxpemUgdGhlIFJlcG9ydCBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uJyk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBTdWNjZXNzXHJcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXBvcnRDcmVhdGUodHlwZXNSZXBvcnQuU3VjY2VzcywgdGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gRmFpbHVyZVxyXG4gICAgICBmYWlsdXJlOiBmdW5jdGlvbiAodGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgcmVwb3J0Q3JlYXRlKHR5cGVzUmVwb3J0LkZhaWx1cmUsIHRpdGxlLCBtZXNzYWdlLCBidXR0b25UZXh0LCBjYWxsYmFja09yT3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIFdhcm5pbmdcclxuICAgICAgd2FybmluZzogZnVuY3Rpb24gKHRpdGxlLCBtZXNzYWdlLCBidXR0b25UZXh0LCBjYWxsYmFja09yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIHJlcG9ydENyZWF0ZSh0eXBlc1JlcG9ydC5XYXJuaW5nLCB0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICB9LFxyXG4gICAgICAvLyBJbmZvXHJcbiAgICAgIGluZm86IGZ1bmN0aW9uICh0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXBvcnRDcmVhdGUodHlwZXNSZXBvcnQuSW5mbywgdGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgIH0sXG4gIH07XG5cbiAgaWYgKHR5cGVvZiB3aW5kb3cuTm90aWZsaXggPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgd2luZG93Lk5vdGlmbGl4LCB7IFJlcG9ydDogTm90aWZsaXguUmVwb3J0IH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IFJlcG9ydDogTm90aWZsaXguUmVwb3J0IH07XG4gIH1cblxufSk7IiwiLyogTm90aWZsaXggQUlPIChodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pbykgLSBWZXJzaW9uOiAzLjIuNSAtIEF1dGhvcjogRnVya2FuIE1UIChodHRwczovL2dpdGh1Yi5jb20vZnVyY2FuKSAtIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKSAqL1xuXG4oZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGUodCl9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSh0KTp0Lk5vdGlmbGl4PWUodCl9KShcInVuZGVmaW5lZFwiPT10eXBlb2YgZ2xvYmFsP1widW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/dGhpczp3aW5kb3c6Z2xvYmFsLGZ1bmN0aW9uKHQpeyd1c2Ugc3RyaWN0JztpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgdCYmXCJ1bmRlZmluZWRcIj09dHlwZW9mIHQuZG9jdW1lbnQpcmV0dXJuITE7dmFyIGUsaSxhLG4sbyxyPVwiXFxuXFxuVmlzaXQgZG9jdW1lbnRhdGlvbiBwYWdlIHRvIGxlYXJuIG1vcmU6IGh0dHBzOi8vbm90aWZsaXguZ2l0aHViLmlvL2RvY3VtZW50YXRpb25cIixzPVwiLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZlwiLGw9e1N1Y2Nlc3M6XCJTdWNjZXNzXCIsRmFpbHVyZTpcIkZhaWx1cmVcIixXYXJuaW5nOlwiV2FybmluZ1wiLEluZm86XCJJbmZvXCJ9LG09e3dyYXBJRDpcIk5vdGlmbGl4Tm90aWZ5V3JhcFwiLG92ZXJsYXlJRDpcIk5vdGlmbGl4Tm90aWZ5T3ZlcmxheVwiLHdpZHRoOlwiMjgwcHhcIixwb3NpdGlvbjpcInJpZ2h0LXRvcFwiLGRpc3RhbmNlOlwiMTBweFwiLG9wYWNpdHk6MSxib3JkZXJSYWRpdXM6XCI1cHhcIixydGw6ITEsdGltZW91dDozZTMsbWVzc2FnZU1heExlbmd0aDoxMTAsYmFja092ZXJsYXk6ITEsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMCwwLDAsMC41KVwiLHBsYWluVGV4dDohMCxzaG93T25seVRoZUxhc3RPbmU6ITEsY2xpY2tUb0Nsb3NlOiExLHBhdXNlT25Ib3ZlcjohMCxJRDpcIk5vdGlmbGl4Tm90aWZ5XCIsY2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5XCIsemluZGV4OjQwMDEsZm9udEZhbWlseTpcIlF1aWNrc2FuZFwiLGZvbnRTaXplOlwiMTNweFwiLGNzc0FuaW1hdGlvbjohMCxjc3NBbmltYXRpb25EdXJhdGlvbjo0MDAsY3NzQW5pbWF0aW9uU3R5bGU6XCJmYWRlXCIsY2xvc2VCdXR0b246ITEsdXNlSWNvbjohMCx1c2VGb250QXdlc29tZTohMSxmb250QXdlc29tZUljb25TdHlsZTpcImJhc2ljXCIsZm9udEF3ZXNvbWVJY29uU2l6ZTpcIjM0cHhcIixzdWNjZXNzOntiYWNrZ3JvdW5kOlwiIzMyYzY4MlwiLHRleHRDb2xvcjpcIiNmZmZcIixjaGlsZENsYXNzTmFtZTpcIm5vdGlmbGl4LW5vdGlmeS1zdWNjZXNzXCIsbm90aWZsaXhJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixmb250QXdlc29tZUNsYXNzTmFtZTpcImZhcyBmYS1jaGVjay1jaXJjbGVcIixmb250QXdlc29tZUljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDUwLDE5OCwxMzAsMC4yKVwifSxmYWlsdXJlOntiYWNrZ3JvdW5kOlwiI2ZmNTU0OVwiLHRleHRDb2xvcjpcIiNmZmZcIixjaGlsZENsYXNzTmFtZTpcIm5vdGlmbGl4LW5vdGlmeS1mYWlsdXJlXCIsbm90aWZsaXhJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixmb250QXdlc29tZUNsYXNzTmFtZTpcImZhcyBmYS10aW1lcy1jaXJjbGVcIixmb250QXdlc29tZUljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDI1NSw4NSw3MywwLjIpXCJ9LHdhcm5pbmc6e2JhY2tncm91bmQ6XCIjZWViZjMxXCIsdGV4dENvbG9yOlwiI2ZmZlwiLGNoaWxkQ2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5LXdhcm5pbmdcIixub3RpZmxpeEljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGZvbnRBd2Vzb21lQ2xhc3NOYW1lOlwiZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZVwiLGZvbnRBd2Vzb21lSWNvbkNvbG9yOlwicmdiYSgwLDAsMCwwLjIpXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMjM4LDE5MSw0OSwwLjIpXCJ9LGluZm86e2JhY2tncm91bmQ6XCIjMjZjMGQzXCIsdGV4dENvbG9yOlwiI2ZmZlwiLGNoaWxkQ2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5LWluZm9cIixub3RpZmxpeEljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGZvbnRBd2Vzb21lQ2xhc3NOYW1lOlwiZmFzIGZhLWluZm8tY2lyY2xlXCIsZm9udEF3ZXNvbWVJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgzOCwxOTIsMjExLDAuMilcIn19LGM9e1N1Y2Nlc3M6XCJTdWNjZXNzXCIsRmFpbHVyZTpcIkZhaWx1cmVcIixXYXJuaW5nOlwiV2FybmluZ1wiLEluZm86XCJJbmZvXCJ9LHA9e0lEOlwiTm90aWZsaXhSZXBvcnRXcmFwXCIsY2xhc3NOYW1lOlwibm90aWZsaXgtcmVwb3J0XCIsd2lkdGg6XCIzMjBweFwiLGJhY2tncm91bmRDb2xvcjpcIiNmOGY4ZjhcIixib3JkZXJSYWRpdXM6XCIyNXB4XCIscnRsOiExLHppbmRleDo0MDAyLGJhY2tPdmVybGF5OiEwLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDAsMCwwLDAuNSlcIixiYWNrT3ZlcmxheUNsaWNrVG9DbG9zZTohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsc3ZnU2l6ZTpcIjExMHB4XCIscGxhaW5UZXh0OiEwLHRpdGxlRm9udFNpemU6XCIxNnB4XCIsdGl0bGVNYXhMZW5ndGg6MzQsbWVzc2FnZUZvbnRTaXplOlwiMTNweFwiLG1lc3NhZ2VNYXhMZW5ndGg6NDAwLGJ1dHRvbkZvbnRTaXplOlwiMTRweFwiLGJ1dHRvbk1heExlbmd0aDozNCxjc3NBbmltYXRpb246ITAsY3NzQW5pbWF0aW9uRHVyYXRpb246MzYwLGNzc0FuaW1hdGlvblN0eWxlOlwiZmFkZVwiLHN1Y2Nlc3M6e3N2Z0NvbG9yOlwiIzMyYzY4MlwiLHRpdGxlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUNvbG9yOlwiIzI0MjQyNFwiLGJ1dHRvbkJhY2tncm91bmQ6XCIjMzJjNjgyXCIsYnV0dG9uQ29sb3I6XCIjZmZmXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoNTAsMTk4LDEzMCwwLjIpXCJ9LGZhaWx1cmU6e3N2Z0NvbG9yOlwiI2ZmNTU0OVwiLHRpdGxlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUNvbG9yOlwiIzI0MjQyNFwiLGJ1dHRvbkJhY2tncm91bmQ6XCIjZmY1NTQ5XCIsYnV0dG9uQ29sb3I6XCIjZmZmXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMjU1LDg1LDczLDAuMilcIn0sd2FybmluZzp7c3ZnQ29sb3I6XCIjZWViZjMxXCIsdGl0bGVDb2xvcjpcIiMxZTFlMWVcIixtZXNzYWdlQ29sb3I6XCIjMjQyNDI0XCIsYnV0dG9uQmFja2dyb3VuZDpcIiNlZWJmMzFcIixidXR0b25Db2xvcjpcIiNmZmZcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgyMzgsMTkxLDQ5LDAuMilcIn0saW5mbzp7c3ZnQ29sb3I6XCIjMjZjMGQzXCIsdGl0bGVDb2xvcjpcIiMxZTFlMWVcIixtZXNzYWdlQ29sb3I6XCIjMjQyNDI0XCIsYnV0dG9uQmFja2dyb3VuZDpcIiMyNmMwZDNcIixidXR0b25Db2xvcjpcIiNmZmZcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgzOCwxOTIsMjExLDAuMilcIn19LGY9e1Nob3c6XCJTaG93XCIsQXNrOlwiQXNrXCIsUHJvbXB0OlwiUHJvbXB0XCJ9LGQ9e0lEOlwiTm90aWZsaXhDb25maXJtV3JhcFwiLGNsYXNzTmFtZTpcIm5vdGlmbGl4LWNvbmZpcm1cIix3aWR0aDpcIjMwMHB4XCIsemluZGV4OjQwMDMscG9zaXRpb246XCJjZW50ZXJcIixkaXN0YW5jZTpcIjEwcHhcIixiYWNrZ3JvdW5kQ29sb3I6XCIjZjhmOGY4XCIsYm9yZGVyUmFkaXVzOlwiMjVweFwiLGJhY2tPdmVybGF5OiEwLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDAsMCwwLDAuNSlcIixydGw6ITEsZm9udEZhbWlseTpcIlF1aWNrc2FuZFwiLGNzc0FuaW1hdGlvbjohMCxjc3NBbmltYXRpb25EdXJhdGlvbjozMDAsY3NzQW5pbWF0aW9uU3R5bGU6XCJmYWRlXCIscGxhaW5UZXh0OiEwLHRpdGxlQ29sb3I6XCIjMzJjNjgyXCIsdGl0bGVGb250U2l6ZTpcIjE2cHhcIix0aXRsZU1heExlbmd0aDozNCxtZXNzYWdlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUZvbnRTaXplOlwiMTRweFwiLG1lc3NhZ2VNYXhMZW5ndGg6MTEwLGJ1dHRvbnNGb250U2l6ZTpcIjE1cHhcIixidXR0b25zTWF4TGVuZ3RoOjM0LG9rQnV0dG9uQ29sb3I6XCIjZjhmOGY4XCIsb2tCdXR0b25CYWNrZ3JvdW5kOlwiIzMyYzY4MlwiLGNhbmNlbEJ1dHRvbkNvbG9yOlwiI2Y4ZjhmOFwiLGNhbmNlbEJ1dHRvbkJhY2tncm91bmQ6XCIjYTlhOWE5XCJ9LHg9e1N0YW5kYXJkOlwiU3RhbmRhcmRcIixIb3VyZ2xhc3M6XCJIb3VyZ2xhc3NcIixDaXJjbGU6XCJDaXJjbGVcIixBcnJvd3M6XCJBcnJvd3NcIixEb3RzOlwiRG90c1wiLFB1bHNlOlwiUHVsc2VcIixDdXN0b206XCJDdXN0b21cIixOb3RpZmxpeDpcIk5vdGlmbGl4XCJ9LGc9e0lEOlwiTm90aWZsaXhMb2FkaW5nV3JhcFwiLGNsYXNzTmFtZTpcIm5vdGlmbGl4LWxvYWRpbmdcIix6aW5kZXg6NGUzLGJhY2tncm91bmRDb2xvcjpcInJnYmEoMCwwLDAsMC44KVwiLHJ0bDohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsY3NzQW5pbWF0aW9uOiEwLGNzc0FuaW1hdGlvbkR1cmF0aW9uOjQwMCxjbGlja1RvQ2xvc2U6ITEsY3VzdG9tU3ZnVXJsOm51bGwsY3VzdG9tU3ZnQ29kZTpudWxsLHN2Z1NpemU6XCI4MHB4XCIsc3ZnQ29sb3I6XCIjMzJjNjgyXCIsbWVzc2FnZUlEOlwiTm90aWZsaXhMb2FkaW5nTWVzc2FnZVwiLG1lc3NhZ2VGb250U2l6ZTpcIjE1cHhcIixtZXNzYWdlTWF4TGVuZ3RoOjM0LG1lc3NhZ2VDb2xvcjpcIiNkY2RjZGNcIn0sYj17U3RhbmRhcmQ6XCJTdGFuZGFyZFwiLEhvdXJnbGFzczpcIkhvdXJnbGFzc1wiLENpcmNsZTpcIkNpcmNsZVwiLEFycm93czpcIkFycm93c1wiLERvdHM6XCJEb3RzXCIsUHVsc2U6XCJQdWxzZVwifSx1PXtJRDpcIk5vdGlmbGl4QmxvY2tXcmFwXCIscXVlcnlTZWxlY3RvckxpbWl0OjIwMCxjbGFzc05hbWU6XCJub3RpZmxpeC1ibG9ja1wiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIix6aW5kZXg6MWUzLGJhY2tncm91bmRDb2xvcjpcInJnYmEoMjU1LDI1NSwyNTUsMC45KVwiLHJ0bDohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsY3NzQW5pbWF0aW9uOiEwLGNzc0FuaW1hdGlvbkR1cmF0aW9uOjMwMCxzdmdTaXplOlwiNDVweFwiLHN2Z0NvbG9yOlwiIzM4MzgzOFwiLG1lc3NhZ2VGb250U2l6ZTpcIjE0cHhcIixtZXNzYWdlTWF4TGVuZ3RoOjM0LG1lc3NhZ2VDb2xvcjpcIiMzODM4MzhcIn0seT1mdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS5lcnJvcihcIiVjIE5vdGlmbGl4IEVycm9yIFwiLFwicGFkZGluZzoycHg7Ym9yZGVyLXJhZGl1czoyMHB4O2NvbG9yOiNmZmY7YmFja2dyb3VuZDojZmY1NTQ5XCIsXCJcXG5cIit0K3IpfSxrPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLmxvZyhcIiVjIE5vdGlmbGl4IEluZm8gXCIsXCJwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjIwcHg7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiMyNmMwZDNcIixcIlxcblwiK3Qrcil9LHc9ZnVuY3Rpb24oZSl7cmV0dXJuIGV8fChlPVwiaGVhZFwiKSxudWxsIT09dC5kb2N1bWVudFtlXXx8KHkoXCJcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXFxcIjxcIitlK1wiPlxcXCIgZWxlbWVudCwgYnV0IHlvdSBjYWxsZWQgaXQgYmVmb3JlIHRoZSBcXFwiPFwiK2UrXCI+XFxcIiBlbGVtZW50IGhhcyBiZWVuIGNyZWF0ZWQuXCIpLCExKX0saD1mdW5jdGlvbihlLGkpe2lmKCF3KFwiaGVhZFwiKSlyZXR1cm4hMTtpZihudWxsIT09ZSgpJiYhdC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpKSl7dmFyIGE9dC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7YS5pZD1pLGEuaW5uZXJIVE1MPWUoKSx0LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYSl9fSx2PWZ1bmN0aW9uKCl7dmFyIHQ9e30sZT0hMSxhPTA7XCJbb2JqZWN0IEJvb2xlYW5dXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzWzBdKSYmKGU9YXJndW1lbnRzWzBdLGErKyk7Zm9yKHZhciBuPWZ1bmN0aW9uKGkpe2Zvcih2YXIgYSBpbiBpKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpLGEpJiYodFthXT1lJiZcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlbYV0pP3YodFthXSxpW2FdKTppW2FdKX07YTxhcmd1bWVudHMubGVuZ3RoO2ErKyluKGFyZ3VtZW50c1thXSk7cmV0dXJuIHR9LE49ZnVuY3Rpb24oZSl7dmFyIGk9dC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiBpLmlubmVySFRNTD1lLGkudGV4dENvbnRlbnR8fGkuaW5uZXJUZXh0fHxcIlwifSxDPWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCIxMTBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YUmVwb3J0U3VjY2Vzc1xcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEyMCAxMjBcXFwiPjxzdHlsZT5ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MzLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MzLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMi1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19I05YUmVwb3J0U3VjY2VzcyAqey13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7YW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKX08L3N0eWxlPjxnIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiPjxwYXRoIGQ9XFxcIk02MCAxMTUuMzhDMjkuNDYgMTE1LjM4IDQuNjIgOTAuNTQgNC42MiA2MCA0LjYyIDI5LjQ2IDI5LjQ2IDQuNjIgNjAgNC42MmMzMC41NCAwIDU1LjM4IDI0Ljg0IDU1LjM4IDU1LjM4IDAgMzAuNTQtMjQuODQgNTUuMzgtNTUuMzggNTUuMzh6TTYwIDBDMjYuOTIgMCAwIDI2LjkyIDAgNjBzMjYuOTIgNjAgNjAgNjAgNjAtMjYuOTIgNjAtNjBTOTMuMDggMCA2MCAwelxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMy1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiPjxwYXRoIGQ9XFxcIk04OC4yNyAzNS4zOUw1Mi44IDc1LjI5IDMxLjQzIDU4LjJjLS45OC0uODEtMi40NC0uNjMtMy4yNC4zNi0uNzkuOTktLjYzIDIuNDQuMzYgMy4yNGwyMy4wOCAxOC40NmMuNDMuMzQuOTMuNTEgMS40NC41MS42NCAwIDEuMjctLjI2IDEuNzQtLjc4bDM2LjkxLTQxLjUzYTIuMyAyLjMgMCAwIDAtLjE5LTMuMjZjLS45NS0uODYtMi40MS0uNzctMy4yNi4xOXpcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczQtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczQtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVxcXCIgZmlsbD1cXFwiaW5oZXJpdFxcXCIgZGF0YS1hbmltYXRvci1ncm91cD1cXFwidHJ1ZVxcXCIgZGF0YS1hbmltYXRvci10eXBlPVxcXCIyXFxcIi8+PC9nPjwvc3ZnPlwiO3JldHVybiBpfSx6PWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCIxMTBweFwiKSxlfHwoZT1cIiNmZjU1NDlcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YUmVwb3J0RmFpbHVyZVxcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEyMCAxMjBcXFwiPjxzdHlsZT5ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmU0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmU0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19I05YUmVwb3J0RmFpbHVyZSAqey13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7YW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKX08L3N0eWxlPjxnIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcXFwiPjxwYXRoIGQ9XFxcIk00LjM1IDM0Ljk1YzAtMTYuODIgMTMuNzgtMzAuNiAzMC42LTMwLjZoNTAuMWMxNi44MiAwIDMwLjYgMTMuNzggMzAuNiAzMC42djUwLjFjMCAxNi44Mi0xMy43OCAzMC42LTMwLjYgMzAuNmgtNTAuMWMtMTYuODIgMC0zMC42LTEzLjc4LTMwLjYtMzAuNnYtNTAuMXpNMzQuOTUgMTIwaDUwLjFjMTkuMjIgMCAzNC45NS0xNS43MyAzNC45NS0zNC45NXYtNTAuMUMxMjAgMTUuNzMgMTA0LjI3IDAgODUuMDUgMGgtNTAuMUMxNS43MyAwIDAgMTUuNzMgMCAzNC45NXY1MC4xQzAgMTA0LjI3IDE1LjczIDEyMCAzNC45NSAxMjB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXFxcIj48cGF0aCBkPVxcXCJNODIuNCAzNy42Yy0uOS0uOS0yLjM3LS45LTMuMjcgMEw2MCA1Ni43MyA0MC44NiAzNy42YTIuMzA2IDIuMzA2IDAgMCAwLTMuMjYgMy4yNkw1Ni43MyA2MCAzNy42IDc5LjEzYy0uOS45LS45IDIuMzcgMCAzLjI3LjQ1LjQ1IDEuMDQuNjggMS42My42OC41OSAwIDEuMTgtLjIzIDEuNjMtLjY4TDYwIDYzLjI2IDc5LjEzIDgyLjRjLjQ1LjQ1IDEuMDUuNjggMS42NC42OC41OCAwIDEuMTgtLjIzIDEuNjMtLjY4LjktLjkuOS0yLjM3IDAtMy4yN0w2My4yNiA2MCA4Mi40IDQwLjg2Yy45LS45MS45LTIuMzYgMC0zLjI2elxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LFM9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjExMHB4XCIpLGV8fChlPVwiI2VlYmYzMVwiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBpZD1cXFwiTlhSZXBvcnRXYXJuaW5nXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiBmaWxsPVxcXCJcIitlK1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMTIwIDEyMFxcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX0jTlhSZXBvcnRXYXJuaW5nICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVxcXCI+PHBhdGggZD1cXFwiTTExNS40NiAxMDYuMTVsLTU0LjA0LTkzLjhjLS42MS0xLjA2LTIuMjMtMS4wNi0yLjg0IDBsLTU0LjA0IDkzLjhjLS42MiAxLjA3LjIxIDIuMjkgMS40MiAyLjI5aDEwOC4wOGMxLjIxIDAgMi4wNC0xLjIyIDEuNDItMi4yOXpNNjUuMTcgMTAuMmw1NC4wNCA5My44YzIuMjggMy45Ni0uNjUgOC43OC01LjE3IDguNzhINS45NmMtNC41MiAwLTcuNDUtNC44Mi01LjE3LTguNzhsNTQuMDQtOTMuOGMyLjI4LTMuOTUgOC4wMy00IDEwLjM0IDB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmczLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmczLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KVxcXCI+PHBhdGggZD1cXFwiTTU3LjgzIDk0LjAxYzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN3YtMy4yYzAtMS4yLS45Ny0yLjE3LTIuMTctMi4xN3MtMi4xNy45Ny0yLjE3IDIuMTd2My4yem0wLTE0LjE1YzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN1YzOS4yMWMwLTEuMi0uOTctMi4xNy0yLjE3LTIuMTdzLTIuMTcuOTctMi4xNyAyLjE3djQwLjY1elxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LEw9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjExMHB4XCIpLGV8fChlPVwiIzI2YzBkM1wiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBpZD1cXFwiTlhSZXBvcnRJbmZvXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiBmaWxsPVxcXCJcIitlK1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMTIwIDEyMFxcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEluZm80LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm80LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRJbmZvMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm8xLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX0jTlhSZXBvcnRJbmZvICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVxcXCI+PHBhdGggZD1cXFwiTTYwIDExNS4zOEMyOS40NiAxMTUuMzggNC42MiA5MC41NCA0LjYyIDYwIDQuNjIgMjkuNDYgMjkuNDYgNC42MiA2MCA0LjYyYzMwLjU0IDAgNTUuMzggMjQuODQgNTUuMzggNTUuMzggMCAzMC41NC0yNC44NCA1NS4zOC01NS4zOCA1NS4zOHpNNjAgMEMyNi45MiAwIDAgMjYuOTIgMCA2MHMyNi45MiA2MCA2MCA2MCA2MC0yNi45MiA2MC02MFM5My4wOCAwIDYwIDB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8yLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8yLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXFxcIj48cGF0aCBkPVxcXCJNNTcuNzUgNDMuODVjMC0xLjI0IDEuMDEtMi4yNSAyLjI1LTIuMjVzMi4yNSAxLjAxIDIuMjUgMi4yNXY0OC4xOGMwIDEuMjQtMS4wMSAyLjI1LTIuMjUgMi4yNXMtMi4yNS0xLjAxLTIuMjUtMi4yNVY0My44NXptMC0xNS44OGMwLTEuMjQgMS4wMS0yLjI1IDIuMjUtMi4yNXMyLjI1IDEuMDEgMi4yNSAyLjI1djMuMzJjMCAxLjI1LTEuMDEgMi4yNS0yLjI1IDIuMjVzLTIuMjUtMS0yLjI1LTIuMjV2LTMuMzJ6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm80LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm80LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sVz1mdW5jdGlvbih0LGUpe3R8fCh0PVwiNjBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgc3Ryb2tlPVxcXCJcIitlK1wiXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC44KVxcXCIgdmlld0JveD1cXFwiMCAwIDM4IDM4XFxcIj48ZyBmaWxsPVxcXCJub25lXFxcIiBmaWxsLXJ1bGU9XFxcImV2ZW5vZGRcXFwiIHN0cm9rZS13aWR0aD1cXFwiMlxcXCIgdHJhbnNmb3JtPVxcXCJ0cmFuc2xhdGUoMSAxKVxcXCI+PGNpcmNsZSBjeD1cXFwiMThcXFwiIGN5PVxcXCIxOFxcXCIgcj1cXFwiMThcXFwiIHN0cm9rZS1vcGFjaXR5PVxcXCIuMjVcXFwiLz48cGF0aCBkPVxcXCJNMzYgMThjMC05Ljk0LTguMDYtMTgtMTgtMThcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgZHVyPVxcXCIxc1xcXCIgZnJvbT1cXFwiMCAxOCAxOFxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHRvPVxcXCIzNjAgMTggMThcXFwiIHR5cGU9XFxcInJvdGF0ZVxcXCIvPjwvcGF0aD48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LEk9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGlkPVxcXCJOWExvYWRpbmdIb3VyZ2xhc3NcXFwiIGZpbGw9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMDAgMjAwXFxcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzNS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX0xNi42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuOCk7dHJhbnNmb3JtOnNjYWxlKDEsLjgpfTMzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguODgsLjYpO3RyYW5zZm9ybTpzY2FsZSguODgsLjYpfTM3LjUley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpO3RyYW5zZm9ybTpzY2FsZSguODUsLjU1KX00MS42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjgsLjUpO3RyYW5zZm9ybTpzY2FsZSguOCwuNSl9NDUuODMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpO3RyYW5zZm9ybTpzY2FsZSguNzUsLjQ1KX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjcsLjQpO3RyYW5zZm9ybTpzY2FsZSguNywuNCl9NTQuMTcley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC42LC4zNSk7dHJhbnNmb3JtOnNjYWxlKC42LC4zNSl9NTguMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41LC4zKTt0cmFuc2Zvcm06c2NhbGUoLjUsLjMpfTgzLjMzJSx0b3std2Via2l0LXRyYW5zZm9ybTpzY2FsZSguMiwwKTt0cmFuc2Zvcm06c2NhbGUoLjIsMCl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3M1LWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLDEpO3RyYW5zZm9ybTpzY2FsZSgxLDEpfTE2LjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC44KTt0cmFuc2Zvcm06c2NhbGUoMSwuOCl9MzMuMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44OCwuNik7dHJhbnNmb3JtOnNjYWxlKC44OCwuNil9MzcuNSV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjg1LC41NSk7dHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpfTQxLjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguOCwuNSk7dHJhbnNmb3JtOnNjYWxlKC44LC41KX00NS44MyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjc1LC40NSk7dHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNywuNCk7dHJhbnNmb3JtOnNjYWxlKC43LC40KX01NC4xNyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjYsLjM1KTt0cmFuc2Zvcm06c2NhbGUoLjYsLjM1KX01OC4zMyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUsLjMpO3RyYW5zZm9ybTpzY2FsZSguNSwuMyl9ODMuMzMlLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC4yLDApO3RyYW5zZm9ybTpzY2FsZSguMiwwKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuMDIpO3RyYW5zZm9ybTpzY2FsZSgxLC4wMil9NzkuMTclLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEsMSk7dHJhbnNmb3JtOnNjYWxlKDEsMSl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3MzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC4wMik7dHJhbnNmb3JtOnNjYWxlKDEsLjAyKX03OS4xNyUsdG97LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMS1hbmltYXRpb257MCUsODMuMzMley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKX19QGtleWZyYW1lcyBOWGhvdXJnbGFzczEtYW5pbWF0aW9uezAlLDgzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX10b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9fSNOWExvYWRpbmdIb3VyZ2xhc3MgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjFcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3MxLWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDUwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSA1MCU7dHJhbnNmb3JtLWJveDpmaWxsLWJveFxcXCI+PGcgaWQ9XFxcIk5YaG91cmdsYXNzMlxcXCIgZmlsbD1cXFwiaW5oZXJpdFxcXCI+PGcgZGF0YS1hbmltYXRvci1ncm91cD1cXFwidHJ1ZVxcXCIgZGF0YS1hbmltYXRvci10eXBlPVxcXCIyXFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSAxMDAlO3RyYW5zZm9ybS1ib3g6ZmlsbC1ib3hcXFwiIG9wYWNpdHk9XFxcIi40XFxcIj48cGF0aCBpZD1cXFwiTlhob3VyZ2xhc3M0XFxcIiBkPVxcXCJNMTAwIDEwMGwtMzQuMzggMzIuMDh2MzEuMTRoNjguNzZ2LTMxLjE0elxcXCIvPjwvZz48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzNS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3M1LWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDEwMCU7dHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XFxcIiBvcGFjaXR5PVxcXCIuNFxcXCI+PHBhdGggaWQ9XFxcIk5YaG91cmdsYXNzNlxcXCIgZD1cXFwiTTEwMCAxMDBMNjUuNjIgNjcuOTJWMzYuNzhoNjguNzZ2MzEuMTR6XFxcIi8+PC9nPjxwYXRoIGQ9XFxcIk01MS4xNCAzOC44OWg4LjMzdjE0LjkzYzAgMTUuMSA4LjI5IDI4Ljk5IDIzLjM0IDM5LjEgMS44OCAxLjI1IDMuMDQgMy45NyAzLjA0IDcuMDhzLTEuMTYgNS44My0zLjA0IDcuMDljLTE1LjA1IDEwLjEtMjMuMzQgMjMuOTktMjMuMzQgMzkuMDl2MTQuOTNoLTguMzNhNC44NTkgNC44NTkgMCAxIDAgMCA5LjcyaDk3LjcyYTQuODU5IDQuODU5IDAgMSAwIDAtOS43MmgtOC4zM3YtMTQuOTNjMC0xNS4xLTguMjktMjguOTktMjMuMzQtMzkuMDktMS44OC0xLjI2LTMuMDQtMy45OC0zLjA0LTcuMDlzMS4xNi01LjgzIDMuMDQtNy4wOGMxNS4wNS0xMC4xMSAyMy4zNC0yNCAyMy4zNC0zOS4xVjM4Ljg5aDguMzNhNC44NTkgNC44NTkgMCAxIDAgMC05LjcySDUxLjE0YTQuODU5IDQuODU5IDAgMSAwIDAgOS43MnptNzkuNjcgMTQuOTNjMCAxNS44Ny0xMS45MyAyNi4yNS0xOS4wNCAzMS4wMy00LjYgMy4wOC03LjM0IDguNzUtNy4zNCAxNS4xNSAwIDYuNDEgMi43NCAxMi4wNyA3LjM0IDE1LjE1IDcuMTEgNC43OCAxOS4wNCAxNS4xNiAxOS4wNCAzMS4wM3YxNC45M0g2OS4xOXYtMTQuOTNjMC0xNS44NyAxMS45My0yNi4yNSAxOS4wNC0zMS4wMiA0LjYtMy4wOSA3LjM0LTguNzUgNy4zNC0xNS4xNiAwLTYuNC0yLjc0LTEyLjA3LTcuMzQtMTUuMTUtNy4xMS00Ljc4LTE5LjA0LTE1LjE2LTE5LjA0LTMxLjAzVjM4Ljg5aDYxLjYydjE0LjkzelxcXCIvPjwvZz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LFI9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjI1IDI1IDUwIDUwXFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb246cm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246cm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtoZWlnaHQ6XCIrdCtcIjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46Y2VudGVyIGNlbnRlcjstbXMtdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyO3RyYW5zZm9ybS1vcmlnaW46Y2VudGVyIGNlbnRlcjt3aWR0aDpcIit0K1wiO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDttYXJnaW46YXV0b1xcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGV7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHJvdGF0ZXt0b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fUAtd2Via2l0LWtleWZyYW1lcyBkYXNoezAle3N0cm9rZS1kYXNoYXJyYXk6MSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6MH01MCV7c3Ryb2tlLWRhc2hhcnJheTo4OSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6LTM1fXRve3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0xMjR9fUBrZXlmcmFtZXMgZGFzaHswJXtzdHJva2UtZGFzaGFycmF5OjEsMjAwO3N0cm9rZS1kYXNob2Zmc2V0OjB9NTAle3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0zNX10b3tzdHJva2UtZGFzaGFycmF5Ojg5LDIwMDtzdHJva2UtZGFzaG9mZnNldDotMTI0fX08L3N0eWxlPjxjaXJjbGUgY3g9XFxcIjUwXFxcIiBjeT1cXFwiNTBcXFwiIHI9XFxcIjIwXFxcIiBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIlwiK2UrXCJcXFwiIHN0cm9rZS13aWR0aD1cXFwiMlxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uOmRhc2ggMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZSxjb2xvciAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO2FuaW1hdGlvbjpkYXNoIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGUsY29sb3IgMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZVxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiMTUwIDIwMFxcXCIgc3Ryb2tlLWRhc2hvZmZzZXQ9XFxcIi0xMFxcXCIgc3Ryb2tlLWxpbmVjYXA9XFxcInJvdW5kXFxcIi8+PC9zdmc+XCI7cmV0dXJuIGl9LEE9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCAxMjggMTI4XFxcIj48Zz48cGF0aCBmaWxsPVxcXCJpbmhlcml0XFxcIiBkPVxcXCJNMTA5LjI1IDU1LjVoLTM2bDEyLTEyYTI5LjU0IDI5LjU0IDAgMCAwLTQ5LjUzIDEySDE4Ljc1QTQ2LjA0IDQ2LjA0IDAgMCAxIDk2LjkgMzEuODRsMTIuMzUtMTIuMzR2MzZ6bS05MC41IDE3aDM2bC0xMiAxMmEyOS41NCAyOS41NCAwIDAgMCA0OS41My0xMmgxNi45N0E0Ni4wNCA0Ni4wNCAwIDAgMSAzMS4xIDk2LjE2TDE4Ljc0IDEwOC41di0zNnpcXFwiLz48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVxcXCJ0cmFuc2Zvcm1cXFwiIGR1cj1cXFwiMS41c1xcXCIgZnJvbT1cXFwiMCA2NCA2NFxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHRvPVxcXCIzNjAgNjQgNjRcXFwiIHR5cGU9XFxcInJvdGF0ZVxcXCIvPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sTT1mdW5jdGlvbih0LGUpe3R8fCh0PVwiNjBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEwMCAxMDBcXFwiPjxnIHRyYW5zZm9ybT1cXFwidHJhbnNsYXRlKDI1IDUwKVxcXCI+PGNpcmNsZSByPVxcXCI5XFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC4yMzkpXFxcIj48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVxcXCJ0cmFuc2Zvcm1cXFwiIGJlZ2luPVxcXCItMC4yNjZzXFxcIiBjYWxjTW9kZT1cXFwic3BsaW5lXFxcIiBkdXI9XFxcIjAuOHNcXFwiIGtleVNwbGluZXM9XFxcIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXFxcIiBrZXlUaW1lcz1cXFwiMDswLjU7MVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHR5cGU9XFxcInNjYWxlXFxcIiB2YWx1ZXM9XFxcIjA7MTswXFxcIi8+PC9jaXJjbGU+PC9nPjxnIHRyYW5zZm9ybT1cXFwidHJhbnNsYXRlKDUwIDUwKVxcXCI+PGNpcmNsZSByPVxcXCI5XFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC4wMDE1MilcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgYmVnaW49XFxcIi0wLjEzM3NcXFwiIGNhbGNNb2RlPVxcXCJzcGxpbmVcXFwiIGR1cj1cXFwiMC44c1xcXCIga2V5U3BsaW5lcz1cXFwiMC4zIDAgMC43IDE7MC4zIDAgMC43IDFcXFwiIGtleVRpbWVzPVxcXCIwOzAuNTsxXFxcIiByZXBlYXRDb3VudD1cXFwiaW5kZWZpbml0ZVxcXCIgdHlwZT1cXFwic2NhbGVcXFwiIHZhbHVlcz1cXFwiMDsxOzBcXFwiLz48L2NpcmNsZT48L2c+PGcgdHJhbnNmb3JtPVxcXCJ0cmFuc2xhdGUoNzUgNTApXFxcIj48Y2lyY2xlIHI9XFxcIjlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIHRyYW5zZm9ybT1cXFwic2NhbGUoLjI5OSlcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgYmVnaW49XFxcIjBzXFxcIiBjYWxjTW9kZT1cXFwic3BsaW5lXFxcIiBkdXI9XFxcIjAuOHNcXFwiIGtleVNwbGluZXM9XFxcIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXFxcIiBrZXlUaW1lcz1cXFwiMDswLjU7MVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHR5cGU9XFxcInNjYWxlXFxcIiB2YWx1ZXM9XFxcIjA7MTswXFxcIi8+PC9jaXJjbGU+PC9nPjwvc3ZnPlwiO3JldHVybiBpfSxCPWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCI2MHB4XCIpLGV8fChlPVwiIzMyYzY4MlwiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBzdHJva2U9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCA0NCA0NFxcXCI+PGcgZmlsbD1cXFwibm9uZVxcXCIgZmlsbC1ydWxlPVxcXCJldmVub2RkXFxcIiBzdHJva2Utd2lkdGg9XFxcIjJcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjJcXFwiIHI9XFxcIjFcXFwiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XFxcInJcXFwiIGJlZ2luPVxcXCIwc1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjE2NSwgMC44NCwgMC40NCwgMVxcXCIga2V5VGltZXM9XFxcIjA7IDFcXFwiIHJlcGVhdENvdW50PVxcXCJpbmRlZmluaXRlXFxcIiB2YWx1ZXM9XFxcIjE7IDIwXFxcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cXFwic3Ryb2tlLW9wYWNpdHlcXFwiIGJlZ2luPVxcXCIwc1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjMsIDAuNjEsIDAuMzU1LCAxXFxcIiBrZXlUaW1lcz1cXFwiMDsgMVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHZhbHVlcz1cXFwiMTsgMFxcXCIvPjwvY2lyY2xlPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjJcXFwiIHI9XFxcIjFcXFwiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XFxcInJcXFwiIGJlZ2luPVxcXCItMC45c1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjE2NSwgMC44NCwgMC40NCwgMVxcXCIga2V5VGltZXM9XFxcIjA7IDFcXFwiIHJlcGVhdENvdW50PVxcXCJpbmRlZmluaXRlXFxcIiB2YWx1ZXM9XFxcIjE7IDIwXFxcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cXFwic3Ryb2tlLW9wYWNpdHlcXFwiIGJlZ2luPVxcXCItMC45c1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjMsIDAuNjEsIDAuMzU1LCAxXFxcIiBrZXlUaW1lcz1cXFwiMDsgMVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHZhbHVlcz1cXFwiMTsgMFxcXCIvPjwvY2lyY2xlPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sWD1mdW5jdGlvbih0LGUsaSl7dHx8KHQ9XCI2MHB4XCIpLGV8fChlPVwiI2Y4ZjhmOFwiKSxpfHwoaT1cIiMzMmM2ODJcIik7dmFyIGE9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YTG9hZGluZ05vdGlmbGl4TGliXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAwIDIwMFxcXCI+PGRlZnM+PHN0eWxlPkBrZXlmcmFtZXMgbm90aWZsaXgtbnswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgteHswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgtZG90ezAlLHRve3N0cm9rZS13aWR0aDowfTUwJXtzdHJva2Utd2lkdGg6MTJ9fS5ueC1pY29uLWxpbmV7c3Ryb2tlOlwiK2UrXCI7c3Ryb2tlLXdpZHRoOjEyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoyMjtmaWxsOm5vbmV9PC9zdHlsZT48L2RlZnM+PHBhdGggZD1cXFwiTTQ3Ljk3IDEzNS4wNWE2LjUgNi41IDAgMSAxIDAgMTMgNi41IDYuNSAwIDAgMSAwLTEzelxcXCIgc3R5bGU9XFxcImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LWRvdDthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2UtaW4tb3V0O2FuaW1hdGlvbi1kdXJhdGlvbjoxLjI1czthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXFxcIiBmaWxsPVxcXCJcIitpK1wiXFxcIiBzdHJva2U9XFxcIlwiK2krXCJcXFwiIHN0cm9rZS1saW5lY2FwPVxcXCJyb3VuZFxcXCIgc3Ryb2tlLWxpbmVqb2luPVxcXCJyb3VuZFxcXCIgc3Ryb2tlLW1pdGVybGltaXQ9XFxcIjIyXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEyXFxcIi8+PHBhdGggY2xhc3M9XFxcIm54LWljb24tbGluZVxcXCIgZD1cXFwiTTEwLjE0IDE0NC43NlY4Ny41NWMwLTUuNjgtNC41NC00MS4zNiAzNy44My00MS4zNiA0Mi4zNiAwIDM3LjgyIDM1LjY4IDM3LjgyIDQxLjM2djU3LjIxXFxcIiBzdHlsZT1cXFwiYW5pbWF0aW9uLW5hbWU6bm90aWZsaXgtbjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tZHVyYXRpb246Mi41czthbmltYXRpb24tZGVsYXk6MHM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiNTAwXFxcIi8+PHBhdGggY2xhc3M9XFxcIm54LWljb24tbGluZVxcXCIgZD1cXFwiTTExNS4wNiAxNDQuNDljMjQuOTgtMzIuNjggNDkuOTYtNjUuMzUgNzQuOTQtOTguMDNNMTE0Ljg5IDQ2LjZjMjUuMDkgMzIuNTggNTAuMTkgNjUuMTcgNzUuMjkgOTcuNzVcXFwiIHN0eWxlPVxcXCJhbmltYXRpb24tbmFtZTpub3RpZmxpeC14O2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO2FuaW1hdGlvbi1kdXJhdGlvbjoyLjVzO2FuaW1hdGlvbi1kZWxheTouMnM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiNTAwXFxcIi8+PC9zdmc+XCI7cmV0dXJuIGF9LEQ9ZnVuY3Rpb24oKXtyZXR1cm5cIltpZF49Tm90aWZsaXhOb3RpZnlXcmFwXXtwb2ludGVyLWV2ZW50czpub25lO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMTtvcGFjaXR5OjE7cmlnaHQ6MTBweDt0b3A6MTBweDt3aWR0aDoyODBweDttYXgtd2lkdGg6OTYlOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXS5ueC1mbGV4LWNlbnRlci1jZW50ZXJ7bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gMjBweCk7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTphdXRvO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luOmF1dG99W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XXstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZCAuM3MgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjpiYWNrZ3JvdW5kIC4zcyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQgLjNzIGVhc2UtaW4tb3V0fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXZ7cG9pbnRlci1ldmVudHM6YWxsOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtmb250LWZhbWlseTpcXFwiUXVpY2tzYW5kXFxcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcXFwiU2Vnb2UgVUlcXFwiLFJvYm90byxcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLEFyaWFsLHNhbnMtc2VyaWY7d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWZsZXg7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MCAwIDEwcHg7Ym9yZGVyLXJhZGl1czo1cHg7YmFja2dyb3VuZDojMWUxZTFlO2NvbG9yOiNmZmY7cGFkZGluZzoxMHB4IDEycHg7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY6bGFzdC1jaGlsZHttYXJnaW46MH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtY2FsbGJhY2t7Y3Vyc29yOnBvaW50ZXJ9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWljb257cGFkZGluZzo4cHg7bWluLWhlaWdodDo1NnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtcGF1c2Vke2N1cnNvcjphdXRvfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtbm90aWZ5LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1jbG9zZS1idXR0b257cGFkZGluZzoxMHB4IDM2cHggMTBweCAxMnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1pY29uLm54LXdpdGgtY2xvc2UtYnV0dG9ue3BhZGRpbmc6NnB4IDM2cHggNnB4IDZweH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2PnNwYW4ubngtbWVzc2FnZXtjdXJzb3I6aW5oZXJpdDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+c3Bhbi5ueC1jbG9zZS1idXR0b257Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMnMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjJzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4ycyBlYXNlLWluLW91dDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDo4cHg7dG9wOjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87Y29sb3I6aW5oZXJpdDt3aWR0aDoyMHB4O2hlaWdodDoyMHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+c3Bhbi5ueC1jbG9zZS1idXR0b246aG92ZXJ7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDkwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDkwZGVnKX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2PnNwYW4ubngtY2xvc2UtYnV0dG9uPnN2Z3twb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxNnB4O2hlaWdodDoxNnB4O3JpZ2h0OjJweDt0b3A6MnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+Lm54LW1lc3NhZ2UtaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo0MHB4O2hlaWdodDo0MHB4O2ZvbnQtc2l6ZTozMHB4O2xpbmUtaGVpZ2h0OjQwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bGVmdDo4cHg7dG9wOjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87Ym9yZGVyLXJhZGl1czppbmhlcml0fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+Lm54LW1lc3NhZ2UtaWNvbi1mYS5ueC1tZXNzYWdlLWljb24tZmEtc2hhZG93e2NvbG9yOmluaGVyaXQ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4xNSk7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgMCAzNHB4IHJnYmEoMCwwLDAsLjIpO2JveC1zaGFkb3c6aW5zZXQgMCAwIDM0cHggcmdiYSgwLDAsMCwuMik7dGV4dC1zaGFkb3c6MCAwIDEwcHggcmdiYSgwLDAsMCwuMyl9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdj5zcGFuLm54LXdpdGgtaWNvbntwb3NpdGlvbjpyZWxhdGl2ZTtmbG9hdDpsZWZ0O3dpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO21hcmdpbjowIDAgMCA0MHB4O3BhZGRpbmc6MCAwIDAgMTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC1ydGwtb24+Lm54LW1lc3NhZ2UtaWNvbntsZWZ0OmF1dG87cmlnaHQ6OHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtcnRsLW9uPnNwYW4ubngtd2l0aC1pY29ue3BhZGRpbmc6MCAxMHB4IDAgMDttYXJnaW46MCA0MHB4IDAgMH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXJ0bC1vbj5zcGFuLm54LWNsb3NlLWJ1dHRvbntyaWdodDphdXRvO2xlZnQ6OHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1pY29uLm54LXdpdGgtY2xvc2UtYnV0dG9uLm54LXJ0bC1vbntwYWRkaW5nOjZweCA2cHggNnB4IDM2cHh9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWNsb3NlLWJ1dHRvbi5ueC1ydGwtb257cGFkZGluZzoxMHB4IDEycHggMTBweCAzNnB4fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XS5ueC13aXRoLWFuaW1hdGlvbixbaWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGV7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtem9vbXstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tem9vbXswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9NTAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLXpvb217MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtZnJvbS1yaWdodHstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLWZyb20tcmlnaHQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLXJpZ2h0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1yaWdodHswJXtyaWdodDotMzAwcHg7b3BhY2l0eTowfTUwJXtyaWdodDo4cHg7b3BhY2l0eToxfTEwMCV7cmlnaHQ6MDtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLXJpZ2h0ezAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9NTAle3JpZ2h0OjhweDtvcGFjaXR5OjF9MTAwJXtyaWdodDowO29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLWxlZnR7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnR7MCV7bGVmdDotMzAwcHg7b3BhY2l0eTowfTUwJXtsZWZ0OjhweDtvcGFjaXR5OjF9MTAwJXtsZWZ0OjA7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1sZWZ0ezAle2xlZnQ6LTMwMHB4O29wYWNpdHk6MH01MCV7bGVmdDo4cHg7b3BhY2l0eToxfTEwMCV7bGVmdDowO29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLXRvcHstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLWZyb20tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZnJvbS10b3AgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLXRvcHswJXt0b3A6LTUwcHg7b3BhY2l0eTowfTUwJXt0b3A6OHB4O29wYWNpdHk6MX0xMDAle3RvcDowO29wYWNpdHk6MX19QGtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZyb20tdG9wezAle3RvcDotNTBweDtvcGFjaXR5OjB9NTAle3RvcDo4cHg7b3BhY2l0eToxfTEwMCV7dG9wOjA7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZyb20tYm90dG9tey13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZnJvbS1ib3R0b20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZyb20tYm90dG9tezAle2JvdHRvbTotNTBweDtvcGFjaXR5OjB9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOjA7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1ib3R0b217MCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH01MCV7Ym90dG9tOjhweDtvcGFjaXR5OjF9MTAwJXtib3R0b206MDtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XS5ueC13aXRoLWFuaW1hdGlvbi5ueC1yZW1vdmUsW2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRlLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LXJlbW92ZS1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktcmVtb3ZlLWZhZGV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtZmFkZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtem9vbS5ueC1yZW1vdmV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApOy13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS16b29tezAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtem9vbXswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLXRvcC5ueC1yZW1vdmV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tdG9wezAle3RvcDowO29wYWNpdHk6MX01MCV7dG9wOjhweDtvcGFjaXR5OjF9MTAwJXt0b3A6LTUwcHg7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tdG9wezAle3RvcDowO29wYWNpdHk6MX01MCV7dG9wOjhweDtvcGFjaXR5OjF9MTAwJXt0b3A6LTUwcHg7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZyb20tcmlnaHQubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLXJpZ2h0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tcmlnaHQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1yaWdodHswJXtyaWdodDowO29wYWNpdHk6MX01MCV7cmlnaHQ6OHB4O29wYWNpdHk6MX0xMDAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1yaWdodHswJXtyaWdodDowO29wYWNpdHk6MX01MCV7cmlnaHQ6OHB4O29wYWNpdHk6MX0xMDAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtZnJvbS1ib3R0b20ubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktcmVtb3ZlLXRvLWJvdHRvbXswJXtib3R0b206MDtvcGFjaXR5OjF9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH19QGtleWZyYW1lcyBub3RpZnktcmVtb3ZlLXRvLWJvdHRvbXswJXtib3R0b206MDtvcGFjaXR5OjF9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLWxlZnQubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LXJlbW92ZS10by1sZWZ0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tbGVmdHswJXtsZWZ0OjA7b3BhY2l0eToxfTUwJXtsZWZ0OjhweDtvcGFjaXR5OjF9MTAwJXtsZWZ0Oi0zMDBweDtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1sZWZ0ezAle2xlZnQ6MDtvcGFjaXR5OjF9NTAle2xlZnQ6OHB4O29wYWNpdHk6MX0xMDAle2xlZnQ6LTMwMHB4O29wYWNpdHk6MH19XCJ9LFQ9MCxGPWZ1bmN0aW9uKGEsbixvLHIpe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTtlfHxHLk5vdGlmeS5pbml0KHt9KTt2YXIgYz12KCEwLGUse30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBvJiYhQXJyYXkuaXNBcnJheShvKXx8XCJvYmplY3RcIj09dHlwZW9mIHImJiFBcnJheS5pc0FycmF5KHIpKXt2YXIgcD17fTtcIm9iamVjdFwiPT10eXBlb2Ygbz9wPW86XCJvYmplY3RcIj09dHlwZW9mIHImJihwPXIpLGU9dighMCxlLHApfXZhciBmPWVbYS50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpXTtUKyssXCJzdHJpbmdcIiE9dHlwZW9mIG4mJihuPVwiTm90aWZsaXggXCIrYSksZS5wbGFpblRleHQmJihuPU4obikpLCFlLnBsYWluVGV4dCYmbi5sZW5ndGg+ZS5tZXNzYWdlTWF4TGVuZ3RoJiYoZT12KCEwLGUse2Nsb3NlQnV0dG9uOiEwLG1lc3NhZ2VNYXhMZW5ndGg6MTUwfSksbj1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvcjogVGhlIFxcXCJwbGFpblRleHRcXFwiIG9wdGlvbiBpcyBcXFwiZmFsc2VcXFwiIGFuZCB0aGUgbm90aWZpY2F0aW9uIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiB0aGUgXFxcIm1lc3NhZ2VNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIiksbi5sZW5ndGg+ZS5tZXNzYWdlTWF4TGVuZ3RoJiYobj1uLnN1YnN0cmluZygwLGUubWVzc2FnZU1heExlbmd0aCkrXCIuLi5cIiksXCJzaGFkb3dcIj09PWUuZm9udEF3ZXNvbWVJY29uU3R5bGUmJihmLmZvbnRBd2Vzb21lSWNvbkNvbG9yPWYuYmFja2dyb3VuZCksZS5jc3NBbmltYXRpb258fChlLmNzc0FuaW1hdGlvbkR1cmF0aW9uPTApO3ZhciBkPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpfHx0LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWYoZC5pZD1tLndyYXBJRCxkLnN0eWxlLndpZHRoPWUud2lkdGgsZC5zdHlsZS56SW5kZXg9ZS56aW5kZXgsZC5zdHlsZS5vcGFjaXR5PWUub3BhY2l0eSxcImNlbnRlci1jZW50ZXJcIj09PWUucG9zaXRpb24/KGQuc3R5bGUubGVmdD1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPWUuZGlzdGFuY2UsZC5zdHlsZS5yaWdodD1lLmRpc3RhbmNlLGQuc3R5bGUuYm90dG9tPWUuZGlzdGFuY2UsZC5zdHlsZS5tYXJnaW49XCJhdXRvXCIsZC5jbGFzc0xpc3QuYWRkKFwibngtZmxleC1jZW50ZXItY2VudGVyXCIpLGQuc3R5bGUubWF4SGVpZ2h0PVwiY2FsYygoMTAwdmggLSBcIitlLmRpc3RhbmNlK1wiKSAtIFwiK2UuZGlzdGFuY2UrXCIpXCIsZC5zdHlsZS5kaXNwbGF5PVwiZmxleFwiLGQuc3R5bGUuZmxleFdyYXA9XCJ3cmFwXCIsZC5zdHlsZS5mbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIsZC5zdHlsZS5qdXN0aWZ5Q29udGVudD1cImNlbnRlclwiLGQuc3R5bGUuYWxpZ25JdGVtcz1cImNlbnRlclwiLGQuc3R5bGUucG9pbnRlckV2ZW50cz1cIm5vbmVcIik6XCJjZW50ZXItdG9wXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1cImF1dG9cIixkLnN0eWxlLm1hcmdpbj1cImF1dG9cIik6XCJjZW50ZXItYm90dG9tXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS5ib3R0b209ZS5kaXN0YW5jZSxkLnN0eWxlLnRvcD1cImF1dG9cIixkLnN0eWxlLm1hcmdpbj1cImF1dG9cIik6XCJyaWdodC1ib3R0b21cIj09PWUucG9zaXRpb24/KGQuc3R5bGUucmlnaHQ9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPVwiYXV0b1wiLGQuc3R5bGUubGVmdD1cImF1dG9cIik6XCJsZWZ0LXRvcFwiPT09ZS5wb3NpdGlvbj8oZC5zdHlsZS5sZWZ0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PVwiYXV0b1wiLGQuc3R5bGUuYm90dG9tPVwiYXV0b1wiKTpcImxlZnQtYm90dG9tXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPVwiYXV0b1wiLGQuc3R5bGUucmlnaHQ9XCJhdXRvXCIpOihkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLmxlZnQ9XCJhdXRvXCIsZC5zdHlsZS5ib3R0b209XCJhdXRvXCIpLGUuYmFja092ZXJsYXkpe3ZhciB4PXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpfHx0LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7eC5pZD1tLm92ZXJsYXlJRCx4LnN0eWxlLndpZHRoPVwiMTAwJVwiLHguc3R5bGUuaGVpZ2h0PVwiMTAwJVwiLHguc3R5bGUucG9zaXRpb249XCJmaXhlZFwiLHguc3R5bGUuekluZGV4PWUuemluZGV4LTEseC5zdHlsZS5sZWZ0PTAseC5zdHlsZS50b3A9MCx4LnN0eWxlLnJpZ2h0PTAseC5zdHlsZS5ib3R0b209MCx4LnN0eWxlLmJhY2tncm91bmQ9Zi5iYWNrT3ZlcmxheUNvbG9yfHxlLmJhY2tPdmVybGF5Q29sb3IseC5jbGFzc05hbWU9ZS5jc3NBbmltYXRpb24/XCJueC13aXRoLWFuaW1hdGlvblwiOlwiXCIseC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1lLmNzc0FuaW1hdGlvbj9lLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIjpcIlwiLHQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpfHx0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoeCl9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChtLndyYXBJRCl8fHQuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkKTt2YXIgZz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Zy5pZD1lLklEK1wiLVwiK1QsZy5jbGFzc05hbWU9ZS5jbGFzc05hbWUrXCIgXCIrZi5jaGlsZENsYXNzTmFtZStcIiBcIisoZS5jc3NBbmltYXRpb24/XCJueC13aXRoLWFuaW1hdGlvblwiOlwiXCIpK1wiIFwiKyhlLnVzZUljb24/XCJueC13aXRoLWljb25cIjpcIlwiKStcIiBueC1cIitlLmNzc0FuaW1hdGlvblN0eWxlK1wiIFwiKyhlLmNsb3NlQnV0dG9uJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvP1wibngtd2l0aC1jbG9zZS1idXR0b25cIjpcIlwiKStcIiBcIisoXCJmdW5jdGlvblwiPT10eXBlb2Ygbz9cIm54LXdpdGgtY2FsbGJhY2tcIjpcIlwiKStcIiBcIisoZS5jbGlja1RvQ2xvc2U/XCJueC1ub3RpZnktY2xpY2stdG8tY2xvc2VcIjpcIlwiKSxnLnN0eWxlLmZvbnRTaXplPWUuZm9udFNpemUsZy5zdHlsZS5jb2xvcj1mLnRleHRDb2xvcixnLnN0eWxlLmJhY2tncm91bmQ9Zi5iYWNrZ3JvdW5kLGcuc3R5bGUuYm9yZGVyUmFkaXVzPWUuYm9yZGVyUmFkaXVzLGcuc3R5bGUucG9pbnRlckV2ZW50cz1cImFsbFwiLGUucnRsJiYoZy5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxnLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLGcuc3R5bGUuZm9udEZhbWlseT1cIlxcXCJcIitlLmZvbnRGYW1pbHkrXCJcXFwiLCBcIitzLGUuY3NzQW5pbWF0aW9uJiYoZy5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1lLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIik7dmFyIGI9XCJcIjtpZihlLmNsb3NlQnV0dG9uJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiYoYj1cIjxzcGFuIGNsYXNzPVxcXCJueC1jbG9zZS1idXR0b25cXFwiPjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCI+PGc+PHBhdGggZmlsbD1cXFwiXCIrZi5ub3RpZmxpeEljb25Db2xvcitcIlxcXCIgZD1cXFwiTTAuMzggMi4xOWw3LjggNy44MSAtNy44IDcuODFjLTAuNTEsMC41IC0wLjUxLDEuMzEgLTAuMDEsMS44MSAwLjI1LDAuMjUgMC41NywwLjM4IDAuOTEsMC4zOCAwLjM0LDAgMC42NywtMC4xNCAwLjkxLC0wLjM4bDcuODEgLTcuODEgNy44MSA3LjgxYzAuMjQsMC4yNCAwLjU3LDAuMzggMC45MSwwLjM4IDAuMzQsMCAwLjY2LC0wLjE0IDAuOSwtMC4zOCAwLjUxLC0wLjUgMC41MSwtMS4zMSAwLC0xLjgxbC03LjgxIC03LjgxIDcuODEgLTcuODFjMC41MSwtMC41IDAuNTEsLTEuMzEgMCwtMS44MiAtMC41LC0wLjUgLTEuMzEsLTAuNSAtMS44MSwwbC03LjgxIDcuODEgLTcuODEgLTcuODFjLTAuNSwtMC41IC0xLjMxLC0wLjUgLTEuODEsMCAtMC41MSwwLjUxIC0wLjUxLDEuMzIgMCwxLjgyelxcXCIvPjwvZz48L3N2Zz48L3NwYW4+XCIpLCFlLnVzZUljb24pZy5pbm5lckhUTUw9XCI8c3BhbiBjbGFzcz1cXFwibngtbWVzc2FnZVxcXCI+XCIrbitcIjwvc3Bhbj5cIisoZS5jbG9zZUJ1dHRvbj9iOlwiXCIpO2Vsc2UgaWYoZS51c2VGb250QXdlc29tZSlnLmlubmVySFRNTD1cIjxpIHN0eWxlPVxcXCJjb2xvcjpcIitmLmZvbnRBd2Vzb21lSWNvbkNvbG9yK1wiOyBmb250LXNpemU6XCIrZS5mb250QXdlc29tZUljb25TaXplK1wiO1xcXCIgY2xhc3M9XFxcIm54LW1lc3NhZ2UtaWNvbiBueC1tZXNzYWdlLWljb24tZmEgXCIrZi5mb250QXdlc29tZUNsYXNzTmFtZStcIiBcIisoXCJzaGFkb3dcIj09PWUuZm9udEF3ZXNvbWVJY29uU3R5bGU/XCJueC1tZXNzYWdlLWljb24tZmEtc2hhZG93XCI6XCJueC1tZXNzYWdlLWljb24tZmEtYmFzaWNcIikrXCJcXFwiPjwvaT48c3BhbiBjbGFzcz1cXFwibngtbWVzc2FnZSBueC13aXRoLWljb25cXFwiPlwiK24rXCI8L3NwYW4+XCIrKGUuY2xvc2VCdXR0b24/YjpcIlwiKTtlbHNle3ZhciB1PVwiXCI7YT09PWwuU3VjY2Vzcz91PVwiPHN2ZyBjbGFzcz1cXFwibngtbWVzc2FnZS1pY29uXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCI0MFxcXCIgaGVpZ2h0PVxcXCI0MFxcXCIgdmlld0JveD1cXFwiMCAwIDQwIDQwXFxcIj48Zz48cGF0aCBmaWxsPVxcXCJcIitmLm5vdGlmbGl4SWNvbkNvbG9yK1wiXFxcIiBkPVxcXCJNMjAgMGMxMS4wMywwIDIwLDguOTcgMjAsMjAgMCwxMS4wMyAtOC45NywyMCAtMjAsMjAgLTExLjAzLDAgLTIwLC04Ljk3IC0yMCwtMjAgMCwtMTEuMDMgOC45NywtMjAgMjAsLTIwem0wIDM3Ljk4YzkuOTIsMCAxNy45OCwtOC4wNiAxNy45OCwtMTcuOTggMCwtOS45MiAtOC4wNiwtMTcuOTggLTE3Ljk4LC0xNy45OCAtOS45MiwwIC0xNy45OCw4LjA2IC0xNy45OCwxNy45OCAwLDkuOTIgOC4wNiwxNy45OCAxNy45OCwxNy45OHptLTIuNCAtMTMuMjlsMTEuNTIgLTEyLjk2YzAuMzcsLTAuNDEgMS4wMSwtMC40NSAxLjQyLC0wLjA4IDAuNDIsMC4zNyAwLjQ2LDEgMC4wOSwxLjQybC0xMi4xNiAxMy42N2MtMC4xOSwwLjIyIC0wLjQ2LDAuMzQgLTAuNzUsMC4zNCAtMC4yMywwIC0wLjQ1LC0wLjA3IC0wLjYzLC0wLjIybC03LjYgLTYuMDdjLTAuNDMsLTAuMzUgLTAuNSwtMC45OSAtMC4xNiwtMS40MiAwLjM1LC0wLjQzIDAuOTksLTAuNSAxLjQyLC0wLjE2bDYuODUgNS40OHpcXFwiLz48L2c+PC9zdmc+XCI6YT09PWwuRmFpbHVyZT91PVwiPHN2ZyBjbGFzcz1cXFwibngtbWVzc2FnZS1pY29uXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCI0MFxcXCIgaGVpZ2h0PVxcXCI0MFxcXCIgdmlld0JveD1cXFwiMCAwIDQwIDQwXFxcIj48Zz48cGF0aCBmaWxsPVxcXCJcIitmLm5vdGlmbGl4SWNvbkNvbG9yK1wiXFxcIiBkPVxcXCJNMjAgMGMxMS4wMywwIDIwLDguOTcgMjAsMjAgMCwxMS4wMyAtOC45NywyMCAtMjAsMjAgLTExLjAzLDAgLTIwLC04Ljk3IC0yMCwtMjAgMCwtMTEuMDMgOC45NywtMjAgMjAsLTIwem0wIDM3Ljk4YzkuOTIsMCAxNy45OCwtOC4wNiAxNy45OCwtMTcuOTggMCwtOS45MiAtOC4wNiwtMTcuOTggLTE3Ljk4LC0xNy45OCAtOS45MiwwIC0xNy45OCw4LjA2IC0xNy45OCwxNy45OCAwLDkuOTIgOC4wNiwxNy45OCAxNy45OCwxNy45OHptMS40MiAtMTcuOThsNi4xMyA2LjEyYzAuMzksMC40IDAuMzksMS4wNCAwLDEuNDMgLTAuMTksMC4xOSAtMC40NSwwLjI5IC0wLjcxLDAuMjkgLTAuMjcsMCAtMC41MywtMC4xIC0wLjcyLC0wLjI5bC02LjEyIC02LjEzIC02LjEzIDYuMTNjLTAuMTksMC4xOSAtMC40NCwwLjI5IC0wLjcxLDAuMjkgLTAuMjcsMCAtMC41MiwtMC4xIC0wLjcxLC0wLjI5IC0wLjM5LC0wLjM5IC0wLjM5LC0xLjAzIDAsLTEuNDNsNi4xMyAtNi4xMiAtNi4xMyAtNi4xM2MtMC4zOSwtMC4zOSAtMC4zOSwtMS4wMyAwLC0xLjQyIDAuMzksLTAuMzkgMS4wMywtMC4zOSAxLjQyLDBsNi4xMyA2LjEyIDYuMTIgLTYuMTJjMC40LC0wLjM5IDEuMDQsLTAuMzkgMS40MywwIDAuMzksMC4zOSAwLjM5LDEuMDMgMCwxLjQybC02LjEzIDYuMTN6XFxcIi8+PC9nPjwvc3ZnPlwiOmE9PT1sLldhcm5pbmc/dT1cIjxzdmcgY2xhc3M9XFxcIm54LW1lc3NhZ2UtaWNvblxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB3aWR0aD1cXFwiNDBcXFwiIGhlaWdodD1cXFwiNDBcXFwiIHZpZXdCb3g9XFxcIjAgMCA0MCA0MFxcXCI+PGc+PHBhdGggZmlsbD1cXFwiXCIrZi5ub3RpZmxpeEljb25Db2xvcitcIlxcXCIgZD1cXFwiTTIxLjkxIDMuNDhsMTcuOCAzMC44OWMwLjg0LDEuNDYgLTAuMjMsMy4yNSAtMS45MSwzLjI1bC0zNS42IDBjLTEuNjgsMCAtMi43NSwtMS43OSAtMS45MSwtMy4yNWwxNy44IC0zMC44OWMwLjg1LC0xLjQ3IDIuOTcsLTEuNDcgMy44Miwwem0xNi4xNSAzMS44NGwtMTcuOCAtMzAuODljLTAuMTEsLTAuMiAtMC40MSwtMC4yIC0wLjUyLDBsLTE3LjggMzAuODljLTAuMTIsMC4yIDAuMDUsMC40IDAuMjYsMC40bDM1LjYgMGMwLjIxLDAgMC4zOCwtMC4yIDAuMjYsLTAuNHptLTE5LjAxIC00LjEybDAgLTEuMDVjMCwtMC41MyAwLjQyLC0wLjk1IDAuOTUsLTAuOTUgMC41MywwIDAuOTUsMC40MiAwLjk1LDAuOTVsMCAxLjA1YzAsMC41MyAtMC40MiwwLjk1IC0wLjk1LDAuOTUgLTAuNTMsMCAtMC45NSwtMC40MiAtMC45NSwtMC45NXptMCAtNC42NmwwIC0xMy4zOWMwLC0wLjUyIDAuNDIsLTAuOTUgMC45NSwtMC45NSAwLjUzLDAgMC45NSwwLjQzIDAuOTUsMC45NWwwIDEzLjM5YzAsMC41MyAtMC40MiwwLjk2IC0wLjk1LDAuOTYgLTAuNTMsMCAtMC45NSwtMC40MyAtMC45NSwtMC45NnpcXFwiLz48L2c+PC9zdmc+XCI6YT09PWwuSW5mbyYmKHU9XCI8c3ZnIGNsYXNzPVxcXCJueC1tZXNzYWdlLWljb25cXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgd2lkdGg9XFxcIjQwXFxcIiBoZWlnaHQ9XFxcIjQwXFxcIiB2aWV3Qm94PVxcXCIwIDAgNDAgNDBcXFwiPjxnPjxwYXRoIGZpbGw9XFxcIlwiK2Yubm90aWZsaXhJY29uQ29sb3IrXCJcXFwiIGQ9XFxcIk0yMCAwYzExLjAzLDAgMjAsOC45NyAyMCwyMCAwLDExLjAzIC04Ljk3LDIwIC0yMCwyMCAtMTEuMDMsMCAtMjAsLTguOTcgLTIwLC0yMCAwLC0xMS4wMyA4Ljk3LC0yMCAyMCwtMjB6bTAgMzcuOThjOS45MiwwIDE3Ljk4LC04LjA2IDE3Ljk4LC0xNy45OCAwLC05LjkyIC04LjA2LC0xNy45OCAtMTcuOTgsLTE3Ljk4IC05LjkyLDAgLTE3Ljk4LDguMDYgLTE3Ljk4LDE3Ljk4IDAsOS45MiA4LjA2LDE3Ljk4IDE3Ljk4LDE3Ljk4em0tMC45OSAtMjMuM2MwLC0wLjU0IDAuNDQsLTAuOTggMC45OSwtMC45OCAwLjU1LDAgMC45OSwwLjQ0IDAuOTksMC45OGwwIDE1Ljg2YzAsMC41NSAtMC40NCwwLjk5IC0wLjk5LDAuOTkgLTAuNTUsMCAtMC45OSwtMC40NCAtMC45OSwtMC45OWwwIC0xNS44NnptMCAtNS4yMmMwLC0wLjU1IDAuNDQsLTAuOTkgMC45OSwtMC45OSAwLjU1LDAgMC45OSwwLjQ0IDAuOTksMC45OWwwIDEuMDljMCwwLjU0IC0wLjQ0LDAuOTkgLTAuOTksMC45OSAtMC41NSwwIC0wLjk5LC0wLjQ1IC0wLjk5LC0wLjk5bDAgLTEuMDl6XFxcIi8+PC9nPjwvc3ZnPlwiKSxnLmlubmVySFRNTD11K1wiPHNwYW4gY2xhc3M9XFxcIm54LW1lc3NhZ2Ugbngtd2l0aC1pY29uXFxcIj5cIituK1wiPC9zcGFuPlwiKyhlLmNsb3NlQnV0dG9uP2I6XCJcIil9aWYoXCJsZWZ0LWJvdHRvbVwiPT09ZS5wb3NpdGlvbnx8XCJyaWdodC1ib3R0b21cIj09PWUucG9zaXRpb24pe3ZhciB5PXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpO3kuaW5zZXJ0QmVmb3JlKGcseS5maXJzdENoaWxkKX1lbHNlIHQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpLmFwcGVuZENoaWxkKGcpO3ZhciBrPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZy5pZCk7aWYoayl7dmFyIGgsQyx6PWZ1bmN0aW9uKCl7ay5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciBlPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpO2UmJjA+PWQuY2hpbGRFbGVtZW50Q291bnQmJmUuY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKSxjbGVhclRpbWVvdXQoaCl9LFM9ZnVuY3Rpb24oKXtpZihrJiZudWxsIT09ay5wYXJlbnROb2RlJiZrLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayksMD49ZC5jaGlsZEVsZW1lbnRDb3VudCYmbnVsbCE9PWQucGFyZW50Tm9kZSl7ZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpO3ZhciBlPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpO2UmJm51bGwhPT1lLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX1jbGVhclRpbWVvdXQoQyl9O2lmKGUuY2xvc2VCdXR0b24mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8pe3ZhciBMPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZy5pZCkucXVlcnlTZWxlY3RvcihcInNwYW4ubngtY2xvc2UtYnV0dG9uXCIpO0wuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oKXt6KCk7dmFyIHQ9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKSxjbGVhclRpbWVvdXQodCl9LGUuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9aWYoKFwiZnVuY3Rpb25cIj09dHlwZW9mIG98fGUuY2xpY2tUb0Nsb3NlKSYmay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixmdW5jdGlvbigpe1wiZnVuY3Rpb25cIj09dHlwZW9mIG8mJm8oKSx6KCk7dmFyIHQ9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKSxjbGVhclRpbWVvdXQodCl9LGUuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSksIWUuY2xvc2VCdXR0b24mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8pe3ZhciBXPWZ1bmN0aW9uKCl7aD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eigpfSxlLnRpbWVvdXQpLEM9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKX0sZS50aW1lb3V0K2UuY3NzQW5pbWF0aW9uRHVyYXRpb24pfTtXKCksZS5wYXVzZU9uSG92ZXImJihrLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsZnVuY3Rpb24oKXtrLmNsYXNzTGlzdC5hZGQoXCJueC1wYXVzZWRcIiksY2xlYXJUaW1lb3V0KGgpLGNsZWFyVGltZW91dChDKX0pLGsuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixmdW5jdGlvbigpe2suY2xhc3NMaXN0LnJlbW92ZShcIm54LXBhdXNlZFwiKSxXKCl9KSl9fWlmKGUuc2hvd09ubHlUaGVMYXN0T25lJiYwPFQpZm9yKHZhciBJLFI9dC5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXj1cIitlLklEK1wiLV06bm90KFtpZD1cIitlLklEK1wiLVwiK1QrXCJdKVwiKSxBPTA7QTxSLmxlbmd0aDtBKyspST1SW0FdLG51bGwhPT1JLnBhcmVudE5vZGUmJkkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChJKTtlPXYoITAsZSxjKX0sRT1mdW5jdGlvbigpe3JldHVyblwiW2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBde3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LWZhbWlseTpcXFwiUXVpY2tzYW5kXFxcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcXFwiU2Vnb2UgVUlcXFwiLFJvYm90byxcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLEFyaWFsLHNhbnMtc2VyaWY7bGVmdDowO3RvcDowO3BhZGRpbmc6MTBweDtjb2xvcjojMWUxZTFlO2JvcmRlci1yYWRpdXM6MjVweDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVxcXCItb3ZlcmxheVxcXCJde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuNSk7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDowfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXYubngtcmVwb3J0LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJde3dpZHRoOjMyMHB4O21heC13aWR0aDoxMDAlO21heC1oZWlnaHQ6OTZ2aDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG87Ym9yZGVyLXJhZGl1czppbmhlcml0O3BhZGRpbmc6MTBweDstd2Via2l0LWZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwwLDAsMC4wNSkpO2ZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwgMCwgMCwgLjA1KSk7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4wMyk7YmFja2dyb3VuZDojZjhmOGY4O3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXJ7d2lkdGg6MDtoZWlnaHQ6MH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2t7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MkPVxcXCItaWNvblxcXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt3aWR0aDoxMTBweDtoZWlnaHQ6MTEwcHg7ZGlzcGxheTpibG9jazttYXJnaW46NnB4IGF1dG8gMTJweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MkPVxcXCItaWNvblxcXCJdIHN2Z3ttaW4td2lkdGg6MTAwJTttYXgtd2lkdGg6MTAwJTtoZWlnaHQ6YXV0b31baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+Kj5oNXt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6NTAwO2xpbmUtaGVpZ2h0OjEuNDttYXJnaW46MCAwIDEwcHg7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpjZW50ZXJ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPio+cHt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC1zaXplOjEzcHg7bGluZS1oZWlnaHQ6MS40O2ZvbnQtd2VpZ2h0Om5vcm1hbDtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7cGFkZGluZzowIDEwcHg7bWFyZ2luOjAgMCAxMHB4fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXSBhI05YUmVwb3J0QnV0dG9ue3dvcmQtYnJlYWs6YnJlYWstYWxsO3dvcmQtYnJlYWs6YnJlYWstd29yZDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0Oy1vLXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDtjdXJzb3I6cG9pbnRlcjtmbG9hdDpyaWdodDtwYWRkaW5nOjdweCAxN3B4O2JhY2tncm91bmQ6IzMyYzY4Mjtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoxLjQ7Zm9udC13ZWlnaHQ6NTAwO2JvcmRlci1yYWRpdXM6aW5oZXJpdCFpbXBvcnRhbnQ7Y29sb3I6I2ZmZn1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0gYSNOWFJlcG9ydEJ1dHRvbjpob3Zlcnstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSk7Ym94LXNoYWRvdzppbnNldCAwIC02MHB4IDVweCAtNXB4IHJnYmEoMCwwLDAsLjI1KX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcnRsLW9uIGEjTlhSZXBvcnRCdXR0b257ZmxvYXQ6bGVmdH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLW92ZXJsYXlcXFwiXS5ueC13aXRoLWFuaW1hdGlvbnstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtb3ZlcmxheS1hbmltYXRpb24gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZXstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbXstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1Aa2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcmVtb3ZlPmRpdltjbGFzcyo9XFxcIi1vdmVybGF5XFxcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb217b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19XCJ9LGo9ZnVuY3Rpb24oZSxhLG4sbyxyLGwpe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTtpfHxHLlJlcG9ydC5pbml0KHt9KTt2YXIgbT17fTtpZihcIm9iamVjdFwiPT10eXBlb2YgciYmIUFycmF5LmlzQXJyYXkocil8fFwib2JqZWN0XCI9PXR5cGVvZiBsJiYhQXJyYXkuaXNBcnJheShsKSl7dmFyIGY9e307XCJvYmplY3RcIj09dHlwZW9mIHI/Zj1yOlwib2JqZWN0XCI9PXR5cGVvZiBsJiYoZj1sKSxtPXYoITAsaSx7fSksaT12KCEwLGksZil9dmFyIGQ9aVtlLnRvTG9jYWxlTG93ZXJDYXNlKFwiZW5cIildO1wic3RyaW5nXCIhPXR5cGVvZiBhJiYoYT1cIk5vdGlmbGl4IFwiK2UpLFwic3RyaW5nXCIhPXR5cGVvZiBuJiYoZT09PWMuU3VjY2Vzcz9uPVwiXFxcIkRvIG5vdCB0cnkgdG8gYmVjb21lIGEgcGVyc29uIG9mIHN1Y2Nlc3MgYnV0IHRyeSB0byBiZWNvbWUgYSBwZXJzb24gb2YgdmFsdWUuXFxcIiA8YnI+PGJyPi0gQWxiZXJ0IEVpbnN0ZWluXCI6ZT09PWMuRmFpbHVyZT9uPVwiXFxcIkZhaWx1cmUgaXMgc2ltcGx5IHRoZSBvcHBvcnR1bml0eSB0byBiZWdpbiBhZ2FpbiwgdGhpcyB0aW1lIG1vcmUgaW50ZWxsaWdlbnRseS5cXFwiIDxicj48YnI+LSBIZW5yeSBGb3JkXCI6ZT09PWMuV2FybmluZz9uPVwiXFxcIlRoZSBwZW9wbGVzIHdobyB3YW50IHRvIGxpdmUgY29tZm9ydGFibHkgd2l0aG91dCBwcm9kdWNpbmcgYW5kIGZhdGlndWU7IHRoZXkgYXJlIGRvb21lZCB0byBsb3NlIHRoZWlyIGRpZ25pdHksIHRoZW4gbGliZXJ0eSwgYW5kIHRoZW4gaW5kZXBlbmRlbmNlIGFuZCBkZXN0aW55LlxcXCIgPGJyPjxicj4tIE11c3RhZmEgS2VtYWwgQXRhdHVya1wiOmU9PT1jLkluZm8mJihuPVwiXFxcIktub3dsZWRnZSByZXN0cyBub3QgdXBvbiB0cnV0aCBhbG9uZSwgYnV0IHVwb24gZXJyb3IgYWxzby5cXFwiIDxicj48YnI+LSBDYXJsIEd1c3RhdiBKdW5nXCIpKSxcInN0cmluZ1wiIT10eXBlb2YgbyYmKG89XCJPa2F5XCIpLGkucGxhaW5UZXh0JiYoYT1OKGEpLG49TihuKSxvPU4obykpLGkucGxhaW5UZXh0fHwoYS5sZW5ndGg+aS50aXRsZU1heExlbmd0aCYmKGE9XCJQb3NzaWJsZSBIVE1MIFRhZ3MgRXJyb3JcIixuPVwiVGhlIFxcXCJwbGFpblRleHRcXFwiIG9wdGlvbiBpcyBcXFwiZmFsc2VcXFwiIGFuZCB0aGUgdGl0bGUgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwidGl0bGVNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIixvPVwiT2theVwiKSxuLmxlbmd0aD5pLm1lc3NhZ2VNYXhMZW5ndGgmJihhPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwibWVzc2FnZU1heExlbmd0aFxcXCIgb3B0aW9uLlwiLG89XCJPa2F5XCIpLG8ubGVuZ3RoPmkuYnV0dG9uTWF4TGVuZ3RoJiYoYT1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvclwiLG49XCJUaGUgXFxcInBsYWluVGV4dFxcXCIgb3B0aW9uIGlzIFxcXCJmYWxzZVxcXCIgYW5kIHRoZSBidXR0b24gY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwiYnV0dG9uTWF4TGVuZ3RoXFxcIiBvcHRpb24uXCIsbz1cIk9rYXlcIikpLGEubGVuZ3RoPmkudGl0bGVNYXhMZW5ndGgmJihhPWEuc3Vic3RyaW5nKDAsaS50aXRsZU1heExlbmd0aCkrXCIuLi5cIiksbi5sZW5ndGg+aS5tZXNzYWdlTWF4TGVuZ3RoJiYobj1uLnN1YnN0cmluZygwLGkubWVzc2FnZU1heExlbmd0aCkrXCIuLi5cIiksby5sZW5ndGg+aS5idXR0b25NYXhMZW5ndGgmJihvPW8uc3Vic3RyaW5nKDAsaS5idXR0b25NYXhMZW5ndGgpK1wiLi4uXCIpLGkuY3NzQW5pbWF0aW9ufHwoaS5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgeD10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7eC5pZD1wLklELHguY2xhc3NOYW1lPWkuY2xhc3NOYW1lLHguc3R5bGUuekluZGV4PWkuemluZGV4LHguc3R5bGUuYm9yZGVyUmFkaXVzPWkuYm9yZGVyUmFkaXVzLHguc3R5bGUuZm9udEZhbWlseT1cIlxcXCJcIitpLmZvbnRGYW1pbHkrXCJcXFwiLCBcIitzLGkucnRsJiYoeC5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSx4LmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLHguc3R5bGUuZGlzcGxheT1cImZsZXhcIix4LnN0eWxlLmZsZXhXcmFwPVwid3JhcFwiLHguc3R5bGUuZmxleERpcmVjdGlvbj1cImNvbHVtblwiLHguc3R5bGUuYWxpZ25JdGVtcz1cImNlbnRlclwiLHguc3R5bGUuanVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIjt2YXIgZz1cIlwiLGI9ITA9PT1pLmJhY2tPdmVybGF5Q2xpY2tUb0Nsb3NlO2kuYmFja092ZXJsYXkmJihnPVwiPGRpdiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItb3ZlcmxheVwiKyhpLmNzc0FuaW1hdGlvbj9cIiBueC13aXRoLWFuaW1hdGlvblwiOlwiXCIpKyhiP1wiIG54LXJlcG9ydC1jbGljay10by1jbG9zZVwiOlwiXCIpK1wiXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZDpcIisoZC5iYWNrT3ZlcmxheUNvbG9yfHxpLmJhY2tPdmVybGF5Q29sb3IpK1wiO2FuaW1hdGlvbi1kdXJhdGlvbjpcIitpLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48L2Rpdj5cIik7dmFyIHU9XCJcIjtpZihlPT09Yy5TdWNjZXNzP3U9QyhpLnN2Z1NpemUsZC5zdmdDb2xvcik6ZT09PWMuRmFpbHVyZT91PXooaS5zdmdTaXplLGQuc3ZnQ29sb3IpOmU9PT1jLldhcm5pbmc/dT1TKGkuc3ZnU2l6ZSxkLnN2Z0NvbG9yKTplPT09Yy5JbmZvJiYodT1MKGkuc3ZnU2l6ZSxkLnN2Z0NvbG9yKSkseC5pbm5lckhUTUw9ZytcIjxkaXYgY2xhc3M9XFxcIlwiK2kuY2xhc3NOYW1lK1wiLWNvbnRlbnRcIisoaS5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb24gXCI6XCJcIikrXCIgbngtXCIraS5jc3NBbmltYXRpb25TdHlsZStcIlxcXCIgc3R5bGU9XFxcIndpZHRoOlwiK2kud2lkdGgrXCI7IGJhY2tncm91bmQ6XCIraS5iYWNrZ3JvdW5kQ29sb3IrXCI7IGFuaW1hdGlvbi1kdXJhdGlvbjpcIitpLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48ZGl2IHN0eWxlPVxcXCJ3aWR0aDpcIitpLnN2Z1NpemUrXCI7IGhlaWdodDpcIitpLnN2Z1NpemUrXCI7XFxcIiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItaWNvblxcXCI+XCIrdStcIjwvZGl2PjxoNSBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItdGl0bGVcXFwiIHN0eWxlPVxcXCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTpcIitpLnRpdGxlRm9udFNpemUrXCI7IGNvbG9yOlwiK2QudGl0bGVDb2xvcitcIjtcXFwiPlwiK2ErXCI8L2g1PjxwIGNsYXNzPVxcXCJcIitpLmNsYXNzTmFtZStcIi1tZXNzYWdlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOlwiK2kubWVzc2FnZUZvbnRTaXplK1wiOyBjb2xvcjpcIitkLm1lc3NhZ2VDb2xvcitcIjtcXFwiPlwiK24rXCI8L3A+PGEgaWQ9XFxcIk5YUmVwb3J0QnV0dG9uXFxcIiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItYnV0dG9uXFxcIiBzdHlsZT1cXFwiZm9udC13ZWlnaHQ6NTAwOyBmb250LXNpemU6XCIraS5idXR0b25Gb250U2l6ZStcIjsgYmFja2dyb3VuZDpcIitkLmJ1dHRvbkJhY2tncm91bmQrXCI7IGNvbG9yOlwiK2QuYnV0dG9uQ29sb3IrXCI7XFxcIj5cIitvK1wiPC9hPjwvZGl2PlwiLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHguaWQpKXt0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoeCk7dmFyIHk9ZnVuY3Rpb24oKXt2YXIgZT10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHguaWQpO2UuY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKTt2YXIgYT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bnVsbCE9PWUucGFyZW50Tm9kZSYmZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpLGNsZWFyVGltZW91dChhKX0saS5jc3NBbmltYXRpb25EdXJhdGlvbil9LGs9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk5YUmVwb3J0QnV0dG9uXCIpO2lmKGsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZyKCkseSgpfSksZyYmYil7dmFyIGg9dC5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm54LXJlcG9ydC1jbGljay10by1jbG9zZVwiKTtoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7eSgpfSl9fWk9dighMCxpLG0pfSxPPWZ1bmN0aW9uKCl7cmV0dXJuXCJbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBde3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMzt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2xlZnQ6MDt0b3A6MDtwYWRkaW5nOjEwcHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Zm9udC1mYW1pbHk6XFxcIlF1aWNrc2FuZFxcXCIsLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sXFxcIkhlbHZldGljYSBOZXVlXFxcIixBcmlhbCxzYW5zLXNlcmlmO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1jZW50ZXItdG9wey13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tY2VudGVyLWJvdHRvbXstd2Via2l0LWJveC1wYWNrOmVuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWVuZDstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1sZWZ0LXRvcHstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1wYWNrOnN0YXJ0Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWxlZnQtY2VudGVyey13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tbGVmdC1ib3R0b217LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LXdlYmtpdC1ib3gtcGFjazplbmQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tcmlnaHQtdG9wey13ZWJraXQtYm94LWFsaWduOmVuZDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtZW5kOy1tcy1mbGV4LWFsaWduOmVuZDthbGlnbi1pdGVtczpmbGV4LWVuZDstd2Via2l0LWJveC1wYWNrOnN0YXJ0Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLXJpZ2h0LWNlbnRlcnstd2Via2l0LWJveC1hbGlnbjplbmQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LWVuZDstbXMtZmxleC1hbGlnbjplbmQ7YWxpZ24taXRlbXM6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1yaWdodC1ib3R0b217LXdlYmtpdC1ib3gtYWxpZ246ZW5kOy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1lbmQ7LW1zLWZsZXgtYWxpZ246ZW5kO2FsaWduLWl0ZW1zOmZsZXgtZW5kOy13ZWJraXQtYm94LXBhY2s6ZW5kOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtZW5kOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLW92ZXJsYXlcXFwiXXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2xlZnQ6MDt0b3A6MDtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjUpO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1vdmVybGF5XFxcIl0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1vdmVybGF5LWFuaW1hdGlvbiAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItb3ZlcmxheVxcXCJdLm54LXdpdGgtYW5pbWF0aW9ue29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgY29uZmlybS1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl17d2lkdGg6MzAwcHg7bWF4LXdpZHRoOjEwMCU7bWF4LWhlaWdodDo5NnZoO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bztib3JkZXItcmFkaXVzOjI1cHg7cGFkZGluZzoxMHB4O21hcmdpbjowOy13ZWJraXQtZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLDAsMCwwLjA1KSk7ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLCAwLCAwLCAuMDUpKTtiYWNrZ3JvdW5kOiNmOGY4Zjg7Y29sb3I6IzFlMWUxZTtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjE7dGV4dC1hbGlnbjpjZW50ZXJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl17ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWhlYWRcXFwiXT5oNXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjA7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtjb2xvcjojMzJjNjgyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDo1MDA7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdntmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDttYXJnaW46MTVweCAwIDIwcHg7cGFkZGluZzowIDEwcHg7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDpub3JtYWw7Y29sb3I6aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl0+ZGl2PmRpdntmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjE1cHggMCAwO3BhZGRpbmc6MH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWhlYWRcXFwiXT5kaXY+ZGl2PmlucHV0e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtoZWlnaHQ6NDBweDttYXJnaW46MDtwYWRkaW5nOjAgMTVweDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6MjVweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MTstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RleHQtYWxpZ246bGVmdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl0+ZGl2PmRpdj5pbnB1dHt0ZXh0LWFsaWduOnJpZ2h0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQ6aG92ZXJ7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjMpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQubngtdmFsaWRhdGlvbi1mYWlsdXJle2JvcmRlci1jb2xvcjojZmY1NTQ5fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQubngtdmFsaWRhdGlvbi1zdWNjZXNze2JvcmRlci1jb2xvcjojMzJjNjgyfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItYnV0dG9uc1xcXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtib3JkZXItcmFkaXVzOmluaGVyaXQ7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5he2N1cnNvcjpwb2ludGVyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50Oy13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7ZmxvYXQ6bGVmdDt3aWR0aDo0OCU7cGFkZGluZzo5cHggNXB4O2JvcmRlci1yYWRpdXM6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZToxNXB4O2xpbmUtaGVpZ2h0OjEuNDtjb2xvcjojZjhmOGY4O3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hLm54LWNvbmZpcm0tYnV0dG9uLW9re21hcmdpbjowIDIlIDAgMDtiYWNrZ3JvdW5kOiMzMmM2ODJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1idXR0b25zXFxcIl0+YS5ueC1jb25maXJtLWJ1dHRvbi1jYW5jZWx7bWFyZ2luOjAgMCAwIDIlO2JhY2tncm91bmQ6I2E5YTlhOX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hLm54LWZ1bGx7bWFyZ2luOjA7d2lkdGg6MTAwJX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hOmhvdmVyey13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIC02MHB4IDVweCAtNXB4IHJnYmEoMCwwLDAsLjI1KTtib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcnRsLW9uPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXSxbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1idXR0b25zXFxcIl0+YXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZVkoMTgwZGVnKX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGU+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXXstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdey13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi16b29tezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNSk7dHJhbnNmb3JtOnNjYWxlKC41KX01MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGUubngtcmVtb3ZlPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl17b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbS5ueC1yZW1vdmU+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmV7MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7b3BhY2l0eTouNTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19XCJ9LEg9ZnVuY3Rpb24oZSxpLG4sbyxyLGwsbSxjLHApe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTthfHxHLkNvbmZpcm0uaW5pdCh7fSk7dmFyIHg9dighMCxhLHt9KTtcIm9iamVjdFwiIT10eXBlb2YgcHx8QXJyYXkuaXNBcnJheShwKXx8KGE9dighMCxhLHApKSxcInN0cmluZ1wiIT10eXBlb2YgaSYmKGk9XCJOb3RpZmxpeCBDb25maXJtXCIpLFwic3RyaW5nXCIhPXR5cGVvZiBuJiYobj1cIkRvIHlvdSBhZ3JlZSB3aXRoIG1lP1wiKSxcInN0cmluZ1wiIT10eXBlb2YgciYmKHI9XCJZZXNcIiksXCJzdHJpbmdcIiE9dHlwZW9mIGwmJihsPVwiTm9cIiksXCJmdW5jdGlvblwiIT10eXBlb2YgbSYmKG09dm9pZCAwKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBjJiYoYz12b2lkIDApLGEucGxhaW5UZXh0JiYoaT1OKGkpLG49TihuKSxyPU4ociksbD1OKGwpKSxhLnBsYWluVGV4dHx8KGkubGVuZ3RoPmEudGl0bGVNYXhMZW5ndGgmJihpPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIHRpdGxlIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiBcXFwidGl0bGVNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIixyPVwiT2theVwiLGw9XCIuLi5cIiksbi5sZW5ndGg+YS5tZXNzYWdlTWF4TGVuZ3RoJiYoaT1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvclwiLG49XCJUaGUgXFxcInBsYWluVGV4dFxcXCIgb3B0aW9uIGlzIFxcXCJmYWxzZVxcXCIgYW5kIHRoZSBtZXNzYWdlIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiBcXFwibWVzc2FnZU1heExlbmd0aFxcXCIgb3B0aW9uLlwiLHI9XCJPa2F5XCIsbD1cIi4uLlwiKSwoci5sZW5ndGh8fGwubGVuZ3RoKT5hLmJ1dHRvbnNNYXhMZW5ndGgmJihpPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIGJ1dHRvbnMgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFxcXCJidXR0b25zTWF4TGVuZ3RoXFxcIiBvcHRpb24uXCIscj1cIk9rYXlcIixsPVwiLi4uXCIpKSxpLmxlbmd0aD5hLnRpdGxlTWF4TGVuZ3RoJiYoaT1pLnN1YnN0cmluZygwLGEudGl0bGVNYXhMZW5ndGgpK1wiLi4uXCIpLG4ubGVuZ3RoPmEubWVzc2FnZU1heExlbmd0aCYmKG49bi5zdWJzdHJpbmcoMCxhLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCIpLHIubGVuZ3RoPmEuYnV0dG9uc01heExlbmd0aCYmKHI9ci5zdWJzdHJpbmcoMCxhLmJ1dHRvbnNNYXhMZW5ndGgpK1wiLi4uXCIpLGwubGVuZ3RoPmEuYnV0dG9uc01heExlbmd0aCYmKGw9bC5zdWJzdHJpbmcoMCxhLmJ1dHRvbnNNYXhMZW5ndGgpK1wiLi4uXCIpLGEuY3NzQW5pbWF0aW9ufHwoYS5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgZz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Zy5pZD1kLklELGcuY2xhc3NOYW1lPWEuY2xhc3NOYW1lKyhhLmNzc0FuaW1hdGlvbj9cIiBueC13aXRoLWFuaW1hdGlvbiBueC1cIithLmNzc0FuaW1hdGlvblN0eWxlOlwiXCIpLGcuc3R5bGUuekluZGV4PWEuemluZGV4LGcuc3R5bGUucGFkZGluZz1hLmRpc3RhbmNlLGEucnRsJiYoZy5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxnLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpO3ZhciBiPVwic3RyaW5nXCI9PXR5cGVvZiBhLnBvc2l0aW9uP2EucG9zaXRpb24udHJpbSgpOlwiY2VudGVyXCI7Zy5jbGFzc0xpc3QuYWRkKFwibngtcG9zaXRpb24tXCIrYiksZy5zdHlsZS5mb250RmFtaWx5PVwiXFxcIlwiK2EuZm9udEZhbWlseStcIlxcXCIsIFwiK3M7dmFyIHU9XCJcIjthLmJhY2tPdmVybGF5JiYodT1cIjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLW92ZXJsYXlcIisoYS5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb25cIjpcIlwiKStcIlxcXCIgc3R5bGU9XFxcImJhY2tncm91bmQ6XCIrYS5iYWNrT3ZlcmxheUNvbG9yK1wiO2FuaW1hdGlvbi1kdXJhdGlvbjpcIithLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48L2Rpdj5cIik7dmFyIHk9XCJcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBtJiYoeT1cIjxhIGlkPVxcXCJOWENvbmZpcm1CdXR0b25DYW5jZWxcXFwiIGNsYXNzPVxcXCJueC1jb25maXJtLWJ1dHRvbi1jYW5jZWxcXFwiIHN0eWxlPVxcXCJjb2xvcjpcIithLmNhbmNlbEJ1dHRvbkNvbG9yK1wiO2JhY2tncm91bmQ6XCIrYS5jYW5jZWxCdXR0b25CYWNrZ3JvdW5kK1wiO2ZvbnQtc2l6ZTpcIithLmJ1dHRvbnNGb250U2l6ZStcIjtcXFwiPlwiK2wrXCI8L2E+XCIpO3ZhciBrPVwiXCIsaD1udWxsLEM9dm9pZCAwO2lmKGU9PT1mLkFza3x8ZT09PWYuUHJvbXB0KXtoPW98fFwiXCI7dmFyIHo9ZT09PWYuQXNrP01hdGguY2VpbCgxLjUqaC5sZW5ndGgpOjIwMDxoLmxlbmd0aD9NYXRoLmNlaWwoMS41KmgubGVuZ3RoKToyNTAsUz1lPT09Zi5Qcm9tcHQ/XCJ2YWx1ZT1cXFwiXCIraCtcIlxcXCJcIjpcIlwiO2s9XCI8ZGl2PjxpbnB1dCBpZD1cXFwiTlhDb25maXJtVmFsaWRhdGlvbklucHV0XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBcIitTK1wiIG1heGxlbmd0aD1cXFwiXCIreitcIlxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTpcIithLm1lc3NhZ2VGb250U2l6ZStcIjtib3JkZXItcmFkaXVzOiBcIithLmJvcmRlclJhZGl1cytcIjtcXFwiIGF1dG9jb21wbGV0ZT1cXFwib2ZmXFxcIiBzcGVsbGNoZWNrPVxcXCJmYWxzZVxcXCIgYXV0b2NhcGl0YWxpemU9XFxcIm5vbmVcXFwiIC8+PC9kaXY+XCJ9aWYoZy5pbm5lckhUTUw9dStcIjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLWNvbnRlbnRcXFwiIHN0eWxlPVxcXCJ3aWR0aDpcIithLndpZHRoK1wiOyBiYWNrZ3JvdW5kOlwiK2EuYmFja2dyb3VuZENvbG9yK1wiOyBhbmltYXRpb24tZHVyYXRpb246XCIrYS5jc3NBbmltYXRpb25EdXJhdGlvbitcIm1zOyBib3JkZXItcmFkaXVzOiBcIithLmJvcmRlclJhZGl1cytcIjtcXFwiPjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLWhlYWRcXFwiPjxoNSBzdHlsZT1cXFwiY29sb3I6XCIrYS50aXRsZUNvbG9yK1wiO2ZvbnQtc2l6ZTpcIithLnRpdGxlRm9udFNpemUrXCI7XFxcIj5cIitpK1wiPC9oNT48ZGl2IHN0eWxlPVxcXCJjb2xvcjpcIithLm1lc3NhZ2VDb2xvcitcIjtmb250LXNpemU6XCIrYS5tZXNzYWdlRm9udFNpemUrXCI7XFxcIj5cIituK2srXCI8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVxcXCJcIithLmNsYXNzTmFtZStcIi1idXR0b25zXFxcIj48YSBpZD1cXFwiTlhDb25maXJtQnV0dG9uT2tcXFwiIGNsYXNzPVxcXCJueC1jb25maXJtLWJ1dHRvbi1va1wiKyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBtP1wiXCI6XCIgbngtZnVsbFwiKStcIlxcXCIgc3R5bGU9XFxcImNvbG9yOlwiK2Eub2tCdXR0b25Db2xvcitcIjtiYWNrZ3JvdW5kOlwiK2Eub2tCdXR0b25CYWNrZ3JvdW5kK1wiO2ZvbnQtc2l6ZTpcIithLmJ1dHRvbnNGb250U2l6ZStcIjtcXFwiPlwiK3IrXCI8L2E+XCIreStcIjwvZGl2PjwvZGl2PlwiLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuaWQpKXt0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZyk7dmFyIEw9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChnLmlkKSxXPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWENvbmZpcm1CdXR0b25Pa1wiKSxJPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWENvbmZpcm1WYWxpZGF0aW9uSW5wdXRcIik7aWYoSSYmKEkuZm9jdXMoKSxJLnNldFNlbGVjdGlvblJhbmdlKDAsKEkudmFsdWV8fFwiXCIpLmxlbmd0aCksSS5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIixmdW5jdGlvbih0KXt2YXIgaT10LnRhcmdldC52YWx1ZTtpZihlPT09Zi5Bc2smJmkhPT1oKXQucHJldmVudERlZmF1bHQoKSxJLmNsYXNzTGlzdC5hZGQoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIiksSS5jbGFzc0xpc3QucmVtb3ZlKFwibngtdmFsaWRhdGlvbi1zdWNjZXNzXCIpO2Vsc2V7ZT09PWYuQXNrJiYoSS5jbGFzc0xpc3QucmVtb3ZlKFwibngtdmFsaWRhdGlvbi1mYWlsdXJlXCIpLEkuY2xhc3NMaXN0LmFkZChcIm54LXZhbGlkYXRpb24tc3VjY2Vzc1wiKSk7dmFyIGE9XCJlbnRlclwiPT09KHQua2V5fHxcIlwiKS50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpfHwxMz09PXQua2V5Q29kZTthJiZXLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwiY2xpY2tcIikpfX0pKSxXLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKHQpe2lmKGU9PT1mLkFzayYmaCYmSSl7dmFyIGk9KEkudmFsdWV8fFwiXCIpLnRvU3RyaW5nKCk7aWYoaSE9PWgpcmV0dXJuIEkuZm9jdXMoKSxJLmNsYXNzTGlzdC5hZGQoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIiksdC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksdC5yZXR1cm5WYWx1ZT0hMSx0LmNhbmNlbEJ1YmJsZT0hMCwhMTtJLmNsYXNzTGlzdC5yZW1vdmUoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIil9XCJmdW5jdGlvblwiPT10eXBlb2YgbSYmKGU9PT1mLlByb21wdCYmSSYmKEM9SS52YWx1ZXx8XCJcIiksbShDKSksTC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciBuPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09TC5wYXJlbnROb2RlJiYoTC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKEwpLGNsZWFyVGltZW91dChuKSl9LGEuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSksXCJmdW5jdGlvblwiPT10eXBlb2YgbSl7dmFyIFI9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk5YQ29uZmlybUJ1dHRvbkNhbmNlbFwiKTtSLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT10eXBlb2YgYyYmKGU9PT1mLlByb21wdCYmSSYmKEM9SS52YWx1ZXx8XCJcIiksYyhDKSksTC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciB0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09TC5wYXJlbnROb2RlJiYoTC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKEwpLGNsZWFyVGltZW91dCh0KSl9LGEuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9fWE9dighMCxhLHgpfSxQPWZ1bmN0aW9uKCl7cmV0dXJuXCJbaWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjQwMDA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDttYXJnaW46YXV0bztkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjgpO2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsc2Fucy1zZXJpZn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0ubngtbG9hZGluZy1jbGljay10by1jbG9zZXtjdXJzb3I6cG9pbnRlcn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPmRpdltjbGFzcyo9XFxcIi1pY29uXFxcIl17d2lkdGg6NjBweDtoZWlnaHQ6NjBweDtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LXRyYW5zaXRpb246dG9wIC4ycyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOnRvcCAuMnMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0b3AgLjJzIGVhc2UtaW4tb3V0O21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVxcXCItaWNvblxcXCJdIGltZyxbaWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPmRpdltjbGFzcyo9XFxcIi1pY29uXFxcIl0gc3Zne21heC13aWR0aDp1bnNldDttYXgtaGVpZ2h0OnVuc2V0O3dpZHRoOjEwMCU7aGVpZ2h0OmF1dG87cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowfVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+cHtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MTBweCBhdXRvIDA7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNXB4O2xpbmUtaGVpZ2h0OjEuNDtwYWRkaW5nOjAgMTBweDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpsb2FkaW5nLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5wLm54LWxvYWRpbmctbWVzc2FnZS1uZXd7LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1uZXctbWVzc2FnZS1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVwifSxVPWZ1bmN0aW9uKGUsaSxhLG8scil7aWYoIXcoXCJib2R5XCIpKXJldHVybiExO258fEcuTG9hZGluZy5pbml0KHt9KTt2YXIgbD12KCEwLG4se30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiYhQXJyYXkuaXNBcnJheShpKXx8XCJvYmplY3RcIj09dHlwZW9mIGEmJiFBcnJheS5pc0FycmF5KGEpKXt2YXIgbT17fTtcIm9iamVjdFwiPT10eXBlb2YgaT9tPWk6XCJvYmplY3RcIj09dHlwZW9mIGEmJihtPWEpLG49dighMCxuLG0pfXZhciBjPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGkmJjA8aS5sZW5ndGgmJihjPWkpLG8pe2M9Yy5sZW5ndGg+bi5tZXNzYWdlTWF4TGVuZ3RoP04oYykudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCxuLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6TihjKS50b1N0cmluZygpO3ZhciBwPVwiXCI7MDxjLmxlbmd0aCYmKHA9XCI8cCBpZD1cXFwiXCIrbi5tZXNzYWdlSUQrXCJcXFwiIGNsYXNzPVxcXCJueC1sb2FkaW5nLW1lc3NhZ2VcXFwiIHN0eWxlPVxcXCJjb2xvcjpcIituLm1lc3NhZ2VDb2xvcitcIjtmb250LXNpemU6XCIrbi5tZXNzYWdlRm9udFNpemUrXCI7XFxcIj5cIitjK1wiPC9wPlwiKSxuLmNzc0FuaW1hdGlvbnx8KG4uY3NzQW5pbWF0aW9uRHVyYXRpb249MCk7dmFyIGY9XCJcIjtpZihlPT09eC5TdGFuZGFyZClmPVcobi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguSG91cmdsYXNzKWY9SShuLnN2Z1NpemUsbi5zdmdDb2xvcik7ZWxzZSBpZihlPT09eC5DaXJjbGUpZj1SKG4uc3ZnU2l6ZSxuLnN2Z0NvbG9yKTtlbHNlIGlmKGU9PT14LkFycm93cylmPUEobi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguRG90cylmPU0obi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguUHVsc2UpZj1CKG4uc3ZnU2l6ZSxuLnN2Z0NvbG9yKTtlbHNlIGlmKGU9PT14LkN1c3RvbSYmbnVsbCE9PW4uY3VzdG9tU3ZnQ29kZSYmbnVsbD09PW4uY3VzdG9tU3ZnVXJsKWY9bi5jdXN0b21TdmdDb2RlfHxcIlwiO2Vsc2UgaWYoZT09PXguQ3VzdG9tJiZudWxsIT09bi5jdXN0b21TdmdVcmwmJm51bGw9PT1uLmN1c3RvbVN2Z0NvZGUpZj1cIjxpbWcgY2xhc3M9XFxcIm54LWN1c3RvbS1sb2FkaW5nLWljb25cXFwiIHdpZHRoPVxcXCJcIituLnN2Z1NpemUrXCJcXFwiIGhlaWdodD1cXFwiXCIrbi5zdmdTaXplK1wiXFxcIiBzcmM9XFxcIlwiK24uY3VzdG9tU3ZnVXJsK1wiXFxcIiBhbHQ9XFxcIk5vdGlmbGl4XFxcIj5cIjtlbHNle2lmKGU9PT14LkN1c3RvbSYmKG51bGw9PT1uLmN1c3RvbVN2Z1VybHx8bnVsbD09PW4uY3VzdG9tU3ZnQ29kZSkpcmV0dXJuIHkoXCJZb3UgaGF2ZSB0byBzZXQgYSBzdGF0aWMgU1ZHIHVybCB0byBcXFwiY3VzdG9tU3ZnVXJsXFxcIiBvcHRpb24gdG8gdXNlIExvYWRpbmcgQ3VzdG9tLlwiKSwhMTtmPVgobi5zdmdTaXplLFwiI2Y4ZjhmOFwiLFwiIzMyYzY4MlwiKX12YXIgZD1wYXJzZUludCgobi5zdmdTaXplfHxcIlwiKS5yZXBsYWNlKC9bXjAtOV0vZyxcIlwiKSksYj10LmlubmVyV2lkdGgsdT1kPj1iP2ItNDArXCJweFwiOmQrXCJweFwiLGs9XCI8ZGl2IHN0eWxlPVxcXCJ3aWR0aDpcIit1K1wiOyBoZWlnaHQ6XCIrdStcIjtcXFwiIGNsYXNzPVxcXCJcIituLmNsYXNzTmFtZStcIi1pY29uXCIrKDA8Yy5sZW5ndGg/XCIgbngtd2l0aC1tZXNzYWdlXCI6XCJcIikrXCJcXFwiPlwiK2YrXCI8L2Rpdj5cIixoPXQuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZihoLmlkPWcuSUQsaC5jbGFzc05hbWU9bi5jbGFzc05hbWUrKG4uY3NzQW5pbWF0aW9uP1wiIG54LXdpdGgtYW5pbWF0aW9uXCI6XCJcIikrKG4uY2xpY2tUb0Nsb3NlP1wiIG54LWxvYWRpbmctY2xpY2stdG8tY2xvc2VcIjpcIlwiKSxoLnN0eWxlLnpJbmRleD1uLnppbmRleCxoLnN0eWxlLmJhY2tncm91bmQ9bi5iYWNrZ3JvdW5kQ29sb3IsaC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1uLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIixoLnN0eWxlLmZvbnRGYW1pbHk9XCJcXFwiXCIrbi5mb250RmFtaWx5K1wiXFxcIiwgXCIrcyxoLnN0eWxlLmRpc3BsYXk9XCJmbGV4XCIsaC5zdHlsZS5mbGV4V3JhcD1cIndyYXBcIixoLnN0eWxlLmZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIixoLnN0eWxlLmFsaWduSXRlbXM9XCJjZW50ZXJcIixoLnN0eWxlLmp1c3RpZnlDb250ZW50PVwiY2VudGVyXCIsbi5ydGwmJihoLnNldEF0dHJpYnV0ZShcImRpclwiLFwicnRsXCIpLGguY2xhc3NMaXN0LmFkZChcIm54LXJ0bC1vblwiKSksaC5pbm5lckhUTUw9aytwLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGguaWQpJiYodC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGgpLG4uY2xpY2tUb0Nsb3NlKSl7dmFyIEM9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChoLmlkKTtDLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7aC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciB0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09aC5wYXJlbnROb2RlJiYoaC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpLGNsZWFyVGltZW91dCh0KSl9LG4uY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9fWVsc2UgaWYodC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChnLklEKSl2YXIgej10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuSUQpLFM9c2V0VGltZW91dChmdW5jdGlvbigpe3ouY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKTt2YXIgdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bnVsbCE9PXoucGFyZW50Tm9kZSYmKHoucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh6KSxjbGVhclRpbWVvdXQodCkpfSxuLmNzc0FuaW1hdGlvbkR1cmF0aW9uKTtjbGVhclRpbWVvdXQoUyl9LHIpO249dighMCxuLGwpfSxWPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZT1cIlwiKTt2YXIgaT10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuSUQpO2lmKGkpaWYoMDxlLmxlbmd0aCl7ZT1lLmxlbmd0aD5uLm1lc3NhZ2VNYXhMZW5ndGg/TihlKS5zdWJzdHJpbmcoMCxuLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6TihlKTt2YXIgYT1pLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicFwiKVswXTtpZihhKWEuaW5uZXJIVE1MPWU7ZWxzZXt2YXIgbz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO28uaWQ9bi5tZXNzYWdlSUQsby5jbGFzc05hbWU9XCJueC1sb2FkaW5nLW1lc3NhZ2UgbngtbG9hZGluZy1tZXNzYWdlLW5ld1wiLG8uc3R5bGUuY29sb3I9bi5tZXNzYWdlQ29sb3Isby5zdHlsZS5mb250U2l6ZT1uLm1lc3NhZ2VGb250U2l6ZSxvLmlubmVySFRNTD1lLGkuYXBwZW5kQ2hpbGQobyl9fWVsc2UgeShcIldoZXJlIGlzIHRoZSBuZXcgbWVzc2FnZT9cIil9LHE9ZnVuY3Rpb24oKXtyZXR1cm5cIltpZF49Tm90aWZsaXhCbG9ja1dyYXBdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxMDAwO2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsc2Fucy1zZXJpZjtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjkpO3RleHQtYWxpZ246Y2VudGVyO2FuaW1hdGlvbi1kdXJhdGlvbjouNHM7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7Ym9yZGVyLXJhZGl1czppbmhlcml0O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0gKnstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1pY29uXFxcIl17ZGlzcGxheTpibG9jazt3aWR0aDo0NXB4O2hlaWdodDo0NXB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1pY29uXFxcIl0gc3Zne3dpZHRoOmluaGVyaXQ7aGVpZ2h0OmluaGVyaXR9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1tZXNzYWdlXFxcIl17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21hcmdpbjoxMHB4IGF1dG8gMDtwYWRkaW5nOjAgMTBweDtmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40fVtpZF49Tm90aWZsaXhCbG9ja1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uey13ZWJraXQtYW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGJsb2NrLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBibG9jay1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhCbG9ja1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246YmxvY2stYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBibG9jay1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIGJsb2NrLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVwifSxRPTAsWT1mdW5jdGlvbihlLGksYSxuLHIsbCl7dmFyIG07aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoMT5hLmxlbmd0aClyZXR1cm4geShcIkFycmF5IG9mIEhUTUxFbGVtZW50cyBzaG91bGQgY29udGFpbnMgYXQgbGVhc3Qgb25lIEhUTUxFbGVtZW50LlwiKSwhMTttPWF9ZWxzZSBpZihPYmplY3QucHJvdG90eXBlLmlzUHJvdG90eXBlT2YuY2FsbChOb2RlTGlzdC5wcm90b3R5cGUsYSkpe2lmKDE+YS5sZW5ndGgpcmV0dXJuIHkoXCJOb2RlTGlzdE9mPEhUTUxFbGVtZW50PiBzaG91bGQgY29udGFpbnMgYXQgbGVhc3Qgb25lIEhUTUxFbGVtZW50LlwiKSwhMTttPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpfWVsc2V7dmFyIGM9XCJzdHJpbmdcIiE9dHlwZW9mIGF8fDE+KGF8fFwiXCIpLmxlbmd0aHx8MT09PShhfHxcIlwiKS5sZW5ndGgmJihcIiNcIj09PShhfHxcIlwiKVswXXx8XCIuXCI9PT0oYXx8XCJcIilbMF0pO2lmKGMpcmV0dXJuIHkoXCJUaGUgc2VsZWN0b3IgcGFyYW1ldGVyIG11c3QgYmUgYSBzdHJpbmcgYW5kIG1hdGNoZXMgYSBzcGVjaWZpZWQgQ1NTIHNlbGVjdG9yKHMpLlwiKSwhMTt2YXIgcD10LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYSk7aWYoMT5wLmxlbmd0aClyZXR1cm4geShcIllvdSBjYWxsZWQgdGhlIFxcXCJOb3RpZmxpeC5CbG9jay4uLlxcXCIgZnVuY3Rpb24gd2l0aCBcXFwiXCIrYStcIlxcXCIgc2VsZWN0b3IsIGJ1dCB0aGVyZSBpcyBubyBzdWNoIGVsZW1lbnQocykgaW4gdGhlIGRvY3VtZW50LlwiKSwhMTttPXB9b3x8Ry5CbG9jay5pbml0KHt9KTt2YXIgZj12KCEwLG8se30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBuJiYhQXJyYXkuaXNBcnJheShuKXx8XCJvYmplY3RcIj09dHlwZW9mIHImJiFBcnJheS5pc0FycmF5KHIpKXt2YXIgZD17fTtcIm9iamVjdFwiPT10eXBlb2Ygbj9kPW46XCJvYmplY3RcIj09dHlwZW9mIHImJihkPXIpLG89dighMCxvLGQpfXZhciB4PVwiXCI7XCJzdHJpbmdcIj09dHlwZW9mIG4mJjA8bi5sZW5ndGgmJih4PW4pLG8uY3NzQW5pbWF0aW9ufHwoby5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgZz11LmNsYXNzTmFtZTtcInN0cmluZ1wiPT10eXBlb2Ygby5jbGFzc05hbWUmJihnPW8uY2xhc3NOYW1lLnRyaW0oKSk7dmFyIGg9XCJudW1iZXJcIj09dHlwZW9mIG8ucXVlcnlTZWxlY3RvckxpbWl0P28ucXVlcnlTZWxlY3RvckxpbWl0OjIwMCxDPShtfHxbXSkubGVuZ3RoPj1oP2g6bS5sZW5ndGgsej1cIm54LWJsb2NrLXRlbXBvcmFyeS1wb3NpdGlvblwiO2lmKGUpe2Zvcih2YXIgUyxMPVtcImFyZWFcIixcImJhc2VcIixcImJyXCIsXCJjb2xcIixcImNvbW1hbmRcIixcImVtYmVkXCIsXCJoclwiLFwiaW1nXCIsXCJpbnB1dFwiLFwia2V5Z2VuXCIsXCJsaW5rXCIsXCJtZXRhXCIsXCJwYXJhbVwiLFwic291cmNlXCIsXCJ0cmFja1wiLFwid2JyXCIsXCJodG1sXCIsXCJoZWFkXCIsXCJ0aXRsZVwiLFwic2NyaXB0XCIsXCJzdHlsZVwiLFwiaWZyYW1lXCJdLFg9MDtYPEM7WCsrKWlmKFM9bVtYXSxTKXtpZigtMTxMLmluZGV4T2YoUy50YWdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKFwiZW5cIikpKWJyZWFrO3ZhciBEPVMucXVlcnlTZWxlY3RvckFsbChcIltpZF49XCIrdS5JRCtcIl1cIik7aWYoMT5ELmxlbmd0aCl7dmFyIFQ9XCJcIjtpJiYoaT09PWIuSG91cmdsYXNzP1Q9SShvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuQ2lyY2xlP1Q9UihvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuQXJyb3dzP1Q9QShvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuRG90cz9UPU0oby5zdmdTaXplLG8uc3ZnQ29sb3IpOmk9PT1iLlB1bHNlP1Q9QihvLnN2Z1NpemUsby5zdmdDb2xvcik6VD1XKG8uc3ZnU2l6ZSxvLnN2Z0NvbG9yKSk7dmFyIEY9XCI8c3BhbiBjbGFzcz1cXFwiXCIrZytcIi1pY29uXFxcIiBzdHlsZT1cXFwid2lkdGg6XCIrby5zdmdTaXplK1wiO2hlaWdodDpcIitvLnN2Z1NpemUrXCI7XFxcIj5cIitUK1wiPC9zcGFuPlwiLEU9XCJcIjswPHgubGVuZ3RoJiYoeD14Lmxlbmd0aD5vLm1lc3NhZ2VNYXhMZW5ndGg/Tih4KS5zdWJzdHJpbmcoMCxvLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6Tih4KSxFPVwiPHNwYW4gc3R5bGU9XFxcImZvbnQtc2l6ZTpcIitvLm1lc3NhZ2VGb250U2l6ZStcIjtjb2xvcjpcIitvLm1lc3NhZ2VDb2xvcitcIjtcXFwiIGNsYXNzPVxcXCJcIitnK1wiLW1lc3NhZ2VcXFwiPlwiK3grXCI8L3NwYW4+XCIpLFErKzt2YXIgaj10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ai5pZD11LklEK1wiLVwiK1Esai5jbGFzc05hbWU9Zysoby5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb25cIjpcIlwiKSxqLnN0eWxlLnBvc2l0aW9uPW8ucG9zaXRpb24sai5zdHlsZS56SW5kZXg9by56aW5kZXgsai5zdHlsZS5iYWNrZ3JvdW5kPW8uYmFja2dyb3VuZENvbG9yLGouc3R5bGUuYW5pbWF0aW9uRHVyYXRpb249by5jc3NBbmltYXRpb25EdXJhdGlvbitcIm1zXCIsai5zdHlsZS5mb250RmFtaWx5PVwiXFxcIlwiK28uZm9udEZhbWlseStcIlxcXCIsIFwiK3Msai5zdHlsZS5kaXNwbGF5PVwiZmxleFwiLGouc3R5bGUuZmxleFdyYXA9XCJ3cmFwXCIsai5zdHlsZS5mbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIsai5zdHlsZS5hbGlnbkl0ZW1zPVwiY2VudGVyXCIsai5zdHlsZS5qdXN0aWZ5Q29udGVudD1cImNlbnRlclwiLG8ucnRsJiYoai5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxqLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLGouaW5uZXJIVE1MPUYrRTt2YXIgTz10LmdldENvbXB1dGVkU3R5bGUoUykuZ2V0UHJvcGVydHlWYWx1ZShcInBvc2l0aW9uXCIpLEg9XCJzdHJpbmdcIj09dHlwZW9mIE8/Ty50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpOlwicmVsYXRpdmVcIixQPU1hdGgucm91bmQoMS4yNSpwYXJzZUludChvLnN2Z1NpemUpKSs0MCxVPVMub2Zmc2V0SGVpZ2h0fHwwLFY9XCJcIjtQPlUmJihWPVwibWluLWhlaWdodDpcIitQK1wicHg7XCIpO3ZhciBxPVwiXCI7cT1TLmdldEF0dHJpYnV0ZShcImlkXCIpP1wiI1wiK1MuZ2V0QXR0cmlidXRlKFwiaWRcIik6Uy5jbGFzc0xpc3RbMF0/XCIuXCIrUy5jbGFzc0xpc3RbMF06KFMudGFnTmFtZXx8XCJcIikudG9Mb2NhbGVMb3dlckNhc2UoXCJlblwiKTt2YXIgWT1cIlwiLEs9LTE+PVtcImFic29sdXRlXCIsXCJyZWxhdGl2ZVwiLFwiZml4ZWRcIixcInN0aWNreVwiXS5pbmRleE9mKEgpO2lmKEt8fDA8Vi5sZW5ndGgpe2lmKCF3KFwiaGVhZFwiKSlyZXR1cm4hMTtLJiYoWT1cInBvc2l0aW9uOnJlbGF0aXZlIWltcG9ydGFudDtcIik7dmFyICQ9XCI8c3R5bGUgaWQ9XFxcIlN0eWxlLVwiK3UuSUQrXCItXCIrUStcIlxcXCI+XCIrcStcIi5cIit6K1wie1wiK1krVitcIn08L3N0eWxlPlwiLEo9dC5kb2N1bWVudC5jcmVhdGVSYW5nZSgpO0ouc2VsZWN0Tm9kZSh0LmRvY3VtZW50LmhlYWQpO3ZhciBaPUouY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KCQpO3QuZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChaKSxTLmNsYXNzTGlzdC5hZGQoeil9Uy5hcHBlbmRDaGlsZChqKX19fWVsc2UgdmFyIF89ZnVuY3Rpb24oZSl7dmFyIGk9c2V0VGltZW91dChmdW5jdGlvbigpe251bGwhPT1lLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKTt2YXIgYT1lLmdldEF0dHJpYnV0ZShcImlkXCIpLG49dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlN0eWxlLVwiK2EpO24mJm51bGwhPT1uLnBhcmVudE5vZGUmJm4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKSxjbGVhclRpbWVvdXQoaSl9LG8uY3NzQW5pbWF0aW9uRHVyYXRpb24pfSx0dD1mdW5jdGlvbih0KXtpZih0JiYwPHQubGVuZ3RoKWZvcih2YXIgZSxuPTA7bjx0Lmxlbmd0aDtuKyspZT10W25dLGUmJihlLmNsYXNzTGlzdC5hZGQoXCJueC1yZW1vdmVcIiksXyhlKSk7ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBhP2soXCJcXFwiTm90aWZsaXguQmxvY2sucmVtb3ZlKCk7XFxcIiBmdW5jdGlvbiBjYWxsZWQgd2l0aCBcXFwiXCIrYStcIlxcXCIgc2VsZWN0b3IsIGJ1dCB0aGlzIHNlbGVjdG9yIGRvZXMgbm90IGhhdmUgYSBcXFwiQmxvY2tcXFwiIGVsZW1lbnQgdG8gcmVtb3ZlLlwiKTprKFwiXFxcIk5vdGlmbGl4LkJsb2NrLnJlbW92ZSgpO1xcXCIgZnVuY3Rpb24gY2FsbGVkIHdpdGggXFxcIlwiK2ErXCJcXFwiLCBidXQgdGhpcyBcXFwiQXJyYXk8SFRNTEVsZW1lbnQ+XFxcIiBvciBcXFwiTm9kZUxpc3RPZjxIVE1MRWxlbWVudD5cXFwiIGRvZXMgbm90IGhhdmUgYSBcXFwiQmxvY2tcXFwiIGVsZW1lbnQgdG8gcmVtb3ZlLlwiKX0sZXQ9ZnVuY3Rpb24odCl7dmFyIGU9c2V0VGltZW91dChmdW5jdGlvbigpe3QuY2xhc3NMaXN0LnJlbW92ZSh6KSxjbGVhclRpbWVvdXQoZSl9LG8uY3NzQW5pbWF0aW9uRHVyYXRpb24rMzAwKX0saXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2Zvcih2YXIgdCxlPTA7ZTxDO2UrKyl0PW1bZV0sdCYmKGV0KHQpLEQ9dC5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXj1cIit1LklEK1wiXVwiKSx0dChEKSk7Y2xlYXJUaW1lb3V0KGl0KX0sbCk7bz12KCEwLG8sZil9LEc9e05vdGlmeTp7aW5pdDpmdW5jdGlvbih0KXtlPXYoITAsbSx0KSxoKEQsXCJOb3RpZmxpeE5vdGlmeUludGVybmFsQ1NTXCIpfSxtZXJnZTpmdW5jdGlvbih0KXtyZXR1cm4gZT92b2lkKGU9dighMCxlLHQpKTooeShcIllvdSBoYXZlIHRvIGluaXRpYWxpemUgdGhlIE5vdGlmeSBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3VjY2VzczpmdW5jdGlvbih0LGUsaSl7RihsLlN1Y2Nlc3MsdCxlLGkpfSxmYWlsdXJlOmZ1bmN0aW9uKHQsZSxpKXtGKGwuRmFpbHVyZSx0LGUsaSl9LHdhcm5pbmc6ZnVuY3Rpb24odCxlLGkpe0YobC5XYXJuaW5nLHQsZSxpKX0saW5mbzpmdW5jdGlvbih0LGUsaSl7RihsLkluZm8sdCxlLGkpfX0sUmVwb3J0Ontpbml0OmZ1bmN0aW9uKHQpe2k9dighMCxwLHQpLGgoRSxcIk5vdGlmbGl4UmVwb3J0SW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBpP3ZvaWQoaT12KCEwLGksdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgUmVwb3J0IG1vZHVsZSBiZWZvcmUgY2FsbCBNZXJnZSBmdW5jdGlvbi5cIiksITEpfSxzdWNjZXNzOmZ1bmN0aW9uKHQsZSxpLGEsbil7aihjLlN1Y2Nlc3MsdCxlLGksYSxuKX0sZmFpbHVyZTpmdW5jdGlvbih0LGUsaSxhLG4pe2ooYy5GYWlsdXJlLHQsZSxpLGEsbil9LHdhcm5pbmc6ZnVuY3Rpb24odCxlLGksYSxuKXtqKGMuV2FybmluZyx0LGUsaSxhLG4pfSxpbmZvOmZ1bmN0aW9uKHQsZSxpLGEsbil7aihjLkluZm8sdCxlLGksYSxuKX19LENvbmZpcm06e2luaXQ6ZnVuY3Rpb24odCl7YT12KCEwLGQsdCksaChPLFwiTm90aWZsaXhDb25maXJtSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBhP3ZvaWQoYT12KCEwLGEsdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgQ29uZmlybSBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc2hvdzpmdW5jdGlvbih0LGUsaSxhLG4sbyxyKXtIKGYuU2hvdyx0LGUsbnVsbCxpLGEsbixvLHIpfSxhc2s6ZnVuY3Rpb24odCxlLGksYSxuLG8scixzKXtIKGYuQXNrLHQsZSxpLGEsbixvLHIscyl9LHByb21wdDpmdW5jdGlvbih0LGUsaSxhLG4sbyxyLHMpe0goZi5Qcm9tcHQsdCxlLGksYSxuLG8scixzKX19LExvYWRpbmc6e2luaXQ6ZnVuY3Rpb24odCl7bj12KCEwLGcsdCksaChQLFwiTm90aWZsaXhMb2FkaW5nSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBuP3ZvaWQobj12KCEwLG4sdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgTG9hZGluZyBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3RhbmRhcmQ6ZnVuY3Rpb24odCxlKXtVKHguU3RhbmRhcmQsdCxlLCEwLDApfSxob3VyZ2xhc3M6ZnVuY3Rpb24odCxlKXtVKHguSG91cmdsYXNzLHQsZSwhMCwwKX0sY2lyY2xlOmZ1bmN0aW9uKHQsZSl7VSh4LkNpcmNsZSx0LGUsITAsMCl9LGFycm93czpmdW5jdGlvbih0LGUpe1UoeC5BcnJvd3MsdCxlLCEwLDApfSxkb3RzOmZ1bmN0aW9uKHQsZSl7VSh4LkRvdHMsdCxlLCEwLDApfSxwdWxzZTpmdW5jdGlvbih0LGUpe1UoeC5QdWxzZSx0LGUsITAsMCl9LGN1c3RvbTpmdW5jdGlvbih0LGUpe1UoeC5DdXN0b20sdCxlLCEwLDApfSxub3RpZmxpeDpmdW5jdGlvbih0LGUpe1UoeC5Ob3RpZmxpeCx0LGUsITAsMCl9LHJlbW92ZTpmdW5jdGlvbih0KXtcIm51bWJlclwiIT10eXBlb2YgdCYmKHQ9MCksVShudWxsLG51bGwsbnVsbCwhMSx0KX0sY2hhbmdlOmZ1bmN0aW9uKHQpe1YodCl9fSxCbG9jazp7aW5pdDpmdW5jdGlvbih0KXtvPXYoITAsdSx0KSxoKHEsXCJOb3RpZmxpeEJsb2NrSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBvP3ZvaWQobz12KCEwLG8sdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgXFxcIk5vdGlmbGl4LkJsb2NrXFxcIiBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3RhbmRhcmQ6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5TdGFuZGFyZCx0LGUsaSl9LGhvdXJnbGFzczpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkhvdXJnbGFzcyx0LGUsaSl9LGNpcmNsZTpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkNpcmNsZSx0LGUsaSl9LGFycm93czpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkFycm93cyx0LGUsaSl9LGRvdHM6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5Eb3RzLHQsZSxpKX0scHVsc2U6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5QdWxzZSx0LGUsaSl9LHJlbW92ZTpmdW5jdGlvbih0LGUpe1wibnVtYmVyXCIhPXR5cGVvZiBlJiYoZT0wKSxZKCExLG51bGwsdCxudWxsLG51bGwsZSl9fX07cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHQuTm90aWZsaXg/dighMCx0Lk5vdGlmbGl4LHtOb3RpZnk6Ry5Ob3RpZnksUmVwb3J0OkcuUmVwb3J0LENvbmZpcm06Ry5Db25maXJtLExvYWRpbmc6Ry5Mb2FkaW5nLEJsb2NrOkcuQmxvY2t9KTp7Tm90aWZ5OkcuTm90aWZ5LFJlcG9ydDpHLlJlcG9ydCxDb25maXJtOkcuQ29uZmlybSxMb2FkaW5nOkcuTG9hZGluZyxCbG9jazpHLkJsb2NrfX0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImltcG9ydCB7IGdldFNldHRpbmcgfSBmcm9tICcuL29wdGlvbnMnXG5cbmV4cG9ydCBsZXQgcmVwb3J0T3B0aW9ucyA9IHt9XG5leHBvcnQgbGV0IGNvbmZpcm1PcHRpb25zID0ge2JvcmRlclJhZGl1czogMTB9XG5cbmV4cG9ydCBjb25zdCB0aGVtZXMgPSB7XG4gICAgXCJkYXJrXCI6IHtcbiAgICAgICAgXCJiZ1wiOiBcIiMyMzIzMjNcIixcbiAgICAgICAgXCJ0ZXh0LWNvbG9yXCI6IFwiI0ZGRkZGRlwiLFxuICAgICAgICBcInNlY29uZGFyeS10ZXh0LWNvbG9yXCI6IFwiI2QxZDFkMVwiLFxuICAgICAgICBcIm9wdGlvbi1iZ1wiOiBcIiM0MzQzNDNcIixcbiAgICAgICAgXCJvcHRpb24taG92ZXItYmdcIjogXCIjMzAzMDMwXCIsXG4gICAgICAgIFwib3B0aW9uLWJvcmRlci1jb2xvclwiOiBcIiM4YThhOGFcIixcbiAgICAgICAgXCJwcm9ncmVzcy1iYXItY29sb3JcIjogXCIjMTk2M2JkXCIsXG4gICAgICAgIFwicHJvZ3Jlc3MtYmFyLWJnXCI6IFwiIzYzNjM2M1wiLFxuICAgICAgICBcInJhZGlvLWJnXCI6IFwiIzRENEQ0RFwiLFxuICAgICAgICBcInJhZGlvLXNlbGVjdGVkLWJnXCI6IFwiIzc2RUE1RFwiLFxuICAgICAgICBcImdyYXktYnRuLWNvbG9yXCI6IFwiIzYwNjA2MFwiLFxuICAgICAgICBcImdyYXktYnRuLWhvdmVyXCI6IFwiIzU0NTQ1NFwiLFxuICAgICAgICBcImNhcmQtYm9yZGVyXCI6IFwiIzYyNjI2MlwiLFxuICAgICAgICBcImZpZWxkc2V0LWJvcmRlclwiOiBcIiM2ZDZkNmRcIixcbiAgICAgICAgXCJsaW5rLWNvbG9yXCI6IFwiIzJCQTdERVwiLFxuICAgICAgICBcIm54LWdsb2JhbFwiOiB7XG4gICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNGRkZGRkZcIixcbiAgICAgICAgICAgIFwiYmFja2dyb3VuZENvbG9yXCI6IFwiIzM1MzUzNVwiLFxuICAgICAgICAgICAgXCJzdWNjZXNzXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJmYWlsdXJlXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwiZGltXCI6IHtcbiAgICAgICAgXCJiZ1wiOiBcIiMzODM5M0RcIixcbiAgICAgICAgXCJ0ZXh0LWNvbG9yXCI6IFwiI0YwRjBGMFwiLFxuICAgICAgICBcInNlY29uZGFyeS10ZXh0LWNvbG9yXCI6IFwiI0QwRDNENFwiLFxuICAgICAgICBcIm9wdGlvbi1iZ1wiOiBcIiM1MTVBNUFcIixcbiAgICAgICAgXCJvcHRpb24taG92ZXItYmdcIjogXCIjNDI0OTQ5XCIsXG4gICAgICAgIFwib3B0aW9uLWJvcmRlci1jb2xvclwiOiBcIiM4YThhOGFcIixcbiAgICAgICAgXCJwcm9ncmVzcy1iYXItY29sb3JcIjogXCIjMzQ5OERCXCIsXG4gICAgICAgIFwicHJvZ3Jlc3MtYmFyLWJnXCI6IFwiIzYzNjM2M1wiLFxuICAgICAgICBcInJhZGlvLWJnXCI6IFwiIzRkNGQ0ZFwiLFxuICAgICAgICBcInJhZGlvLXNlbGVjdGVkLWJnXCI6IFwiIzc2RUE1RFwiLFxuICAgICAgICBcImdyYXktYnRuLWNvbG9yXCI6IFwiIzYwNjA2MFwiLFxuICAgICAgICBcImdyYXktYnRuLWhvdmVyXCI6IFwiIzU0NTQ1NFwiLFxuICAgICAgICBcImNhcmQtYm9yZGVyXCI6IFwiIzYyNjI2MlwiLFxuICAgICAgICBcImZpZWxkc2V0LWJvcmRlclwiOiBcIiM4MDhCOTZcIixcbiAgICAgICAgXCJsaW5rLWNvbG9yXCI6IFwiIzI4NzRBNlwiLFxuICAgICAgICBcIm54LWdsb2JhbFwiOiB7XG4gICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNGMEYwRjBcIixcbiAgICAgICAgICAgIFwiYmFja2dyb3VuZENvbG9yXCI6IFwiIzM4MzkzRFwiLFxuICAgICAgICAgICAgXCJzdWNjZXNzXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjZjBmMGYwXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjZjBmMGYwXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImZhaWx1cmVcIjoge1xuICAgICAgICAgICAgICAgIFwidGl0bGVDb2xvclwiOiBcIiNmMGYwZjBcIixcbiAgICAgICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNmMGYwZjBcIlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlUaGVtZSh0aGVtZU5hbWUpIHtcbiAgICBpZiAodGhlbWVOYW1lID09IFwiZGVmYXVsdC10aGVtZVwiIHx8IHRoZW1lTmFtZSA9PSBcImRlZmF1bHRcIikgcmV0dXJuXG4gICAgcmVzZXRUaGVtZSh0cnVlKVxuICAgIGxldCB0aGVtZSA9IHRoZW1lc1t0aGVtZU5hbWVdXG4gICAgaWYgKCF0aGVtZSkge2NvbnNvbGUud2FybihgVGhlbWUgXCIke3RoZW1lTmFtZX1cIiBub3QgZm91bmQhYCk7IHJldHVybn1cbiAgICBmb3IgKGxldCBwcm9wZXJ0eSBpbiB0aGVtZSkge1xuICAgICAgICBpZiAocHJvcGVydHkuc3RhcnRzV2l0aCgnbngtJykpIGNvbnRpbnVlXG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke3Byb3BlcnR5fWAsIHRoZW1lW3Byb3BlcnR5XSlcbiAgICB9XG4gICAgbGV0IGdsb2JhbE9wdGlvbnMgPSB0aGVtZVsnbngtZ2xvYmFsJ11cbiAgICBsZXQgbmV3R2xvYmFsT3B0aW9ucyA9IHt9XG4gICAgZm9yIChsZXQgcHJvcGVydHkgaW4gZ2xvYmFsT3B0aW9ucykge1xuICAgICAgICBpZiAocHJvcGVydHkgPT0gXCJhbGxcIikgY29udGludWVcbiAgICAgICAgbmV3R2xvYmFsT3B0aW9uc1twcm9wZXJ0eV0gPSBnbG9iYWxPcHRpb25zW3Byb3BlcnR5XVxuICAgIH1cbiAgICBuZXdHbG9iYWxPcHRpb25zWydwbGFpblRleHQnXSA9IGZhbHNlXG4gICAgbmV3R2xvYmFsT3B0aW9uc1snY3NzQW5pbWF0aW9uU3R5bGUnXSA9IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpXG4gICAgcmVwb3J0T3B0aW9ucyA9IG5ld0dsb2JhbE9wdGlvbnNcbiAgICBuZXdHbG9iYWxPcHRpb25zWydib3JkZXJSYWRpdXMnXSA9IDEwXG4gICAgY29uZmlybU9wdGlvbnMgPSBuZXdHbG9iYWxPcHRpb25zXG4gICAgdHJ5IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3MtcG9wdXAtJHtnZXRTZXR0aW5nKCdwb3B1cC1hbmltYXRpb24nKX1gKS5jaGVja2VkID0gdHJ1ZVxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcy0ke3RoZW1lTmFtZX1gKS5jaGVja2VkID0gdHJ1ZVxuICAgIH0gY2F0Y2goZSkge2FsZXJ0KGUpfSAgICBcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWV0YVtuYW1lPSd0aGVtZS1jb2xvciddXCIpLmNvbnRlbnQgPSB0aGVtZS5iZ1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0VGhlbWUobm9UaGVtZUNvbG9yKSB7XG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiXCIpXG4gICAgY29uZmlybU9wdGlvbnMgPSB7cGxhaW5UZXh0OiBmYWxzZSwgYm9yZGVyUmFkaXVzOiAxMCwgY3NzQW5pbWF0aW9uU3R5bGU6IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpfVxuICAgIHJlcG9ydE9wdGlvbnMgPSB7cGxhaW5UZXh0OiBmYWxzZSwgY3NzQW5pbWF0aW9uU3R5bGU6IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpfVxuICAgIGlmICghbm9UaGVtZUNvbG9yKSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW25hbWU9J3RoZW1lLWNvbG9yJ11cIikuY29udGVudCA9IFwiI2VkZWRlZFwiXG4gICAgfVxufSIsImltcG9ydCB7IGFwcGx5VGhlbWUsIHJlc2V0VGhlbWUgfSBmcm9tIFwiLi90aGVtZXNcIlxuXG5jb25zdCByYWRpb3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFt0eXBlPSdyYWRpbyddXCIpKVxubGV0IHVzZXJPcHRpb25zID0ge31cbmxldCB1c2VyU2V0dGluZ3MgPSB7XG4gICAgXCJ0aGVtZVwiOiBcImRlZmF1bHQtdGhlbWVcIixcbiAgICBcInBvcHVwLWFuaW1hdGlvblwiOiBcImZhZGVcIlxufVxuXG5yYWRpb3MuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICBpZiAoaW5wdXQuaWQuc3RhcnRzV2l0aCgncy0nKSkge1xuICAgICAgICAvLyBTZXR0aW5nIGhhbmRsZXJcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgICAgICB1c2VyU2V0dGluZ3NbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZVxuICAgICAgICAgICAgY29uc29sZS5kZWJ1Zyh1c2VyU2V0dGluZ3MpXG4gICAgICAgICAgICBzYXZlU2V0dGluZ3ModXNlclNldHRpbmdzKVxuICAgICAgICAgICAgaWYgKHVzZXJTZXR0aW5ncy50aGVtZSAhPSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgICAgIGFwcGx5VGhlbWUodXNlclNldHRpbmdzLnRoZW1lKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXNldFRoZW1lKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBPcHRpb24gaGFuZGxlclxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgICAgIHVzZXJPcHRpb25zW2lucHV0Lm5hbWVdID0gaW5wdXQuaWRcbiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcodXNlck9wdGlvbnMpXG4gICAgICAgICAgICBwcm9jZXNzU3ViU2V0cygpXG4gICAgICAgIH0pXG4gICAgICAgIGlmICghdXNlck9wdGlvbnNbaW5wdXQubmFtZV0pIHtcbiAgICAgICAgICAgIHVzZXJPcHRpb25zW2lucHV0Lm5hbWVdID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgaW5wdXRbbmFtZT0nJHtpbnB1dC5uYW1lfSddOmNoZWNrZWRgKS5pZFxuICAgICAgICB9XG4gICAgfVxufSlcblxuZXhwb3J0IGZ1bmN0aW9uICBnZXREYXRhVXJsKCkge1xuICAgIGlmICh1c2VyT3B0aW9ucy5zZXQgPT0gXCJ1cy1zdGF0ZXMtYnktbWFwXCIpIHJldHVybiAnZGF0YS91cy1zdGF0ZXMtb3B0Lmpzb24nXG4gICAgcmV0dXJuIGBkYXRhLyR7dXNlck9wdGlvbnMuc2V0fS1vcHQuanNvbmBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJPcHRpb25zKCkge1xuICAgIHJldHVybiB1c2VyT3B0aW9uc1xufVxuXG5mdW5jdGlvbiBsb2FkU2V0dGluZ3MoKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJmbGFnLWd1ZXNzZXItc2V0dGluZ3NcIikpXG59XG5cbmZ1bmN0aW9uIHNhdmVTZXR0aW5ncyhzZXR0aW5ncykge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZmxhZy1ndWVzc2VyLXNldHRpbmdzXCIsIEpTT04uc3RyaW5naWZ5KHNldHRpbmdzKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNldHRpbmcoc2V0dGluZ05hbWUpIHtcbiAgICByZXR1cm4gdXNlclNldHRpbmdzW3NldHRpbmdOYW1lXVxufVxuXG5pZiAoIWxvYWRTZXR0aW5ncygpKSB7XG4gICAgc2F2ZVNldHRpbmdzKHVzZXJTZXR0aW5ncylcbn0gZWxzZSB7XG4gICAgbGV0IGxvYWRlZFNldHRpbmdzID0gbG9hZFNldHRpbmdzKClcbiAgICBmb3IgKGxldCBrIGluIHVzZXJTZXR0aW5ncykge1xuICAgICAgICBpZiAodHlwZW9mIGxvYWRlZFNldHRpbmdzW2tdID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFkZGluZyBuZXdseSBhZGRlZCBzZXR0aW5nIFwiICsgayArIFwiLCB0aGlzIHNob3VsZCBvbmx5IGFwcGVhciBvbmNlLlwiKVxuICAgICAgICAgICAgbG9hZGVkU2V0dGluZ3Nba10gPSB1c2VyU2V0dGluZ3Nba11cbiAgICAgICAgICAgIHNhdmVTZXR0aW5ncyhsb2FkZWRTZXR0aW5ncylcbiAgICAgICAgICAgIHByb2Nlc3NTdWJTZXRzKClcbiAgICAgICAgfVxuICAgIH1cbiAgICB1c2VyU2V0dGluZ3MgPSBsb2FkZWRTZXR0aW5nc1xufVxuYXBwbHlUaGVtZSh1c2VyU2V0dGluZ3MudGhlbWUpXG5cbmZ1bmN0aW9uIHByb2Nlc3NTdWJTZXRzKCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2ZpZWxkc2V0LnN1YnNldFtkYXRhLXJlcXVpcmVzXScpLmZvckVhY2goKHN1YnNldCkgPT4ge1xuICAgICAgICBpZiAoc3Vic2V0LmRhdGFzZXQucmVxdWlyZXMpIHtcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdWJzZXQuZGF0YXNldC5yZXF1aXJlcykgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc3Vic2V0LmRhdGFzZXQucmVxdWlyZXMpLnR5cGUgPT0gXCJyYWRpb1wiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHN1YnNldC5kYXRhc2V0LnJlcXVpcmVzKS5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNldC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2V0LmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5wcm9jZXNzU3ViU2V0cygpXG5cbmZvciAobGV0IGsgaW4gdXNlclNldHRpbmdzKSB7XG4gICAgdmFyIHNldHRpbmdWYWx1ZSA9IHVzZXJTZXR0aW5nc1trXVxuICAgIGNvbnN0IHNlbGVjdG9yID0gYGlucHV0W3ZhbHVlPVwiJHtzZXR0aW5nVmFsdWV9XCJdYFxuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSkge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKS5jaGVja2VkID0gdHJ1ZVxuICAgIH1cbn0iLCJpbXBvcnQgeyBoaWRlQWxsU2NyZWVucyB9IGZyb20gXCIuL2luZGV4XCJcbmltcG9ydCB7IENvbmZpcm0gfSBmcm9tICdub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1jb25maXJtLWFpbydcbmltcG9ydCB7IGNvbmZpcm1PcHRpb25zLCByZXBvcnRPcHRpb25zIH0gZnJvbSBcIi4vdGhlbWVzXCJcbmltcG9ydCB7IFJlcG9ydCB9IGZyb20gXCJub3RpZmxpeFwiXG5pbXBvcnQgeyBnZXRTZXR0aW5nIH0gZnJvbSBcIi4vb3B0aW9uc1wiXG5cbmxldCBzdGF0aXN0aWNzID0ge1xuICAgIHN0cmVhazogMCxcbiAgICB0b3RhbFF1ZXN0aW9uczogMCxcbiAgICB0b3RhbENvcnJlY3Q6IDAsXG4gICAgdG90YWxJbmNvcnJlY3Q6IDAsXG4gICAgdG90YWxHYW1lczogMCxcbiAgICBmbGFnc1NlZW46IFtdXG59XG5sZXQgZ2FtZVN0YXRpc3RpY3MgPSB7XG4gICAgdG90YWxRdWVzdGlvbnM6IDAsXG4gICAgdG90YWxDb3JyZWN0OiAwLFxuICAgIHRvdGFsSW5jb3JyZWN0OiAwLFxuICAgIHBsYXl0aW1lOiAwLFxuICAgIGRpZmZpY3VsdHk6IDBcbn1cbmNvbnN0IHRvdGFsRmxhZ0NvdW50ID0gMjU0IC8vIFRvdGFsIG51bWJlciBvZiBmbGFncyBpbiBhbGwgZGlmZmljdWx0aWVzLiBSdW4gc2NyaXB0cy9nZXRGbGFnQ291bnQuanMgdG8gcmVjYWxjdWxhdGVcblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVTdGF0cyhzdGF0cykge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZmxhZy1ndWVzc2VyLXN0YXRzXCIsIEpTT04uc3RyaW5naWZ5KHN0YXRzKSlcbiAgICB1cGRhdGVTdGF0UmVhZGluZygpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkU3RhdHMoKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJmbGFnLWd1ZXNzZXItc3RhdHNcIikpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdGF0KHN0YXROYW1lKSB7XG4gICAgcmV0dXJuIHN0YXRpc3RpY3Nbc3RhdE5hbWVdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVTdGF0KHN0YXROYW1lLCBuZXdWYWx1ZSkge1xuICAgIGlmIChnZXRTZXR0aW5nKCdwcmFjdGljZScpID09PSBcInByYWN0aWNlLW9uXCIpIHJldHVyblxuICAgIHN0YXRpc3RpY3Nbc3RhdE5hbWVdID0gIG5ld1ZhbHVlXG4gICAgc2F2ZVN0YXRzKHN0YXRpc3RpY3MpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmNyZW1lbnRTdGF0KHN0YXROYW1lKSB7XG4gICAgdXBkYXRlU3RhdChzdGF0TmFtZSwgc3RhdGlzdGljc1tzdGF0TmFtZV0gKyAxKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlR2FtZVN0YXQoc3RhdE5hbWUsIG5ld1ZhbHVlKSB7XG4gICAgZ2FtZVN0YXRpc3RpY3Nbc3RhdE5hbWVdID0gbmV3VmFsdWVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluY3JlbWVudEdhbWVTdGF0KHN0YXROYW1lKSB7XG4gICAgdXBkYXRlR2FtZVN0YXQoc3RhdE5hbWUsIGdhbWVTdGF0aXN0aWNzW3N0YXROYW1lXSArIDEpXG59XG5cbmZ1bmN0aW9uIGZvcm1hdFNlY29uZHMoc2Vjb25kcykge1xuICAgIHZhciBoID0gTWF0aC5mbG9vcihzZWNvbmRzIC8gMzYwMClcbiAgICB2YXIgbSA9IE1hdGguZmxvb3Ioc2Vjb25kcyAlIDM2MDAgLyA2MClcbiAgICB2YXIgcyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAlIDM2MDAgJSA2MClcbiAgICByZXR1cm4gYCR7aCA+IDAgPyBoICsgJyBob3VycywnIDogJyd9ICR7bSA+IDAgPyBtICsgJyBtaW51dGVzLCcgOiAnJ30gJHtzfSBzZWNvbmRzYFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd0VuZFNjcmVlbihnYW1lTW9kZSwgc3RyZWFrID0gMCwgc2NvcmUgPSAwLCBtYXhTY29yZSA9IDAsIGNvcnJlY3RBbnN3ZXIgPSAnJykge1xuICAgIGhpZGVBbGxTY3JlZW5zKClcbiAgICBjb25zdCBlbmRTY3JlZW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVuZFwiKVxuICAgIGVuZFNjcmVlbi5zdHlsZS5kaXNwbGF5ID0gXCJ1bnNldFwiXG4gICAgZm9yIChsZXQgc3RhdElkIGluIGdhbWVTdGF0aXN0aWNzKSB7XG4gICAgICAgIGxldCBzdGF0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0Zy0nICsgc3RhdElkKVxuICAgICAgICBpZiAoc3RhdEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHN0YXRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhdFwiKS5pbm5lclRleHQgPSBnYW1lU3RhdGlzdGljc1tzdGF0SWRdLnRvU3RyaW5nKCkucmVwbGFjZUFsbChcIi1cIiwgXCIgXCIpXG4gICAgICAgIH1cbiAgICB9XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0c2ctcGxheXRpbWVcIikucXVlcnlTZWxlY3RvcihcIi5zdGF0XCIpLmlubmVyVGV4dCA9IGZvcm1hdFNlY29uZHMoZ2FtZVN0YXRpc3RpY3MucGxheXRpbWUpXG4gICAgbGV0IHN1YlN0cmVhayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3ViLXN0cmVha1wiKVxuICAgIGxldCBzdWJRdWl6U2NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN1Yi1xdWl6LXNjb3JlXCIpXG4gICAgaWYgKGdhbWVNb2RlID09IFwicXVlc3Rpb25zXCIpIHtcbiAgICAgICAgc3ViUXVpelNjb3JlLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcbiAgICAgICAgc3ViU3RyZWFrLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgIH0gZWxzZSBpZiAoZ2FtZU1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICBzdWJRdWl6U2NvcmUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgICAgIHN1YlN0cmVhay5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXG4gICAgfVxuICAgIHN1YlN0cmVhay5xdWVyeVNlbGVjdG9yKFwiLnN0YXRcIikuaW5uZXJUZXh0ID0gc3RyZWFrXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY29yZS12YWx1ZVwiKS5pbm5lclRleHQgPSBzY29yZVxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2NvcmUtbWF4XCIpLmlubmVyVGV4dCA9IG1heFNjb3JlLnNwbGl0KFwicS1cIilbMV1cbiAgICBpZiAoZ2FtZU1vZGUgPT0gXCJxdWVzdGlvbnNcIikge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVuZC10aXRsZVwiKS5pbm5lclRleHQgPSBcIkdhbWUgQ29tcGxldGUhXCJcbiAgICB9IGVsc2Uge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVuZC10aXRsZVwiKS5pbm5lclRleHQgPSBcIkdhbWUgT3ZlciFcIlxuICAgIH1cbiAgICBsZXQgY29ycmVjdFBlcmNlbnRhZ2UgPSBNYXRoLmZsb29yKChnYW1lU3RhdGlzdGljcy50b3RhbENvcnJlY3QgKiAxMDApIC8gZ2FtZVN0YXRpc3RpY3MudG90YWxRdWVzdGlvbnMpXG4gICAgbGV0IGVuZENvcnJlY3RBbnN3ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW5kLWNvcnJlY3QtYW5zd2VyJylcbiAgICBsZXQgcXVlc3Rpb25Db3VudFN0YXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGctcXVlc3Rpb25zJylcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHNwLXdpblJhdGUnKS5xdWVyeVNlbGVjdG9yKCdzcGFuLnN0YXQnKS5pbm5lclRleHQgPSBjb3JyZWN0UGVyY2VudGFnZVxuICAgIGlmIChjb3JyZWN0QW5zd2VyID09ICcnKSB7XG4gICAgICAgIGVuZENvcnJlY3RBbnN3ZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSBlbHNlIHtcbiAgICAgICAgZW5kQ29ycmVjdEFuc3dlci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXG4gICAgICAgIGVuZENvcnJlY3RBbnN3ZXIucXVlcnlTZWxlY3RvcignLnN0YXQnKS5pbm5lclRleHQgPSBjb3JyZWN0QW5zd2VyXG4gICAgfVxuICAgIGlmIChnYW1lTW9kZSA9PSBcInF1ZXN0aW9uc1wiKSB7XG4gICAgICAgIHF1ZXN0aW9uQ291bnRTdGF0LnN0eWxlLmRpc3BsYXkgPSBcInVuc2V0XCJcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWVzdGlvbkNvdW50U3RhdC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9XG4gICAgQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm5vLXN0cmVha1wiKSkuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICBpZiAoIWVsZW1lbnQpIHJldHVyblxuICAgICAgICBpZiAoZ2FtZU1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIlxuICAgICAgICB9XG4gICAgfSlcbiAgICBjbGVhckdhbWVTdGF0cygpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckdhbWVTdGF0cygpIHtcbiAgICBmb3IgKGxldCBzdGF0IGluIGdhbWVTdGF0aXN0aWNzKSB7XG4gICAgICAgIGdhbWVTdGF0aXN0aWNzW3N0YXRdID0gMFxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVN0YXRSZWFkaW5nKCkge1xuICAgIGZvciAobGV0IGsgaW4gc3RhdGlzdGljcykge1xuICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHMtJHtrfWApKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgcy0ke2t9YCkucXVlcnlTZWxlY3Rvcignc3Bhbi5zdGF0JykuaW5uZXJUZXh0ID0gZ2V0U3RhdChrKVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBjb3JyZWN0UGVyY2VudGFnZSA9IE1hdGguZmxvb3IoKGdldFN0YXQoJ3RvdGFsQ29ycmVjdCcpICogMTAwKSAvIGdldFN0YXQoJ3RvdGFsUXVlc3Rpb25zJykpXG4gICAgaWYgKGlzTmFOKGNvcnJlY3RQZXJjZW50YWdlKSkgY29ycmVjdFBlcmNlbnRhZ2UgPSAwXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NwLXdpblJhdGUnKS5xdWVyeVNlbGVjdG9yKCdzcGFuLnN0YXQnKS5pbm5lclRleHQgPSBjb3JyZWN0UGVyY2VudGFnZVxuICAgIGxldCBmbGFnc1NlZW5QZXJjZW50YWdlID0gTWF0aC5mbG9vcigoZ2V0U3RhdCgnZmxhZ3NTZWVuJykubGVuZ3RoICogMTAwKSAvIHRvdGFsRmxhZ0NvdW50KVxuICAgIGlmIChpc05hTihmbGFnc1NlZW5QZXJjZW50YWdlKSkgZmxhZ3NTZWVuUGVyY2VudGFnZSA9IDBcbiAgICBpZiAoZmxhZ3NTZWVuUGVyY2VudGFnZSA+IDEwMCkgZmxhZ3NTZWVuUGVyY2VudGFnZSA9IDEwMCAvLyBXaG9vcHMgc29tZWJvZHkgZm9yZ290IHRvIHVwZGF0ZSB0aGUgdG90YWxGbGFnQ291bnQgdmFyaWFibGUhXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NwLWZsYWdzUGVyY2VudCcpLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uc3RhdCcpLmlubmVyVGV4dCA9IGZsYWdzU2VlblBlcmNlbnRhZ2Vcbn1cblxuaWYgKCFsb2FkU3RhdHMoKSkge1xuICAgIHNhdmVTdGF0cyhzdGF0aXN0aWNzKVxufSBlbHNlIHtcbiAgICBsZXQgbG9hZGVkU3RhdHMgPSBsb2FkU3RhdHMoKVxuICAgIGZvciAobGV0IGsgaW4gc3RhdGlzdGljcykge1xuICAgICAgICBpZiAodHlwZW9mIGxvYWRlZFN0YXRzW2tdID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFkZGluZyBzdGF0IFwiICsgayArIFwiLCB0aGlzIHNob3VsZCBvbmx5IGFwcGVhciBvbmNlLlwiKVxuICAgICAgICAgICAgbG9hZGVkU3RhdHNba10gPSBzdGF0aXN0aWNzW2tdXG4gICAgICAgICAgICBzYXZlU3RhdHMobG9hZGVkU3RhdHMpXG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGlzdGljcyA9IGxvYWRlZFN0YXRzXG59XG51cGRhdGVTdGF0UmVhZGluZygpXG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzZXQtc3RhdHNcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBDb25maXJtLnNob3coXCJBcmUgeW91IHN1cmU/XCIsIFwiVGhpcyBjYW5ub3QgYmUgdW5kb25lIVwiLCAnQ2xlYXIgU3RhdHMnLCAnQ2FuY2VsJywgKCkgPT4ge1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcImZsYWctZ3Vlc3Nlci1zdGF0c1wiKVxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcbiAgICB9LCB1bmRlZmluZWQsIGNvbmZpcm1PcHRpb25zKVxufSlcbmZ1bmN0aW9uIGdlbmVyYXRlQ29weVRleHQoKSB7XG4gICAgbGV0IGxpbmVzID0gW11cbiAgICBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjc3RhdHMtY29udGFpbmVyID4gdWwgPiBsaVwiKSkuZm9yRWFjaCgobGlzdEl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGxpc3RJdGVtLmdldEF0dHJpYnV0ZShcImljb25cIikpIHtcbiAgICAgICAgICAgIGxpbmVzLnB1c2goYCR7bGlzdEl0ZW0uZ2V0QXR0cmlidXRlKFwiaWNvblwiKX0ke2xpc3RJdGVtLmlubmVyVGV4dH1gKVxuICAgICAgICB9XG4gICAgfSlcbiAgICByZXR1cm4gbGluZXMuam9pbihcIlxcblwiKVxufVxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3B5LXN0YXRzXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdGV4dEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIilcbiAgICAgICAgdGV4dEVsZW1lbnQudmFsdWUgPSBnZW5lcmF0ZUNvcHlUZXh0KClcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXh0RWxlbWVudClcbiAgICAgICAgdGV4dEVsZW1lbnQuc2VsZWN0KClcbiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpXG4gICAgICAgIHRleHRFbGVtZW50LnJlbW92ZSgpXG4gICAgICAgIFJlcG9ydC5zdWNjZXNzKFwiQ29waWVkIVwiLCBcIlN1Y2Nlc3NmdWxseSBjb3BpZWQgdG8gY2xpcGJvYXJkLlwiLCBcIk9rXCIsIHJlcG9ydE9wdGlvbnMpXG4gICAgfSBjYXRjaChlcnJvck0pIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvck0pXG4gICAgICAgIFJlcG9ydC5mYWlsdXJlKFwiRXJyb3JcIiwgXCJGYWlsZWQgdG8gY29weSB0ZXh0LCBzb3JyeSBhYm91dCB0aGF0IDooXCIsIFwiT2tcIiwgcmVwb3J0T3B0aW9ucylcbiAgICB9XG59KSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFdpbmRvdyhub2RlKSB7XG4gIGlmIChub2RlID09IG51bGwpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG5cbiAgaWYgKG5vZGUudG9TdHJpbmcoKSAhPT0gJ1tvYmplY3QgV2luZG93XScpIHtcbiAgICB2YXIgb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgICByZXR1cm4gb3duZXJEb2N1bWVudCA/IG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93IDogd2luZG93O1xuICB9XG5cbiAgcmV0dXJuIG5vZGU7XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcblxuZnVuY3Rpb24gaXNFbGVtZW50KG5vZGUpIHtcbiAgdmFyIE93bkVsZW1lbnQgPSBnZXRXaW5kb3cobm9kZSkuRWxlbWVudDtcbiAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBPd25FbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KG5vZGUpIHtcbiAgdmFyIE93bkVsZW1lbnQgPSBnZXRXaW5kb3cobm9kZSkuSFRNTEVsZW1lbnQ7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGlzU2hhZG93Um9vdChub2RlKSB7XG4gIC8vIElFIDExIGhhcyBubyBTaGFkb3dSb290XG4gIGlmICh0eXBlb2YgU2hhZG93Um9vdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5TaGFkb3dSb290O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q7XG59XG5cbmV4cG9ydCB7IGlzRWxlbWVudCwgaXNIVE1MRWxlbWVudCwgaXNTaGFkb3dSb290IH07IiwiZXhwb3J0IHZhciBtYXggPSBNYXRoLm1heDtcbmV4cG9ydCB2YXIgbWluID0gTWF0aC5taW47XG5leHBvcnQgdmFyIHJvdW5kID0gTWF0aC5yb3VuZDsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRVQVN0cmluZygpIHtcbiAgdmFyIHVhRGF0YSA9IG5hdmlnYXRvci51c2VyQWdlbnREYXRhO1xuXG4gIGlmICh1YURhdGEgIT0gbnVsbCAmJiB1YURhdGEuYnJhbmRzKSB7XG4gICAgcmV0dXJuIHVhRGF0YS5icmFuZHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICByZXR1cm4gaXRlbS5icmFuZCArIFwiL1wiICsgaXRlbS52ZXJzaW9uO1xuICAgIH0pLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50O1xufSIsImltcG9ydCBnZXRVQVN0cmluZyBmcm9tIFwiLi4vdXRpbHMvdXNlckFnZW50LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0xheW91dFZpZXdwb3J0KCkge1xuICByZXR1cm4gIS9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pLnRlc3QoZ2V0VUFTdHJpbmcoKSk7XG59IiwiaW1wb3J0IHsgaXNFbGVtZW50LCBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBpc0xheW91dFZpZXdwb3J0IGZyb20gXCIuL2lzTGF5b3V0Vmlld3BvcnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBpbmNsdWRlU2NhbGUsIGlzRml4ZWRTdHJhdGVneSkge1xuICBpZiAoaW5jbHVkZVNjYWxlID09PSB2b2lkIDApIHtcbiAgICBpbmNsdWRlU2NhbGUgPSBmYWxzZTtcbiAgfVxuXG4gIGlmIChpc0ZpeGVkU3RyYXRlZ3kgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWRTdHJhdGVneSA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIGNsaWVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgc2NhbGVYID0gMTtcbiAgdmFyIHNjYWxlWSA9IDE7XG5cbiAgaWYgKGluY2x1ZGVTY2FsZSAmJiBpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgc2NhbGVYID0gZWxlbWVudC5vZmZzZXRXaWR0aCA+IDAgPyByb3VuZChjbGllbnRSZWN0LndpZHRoKSAvIGVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMSA6IDE7XG4gICAgc2NhbGVZID0gZWxlbWVudC5vZmZzZXRIZWlnaHQgPiAwID8gcm91bmQoY2xpZW50UmVjdC5oZWlnaHQpIC8gZWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMSA6IDE7XG4gIH1cblxuICB2YXIgX3JlZiA9IGlzRWxlbWVudChlbGVtZW50KSA/IGdldFdpbmRvdyhlbGVtZW50KSA6IHdpbmRvdyxcbiAgICAgIHZpc3VhbFZpZXdwb3J0ID0gX3JlZi52aXN1YWxWaWV3cG9ydDtcblxuICB2YXIgYWRkVmlzdWFsT2Zmc2V0cyA9ICFpc0xheW91dFZpZXdwb3J0KCkgJiYgaXNGaXhlZFN0cmF0ZWd5O1xuICB2YXIgeCA9IChjbGllbnRSZWN0LmxlZnQgKyAoYWRkVmlzdWFsT2Zmc2V0cyAmJiB2aXN1YWxWaWV3cG9ydCA/IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQgOiAwKSkgLyBzY2FsZVg7XG4gIHZhciB5ID0gKGNsaWVudFJlY3QudG9wICsgKGFkZFZpc3VhbE9mZnNldHMgJiYgdmlzdWFsVmlld3BvcnQgPyB2aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3AgOiAwKSkgLyBzY2FsZVk7XG4gIHZhciB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGggLyBzY2FsZVg7XG4gIHZhciBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlWTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgdG9wOiB5LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIGxlZnQ6IHgsXG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFdpbmRvd1Njcm9sbChub2RlKSB7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3cobm9kZSk7XG4gIHZhciBzY3JvbGxMZWZ0ID0gd2luLnBhZ2VYT2Zmc2V0O1xuICB2YXIgc2Nyb2xsVG9wID0gd2luLnBhZ2VZT2Zmc2V0O1xuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IHNjcm9sbExlZnQsXG4gICAgc2Nyb2xsVG9wOiBzY3JvbGxUb3BcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROb2RlTmFtZShlbGVtZW50KSB7XG4gIHJldHVybiBlbGVtZW50ID8gKGVsZW1lbnQubm9kZU5hbWUgfHwgJycpLnRvTG93ZXJDYXNlKCkgOiBudWxsO1xufSIsImltcG9ydCB7IGlzRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSB7XG4gIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl06IGFzc3VtZSBib2R5IGlzIGFsd2F5cyBhdmFpbGFibGVcbiAgcmV0dXJuICgoaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudC5vd25lckRvY3VtZW50IDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gIGVsZW1lbnQuZG9jdW1lbnQpIHx8IHdpbmRvdy5kb2N1bWVudCkuZG9jdW1lbnRFbGVtZW50O1xufSIsImltcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgZnJvbSBcIi4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCkge1xuICAvLyBJZiA8aHRtbD4gaGFzIGEgQ1NTIHdpZHRoIGdyZWF0ZXIgdGhhbiB0aGUgdmlld3BvcnQsIHRoZW4gdGhpcyB3aWxsIGJlXG4gIC8vIGluY29ycmVjdCBmb3IgUlRMLlxuICAvLyBQb3BwZXIgMSBpcyBicm9rZW4gaW4gdGhpcyBjYXNlIGFuZCBuZXZlciBoYWQgYSBidWcgcmVwb3J0IHNvIGxldCdzIGFzc3VtZVxuICAvLyBpdCdzIG5vdCBhbiBpc3N1ZS4gSSBkb24ndCB0aGluayBhbnlvbmUgZXZlciBzcGVjaWZpZXMgd2lkdGggb24gPGh0bWw+XG4gIC8vIGFueXdheS5cbiAgLy8gQnJvd3NlcnMgd2hlcmUgdGhlIGxlZnQgc2Nyb2xsYmFyIGRvZXNuJ3QgY2F1c2UgYW4gaXNzdWUgcmVwb3J0IGAwYCBmb3JcbiAgLy8gdGhpcyAoZS5nLiBFZGdlIDIwMTksIElFMTEsIFNhZmFyaSlcbiAgcmV0dXJuIGdldEJvdW5kaW5nQ2xpZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpLmxlZnQgKyBnZXRXaW5kb3dTY3JvbGwoZWxlbWVudCkuc2Nyb2xsTGVmdDtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KSB7XG4gIHJldHVybiBnZXRXaW5kb3coZWxlbWVudCkuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbn0iLCJpbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1Njcm9sbFBhcmVudChlbGVtZW50KSB7XG4gIC8vIEZpcmVmb3ggd2FudHMgdXMgdG8gY2hlY2sgYC14YCBhbmQgYC15YCB2YXJpYXRpb25zIGFzIHdlbGxcbiAgdmFyIF9nZXRDb21wdXRlZFN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KSxcbiAgICAgIG92ZXJmbG93ID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3csXG4gICAgICBvdmVyZmxvd1ggPSBfZ2V0Q29tcHV0ZWRTdHlsZS5vdmVyZmxvd1gsXG4gICAgICBvdmVyZmxvd1kgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5vdmVyZmxvd1k7XG5cbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbi8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCk7XG59IiwiaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXROb2RlU2Nyb2xsIGZyb20gXCIuL2dldE5vZGVTY3JvbGwuanNcIjtcbmltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGxCYXJYIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbEJhclguanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgaXNTY3JvbGxQYXJlbnQgZnJvbSBcIi4vaXNTY3JvbGxQYXJlbnQuanNcIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjtcblxuZnVuY3Rpb24gaXNFbGVtZW50U2NhbGVkKGVsZW1lbnQpIHtcbiAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgc2NhbGVYID0gcm91bmQocmVjdC53aWR0aCkgLyBlbGVtZW50Lm9mZnNldFdpZHRoIHx8IDE7XG4gIHZhciBzY2FsZVkgPSByb3VuZChyZWN0LmhlaWdodCkgLyBlbGVtZW50Lm9mZnNldEhlaWdodCB8fCAxO1xuICByZXR1cm4gc2NhbGVYICE9PSAxIHx8IHNjYWxlWSAhPT0gMTtcbn0gLy8gUmV0dXJucyB0aGUgY29tcG9zaXRlIHJlY3Qgb2YgYW4gZWxlbWVudCByZWxhdGl2ZSB0byBpdHMgb2Zmc2V0UGFyZW50LlxuLy8gQ29tcG9zaXRlIG1lYW5zIGl0IHRha2VzIGludG8gYWNjb3VudCB0cmFuc2Zvcm1zIGFzIHdlbGwgYXMgbGF5b3V0LlxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldENvbXBvc2l0ZVJlY3QoZWxlbWVudE9yVmlydHVhbEVsZW1lbnQsIG9mZnNldFBhcmVudCwgaXNGaXhlZCkge1xuICBpZiAoaXNGaXhlZCA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICB2YXIgb2Zmc2V0UGFyZW50SXNTY2FsZWQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkgJiYgaXNFbGVtZW50U2NhbGVkKG9mZnNldFBhcmVudCk7XG4gIHZhciBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgdmFyIHJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudE9yVmlydHVhbEVsZW1lbnQsIG9mZnNldFBhcmVudElzU2NhbGVkLCBpc0ZpeGVkKTtcbiAgdmFyIHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICB2YXIgb2Zmc2V0cyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcblxuICBpZiAoaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgfHwgIWlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ICYmICFpc0ZpeGVkKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09ICdib2R5JyB8fCAvLyBodHRwczovL2dpdGh1Yi5jb20vcG9wcGVyanMvcG9wcGVyLWNvcmUvaXNzdWVzLzEwNzhcbiAgICBpc1Njcm9sbFBhcmVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuXG4gICAgaWYgKGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgb2Zmc2V0cyA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQsIHRydWUpO1xuICAgICAgb2Zmc2V0cy54ICs9IG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ICs9IG9mZnNldFBhcmVudC5jbGllbnRUb3A7XG4gICAgfSBlbHNlIGlmIChkb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgIG9mZnNldHMueCA9IGdldFdpbmRvd1Njcm9sbEJhclgoZG9jdW1lbnRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHg6IHJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC0gb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueSxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59IiwiaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldEhUTUxFbGVtZW50U2Nyb2xsIGZyb20gXCIuL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROb2RlU2Nyb2xsKG5vZGUpIHtcbiAgaWYgKG5vZGUgPT09IGdldFdpbmRvdyhub2RlKSB8fCAhaXNIVE1MRWxlbWVudChub2RlKSkge1xuICAgIHJldHVybiBnZXRXaW5kb3dTY3JvbGwobm9kZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdldEhUTUxFbGVtZW50U2Nyb2xsKG5vZGUpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0SFRNTEVsZW1lbnRTY3JvbGwoZWxlbWVudCkge1xuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICBzY3JvbGxUb3A6IGVsZW1lbnQuc2Nyb2xsVG9wXG4gIH07XG59IiwiaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjsgLy8gUmV0dXJucyB0aGUgbGF5b3V0IHJlY3Qgb2YgYW4gZWxlbWVudCByZWxhdGl2ZSB0byBpdHMgb2Zmc2V0UGFyZW50LiBMYXlvdXRcbi8vIG1lYW5zIGl0IGRvZXNuJ3QgdGFrZSBpbnRvIGFjY291bnQgdHJhbnNmb3Jtcy5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0TGF5b3V0UmVjdChlbGVtZW50KSB7XG4gIHZhciBjbGllbnRSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQpOyAvLyBVc2UgdGhlIGNsaWVudFJlY3Qgc2l6ZXMgaWYgaXQncyBub3QgYmVlbiB0cmFuc2Zvcm1lZC5cbiAgLy8gRml4ZXMgaHR0cHM6Ly9naXRodWIuY29tL3BvcHBlcmpzL3BvcHBlci1jb3JlL2lzc3Vlcy8xMjIzXG5cbiAgdmFyIHdpZHRoID0gZWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgdmFyIGhlaWdodCA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuXG4gIGlmIChNYXRoLmFicyhjbGllbnRSZWN0LndpZHRoIC0gd2lkdGgpIDw9IDEpIHtcbiAgICB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGg7XG4gIH1cblxuICBpZiAoTWF0aC5hYnMoY2xpZW50UmVjdC5oZWlnaHQgLSBoZWlnaHQpIDw9IDEpIHtcbiAgICBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogZWxlbWVudC5vZmZzZXRMZWZ0LFxuICAgIHk6IGVsZW1lbnQub2Zmc2V0VG9wLFxuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodFxuICB9O1xufSIsImltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCB7IGlzU2hhZG93Um9vdCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFBhcmVudE5vZGUoZWxlbWVudCkge1xuICBpZiAoZ2V0Tm9kZU5hbWUoZWxlbWVudCkgPT09ICdodG1sJykge1xuICAgIHJldHVybiBlbGVtZW50O1xuICB9XG5cbiAgcmV0dXJuICgvLyB0aGlzIGlzIGEgcXVpY2tlciAoYnV0IGxlc3MgdHlwZSBzYWZlKSB3YXkgdG8gc2F2ZSBxdWl0ZSBzb21lIGJ5dGVzIGZyb20gdGhlIGJ1bmRsZVxuICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl1cbiAgICAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICBlbGVtZW50LmFzc2lnbmVkU2xvdCB8fCAvLyBzdGVwIGludG8gdGhlIHNoYWRvdyBET00gb2YgdGhlIHBhcmVudCBvZiBhIHNsb3R0ZWQgbm9kZVxuICAgIGVsZW1lbnQucGFyZW50Tm9kZSB8fCAoIC8vIERPTSBFbGVtZW50IGRldGVjdGVkXG4gICAgaXNTaGFkb3dSb290KGVsZW1lbnQpID8gZWxlbWVudC5ob3N0IDogbnVsbCkgfHwgLy8gU2hhZG93Um9vdCBkZXRlY3RlZFxuICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhbGxdOiBIVE1MRWxlbWVudCBpcyBhIE5vZGVcbiAgICBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkgLy8gZmFsbGJhY2tcblxuICApO1xufSIsImltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBpc1Njcm9sbFBhcmVudCBmcm9tIFwiLi9pc1Njcm9sbFBhcmVudC5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U2Nyb2xsUGFyZW50KG5vZGUpIHtcbiAgaWYgKFsnaHRtbCcsICdib2R5JywgJyNkb2N1bWVudCddLmluZGV4T2YoZ2V0Tm9kZU5hbWUobm9kZSkpID49IDApIHtcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlXG4gICAgcmV0dXJuIG5vZGUub3duZXJEb2N1bWVudC5ib2R5O1xuICB9XG5cbiAgaWYgKGlzSFRNTEVsZW1lbnQobm9kZSkgJiYgaXNTY3JvbGxQYXJlbnQobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuXG4gIHJldHVybiBnZXRTY3JvbGxQYXJlbnQoZ2V0UGFyZW50Tm9kZShub2RlKSk7XG59IiwiaW1wb3J0IGdldFNjcm9sbFBhcmVudCBmcm9tIFwiLi9nZXRTY3JvbGxQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgaXNTY3JvbGxQYXJlbnQgZnJvbSBcIi4vaXNTY3JvbGxQYXJlbnQuanNcIjtcbi8qXG5naXZlbiBhIERPTSBlbGVtZW50LCByZXR1cm4gdGhlIGxpc3Qgb2YgYWxsIHNjcm9sbCBwYXJlbnRzLCB1cCB0aGUgbGlzdCBvZiBhbmNlc29yc1xudW50aWwgd2UgZ2V0IHRvIHRoZSB0b3Agd2luZG93IG9iamVjdC4gVGhpcyBsaXN0IGlzIHdoYXQgd2UgYXR0YWNoIHNjcm9sbCBsaXN0ZW5lcnNcbnRvLCBiZWNhdXNlIGlmIGFueSBvZiB0aGVzZSBwYXJlbnQgZWxlbWVudHMgc2Nyb2xsLCB3ZSdsbCBuZWVkIHRvIHJlLWNhbGN1bGF0ZSB0aGVcbnJlZmVyZW5jZSBlbGVtZW50J3MgcG9zaXRpb24uXG4qL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsaXN0U2Nyb2xsUGFyZW50cyhlbGVtZW50LCBsaXN0KSB7XG4gIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47XG5cbiAgaWYgKGxpc3QgPT09IHZvaWQgMCkge1xuICAgIGxpc3QgPSBbXTtcbiAgfVxuXG4gIHZhciBzY3JvbGxQYXJlbnQgPSBnZXRTY3JvbGxQYXJlbnQoZWxlbWVudCk7XG4gIHZhciBpc0JvZHkgPSBzY3JvbGxQYXJlbnQgPT09ICgoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHkpO1xuICB2YXIgd2luID0gZ2V0V2luZG93KHNjcm9sbFBhcmVudCk7XG4gIHZhciB0YXJnZXQgPSBpc0JvZHkgPyBbd2luXS5jb25jYXQod2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc1Njcm9sbFBhcmVudChzY3JvbGxQYXJlbnQpID8gc2Nyb2xsUGFyZW50IDogW10pIDogc2Nyb2xsUGFyZW50O1xuICB2YXIgdXBkYXRlZExpc3QgPSBsaXN0LmNvbmNhdCh0YXJnZXQpO1xuICByZXR1cm4gaXNCb2R5ID8gdXBkYXRlZExpc3QgOiAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYWxsXTogaXNCb2R5IHRlbGxzIHVzIHRhcmdldCB3aWxsIGJlIGFuIEhUTUxFbGVtZW50IGhlcmVcbiAgdXBkYXRlZExpc3QuY29uY2F0KGxpc3RTY3JvbGxQYXJlbnRzKGdldFBhcmVudE5vZGUodGFyZ2V0KSkpO1xufSIsImltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gWyd0YWJsZScsICd0ZCcsICd0aCddLmluZGV4T2YoZ2V0Tm9kZU5hbWUoZWxlbWVudCkpID49IDA7XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCwgaXNTaGFkb3dSb290IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGlzVGFibGVFbGVtZW50IGZyb20gXCIuL2lzVGFibGVFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0UGFyZW50Tm9kZSBmcm9tIFwiLi9nZXRQYXJlbnROb2RlLmpzXCI7XG5pbXBvcnQgZ2V0VUFTdHJpbmcgZnJvbSBcIi4uL3V0aWxzL3VzZXJBZ2VudC5qc1wiO1xuXG5mdW5jdGlvbiBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvODM3XG4gIGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT09ICdmaXhlZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50Lm9mZnNldFBhcmVudDtcbn0gLy8gYC5vZmZzZXRQYXJlbnRgIHJlcG9ydHMgYG51bGxgIGZvciBmaXhlZCBlbGVtZW50cywgd2hpbGUgYWJzb2x1dGUgZWxlbWVudHNcbi8vIHJldHVybiB0aGUgY29udGFpbmluZyBibG9ja1xuXG5cbmZ1bmN0aW9uIGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB7XG4gIHZhciBpc0ZpcmVmb3ggPSAvZmlyZWZveC9pLnRlc3QoZ2V0VUFTdHJpbmcoKSk7XG4gIHZhciBpc0lFID0gL1RyaWRlbnQvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xuXG4gIGlmIChpc0lFICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAvLyBJbiBJRSA5LCAxMCBhbmQgMTEgZml4ZWQgZWxlbWVudHMgY29udGFpbmluZyBibG9jayBpcyBhbHdheXMgZXN0YWJsaXNoZWQgYnkgdGhlIHZpZXdwb3J0XG4gICAgdmFyIGVsZW1lbnRDc3MgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuXG4gICAgaWYgKGVsZW1lbnRDc3MucG9zaXRpb24gPT09ICdmaXhlZCcpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG5cbiAgaWYgKGlzU2hhZG93Um9vdChjdXJyZW50Tm9kZSkpIHtcbiAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLmhvc3Q7XG4gIH1cblxuICB3aGlsZSAoaXNIVE1MRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgWydodG1sJywgJ2JvZHknXS5pbmRleE9mKGdldE5vZGVOYW1lKGN1cnJlbnROb2RlKSkgPCAwKSB7XG4gICAgdmFyIGNzcyA9IGdldENvbXB1dGVkU3R5bGUoY3VycmVudE5vZGUpOyAvLyBUaGlzIGlzIG5vbi1leGhhdXN0aXZlIGJ1dCBjb3ZlcnMgdGhlIG1vc3QgY29tbW9uIENTUyBwcm9wZXJ0aWVzIHRoYXRcbiAgICAvLyBjcmVhdGUgYSBjb250YWluaW5nIGJsb2NrLlxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9Db250YWluaW5nX2Jsb2NrI2lkZW50aWZ5aW5nX3RoZV9jb250YWluaW5nX2Jsb2NrXG5cbiAgICBpZiAoY3NzLnRyYW5zZm9ybSAhPT0gJ25vbmUnIHx8IGNzcy5wZXJzcGVjdGl2ZSAhPT0gJ25vbmUnIHx8IGNzcy5jb250YWluID09PSAncGFpbnQnIHx8IFsndHJhbnNmb3JtJywgJ3BlcnNwZWN0aXZlJ10uaW5kZXhPZihjc3Mud2lsbENoYW5nZSkgIT09IC0xIHx8IGlzRmlyZWZveCAmJiBjc3Mud2lsbENoYW5nZSA9PT0gJ2ZpbHRlcicgfHwgaXNGaXJlZm94ICYmIGNzcy5maWx0ZXIgJiYgY3NzLmZpbHRlciAhPT0gJ25vbmUnKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn0gLy8gR2V0cyB0aGUgY2xvc2VzdCBhbmNlc3RvciBwb3NpdGlvbmVkIGVsZW1lbnQuIEhhbmRsZXMgc29tZSBlZGdlIGNhc2VzLFxuLy8gc3VjaCBhcyB0YWJsZSBhbmNlc3RvcnMgYW5kIGNyb3NzIGJyb3dzZXIgYnVncy5cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICB2YXIgd2luZG93ID0gZ2V0V2luZG93KGVsZW1lbnQpO1xuICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KTtcblxuICB3aGlsZSAob2Zmc2V0UGFyZW50ICYmIGlzVGFibGVFbGVtZW50KG9mZnNldFBhcmVudCkgJiYgZ2V0Q29tcHV0ZWRTdHlsZShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uID09PSAnc3RhdGljJykge1xuICAgIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQob2Zmc2V0UGFyZW50KTtcbiAgfVxuXG4gIGlmIChvZmZzZXRQYXJlbnQgJiYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgPT09ICdodG1sJyB8fCBnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSAnYm9keScgJiYgZ2V0Q29tcHV0ZWRTdHlsZShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uID09PSAnc3RhdGljJykpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG5cbiAgcmV0dXJuIG9mZnNldFBhcmVudCB8fCBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkgfHwgd2luZG93O1xufSIsImV4cG9ydCB2YXIgdG9wID0gJ3RvcCc7XG5leHBvcnQgdmFyIGJvdHRvbSA9ICdib3R0b20nO1xuZXhwb3J0IHZhciByaWdodCA9ICdyaWdodCc7XG5leHBvcnQgdmFyIGxlZnQgPSAnbGVmdCc7XG5leHBvcnQgdmFyIGF1dG8gPSAnYXV0byc7XG5leHBvcnQgdmFyIGJhc2VQbGFjZW1lbnRzID0gW3RvcCwgYm90dG9tLCByaWdodCwgbGVmdF07XG5leHBvcnQgdmFyIHN0YXJ0ID0gJ3N0YXJ0JztcbmV4cG9ydCB2YXIgZW5kID0gJ2VuZCc7XG5leHBvcnQgdmFyIGNsaXBwaW5nUGFyZW50cyA9ICdjbGlwcGluZ1BhcmVudHMnO1xuZXhwb3J0IHZhciB2aWV3cG9ydCA9ICd2aWV3cG9ydCc7XG5leHBvcnQgdmFyIHBvcHBlciA9ICdwb3BwZXInO1xuZXhwb3J0IHZhciByZWZlcmVuY2UgPSAncmVmZXJlbmNlJztcbmV4cG9ydCB2YXIgdmFyaWF0aW9uUGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9iYXNlUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQgKyBcIi1cIiArIHN0YXJ0LCBwbGFjZW1lbnQgKyBcIi1cIiArIGVuZF0pO1xufSwgW10pO1xuZXhwb3J0IHZhciBwbGFjZW1lbnRzID0gLyojX19QVVJFX18qL1tdLmNvbmNhdChiYXNlUGxhY2VtZW50cywgW2F1dG9dKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQsIHBsYWNlbWVudCArIFwiLVwiICsgc3RhcnQsIHBsYWNlbWVudCArIFwiLVwiICsgZW5kXSk7XG59LCBbXSk7IC8vIG1vZGlmaWVycyB0aGF0IG5lZWQgdG8gcmVhZCB0aGUgRE9NXG5cbmV4cG9ydCB2YXIgYmVmb3JlUmVhZCA9ICdiZWZvcmVSZWFkJztcbmV4cG9ydCB2YXIgcmVhZCA9ICdyZWFkJztcbmV4cG9ydCB2YXIgYWZ0ZXJSZWFkID0gJ2FmdGVyUmVhZCc7IC8vIHB1cmUtbG9naWMgbW9kaWZpZXJzXG5cbmV4cG9ydCB2YXIgYmVmb3JlTWFpbiA9ICdiZWZvcmVNYWluJztcbmV4cG9ydCB2YXIgbWFpbiA9ICdtYWluJztcbmV4cG9ydCB2YXIgYWZ0ZXJNYWluID0gJ2FmdGVyTWFpbic7IC8vIG1vZGlmaWVyIHdpdGggdGhlIHB1cnBvc2UgdG8gd3JpdGUgdG8gdGhlIERPTSAob3Igd3JpdGUgaW50byBhIGZyYW1ld29yayBzdGF0ZSlcblxuZXhwb3J0IHZhciBiZWZvcmVXcml0ZSA9ICdiZWZvcmVXcml0ZSc7XG5leHBvcnQgdmFyIHdyaXRlID0gJ3dyaXRlJztcbmV4cG9ydCB2YXIgYWZ0ZXJXcml0ZSA9ICdhZnRlcldyaXRlJztcbmV4cG9ydCB2YXIgbW9kaWZpZXJQaGFzZXMgPSBbYmVmb3JlUmVhZCwgcmVhZCwgYWZ0ZXJSZWFkLCBiZWZvcmVNYWluLCBtYWluLCBhZnRlck1haW4sIGJlZm9yZVdyaXRlLCB3cml0ZSwgYWZ0ZXJXcml0ZV07IiwiaW1wb3J0IHsgbW9kaWZpZXJQaGFzZXMgfSBmcm9tIFwiLi4vZW51bXMuanNcIjsgLy8gc291cmNlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80OTg3NTI1NVxuXG5mdW5jdGlvbiBvcmRlcihtb2RpZmllcnMpIHtcbiAgdmFyIG1hcCA9IG5ldyBNYXAoKTtcbiAgdmFyIHZpc2l0ZWQgPSBuZXcgU2V0KCk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgbW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgbWFwLnNldChtb2RpZmllci5uYW1lLCBtb2RpZmllcik7XG4gIH0pOyAvLyBPbiB2aXNpdGluZyBvYmplY3QsIGNoZWNrIGZvciBpdHMgZGVwZW5kZW5jaWVzIGFuZCB2aXNpdCB0aGVtIHJlY3Vyc2l2ZWx5XG5cbiAgZnVuY3Rpb24gc29ydChtb2RpZmllcikge1xuICAgIHZpc2l0ZWQuYWRkKG1vZGlmaWVyLm5hbWUpO1xuICAgIHZhciByZXF1aXJlcyA9IFtdLmNvbmNhdChtb2RpZmllci5yZXF1aXJlcyB8fCBbXSwgbW9kaWZpZXIucmVxdWlyZXNJZkV4aXN0cyB8fCBbXSk7XG4gICAgcmVxdWlyZXMuZm9yRWFjaChmdW5jdGlvbiAoZGVwKSB7XG4gICAgICBpZiAoIXZpc2l0ZWQuaGFzKGRlcCkpIHtcbiAgICAgICAgdmFyIGRlcE1vZGlmaWVyID0gbWFwLmdldChkZXApO1xuXG4gICAgICAgIGlmIChkZXBNb2RpZmllcikge1xuICAgICAgICAgIHNvcnQoZGVwTW9kaWZpZXIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmVzdWx0LnB1c2gobW9kaWZpZXIpO1xuICB9XG5cbiAgbW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgaWYgKCF2aXNpdGVkLmhhcyhtb2RpZmllci5uYW1lKSkge1xuICAgICAgLy8gY2hlY2sgZm9yIHZpc2l0ZWQgb2JqZWN0XG4gICAgICBzb3J0KG1vZGlmaWVyKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvcmRlck1vZGlmaWVycyhtb2RpZmllcnMpIHtcbiAgLy8gb3JkZXIgYmFzZWQgb24gZGVwZW5kZW5jaWVzXG4gIHZhciBvcmRlcmVkTW9kaWZpZXJzID0gb3JkZXIobW9kaWZpZXJzKTsgLy8gb3JkZXIgYmFzZWQgb24gcGhhc2VcblxuICByZXR1cm4gbW9kaWZpZXJQaGFzZXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBoYXNlKSB7XG4gICAgcmV0dXJuIGFjYy5jb25jYXQob3JkZXJlZE1vZGlmaWVycy5maWx0ZXIoZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgICByZXR1cm4gbW9kaWZpZXIucGhhc2UgPT09IHBoYXNlO1xuICAgIH0pKTtcbiAgfSwgW10pO1xufSIsImltcG9ydCBnZXRDb21wb3NpdGVSZWN0IGZyb20gXCIuL2RvbS11dGlscy9nZXRDb21wb3NpdGVSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qc1wiO1xuaW1wb3J0IGxpc3RTY3JvbGxQYXJlbnRzIGZyb20gXCIuL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IG9yZGVyTW9kaWZpZXJzIGZyb20gXCIuL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzXCI7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSBcIi4vdXRpbHMvZGVib3VuY2UuanNcIjtcbmltcG9ydCB2YWxpZGF0ZU1vZGlmaWVycyBmcm9tIFwiLi91dGlscy92YWxpZGF0ZU1vZGlmaWVycy5qc1wiO1xuaW1wb3J0IHVuaXF1ZUJ5IGZyb20gXCIuL3V0aWxzL3VuaXF1ZUJ5LmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgbWVyZ2VCeU5hbWUgZnJvbSBcIi4vdXRpbHMvbWVyZ2VCeU5hbWUuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCB7IGF1dG8gfSBmcm9tIFwiLi9lbnVtcy5qc1wiO1xudmFyIElOVkFMSURfRUxFTUVOVF9FUlJPUiA9ICdQb3BwZXI6IEludmFsaWQgcmVmZXJlbmNlIG9yIHBvcHBlciBhcmd1bWVudCBwcm92aWRlZC4gVGhleSBtdXN0IGJlIGVpdGhlciBhIERPTSBlbGVtZW50IG9yIHZpcnR1YWwgZWxlbWVudC4nO1xudmFyIElORklOSVRFX0xPT1BfRVJST1IgPSAnUG9wcGVyOiBBbiBpbmZpbml0ZSBsb29wIGluIHRoZSBtb2RpZmllcnMgY3ljbGUgaGFzIGJlZW4gZGV0ZWN0ZWQhIFRoZSBjeWNsZSBoYXMgYmVlbiBpbnRlcnJ1cHRlZCB0byBwcmV2ZW50IGEgYnJvd3NlciBjcmFzaC4nO1xudmFyIERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgbW9kaWZpZXJzOiBbXSxcbiAgc3RyYXRlZ3k6ICdhYnNvbHV0ZSdcbn07XG5cbmZ1bmN0aW9uIGFyZVZhbGlkRWxlbWVudHMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gIWFyZ3Muc29tZShmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIHJldHVybiAhKGVsZW1lbnQgJiYgdHlwZW9mIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ID09PSAnZnVuY3Rpb24nKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3BwZXJHZW5lcmF0b3IoZ2VuZXJhdG9yT3B0aW9ucykge1xuICBpZiAoZ2VuZXJhdG9yT3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgZ2VuZXJhdG9yT3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9nZW5lcmF0b3JPcHRpb25zID0gZ2VuZXJhdG9yT3B0aW9ucyxcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZiA9IF9nZW5lcmF0b3JPcHRpb25zLmRlZmF1bHRNb2RpZmllcnMsXG4gICAgICBkZWZhdWx0TW9kaWZpZXJzID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmID09PSB2b2lkIDAgPyBbXSA6IF9nZW5lcmF0b3JPcHRpb25zJGRlZixcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZjIgPSBfZ2VuZXJhdG9yT3B0aW9ucy5kZWZhdWx0T3B0aW9ucyxcbiAgICAgIGRlZmF1bHRPcHRpb25zID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmMiA9PT0gdm9pZCAwID8gREVGQVVMVF9PUFRJT05TIDogX2dlbmVyYXRvck9wdGlvbnMkZGVmMjtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZVBvcHBlcihyZWZlcmVuY2UsIHBvcHBlciwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucztcbiAgICB9XG5cbiAgICB2YXIgc3RhdGUgPSB7XG4gICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgb3JkZXJlZE1vZGlmaWVyczogW10sXG4gICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX09QVElPTlMsIGRlZmF1bHRPcHRpb25zKSxcbiAgICAgIG1vZGlmaWVyc0RhdGE6IHt9LFxuICAgICAgZWxlbWVudHM6IHtcbiAgICAgICAgcmVmZXJlbmNlOiByZWZlcmVuY2UsXG4gICAgICAgIHBvcHBlcjogcG9wcGVyXG4gICAgICB9LFxuICAgICAgYXR0cmlidXRlczoge30sXG4gICAgICBzdHlsZXM6IHt9XG4gICAgfTtcbiAgICB2YXIgZWZmZWN0Q2xlYW51cEZucyA9IFtdO1xuICAgIHZhciBpc0Rlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHZhciBpbnN0YW5jZSA9IHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIHNldE9wdGlvbnM6IGZ1bmN0aW9uIHNldE9wdGlvbnMoc2V0T3B0aW9uc0FjdGlvbikge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzZXRPcHRpb25zQWN0aW9uID09PSAnZnVuY3Rpb24nID8gc2V0T3B0aW9uc0FjdGlvbihzdGF0ZS5vcHRpb25zKSA6IHNldE9wdGlvbnNBY3Rpb247XG4gICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgc3RhdGUub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zLCBzdGF0ZS5vcHRpb25zLCBvcHRpb25zKTtcbiAgICAgICAgc3RhdGUuc2Nyb2xsUGFyZW50cyA9IHtcbiAgICAgICAgICByZWZlcmVuY2U6IGlzRWxlbWVudChyZWZlcmVuY2UpID8gbGlzdFNjcm9sbFBhcmVudHMocmVmZXJlbmNlKSA6IHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCA/IGxpc3RTY3JvbGxQYXJlbnRzKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCkgOiBbXSxcbiAgICAgICAgICBwb3BwZXI6IGxpc3RTY3JvbGxQYXJlbnRzKHBvcHBlcilcbiAgICAgICAgfTsgLy8gT3JkZXJzIHRoZSBtb2RpZmllcnMgYmFzZWQgb24gdGhlaXIgZGVwZW5kZW5jaWVzIGFuZCBgcGhhc2VgXG4gICAgICAgIC8vIHByb3BlcnRpZXNcblxuICAgICAgICB2YXIgb3JkZXJlZE1vZGlmaWVycyA9IG9yZGVyTW9kaWZpZXJzKG1lcmdlQnlOYW1lKFtdLmNvbmNhdChkZWZhdWx0TW9kaWZpZXJzLCBzdGF0ZS5vcHRpb25zLm1vZGlmaWVycykpKTsgLy8gU3RyaXAgb3V0IGRpc2FibGVkIG1vZGlmaWVyc1xuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobSkge1xuICAgICAgICAgIHJldHVybiBtLmVuYWJsZWQ7XG4gICAgICAgIH0pOyAvLyBWYWxpZGF0ZSB0aGUgcHJvdmlkZWQgbW9kaWZpZXJzIHNvIHRoYXQgdGhlIGNvbnN1bWVyIHdpbGwgZ2V0IHdhcm5lZFxuICAgICAgICAvLyBpZiBvbmUgb2YgdGhlIG1vZGlmaWVycyBpcyBpbnZhbGlkIGZvciBhbnkgcmVhc29uXG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgIHZhciBtb2RpZmllcnMgPSB1bmlxdWVCeShbXS5jb25jYXQob3JkZXJlZE1vZGlmaWVycywgc3RhdGUub3B0aW9ucy5tb2RpZmllcnMpLCBmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWU7XG4gICAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YWxpZGF0ZU1vZGlmaWVycyhtb2RpZmllcnMpO1xuXG4gICAgICAgICAgaWYgKGdldEJhc2VQbGFjZW1lbnQoc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQpID09PSBhdXRvKSB7XG4gICAgICAgICAgICB2YXIgZmxpcE1vZGlmaWVyID0gc3RhdGUub3JkZXJlZE1vZGlmaWVycy5maW5kKGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYyLm5hbWU7XG4gICAgICAgICAgICAgIHJldHVybiBuYW1lID09PSAnZmxpcCc7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKCFmbGlwTW9kaWZpZXIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihbJ1BvcHBlcjogXCJhdXRvXCIgcGxhY2VtZW50cyByZXF1aXJlIHRoZSBcImZsaXBcIiBtb2RpZmllciBiZScsICdwcmVzZW50IGFuZCBlbmFibGVkIHRvIHdvcmsuJ10uam9pbignICcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgX2dldENvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKHBvcHBlciksXG4gICAgICAgICAgICAgIG1hcmdpblRvcCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpblRvcCxcbiAgICAgICAgICAgICAgbWFyZ2luUmlnaHQgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5tYXJnaW5SaWdodCxcbiAgICAgICAgICAgICAgbWFyZ2luQm90dG9tID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luQm90dG9tLFxuICAgICAgICAgICAgICBtYXJnaW5MZWZ0ID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luTGVmdDsgLy8gV2Ugbm8gbG9uZ2VyIHRha2UgaW50byBhY2NvdW50IGBtYXJnaW5zYCBvbiB0aGUgcG9wcGVyLCBhbmQgaXQgY2FuXG4gICAgICAgICAgLy8gY2F1c2UgYnVncyB3aXRoIHBvc2l0aW9uaW5nLCBzbyB3ZSdsbCB3YXJuIHRoZSBjb25zdW1lclxuXG5cbiAgICAgICAgICBpZiAoW21hcmdpblRvcCwgbWFyZ2luUmlnaHQsIG1hcmdpbkJvdHRvbSwgbWFyZ2luTGVmdF0uc29tZShmdW5jdGlvbiAobWFyZ2luKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChtYXJnaW4pO1xuICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oWydQb3BwZXI6IENTUyBcIm1hcmdpblwiIHN0eWxlcyBjYW5ub3QgYmUgdXNlZCB0byBhcHBseSBwYWRkaW5nJywgJ2JldHdlZW4gdGhlIHBvcHBlciBhbmQgaXRzIHJlZmVyZW5jZSBlbGVtZW50IG9yIGJvdW5kYXJ5LicsICdUbyByZXBsaWNhdGUgbWFyZ2luLCB1c2UgdGhlIGBvZmZzZXRgIG1vZGlmaWVyLCBhcyB3ZWxsIGFzJywgJ3RoZSBgcGFkZGluZ2Agb3B0aW9uIGluIHRoZSBgcHJldmVudE92ZXJmbG93YCBhbmQgYGZsaXBgJywgJ21vZGlmaWVycy4nXS5qb2luKCcgJykpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJ1bk1vZGlmaWVyRWZmZWN0cygpO1xuICAgICAgICByZXR1cm4gaW5zdGFuY2UudXBkYXRlKCk7XG4gICAgICB9LFxuICAgICAgLy8gU3luYyB1cGRhdGUg4oCTIGl0IHdpbGwgYWx3YXlzIGJlIGV4ZWN1dGVkLCBldmVuIGlmIG5vdCBuZWNlc3NhcnkuIFRoaXNcbiAgICAgIC8vIGlzIHVzZWZ1bCBmb3IgbG93IGZyZXF1ZW5jeSB1cGRhdGVzIHdoZXJlIHN5bmMgYmVoYXZpb3Igc2ltcGxpZmllcyB0aGVcbiAgICAgIC8vIGxvZ2ljLlxuICAgICAgLy8gRm9yIGhpZ2ggZnJlcXVlbmN5IHVwZGF0ZXMgKGUuZy4gYHJlc2l6ZWAgYW5kIGBzY3JvbGxgIGV2ZW50cyksIGFsd2F5c1xuICAgICAgLy8gcHJlZmVyIHRoZSBhc3luYyBQb3BwZXIjdXBkYXRlIG1ldGhvZFxuICAgICAgZm9yY2VVcGRhdGU6IGZ1bmN0aW9uIGZvcmNlVXBkYXRlKCkge1xuICAgICAgICBpZiAoaXNEZXN0cm95ZWQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgX3N0YXRlJGVsZW1lbnRzID0gc3RhdGUuZWxlbWVudHMsXG4gICAgICAgICAgICByZWZlcmVuY2UgPSBfc3RhdGUkZWxlbWVudHMucmVmZXJlbmNlLFxuICAgICAgICAgICAgcG9wcGVyID0gX3N0YXRlJGVsZW1lbnRzLnBvcHBlcjsgLy8gRG9uJ3QgcHJvY2VlZCBpZiBgcmVmZXJlbmNlYCBvciBgcG9wcGVyYCBhcmUgbm90IHZhbGlkIGVsZW1lbnRzXG4gICAgICAgIC8vIGFueW1vcmVcblxuICAgICAgICBpZiAoIWFyZVZhbGlkRWxlbWVudHMocmVmZXJlbmNlLCBwb3BwZXIpKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihJTlZBTElEX0VMRU1FTlRfRVJST1IpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSAvLyBTdG9yZSB0aGUgcmVmZXJlbmNlIGFuZCBwb3BwZXIgcmVjdHMgdG8gYmUgcmVhZCBieSBtb2RpZmllcnNcblxuXG4gICAgICAgIHN0YXRlLnJlY3RzID0ge1xuICAgICAgICAgIHJlZmVyZW5jZTogZ2V0Q29tcG9zaXRlUmVjdChyZWZlcmVuY2UsIGdldE9mZnNldFBhcmVudChwb3BwZXIpLCBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5ID09PSAnZml4ZWQnKSxcbiAgICAgICAgICBwb3BwZXI6IGdldExheW91dFJlY3QocG9wcGVyKVxuICAgICAgICB9OyAvLyBNb2RpZmllcnMgaGF2ZSB0aGUgYWJpbGl0eSB0byByZXNldCB0aGUgY3VycmVudCB1cGRhdGUgY3ljbGUuIFRoZVxuICAgICAgICAvLyBtb3N0IGNvbW1vbiB1c2UgY2FzZSBmb3IgdGhpcyBpcyB0aGUgYGZsaXBgIG1vZGlmaWVyIGNoYW5naW5nIHRoZVxuICAgICAgICAvLyBwbGFjZW1lbnQsIHdoaWNoIHRoZW4gbmVlZHMgdG8gcmUtcnVuIGFsbCB0aGUgbW9kaWZpZXJzLCBiZWNhdXNlIHRoZVxuICAgICAgICAvLyBsb2dpYyB3YXMgcHJldmlvdXNseSByYW4gZm9yIHRoZSBwcmV2aW91cyBwbGFjZW1lbnQgYW5kIGlzIHRoZXJlZm9yZVxuICAgICAgICAvLyBzdGFsZS9pbmNvcnJlY3RcblxuICAgICAgICBzdGF0ZS5yZXNldCA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS5wbGFjZW1lbnQgPSBzdGF0ZS5vcHRpb25zLnBsYWNlbWVudDsgLy8gT24gZWFjaCB1cGRhdGUgY3ljbGUsIHRoZSBgbW9kaWZpZXJzRGF0YWAgcHJvcGVydHkgZm9yIGVhY2ggbW9kaWZpZXJcbiAgICAgICAgLy8gaXMgZmlsbGVkIHdpdGggdGhlIGluaXRpYWwgZGF0YSBzcGVjaWZpZWQgYnkgdGhlIG1vZGlmaWVyLiBUaGlzIG1lYW5zXG4gICAgICAgIC8vIGl0IGRvZXNuJ3QgcGVyc2lzdCBhbmQgaXMgZnJlc2ggb24gZWFjaCB1cGRhdGUuXG4gICAgICAgIC8vIFRvIGVuc3VyZSBwZXJzaXN0ZW50IGRhdGEsIHVzZSBgJHtuYW1lfSNwZXJzaXN0ZW50YFxuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGUubW9kaWZpZXJzRGF0YVttb2RpZmllci5uYW1lXSA9IE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIF9fZGVidWdfbG9vcHNfXyA9IDA7XG5cbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHN0YXRlLm9yZGVyZWRNb2RpZmllcnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgX19kZWJ1Z19sb29wc19fICs9IDE7XG5cbiAgICAgICAgICAgIGlmIChfX2RlYnVnX2xvb3BzX18gPiAxMDApIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihJTkZJTklURV9MT09QX0VSUk9SKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHN0YXRlLnJlc2V0ID09PSB0cnVlKSB7XG4gICAgICAgICAgICBzdGF0ZS5yZXNldCA9IGZhbHNlO1xuICAgICAgICAgICAgaW5kZXggPSAtMTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBfc3RhdGUkb3JkZXJlZE1vZGlmaWUgPSBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzW2luZGV4XSxcbiAgICAgICAgICAgICAgZm4gPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUuZm4sXG4gICAgICAgICAgICAgIF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUub3B0aW9ucyxcbiAgICAgICAgICAgICAgX29wdGlvbnMgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyID09PSB2b2lkIDAgPyB7fSA6IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIsXG4gICAgICAgICAgICAgIG5hbWUgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUubmFtZTtcblxuICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHN0YXRlID0gZm4oe1xuICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgICAgIG9wdGlvbnM6IF9vcHRpb25zLFxuICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2VcbiAgICAgICAgICAgIH0pIHx8IHN0YXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIEFzeW5jIGFuZCBvcHRpbWlzdGljYWxseSBvcHRpbWl6ZWQgdXBkYXRlIOKAkyBpdCB3aWxsIG5vdCBiZSBleGVjdXRlZCBpZlxuICAgICAgLy8gbm90IG5lY2Vzc2FyeSAoZGVib3VuY2VkIHRvIHJ1biBhdCBtb3N0IG9uY2UtcGVyLXRpY2spXG4gICAgICB1cGRhdGU6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgICAgaW5zdGFuY2UuZm9yY2VVcGRhdGUoKTtcbiAgICAgICAgICByZXNvbHZlKHN0YXRlKTtcbiAgICAgICAgfSk7XG4gICAgICB9KSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgaXNEZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoIWFyZVZhbGlkRWxlbWVudHMocmVmZXJlbmNlLCBwb3BwZXIpKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoSU5WQUxJRF9FTEVNRU5UX0VSUk9SKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cblxuICAgIGluc3RhbmNlLnNldE9wdGlvbnMob3B0aW9ucykudGhlbihmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgIGlmICghaXNEZXN0cm95ZWQgJiYgb3B0aW9ucy5vbkZpcnN0VXBkYXRlKSB7XG4gICAgICAgIG9wdGlvbnMub25GaXJzdFVwZGF0ZShzdGF0ZSk7XG4gICAgICB9XG4gICAgfSk7IC8vIE1vZGlmaWVycyBoYXZlIHRoZSBhYmlsaXR5IHRvIGV4ZWN1dGUgYXJiaXRyYXJ5IGNvZGUgYmVmb3JlIHRoZSBmaXJzdFxuICAgIC8vIHVwZGF0ZSBjeWNsZSBydW5zLiBUaGV5IHdpbGwgYmUgZXhlY3V0ZWQgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlIHVwZGF0ZVxuICAgIC8vIGN5Y2xlLiBUaGlzIGlzIHVzZWZ1bCB3aGVuIGEgbW9kaWZpZXIgYWRkcyBzb21lIHBlcnNpc3RlbnQgZGF0YSB0aGF0XG4gICAgLy8gb3RoZXIgbW9kaWZpZXJzIG5lZWQgdG8gdXNlLCBidXQgdGhlIG1vZGlmaWVyIGlzIHJ1biBhZnRlciB0aGUgZGVwZW5kZW50XG4gICAgLy8gb25lLlxuXG4gICAgZnVuY3Rpb24gcnVuTW9kaWZpZXJFZmZlY3RzKCkge1xuICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmMykge1xuICAgICAgICB2YXIgbmFtZSA9IF9yZWYzLm5hbWUsXG4gICAgICAgICAgICBfcmVmMyRvcHRpb25zID0gX3JlZjMub3B0aW9ucyxcbiAgICAgICAgICAgIG9wdGlvbnMgPSBfcmVmMyRvcHRpb25zID09PSB2b2lkIDAgPyB7fSA6IF9yZWYzJG9wdGlvbnMsXG4gICAgICAgICAgICBlZmZlY3QgPSBfcmVmMy5lZmZlY3Q7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBlZmZlY3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB2YXIgY2xlYW51cEZuID0gZWZmZWN0KHtcbiAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB2YXIgbm9vcEZuID0gZnVuY3Rpb24gbm9vcEZuKCkge307XG5cbiAgICAgICAgICBlZmZlY3RDbGVhbnVwRm5zLnB1c2goY2xlYW51cEZuIHx8IG5vb3BGbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKSB7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgICAgfSk7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zID0gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9O1xufVxuZXhwb3J0IHZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovcG9wcGVyR2VuZXJhdG9yKCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgZGV0ZWN0T3ZlcmZsb3cgfTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWJvdW5jZShmbikge1xuICB2YXIgcGVuZGluZztcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXBlbmRpbmcpIHtcbiAgICAgIHBlbmRpbmcgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBwZW5kaW5nID0gdW5kZWZpbmVkO1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBlbmRpbmc7XG4gIH07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VCeU5hbWUobW9kaWZpZXJzKSB7XG4gIHZhciBtZXJnZWQgPSBtb2RpZmllcnMucmVkdWNlKGZ1bmN0aW9uIChtZXJnZWQsIGN1cnJlbnQpIHtcbiAgICB2YXIgZXhpc3RpbmcgPSBtZXJnZWRbY3VycmVudC5uYW1lXTtcbiAgICBtZXJnZWRbY3VycmVudC5uYW1lXSA9IGV4aXN0aW5nID8gT2JqZWN0LmFzc2lnbih7fSwgZXhpc3RpbmcsIGN1cnJlbnQsIHtcbiAgICAgIG9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLm9wdGlvbnMsIGN1cnJlbnQub3B0aW9ucyksXG4gICAgICBkYXRhOiBPYmplY3QuYXNzaWduKHt9LCBleGlzdGluZy5kYXRhLCBjdXJyZW50LmRhdGEpXG4gICAgfSkgOiBjdXJyZW50O1xuICAgIHJldHVybiBtZXJnZWQ7XG4gIH0sIHt9KTsgLy8gSUUxMSBkb2VzIG5vdCBzdXBwb3J0IE9iamVjdC52YWx1ZXNcblxuICByZXR1cm4gT2JqZWN0LmtleXMobWVyZ2VkKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBtZXJnZWRba2V5XTtcbiAgfSk7XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldFdpbmRvdy5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbnZhciBwYXNzaXZlID0ge1xuICBwYXNzaXZlOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBlZmZlY3QoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgaW5zdGFuY2UgPSBfcmVmLmluc3RhbmNlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucztcbiAgdmFyIF9vcHRpb25zJHNjcm9sbCA9IG9wdGlvbnMuc2Nyb2xsLFxuICAgICAgc2Nyb2xsID0gX29wdGlvbnMkc2Nyb2xsID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkc2Nyb2xsLFxuICAgICAgX29wdGlvbnMkcmVzaXplID0gb3B0aW9ucy5yZXNpemUsXG4gICAgICByZXNpemUgPSBfb3B0aW9ucyRyZXNpemUgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRyZXNpemU7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coc3RhdGUuZWxlbWVudHMucG9wcGVyKTtcbiAgdmFyIHNjcm9sbFBhcmVudHMgPSBbXS5jb25jYXQoc3RhdGUuc2Nyb2xsUGFyZW50cy5yZWZlcmVuY2UsIHN0YXRlLnNjcm9sbFBhcmVudHMucG9wcGVyKTtcblxuICBpZiAoc2Nyb2xsKSB7XG4gICAgc2Nyb2xsUGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChzY3JvbGxQYXJlbnQpIHtcbiAgICAgIHNjcm9sbFBhcmVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICAgIH0pO1xuICB9XG5cbiAgaWYgKHJlc2l6ZSkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc2Nyb2xsKSB7XG4gICAgICBzY3JvbGxQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHNjcm9sbFBhcmVudCkge1xuICAgICAgICBzY3JvbGxQYXJlbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChyZXNpemUpIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICAgIH1cbiAgfTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2V2ZW50TGlzdGVuZXJzJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICd3cml0ZScsXG4gIGZuOiBmdW5jdGlvbiBmbigpIHt9LFxuICBlZmZlY3Q6IGVmZmVjdCxcbiAgZGF0YToge31cbn07IiwiaW1wb3J0IHsgYXV0byB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFZhcmlhdGlvbihwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzFdO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFsndG9wJywgJ2JvdHRvbSddLmluZGV4T2YocGxhY2VtZW50KSA+PSAwID8gJ3gnIDogJ3knO1xufSIsImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4vZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IGZyb20gXCIuL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0LCBzdGFydCwgZW5kIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlT2Zmc2V0cyhfcmVmKSB7XG4gIHZhciByZWZlcmVuY2UgPSBfcmVmLnJlZmVyZW5jZSxcbiAgICAgIGVsZW1lbnQgPSBfcmVmLmVsZW1lbnQsXG4gICAgICBwbGFjZW1lbnQgPSBfcmVmLnBsYWNlbWVudDtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBwbGFjZW1lbnQgPyBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkgOiBudWxsO1xuICB2YXIgdmFyaWF0aW9uID0gcGxhY2VtZW50ID8gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgOiBudWxsO1xuICB2YXIgY29tbW9uWCA9IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoIC8gMiAtIGVsZW1lbnQud2lkdGggLyAyO1xuICB2YXIgY29tbW9uWSA9IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodCAvIDIgLSBlbGVtZW50LmhlaWdodCAvIDI7XG4gIHZhciBvZmZzZXRzO1xuXG4gIHN3aXRjaCAoYmFzZVBsYWNlbWVudCkge1xuICAgIGNhc2UgdG9wOlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgLSBlbGVtZW50LmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBib3R0b206XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcmlnaHQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCArIHJlZmVyZW5jZS53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBsZWZ0OlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBlbGVtZW50LndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLngsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55XG4gICAgICB9O1xuICB9XG5cbiAgdmFyIG1haW5BeGlzID0gYmFzZVBsYWNlbWVudCA/IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KSA6IG51bGw7XG5cbiAgaWYgKG1haW5BeGlzICE9IG51bGwpIHtcbiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcblxuICAgIHN3aXRjaCAodmFyaWF0aW9uKSB7XG4gICAgICBjYXNlIHN0YXJ0OlxuICAgICAgICBvZmZzZXRzW21haW5BeGlzXSA9IG9mZnNldHNbbWFpbkF4aXNdIC0gKHJlZmVyZW5jZVtsZW5dIC8gMiAtIGVsZW1lbnRbbGVuXSAvIDIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBlbmQ6XG4gICAgICAgIG9mZnNldHNbbWFpbkF4aXNdID0gb2Zmc2V0c1ttYWluQXhpc10gKyAocmVmZXJlbmNlW2xlbl0gLyAyIC0gZWxlbWVudFtsZW5dIC8gMik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvZmZzZXRzO1xufSIsImltcG9ydCB7IHRvcCwgbGVmdCwgcmlnaHQsIGJvdHRvbSwgZW5kIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuLi91dGlscy9nZXRWYXJpYXRpb24uanNcIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG52YXIgdW5zZXRTaWRlcyA9IHtcbiAgdG9wOiAnYXV0bycsXG4gIHJpZ2h0OiAnYXV0bycsXG4gIGJvdHRvbTogJ2F1dG8nLFxuICBsZWZ0OiAnYXV0bydcbn07IC8vIFJvdW5kIHRoZSBvZmZzZXRzIHRvIHRoZSBuZWFyZXN0IHN1aXRhYmxlIHN1YnBpeGVsIGJhc2VkIG9uIHRoZSBEUFIuXG4vLyBab29taW5nIGNhbiBjaGFuZ2UgdGhlIERQUiwgYnV0IGl0IHNlZW1zIHRvIHJlcG9ydCBhIHZhbHVlIHRoYXQgd2lsbFxuLy8gY2xlYW5seSBkaXZpZGUgdGhlIHZhbHVlcyBpbnRvIHRoZSBhcHByb3ByaWF0ZSBzdWJwaXhlbHMuXG5cbmZ1bmN0aW9uIHJvdW5kT2Zmc2V0c0J5RFBSKF9yZWYpIHtcbiAgdmFyIHggPSBfcmVmLngsXG4gICAgICB5ID0gX3JlZi55O1xuICB2YXIgd2luID0gd2luZG93O1xuICB2YXIgZHByID0gd2luLmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgcmV0dXJuIHtcbiAgICB4OiByb3VuZCh4ICogZHByKSAvIGRwciB8fCAwLFxuICAgIHk6IHJvdW5kKHkgKiBkcHIpIC8gZHByIHx8IDBcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1hcFRvU3R5bGVzKF9yZWYyKSB7XG4gIHZhciBfT2JqZWN0JGFzc2lnbjI7XG5cbiAgdmFyIHBvcHBlciA9IF9yZWYyLnBvcHBlcixcbiAgICAgIHBvcHBlclJlY3QgPSBfcmVmMi5wb3BwZXJSZWN0LFxuICAgICAgcGxhY2VtZW50ID0gX3JlZjIucGxhY2VtZW50LFxuICAgICAgdmFyaWF0aW9uID0gX3JlZjIudmFyaWF0aW9uLFxuICAgICAgb2Zmc2V0cyA9IF9yZWYyLm9mZnNldHMsXG4gICAgICBwb3NpdGlvbiA9IF9yZWYyLnBvc2l0aW9uLFxuICAgICAgZ3B1QWNjZWxlcmF0aW9uID0gX3JlZjIuZ3B1QWNjZWxlcmF0aW9uLFxuICAgICAgYWRhcHRpdmUgPSBfcmVmMi5hZGFwdGl2ZSxcbiAgICAgIHJvdW5kT2Zmc2V0cyA9IF9yZWYyLnJvdW5kT2Zmc2V0cyxcbiAgICAgIGlzRml4ZWQgPSBfcmVmMi5pc0ZpeGVkO1xuICB2YXIgX29mZnNldHMkeCA9IG9mZnNldHMueCxcbiAgICAgIHggPSBfb2Zmc2V0cyR4ID09PSB2b2lkIDAgPyAwIDogX29mZnNldHMkeCxcbiAgICAgIF9vZmZzZXRzJHkgPSBvZmZzZXRzLnksXG4gICAgICB5ID0gX29mZnNldHMkeSA9PT0gdm9pZCAwID8gMCA6IF9vZmZzZXRzJHk7XG5cbiAgdmFyIF9yZWYzID0gdHlwZW9mIHJvdW5kT2Zmc2V0cyA9PT0gJ2Z1bmN0aW9uJyA/IHJvdW5kT2Zmc2V0cyh7XG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH0pIDoge1xuICAgIHg6IHgsXG4gICAgeTogeVxuICB9O1xuXG4gIHggPSBfcmVmMy54O1xuICB5ID0gX3JlZjMueTtcbiAgdmFyIGhhc1ggPSBvZmZzZXRzLmhhc093blByb3BlcnR5KCd4Jyk7XG4gIHZhciBoYXNZID0gb2Zmc2V0cy5oYXNPd25Qcm9wZXJ0eSgneScpO1xuICB2YXIgc2lkZVggPSBsZWZ0O1xuICB2YXIgc2lkZVkgPSB0b3A7XG4gIHZhciB3aW4gPSB3aW5kb3c7XG5cbiAgaWYgKGFkYXB0aXZlKSB7XG4gICAgdmFyIG9mZnNldFBhcmVudCA9IGdldE9mZnNldFBhcmVudChwb3BwZXIpO1xuICAgIHZhciBoZWlnaHRQcm9wID0gJ2NsaWVudEhlaWdodCc7XG4gICAgdmFyIHdpZHRoUHJvcCA9ICdjbGllbnRXaWR0aCc7XG5cbiAgICBpZiAob2Zmc2V0UGFyZW50ID09PSBnZXRXaW5kb3cocG9wcGVyKSkge1xuICAgICAgb2Zmc2V0UGFyZW50ID0gZ2V0RG9jdW1lbnRFbGVtZW50KHBvcHBlcik7XG5cbiAgICAgIGlmIChnZXRDb21wdXRlZFN0eWxlKG9mZnNldFBhcmVudCkucG9zaXRpb24gIT09ICdzdGF0aWMnICYmIHBvc2l0aW9uID09PSAnYWJzb2x1dGUnKSB7XG4gICAgICAgIGhlaWdodFByb3AgPSAnc2Nyb2xsSGVpZ2h0JztcbiAgICAgICAgd2lkdGhQcm9wID0gJ3Njcm9sbFdpZHRoJztcbiAgICAgIH1cbiAgICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhc3RdOiBmb3JjZSB0eXBlIHJlZmluZW1lbnQsIHdlIGNvbXBhcmUgb2Zmc2V0UGFyZW50IHdpdGggd2luZG93IGFib3ZlLCBidXQgRmxvdyBkb2Vzbid0IGRldGVjdCBpdFxuXG5cbiAgICBvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQ7XG5cbiAgICBpZiAocGxhY2VtZW50ID09PSB0b3AgfHwgKHBsYWNlbWVudCA9PT0gbGVmdCB8fCBwbGFjZW1lbnQgPT09IHJpZ2h0KSAmJiB2YXJpYXRpb24gPT09IGVuZCkge1xuICAgICAgc2lkZVkgPSBib3R0b207XG4gICAgICB2YXIgb2Zmc2V0WSA9IGlzRml4ZWQgJiYgb2Zmc2V0UGFyZW50ID09PSB3aW4gJiYgd2luLnZpc3VhbFZpZXdwb3J0ID8gd2luLnZpc3VhbFZpZXdwb3J0LmhlaWdodCA6IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICAgICAgb2Zmc2V0UGFyZW50W2hlaWdodFByb3BdO1xuICAgICAgeSAtPSBvZmZzZXRZIC0gcG9wcGVyUmVjdC5oZWlnaHQ7XG4gICAgICB5ICo9IGdwdUFjY2VsZXJhdGlvbiA/IDEgOiAtMTtcbiAgICB9XG5cbiAgICBpZiAocGxhY2VtZW50ID09PSBsZWZ0IHx8IChwbGFjZW1lbnQgPT09IHRvcCB8fCBwbGFjZW1lbnQgPT09IGJvdHRvbSkgJiYgdmFyaWF0aW9uID09PSBlbmQpIHtcbiAgICAgIHNpZGVYID0gcmlnaHQ7XG4gICAgICB2YXIgb2Zmc2V0WCA9IGlzRml4ZWQgJiYgb2Zmc2V0UGFyZW50ID09PSB3aW4gJiYgd2luLnZpc3VhbFZpZXdwb3J0ID8gd2luLnZpc3VhbFZpZXdwb3J0LndpZHRoIDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgICBvZmZzZXRQYXJlbnRbd2lkdGhQcm9wXTtcbiAgICAgIHggLT0gb2Zmc2V0WCAtIHBvcHBlclJlY3Qud2lkdGg7XG4gICAgICB4ICo9IGdwdUFjY2VsZXJhdGlvbiA/IDEgOiAtMTtcbiAgICB9XG4gIH1cblxuICB2YXIgY29tbW9uU3R5bGVzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgcG9zaXRpb246IHBvc2l0aW9uXG4gIH0sIGFkYXB0aXZlICYmIHVuc2V0U2lkZXMpO1xuXG4gIHZhciBfcmVmNCA9IHJvdW5kT2Zmc2V0cyA9PT0gdHJ1ZSA/IHJvdW5kT2Zmc2V0c0J5RFBSKHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfSkgOiB7XG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG5cbiAgeCA9IF9yZWY0Lng7XG4gIHkgPSBfcmVmNC55O1xuXG4gIGlmIChncHVBY2NlbGVyYXRpb24pIHtcbiAgICB2YXIgX09iamVjdCRhc3NpZ247XG5cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCAoX09iamVjdCRhc3NpZ24gPSB7fSwgX09iamVjdCRhc3NpZ25bc2lkZVldID0gaGFzWSA/ICcwJyA6ICcnLCBfT2JqZWN0JGFzc2lnbltzaWRlWF0gPSBoYXNYID8gJzAnIDogJycsIF9PYmplY3QkYXNzaWduLnRyYW5zZm9ybSA9ICh3aW4uZGV2aWNlUGl4ZWxSYXRpbyB8fCAxKSA8PSAxID8gXCJ0cmFuc2xhdGUoXCIgKyB4ICsgXCJweCwgXCIgKyB5ICsgXCJweClcIiA6IFwidHJhbnNsYXRlM2QoXCIgKyB4ICsgXCJweCwgXCIgKyB5ICsgXCJweCwgMClcIiwgX09iamVjdCRhc3NpZ24pKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIChfT2JqZWN0JGFzc2lnbjIgPSB7fSwgX09iamVjdCRhc3NpZ24yW3NpZGVZXSA9IGhhc1kgPyB5ICsgXCJweFwiIDogJycsIF9PYmplY3QkYXNzaWduMltzaWRlWF0gPSBoYXNYID8geCArIFwicHhcIiA6ICcnLCBfT2JqZWN0JGFzc2lnbjIudHJhbnNmb3JtID0gJycsIF9PYmplY3QkYXNzaWduMikpO1xufVxuXG5mdW5jdGlvbiBjb21wdXRlU3R5bGVzKF9yZWY1KSB7XG4gIHZhciBzdGF0ZSA9IF9yZWY1LnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWY1Lm9wdGlvbnM7XG4gIHZhciBfb3B0aW9ucyRncHVBY2NlbGVyYXQgPSBvcHRpb25zLmdwdUFjY2VsZXJhdGlvbixcbiAgICAgIGdwdUFjY2VsZXJhdGlvbiA9IF9vcHRpb25zJGdwdUFjY2VsZXJhdCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGdwdUFjY2VsZXJhdCxcbiAgICAgIF9vcHRpb25zJGFkYXB0aXZlID0gb3B0aW9ucy5hZGFwdGl2ZSxcbiAgICAgIGFkYXB0aXZlID0gX29wdGlvbnMkYWRhcHRpdmUgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRhZGFwdGl2ZSxcbiAgICAgIF9vcHRpb25zJHJvdW5kT2Zmc2V0cyA9IG9wdGlvbnMucm91bmRPZmZzZXRzLFxuICAgICAgcm91bmRPZmZzZXRzID0gX29wdGlvbnMkcm91bmRPZmZzZXRzID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkcm91bmRPZmZzZXRzO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICB2YXIgdHJhbnNpdGlvblByb3BlcnR5ID0gZ2V0Q29tcHV0ZWRTdHlsZShzdGF0ZS5lbGVtZW50cy5wb3BwZXIpLnRyYW5zaXRpb25Qcm9wZXJ0eSB8fCAnJztcblxuICAgIGlmIChhZGFwdGl2ZSAmJiBbJ3RyYW5zZm9ybScsICd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXS5zb21lKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgcmV0dXJuIHRyYW5zaXRpb25Qcm9wZXJ0eS5pbmRleE9mKHByb3BlcnR5KSA+PSAwO1xuICAgIH0pKSB7XG4gICAgICBjb25zb2xlLndhcm4oWydQb3BwZXI6IERldGVjdGVkIENTUyB0cmFuc2l0aW9ucyBvbiBhdCBsZWFzdCBvbmUgb2YgdGhlIGZvbGxvd2luZycsICdDU1MgcHJvcGVydGllczogXCJ0cmFuc2Zvcm1cIiwgXCJ0b3BcIiwgXCJyaWdodFwiLCBcImJvdHRvbVwiLCBcImxlZnRcIi4nLCAnXFxuXFxuJywgJ0Rpc2FibGUgdGhlIFwiY29tcHV0ZVN0eWxlc1wiIG1vZGlmaWVyXFwncyBgYWRhcHRpdmVgIG9wdGlvbiB0byBhbGxvdycsICdmb3Igc21vb3RoIHRyYW5zaXRpb25zLCBvciByZW1vdmUgdGhlc2UgcHJvcGVydGllcyBmcm9tIHRoZSBDU1MnLCAndHJhbnNpdGlvbiBkZWNsYXJhdGlvbiBvbiB0aGUgcG9wcGVyIGVsZW1lbnQgaWYgb25seSB0cmFuc2l0aW9uaW5nJywgJ29wYWNpdHkgb3IgYmFja2dyb3VuZC1jb2xvciBmb3IgZXhhbXBsZS4nLCAnXFxuXFxuJywgJ1dlIHJlY29tbWVuZCB1c2luZyB0aGUgcG9wcGVyIGVsZW1lbnQgYXMgYSB3cmFwcGVyIGFyb3VuZCBhbiBpbm5lcicsICdlbGVtZW50IHRoYXQgY2FuIGhhdmUgYW55IENTUyBwcm9wZXJ0eSB0cmFuc2l0aW9uZWQgZm9yIGFuaW1hdGlvbnMuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH1cblxuICB2YXIgY29tbW9uU3R5bGVzID0ge1xuICAgIHBsYWNlbWVudDogZ2V0QmFzZVBsYWNlbWVudChzdGF0ZS5wbGFjZW1lbnQpLFxuICAgIHZhcmlhdGlvbjogZ2V0VmFyaWF0aW9uKHN0YXRlLnBsYWNlbWVudCksXG4gICAgcG9wcGVyOiBzdGF0ZS5lbGVtZW50cy5wb3BwZXIsXG4gICAgcG9wcGVyUmVjdDogc3RhdGUucmVjdHMucG9wcGVyLFxuICAgIGdwdUFjY2VsZXJhdGlvbjogZ3B1QWNjZWxlcmF0aW9uLFxuICAgIGlzRml4ZWQ6IHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3kgPT09ICdmaXhlZCdcbiAgfTtcblxuICBpZiAoc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzICE9IG51bGwpIHtcbiAgICBzdGF0ZS5zdHlsZXMucG9wcGVyID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUuc3R5bGVzLnBvcHBlciwgbWFwVG9TdHlsZXMoT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCB7XG4gICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMsXG4gICAgICBwb3NpdGlvbjogc3RhdGUub3B0aW9ucy5zdHJhdGVneSxcbiAgICAgIGFkYXB0aXZlOiBhZGFwdGl2ZSxcbiAgICAgIHJvdW5kT2Zmc2V0czogcm91bmRPZmZzZXRzXG4gICAgfSkpKTtcbiAgfVxuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLmFycm93ICE9IG51bGwpIHtcbiAgICBzdGF0ZS5zdHlsZXMuYXJyb3cgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5zdHlsZXMuYXJyb3csIG1hcFRvU3R5bGVzKE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywge1xuICAgICAgb2Zmc2V0czogc3RhdGUubW9kaWZpZXJzRGF0YS5hcnJvdyxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgYWRhcHRpdmU6IGZhbHNlLFxuICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHNcbiAgICB9KSkpO1xuICB9XG5cbiAgc3RhdGUuYXR0cmlidXRlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciwge1xuICAgICdkYXRhLXBvcHBlci1wbGFjZW1lbnQnOiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSk7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdjb21wdXRlU3R5bGVzJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdiZWZvcmVXcml0ZScsXG4gIGZuOiBjb21wdXRlU3R5bGVzLFxuICBkYXRhOiB7fVxufTsiLCJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4uL2RvbS11dGlscy9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qc1wiOyAvLyBUaGlzIG1vZGlmaWVyIHRha2VzIHRoZSBzdHlsZXMgcHJlcGFyZWQgYnkgdGhlIGBjb21wdXRlU3R5bGVzYCBtb2RpZmllclxuLy8gYW5kIGFwcGxpZXMgdGhlbSB0byB0aGUgSFRNTEVsZW1lbnRzIHN1Y2ggYXMgcG9wcGVyIGFuZCBhcnJvd1xuXG5mdW5jdGlvbiBhcHBseVN0eWxlcyhfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGU7XG4gIE9iamVjdC5rZXlzKHN0YXRlLmVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdmFyIHN0eWxlID0gc3RhdGUuc3R5bGVzW25hbWVdIHx8IHt9O1xuICAgIHZhciBhdHRyaWJ1dGVzID0gc3RhdGUuYXR0cmlidXRlc1tuYW1lXSB8fCB7fTtcbiAgICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW25hbWVdOyAvLyBhcnJvdyBpcyBvcHRpb25hbCArIHZpcnR1YWwgZWxlbWVudHNcblxuICAgIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAhZ2V0Tm9kZU5hbWUoZWxlbWVudCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEZsb3cgZG9lc24ndCBzdXBwb3J0IHRvIGV4dGVuZCB0aGlzIHByb3BlcnR5LCBidXQgaXQncyB0aGUgbW9zdFxuICAgIC8vIGVmZmVjdGl2ZSB3YXkgdG8gYXBwbHkgc3R5bGVzIHRvIGFuIEhUTUxFbGVtZW50XG4gICAgLy8gJEZsb3dGaXhNZVtjYW5ub3Qtd3JpdGVdXG5cblxuICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwgc3R5bGUpO1xuICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNbbmFtZV07XG5cbiAgICAgIGlmICh2YWx1ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSA9PT0gdHJ1ZSA/ICcnIDogdmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlO1xuICB2YXIgaW5pdGlhbFN0eWxlcyA9IHtcbiAgICBwb3BwZXI6IHtcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgbGVmdDogJzAnLFxuICAgICAgdG9wOiAnMCcsXG4gICAgICBtYXJnaW46ICcwJ1xuICAgIH0sXG4gICAgYXJyb3c6IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnXG4gICAgfSxcbiAgICByZWZlcmVuY2U6IHt9XG4gIH07XG4gIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLCBpbml0aWFsU3R5bGVzLnBvcHBlcik7XG4gIHN0YXRlLnN0eWxlcyA9IGluaXRpYWxTdHlsZXM7XG5cbiAgaWYgKHN0YXRlLmVsZW1lbnRzLmFycm93KSB7XG4gICAgT2JqZWN0LmFzc2lnbihzdGF0ZS5lbGVtZW50cy5hcnJvdy5zdHlsZSwgaW5pdGlhbFN0eWxlcy5hcnJvdyk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIE9iamVjdC5rZXlzKHN0YXRlLmVsZW1lbnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW25hbWVdO1xuICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBzdGF0ZS5hdHRyaWJ1dGVzW25hbWVdIHx8IHt9O1xuICAgICAgdmFyIHN0eWxlUHJvcGVydGllcyA9IE9iamVjdC5rZXlzKHN0YXRlLnN0eWxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSA/IHN0YXRlLnN0eWxlc1tuYW1lXSA6IGluaXRpYWxTdHlsZXNbbmFtZV0pOyAvLyBTZXQgYWxsIHZhbHVlcyB0byBhbiBlbXB0eSBzdHJpbmcgdG8gdW5zZXQgdGhlbVxuXG4gICAgICB2YXIgc3R5bGUgPSBzdHlsZVByb3BlcnRpZXMucmVkdWNlKGZ1bmN0aW9uIChzdHlsZSwgcHJvcGVydHkpIHtcbiAgICAgICAgc3R5bGVbcHJvcGVydHldID0gJyc7XG4gICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgIH0sIHt9KTsgLy8gYXJyb3cgaXMgb3B0aW9uYWwgKyB2aXJ0dWFsIGVsZW1lbnRzXG5cbiAgICAgIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAhZ2V0Tm9kZU5hbWUoZWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHN0eWxlKTtcbiAgICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZSkge1xuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdhcHBseVN0eWxlcycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnd3JpdGUnLFxuICBmbjogYXBwbHlTdHlsZXMsXG4gIGVmZmVjdDogZWZmZWN0LFxuICByZXF1aXJlczogWydjb21wdXRlU3R5bGVzJ11cbn07IiwiaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IHRvcCwgbGVmdCwgcmlnaHQsIHBsYWNlbWVudHMgfSBmcm9tIFwiLi4vZW51bXMuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgZnVuY3Rpb24gZGlzdGFuY2VBbmRTa2lkZGluZ1RvWFkocGxhY2VtZW50LCByZWN0cywgb2Zmc2V0KSB7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuICB2YXIgaW52ZXJ0RGlzdGFuY2UgPSBbbGVmdCwgdG9wXS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDAgPyAtMSA6IDE7XG5cbiAgdmFyIF9yZWYgPSB0eXBlb2Ygb2Zmc2V0ID09PSAnZnVuY3Rpb24nID8gb2Zmc2V0KE9iamVjdC5hc3NpZ24oe30sIHJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBwbGFjZW1lbnRcbiAgfSkpIDogb2Zmc2V0LFxuICAgICAgc2tpZGRpbmcgPSBfcmVmWzBdLFxuICAgICAgZGlzdGFuY2UgPSBfcmVmWzFdO1xuXG4gIHNraWRkaW5nID0gc2tpZGRpbmcgfHwgMDtcbiAgZGlzdGFuY2UgPSAoZGlzdGFuY2UgfHwgMCkgKiBpbnZlcnREaXN0YW5jZTtcbiAgcmV0dXJuIFtsZWZ0LCByaWdodF0uaW5kZXhPZihiYXNlUGxhY2VtZW50KSA+PSAwID8ge1xuICAgIHg6IGRpc3RhbmNlLFxuICAgIHk6IHNraWRkaW5nXG4gIH0gOiB7XG4gICAgeDogc2tpZGRpbmcsXG4gICAgeTogZGlzdGFuY2VcbiAgfTtcbn1cblxuZnVuY3Rpb24gb2Zmc2V0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnMsXG4gICAgICBuYW1lID0gX3JlZjIubmFtZTtcbiAgdmFyIF9vcHRpb25zJG9mZnNldCA9IG9wdGlvbnMub2Zmc2V0LFxuICAgICAgb2Zmc2V0ID0gX29wdGlvbnMkb2Zmc2V0ID09PSB2b2lkIDAgPyBbMCwgMF0gOiBfb3B0aW9ucyRvZmZzZXQ7XG4gIHZhciBkYXRhID0gcGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgYWNjW3BsYWNlbWVudF0gPSBkaXN0YW5jZUFuZFNraWRkaW5nVG9YWShwbGFjZW1lbnQsIHN0YXRlLnJlY3RzLCBvZmZzZXQpO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgdmFyIF9kYXRhJHN0YXRlJHBsYWNlbWVudCA9IGRhdGFbc3RhdGUucGxhY2VtZW50XSxcbiAgICAgIHggPSBfZGF0YSRzdGF0ZSRwbGFjZW1lbnQueCxcbiAgICAgIHkgPSBfZGF0YSRzdGF0ZSRwbGFjZW1lbnQueTtcblxuICBpZiAoc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzICE9IG51bGwpIHtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMueCArPSB4O1xuICAgIHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy55ICs9IHk7XG4gIH1cblxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gZGF0YTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ29mZnNldCcsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIHJlcXVpcmVzOiBbJ3BvcHBlck9mZnNldHMnXSxcbiAgZm46IG9mZnNldFxufTsiLCJ2YXIgaGFzaCA9IHtcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgcmlnaHQ6ICdsZWZ0JyxcbiAgYm90dG9tOiAndG9wJyxcbiAgdG9wOiAnYm90dG9tJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL2xlZnR8cmlnaHR8Ym90dG9tfHRvcC9nLCBmdW5jdGlvbiAobWF0Y2hlZCkge1xuICAgIHJldHVybiBoYXNoW21hdGNoZWRdO1xuICB9KTtcbn0iLCJ2YXIgaGFzaCA9IHtcbiAgc3RhcnQ6ICdlbmQnLFxuICBlbmQ6ICdzdGFydCdcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9zdGFydHxlbmQvZywgZnVuY3Rpb24gKG1hdGNoZWQpIHtcbiAgICByZXR1cm4gaGFzaFttYXRjaGVkXTtcbiAgfSk7XG59IiwiaW1wb3J0IHsgaXNTaGFkb3dSb290IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udGFpbnMocGFyZW50LCBjaGlsZCkge1xuICB2YXIgcm9vdE5vZGUgPSBjaGlsZC5nZXRSb290Tm9kZSAmJiBjaGlsZC5nZXRSb290Tm9kZSgpOyAvLyBGaXJzdCwgYXR0ZW1wdCB3aXRoIGZhc3RlciBuYXRpdmUgbWV0aG9kXG5cbiAgaWYgKHBhcmVudC5jb250YWlucyhjaGlsZCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSAvLyB0aGVuIGZhbGxiYWNrIHRvIGN1c3RvbSBpbXBsZW1lbnRhdGlvbiB3aXRoIFNoYWRvdyBET00gc3VwcG9ydFxuICBlbHNlIGlmIChyb290Tm9kZSAmJiBpc1NoYWRvd1Jvb3Qocm9vdE5vZGUpKSB7XG4gICAgICB2YXIgbmV4dCA9IGNoaWxkO1xuXG4gICAgICBkbyB7XG4gICAgICAgIGlmIChuZXh0ICYmIHBhcmVudC5pc1NhbWVOb2RlKG5leHQpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddOiBuZWVkIGEgYmV0dGVyIHdheSB0byBoYW5kbGUgdGhpcy4uLlxuXG5cbiAgICAgICAgbmV4dCA9IG5leHQucGFyZW50Tm9kZSB8fCBuZXh0Lmhvc3Q7XG4gICAgICB9IHdoaWxlIChuZXh0KTtcbiAgICB9IC8vIEdpdmUgdXAsIHRoZSByZXN1bHQgaXMgZmFsc2VcblxuXG4gIHJldHVybiBmYWxzZTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHJlY3QsIHtcbiAgICBsZWZ0OiByZWN0LngsXG4gICAgdG9wOiByZWN0LnksXG4gICAgcmlnaHQ6IHJlY3QueCArIHJlY3Qud2lkdGgsXG4gICAgYm90dG9tOiByZWN0LnkgKyByZWN0LmhlaWdodFxuICB9KTtcbn0iLCJpbXBvcnQgeyB2aWV3cG9ydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldFZpZXdwb3J0UmVjdCBmcm9tIFwiLi9nZXRWaWV3cG9ydFJlY3QuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudFJlY3QgZnJvbSBcIi4vZ2V0RG9jdW1lbnRSZWN0LmpzXCI7XG5pbXBvcnQgbGlzdFNjcm9sbFBhcmVudHMgZnJvbSBcIi4vbGlzdFNjcm9sbFBhcmVudHMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4vZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50LCBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi9jb250YWlucy5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgcmVjdFRvQ2xpZW50UmVjdCBmcm9tIFwiLi4vdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IHsgbWF4LCBtaW4gfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICB2YXIgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBmYWxzZSwgc3RyYXRlZ3kgPT09ICdmaXhlZCcpO1xuICByZWN0LnRvcCA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRUb3A7XG4gIHJlY3QubGVmdCA9IHJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgcmVjdC5ib3R0b20gPSByZWN0LnRvcCArIGVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICByZWN0LnJpZ2h0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRXaWR0aDtcbiAgcmVjdC53aWR0aCA9IGVsZW1lbnQuY2xpZW50V2lkdGg7XG4gIHJlY3QuaGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIHJlY3QueCA9IHJlY3QubGVmdDtcbiAgcmVjdC55ID0gcmVjdC50b3A7XG4gIHJldHVybiByZWN0O1xufVxuXG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpIHtcbiAgcmV0dXJuIGNsaXBwaW5nUGFyZW50ID09PSB2aWV3cG9ydCA/IHJlY3RUb0NsaWVudFJlY3QoZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSkgOiBpc0VsZW1lbnQoY2xpcHBpbmdQYXJlbnQpID8gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoY2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KSA6IHJlY3RUb0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkpO1xufSAvLyBBIFwiY2xpcHBpbmcgcGFyZW50XCIgaXMgYW4gb3ZlcmZsb3dhYmxlIGNvbnRhaW5lciB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpYyBvZlxuLy8gY2xpcHBpbmcgKG9yIGhpZGluZykgb3ZlcmZsb3dpbmcgZWxlbWVudHMgd2l0aCBhIHBvc2l0aW9uIGRpZmZlcmVudCBmcm9tXG4vLyBgaW5pdGlhbGBcblxuXG5mdW5jdGlvbiBnZXRDbGlwcGluZ1BhcmVudHMoZWxlbWVudCkge1xuICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gbGlzdFNjcm9sbFBhcmVudHMoZ2V0UGFyZW50Tm9kZShlbGVtZW50KSk7XG4gIHZhciBjYW5Fc2NhcGVDbGlwcGluZyA9IFsnYWJzb2x1dGUnLCAnZml4ZWQnXS5pbmRleE9mKGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24pID49IDA7XG4gIHZhciBjbGlwcGVyRWxlbWVudCA9IGNhbkVzY2FwZUNsaXBwaW5nICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkgOiBlbGVtZW50O1xuXG4gIGlmICghaXNFbGVtZW50KGNsaXBwZXJFbGVtZW50KSkge1xuICAgIHJldHVybiBbXTtcbiAgfSAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmxvdy9pc3N1ZXMvMTQxNFxuXG5cbiAgcmV0dXJuIGNsaXBwaW5nUGFyZW50cy5maWx0ZXIoZnVuY3Rpb24gKGNsaXBwaW5nUGFyZW50KSB7XG4gICAgcmV0dXJuIGlzRWxlbWVudChjbGlwcGluZ1BhcmVudCkgJiYgY29udGFpbnMoY2xpcHBpbmdQYXJlbnQsIGNsaXBwZXJFbGVtZW50KSAmJiBnZXROb2RlTmFtZShjbGlwcGluZ1BhcmVudCkgIT09ICdib2R5JztcbiAgfSk7XG59IC8vIEdldHMgdGhlIG1heGltdW0gYXJlYSB0aGF0IHRoZSBlbGVtZW50IGlzIHZpc2libGUgaW4gZHVlIHRvIGFueSBudW1iZXIgb2Zcbi8vIGNsaXBwaW5nIHBhcmVudHNcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDbGlwcGluZ1JlY3QoZWxlbWVudCwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSwgc3RyYXRlZ3kpIHtcbiAgdmFyIG1haW5DbGlwcGluZ1BhcmVudHMgPSBib3VuZGFyeSA9PT0gJ2NsaXBwaW5nUGFyZW50cycgPyBnZXRDbGlwcGluZ1BhcmVudHMoZWxlbWVudCkgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gW10uY29uY2F0KG1haW5DbGlwcGluZ1BhcmVudHMsIFtyb290Qm91bmRhcnldKTtcbiAgdmFyIGZpcnN0Q2xpcHBpbmdQYXJlbnQgPSBjbGlwcGluZ1BhcmVudHNbMF07XG4gIHZhciBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ1BhcmVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2NSZWN0LCBjbGlwcGluZ1BhcmVudCkge1xuICAgIHZhciByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgY2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBmaXJzdENsaXBwaW5nUGFyZW50LCBzdHJhdGVneSkpO1xuICBjbGlwcGluZ1JlY3Qud2lkdGggPSBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdDtcbiAgY2xpcHBpbmdSZWN0LmhlaWdodCA9IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wO1xuICBjbGlwcGluZ1JlY3QueCA9IGNsaXBwaW5nUmVjdC5sZWZ0O1xuICBjbGlwcGluZ1JlY3QueSA9IGNsaXBwaW5nUmVjdC50b3A7XG4gIHJldHVybiBjbGlwcGluZ1JlY3Q7XG59IiwiaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsQmFyWCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzXCI7XG5pbXBvcnQgaXNMYXlvdXRWaWV3cG9ydCBmcm9tIFwiLi9pc0xheW91dFZpZXdwb3J0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRWaWV3cG9ydFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpIHtcbiAgdmFyIHdpbiA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgdmFyIGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIHZhciB2aXN1YWxWaWV3cG9ydCA9IHdpbi52aXN1YWxWaWV3cG9ydDtcbiAgdmFyIHdpZHRoID0gaHRtbC5jbGllbnRXaWR0aDtcbiAgdmFyIGhlaWdodCA9IGh0bWwuY2xpZW50SGVpZ2h0O1xuICB2YXIgeCA9IDA7XG4gIHZhciB5ID0gMDtcblxuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICB2YXIgbGF5b3V0Vmlld3BvcnQgPSBpc0xheW91dFZpZXdwb3J0KCk7XG5cbiAgICBpZiAobGF5b3V0Vmlld3BvcnQgfHwgIWxheW91dFZpZXdwb3J0ICYmIHN0cmF0ZWd5ID09PSAnZml4ZWQnKSB7XG4gICAgICB4ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdDtcbiAgICAgIHkgPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3A7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeDogeCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCksXG4gICAgeTogeVxuICB9O1xufSIsImltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsQmFyWCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuaW1wb3J0IHsgbWF4IH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjsgLy8gR2V0cyB0aGUgZW50aXJlIHNpemUgb2YgdGhlIHNjcm9sbGFibGUgZG9jdW1lbnQgYXJlYSwgZXZlbiBleHRlbmRpbmcgb3V0c2lkZVxuLy8gb2YgdGhlIGA8aHRtbD5gIGFuZCBgPGJvZHk+YCByZWN0IGJvdW5kcyBpZiBob3Jpem9udGFsbHkgc2Nyb2xsYWJsZVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuXG4gIHZhciBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICB2YXIgd2luU2Nyb2xsID0gZ2V0V2luZG93U2Nyb2xsKGVsZW1lbnQpO1xuICB2YXIgYm9keSA9IChfZWxlbWVudCRvd25lckRvY3VtZW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4uYm9keTtcbiAgdmFyIHdpZHRoID0gbWF4KGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LnNjcm9sbFdpZHRoIDogMCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKTtcbiAgdmFyIGhlaWdodCA9IG1heChodG1sLnNjcm9sbEhlaWdodCwgaHRtbC5jbGllbnRIZWlnaHQsIGJvZHkgPyBib2R5LnNjcm9sbEhlaWdodCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudEhlaWdodCA6IDApO1xuICB2YXIgeCA9IC13aW5TY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIHZhciB5ID0gLXdpblNjcm9sbC5zY3JvbGxUb3A7XG5cbiAgaWYgKGdldENvbXB1dGVkU3R5bGUoYm9keSB8fCBodG1sKS5kaXJlY3Rpb24gPT09ICdydGwnKSB7XG4gICAgeCArPSBtYXgoaHRtbC5jbGllbnRXaWR0aCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKSAtIHdpZHRoO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG59IiwiaW1wb3J0IGdldEZyZXNoU2lkZU9iamVjdCBmcm9tIFwiLi9nZXRGcmVzaFNpZGVPYmplY3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcmdlUGFkZGluZ09iamVjdChwYWRkaW5nT2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBnZXRGcmVzaFNpZGVPYmplY3QoKSwgcGFkZGluZ09iamVjdCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RnJlc2hTaWRlT2JqZWN0KCkge1xuICByZXR1cm4ge1xuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgbGVmdDogMFxuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4cGFuZFRvSGFzaE1hcCh2YWx1ZSwga2V5cykge1xuICByZXR1cm4ga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKGhhc2hNYXAsIGtleSkge1xuICAgIGhhc2hNYXBba2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiBoYXNoTWFwO1xuICB9LCB7fSk7XG59IiwiaW1wb3J0IGdldENsaXBwaW5nUmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuL2NvbXB1dGVPZmZzZXRzLmpzXCI7XG5pbXBvcnQgcmVjdFRvQ2xpZW50UmVjdCBmcm9tIFwiLi9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBjbGlwcGluZ1BhcmVudHMsIHJlZmVyZW5jZSwgcG9wcGVyLCBib3R0b20sIHRvcCwgcmlnaHQsIGJhc2VQbGFjZW1lbnRzLCB2aWV3cG9ydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgbWVyZ2VQYWRkaW5nT2JqZWN0IGZyb20gXCIuL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi9leHBhbmRUb0hhc2hNYXAuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zJHBsYWNlbWVudCA9IF9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zJHBsYWNlbWVudCA9PT0gdm9pZCAwID8gc3RhdGUucGxhY2VtZW50IDogX29wdGlvbnMkcGxhY2VtZW50LFxuICAgICAgX29wdGlvbnMkc3RyYXRlZ3kgPSBfb3B0aW9ucy5zdHJhdGVneSxcbiAgICAgIHN0cmF0ZWd5ID0gX29wdGlvbnMkc3RyYXRlZ3kgPT09IHZvaWQgMCA/IHN0YXRlLnN0cmF0ZWd5IDogX29wdGlvbnMkc3RyYXRlZ3ksXG4gICAgICBfb3B0aW9ucyRib3VuZGFyeSA9IF9vcHRpb25zLmJvdW5kYXJ5LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucyRib3VuZGFyeSA9PT0gdm9pZCAwID8gY2xpcHBpbmdQYXJlbnRzIDogX29wdGlvbnMkYm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRyb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucyRyb290Qm91bmRhcnkgPT09IHZvaWQgMCA/IHZpZXdwb3J0IDogX29wdGlvbnMkcm9vdEJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkZWxlbWVudENvbnRlID0gX29wdGlvbnMuZWxlbWVudENvbnRleHQsXG4gICAgICBlbGVtZW50Q29udGV4dCA9IF9vcHRpb25zJGVsZW1lbnRDb250ZSA9PT0gdm9pZCAwID8gcG9wcGVyIDogX29wdGlvbnMkZWxlbWVudENvbnRlLFxuICAgICAgX29wdGlvbnMkYWx0Qm91bmRhcnkgPSBfb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gX29wdGlvbnMkYWx0Qm91bmRhcnkgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkYWx0Qm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRwYWRkaW5nID0gX29wdGlvbnMucGFkZGluZyxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucyRwYWRkaW5nID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkcGFkZGluZztcbiAgdmFyIHBhZGRpbmdPYmplY3QgPSBtZXJnZVBhZGRpbmdPYmplY3QodHlwZW9mIHBhZGRpbmcgIT09ICdudW1iZXInID8gcGFkZGluZyA6IGV4cGFuZFRvSGFzaE1hcChwYWRkaW5nLCBiYXNlUGxhY2VtZW50cykpO1xuICB2YXIgYWx0Q29udGV4dCA9IGVsZW1lbnRDb250ZXh0ID09PSBwb3BwZXIgPyByZWZlcmVuY2UgOiBwb3BwZXI7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW2FsdEJvdW5kYXJ5ID8gYWx0Q29udGV4dCA6IGVsZW1lbnRDb250ZXh0XTtcbiAgdmFyIGNsaXBwaW5nQ2xpZW50UmVjdCA9IGdldENsaXBwaW5nUmVjdChpc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50IDogZWxlbWVudC5jb250ZXh0RWxlbWVudCB8fCBnZXREb2N1bWVudEVsZW1lbnQoc3RhdGUuZWxlbWVudHMucG9wcGVyKSwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSwgc3RyYXRlZ3kpO1xuICB2YXIgcmVmZXJlbmNlQ2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChzdGF0ZS5lbGVtZW50cy5yZWZlcmVuY2UpO1xuICB2YXIgcG9wcGVyT2Zmc2V0cyA9IGNvbXB1dGVPZmZzZXRzKHtcbiAgICByZWZlcmVuY2U6IHJlZmVyZW5jZUNsaWVudFJlY3QsXG4gICAgZWxlbWVudDogcG9wcGVyUmVjdCxcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICB9KTtcbiAgdmFyIHBvcHBlckNsaWVudFJlY3QgPSByZWN0VG9DbGllbnRSZWN0KE9iamVjdC5hc3NpZ24oe30sIHBvcHBlclJlY3QsIHBvcHBlck9mZnNldHMpKTtcbiAgdmFyIGVsZW1lbnRDbGllbnRSZWN0ID0gZWxlbWVudENvbnRleHQgPT09IHBvcHBlciA/IHBvcHBlckNsaWVudFJlY3QgOiByZWZlcmVuY2VDbGllbnRSZWN0OyAvLyBwb3NpdGl2ZSA9IG92ZXJmbG93aW5nIHRoZSBjbGlwcGluZyByZWN0XG4gIC8vIDAgb3IgbmVnYXRpdmUgPSB3aXRoaW4gdGhlIGNsaXBwaW5nIHJlY3RcblxuICB2YXIgb3ZlcmZsb3dPZmZzZXRzID0ge1xuICAgIHRvcDogY2xpcHBpbmdDbGllbnRSZWN0LnRvcCAtIGVsZW1lbnRDbGllbnRSZWN0LnRvcCArIHBhZGRpbmdPYmplY3QudG9wLFxuICAgIGJvdHRvbTogZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tLFxuICAgIGxlZnQ6IGNsaXBwaW5nQ2xpZW50UmVjdC5sZWZ0IC0gZWxlbWVudENsaWVudFJlY3QubGVmdCArIHBhZGRpbmdPYmplY3QubGVmdCxcbiAgICByaWdodDogZWxlbWVudENsaWVudFJlY3QucmlnaHQgLSBjbGlwcGluZ0NsaWVudFJlY3QucmlnaHQgKyBwYWRkaW5nT2JqZWN0LnJpZ2h0XG4gIH07XG4gIHZhciBvZmZzZXREYXRhID0gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXQ7IC8vIE9mZnNldHMgY2FuIGJlIGFwcGxpZWQgb25seSB0byB0aGUgcG9wcGVyIGVsZW1lbnRcblxuICBpZiAoZWxlbWVudENvbnRleHQgPT09IHBvcHBlciAmJiBvZmZzZXREYXRhKSB7XG4gICAgdmFyIG9mZnNldCA9IG9mZnNldERhdGFbcGxhY2VtZW50XTtcbiAgICBPYmplY3Qua2V5cyhvdmVyZmxvd09mZnNldHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIG11bHRpcGx5ID0gW3JpZ2h0LCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gMSA6IC0xO1xuICAgICAgdmFyIGF4aXMgPSBbdG9wLCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gJ3knIDogJ3gnO1xuICAgICAgb3ZlcmZsb3dPZmZzZXRzW2tleV0gKz0gb2Zmc2V0W2F4aXNdICogbXVsdGlwbHk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gb3ZlcmZsb3dPZmZzZXRzO1xufSIsImltcG9ydCBnZXRPcHBvc2l0ZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4uL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgY29tcHV0ZUF1dG9QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyBib3R0b20sIHRvcCwgc3RhcnQsIHJpZ2h0LCBsZWZ0LCBhdXRvIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuLi91dGlscy9nZXRWYXJpYXRpb24uanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5mdW5jdGlvbiBnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyhwbGFjZW1lbnQpIHtcbiAgaWYgKGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0bykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHZhciBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5cbmZ1bmN0aW9uIGZsaXAoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0uX3NraXApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgX29wdGlvbnMkbWFpbkF4aXMgPSBvcHRpb25zLm1haW5BeGlzLFxuICAgICAgY2hlY2tNYWluQXhpcyA9IF9vcHRpb25zJG1haW5BeGlzID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkbWFpbkF4aXMsXG4gICAgICBfb3B0aW9ucyRhbHRBeGlzID0gb3B0aW9ucy5hbHRBeGlzLFxuICAgICAgY2hlY2tBbHRBeGlzID0gX29wdGlvbnMkYWx0QXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMgPSBvcHRpb25zLmZhbGxiYWNrUGxhY2VtZW50cyxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9IG9wdGlvbnMuZmxpcFZhcmlhdGlvbnMsXG4gICAgICBmbGlwVmFyaWF0aW9ucyA9IF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGZsaXBWYXJpYXRpbyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IG9wdGlvbnMuYWxsb3dlZEF1dG9QbGFjZW1lbnRzO1xuICB2YXIgcHJlZmVycmVkUGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwcmVmZXJyZWRQbGFjZW1lbnQpO1xuICB2YXIgaXNCYXNlUGxhY2VtZW50ID0gYmFzZVBsYWNlbWVudCA9PT0gcHJlZmVycmVkUGxhY2VtZW50O1xuICB2YXIgZmFsbGJhY2tQbGFjZW1lbnRzID0gc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzIHx8IChpc0Jhc2VQbGFjZW1lbnQgfHwgIWZsaXBWYXJpYXRpb25zID8gW2dldE9wcG9zaXRlUGxhY2VtZW50KHByZWZlcnJlZFBsYWNlbWVudCldIDogZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMocHJlZmVycmVkUGxhY2VtZW50KSk7XG4gIHZhciBwbGFjZW1lbnRzID0gW3ByZWZlcnJlZFBsYWNlbWVudF0uY29uY2F0KGZhbGxiYWNrUGxhY2VtZW50cykucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhY2MuY29uY2F0KGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0byA/IGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCB7XG4gICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LFxuICAgICAgcGFkZGluZzogcGFkZGluZyxcbiAgICAgIGZsaXBWYXJpYXRpb25zOiBmbGlwVmFyaWF0aW9ucyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50czogYWxsb3dlZEF1dG9QbGFjZW1lbnRzXG4gICAgfSkgOiBwbGFjZW1lbnQpO1xuICB9LCBbXSk7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIGNoZWNrc01hcCA9IG5ldyBNYXAoKTtcbiAgdmFyIG1ha2VGYWxsYmFja0NoZWNrcyA9IHRydWU7XG4gIHZhciBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRzWzBdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGxhY2VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwbGFjZW1lbnQgPSBwbGFjZW1lbnRzW2ldO1xuXG4gICAgdmFyIF9iYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuXG4gICAgdmFyIGlzU3RhcnRWYXJpYXRpb24gPSBnZXRWYXJpYXRpb24ocGxhY2VtZW50KSA9PT0gc3RhcnQ7XG4gICAgdmFyIGlzVmVydGljYWwgPSBbdG9wLCBib3R0b21dLmluZGV4T2YoX2Jhc2VQbGFjZW1lbnQpID49IDA7XG4gICAgdmFyIGxlbiA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG4gICAgdmFyIG92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBhbHRCb3VuZGFyeTogYWx0Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nXG4gICAgfSk7XG4gICAgdmFyIG1haW5WYXJpYXRpb25TaWRlID0gaXNWZXJ0aWNhbCA/IGlzU3RhcnRWYXJpYXRpb24gPyByaWdodCA6IGxlZnQgOiBpc1N0YXJ0VmFyaWF0aW9uID8gYm90dG9tIDogdG9wO1xuXG4gICAgaWYgKHJlZmVyZW5jZVJlY3RbbGVuXSA+IHBvcHBlclJlY3RbbGVuXSkge1xuICAgICAgbWFpblZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgfVxuXG4gICAgdmFyIGFsdFZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgdmFyIGNoZWNrcyA9IFtdO1xuXG4gICAgaWYgKGNoZWNrTWFpbkF4aXMpIHtcbiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W19iYXNlUGxhY2VtZW50XSA8PSAwKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tBbHRBeGlzKSB7XG4gICAgICBjaGVja3MucHVzaChvdmVyZmxvd1ttYWluVmFyaWF0aW9uU2lkZV0gPD0gMCwgb3ZlcmZsb3dbYWx0VmFyaWF0aW9uU2lkZV0gPD0gMCk7XG4gICAgfVxuXG4gICAgaWYgKGNoZWNrcy5ldmVyeShmdW5jdGlvbiAoY2hlY2spIHtcbiAgICAgIHJldHVybiBjaGVjaztcbiAgICB9KSkge1xuICAgICAgZmlyc3RGaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50O1xuICAgICAgbWFrZUZhbGxiYWNrQ2hlY2tzID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjaGVja3NNYXAuc2V0KHBsYWNlbWVudCwgY2hlY2tzKTtcbiAgfVxuXG4gIGlmIChtYWtlRmFsbGJhY2tDaGVja3MpIHtcbiAgICAvLyBgMmAgbWF5IGJlIGRlc2lyZWQgaW4gc29tZSBjYXNlcyDigJMgcmVzZWFyY2ggbGF0ZXJcbiAgICB2YXIgbnVtYmVyT2ZDaGVja3MgPSBmbGlwVmFyaWF0aW9ucyA/IDMgOiAxO1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoX2kpIHtcbiAgICAgIHZhciBmaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50cy5maW5kKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICAgICAgdmFyIGNoZWNrcyA9IGNoZWNrc01hcC5nZXQocGxhY2VtZW50KTtcblxuICAgICAgICBpZiAoY2hlY2tzKSB7XG4gICAgICAgICAgcmV0dXJuIGNoZWNrcy5zbGljZSgwLCBfaSkuZXZlcnkoZnVuY3Rpb24gKGNoZWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hlY2s7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoZml0dGluZ1BsYWNlbWVudCkge1xuICAgICAgICBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBmaXR0aW5nUGxhY2VtZW50O1xuICAgICAgICByZXR1cm4gXCJicmVha1wiO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmb3IgKHZhciBfaSA9IG51bWJlck9mQ2hlY2tzOyBfaSA+IDA7IF9pLS0pIHtcbiAgICAgIHZhciBfcmV0ID0gX2xvb3AoX2kpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJicmVha1wiKSBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoc3RhdGUucGxhY2VtZW50ICE9PSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQpIHtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwID0gdHJ1ZTtcbiAgICBzdGF0ZS5wbGFjZW1lbnQgPSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQ7XG4gICAgc3RhdGUucmVzZXQgPSB0cnVlO1xuICB9XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdmbGlwJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgZm46IGZsaXAsXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsnb2Zmc2V0J10sXG4gIGRhdGE6IHtcbiAgICBfc2tpcDogZmFsc2VcbiAgfVxufTsiLCJpbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IHsgdmFyaWF0aW9uUGxhY2VtZW50cywgYmFzZVBsYWNlbWVudHMsIHBsYWNlbWVudHMgYXMgYWxsUGxhY2VtZW50cyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlQXV0b1BsYWNlbWVudChzdGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5ID0gX29wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICBwYWRkaW5nID0gX29wdGlvbnMucGFkZGluZyxcbiAgICAgIGZsaXBWYXJpYXRpb25zID0gX29wdGlvbnMuZmxpcFZhcmlhdGlvbnMsXG4gICAgICBfb3B0aW9ucyRhbGxvd2VkQXV0b1AgPSBfb3B0aW9ucy5hbGxvd2VkQXV0b1BsYWNlbWVudHMsXG4gICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHMgPSBfb3B0aW9ucyRhbGxvd2VkQXV0b1AgPT09IHZvaWQgMCA/IGFsbFBsYWNlbWVudHMgOiBfb3B0aW9ucyRhbGxvd2VkQXV0b1A7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24ocGxhY2VtZW50KTtcbiAgdmFyIHBsYWNlbWVudHMgPSB2YXJpYXRpb24gPyBmbGlwVmFyaWF0aW9ucyA/IHZhcmlhdGlvblBsYWNlbWVudHMgOiB2YXJpYXRpb25QbGFjZW1lbnRzLmZpbHRlcihmdW5jdGlvbiAocGxhY2VtZW50KSB7XG4gICAgcmV0dXJuIGdldFZhcmlhdGlvbihwbGFjZW1lbnQpID09PSB2YXJpYXRpb247XG4gIH0pIDogYmFzZVBsYWNlbWVudHM7XG4gIHZhciBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gYWxsb3dlZEF1dG9QbGFjZW1lbnRzLmluZGV4T2YocGxhY2VtZW50KSA+PSAwO1xuICB9KTtcblxuICBpZiAoYWxsb3dlZFBsYWNlbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgYWxsb3dlZFBsYWNlbWVudHMgPSBwbGFjZW1lbnRzO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgY29uc29sZS5lcnJvcihbJ1BvcHBlcjogVGhlIGBhbGxvd2VkQXV0b1BsYWNlbWVudHNgIG9wdGlvbiBkaWQgbm90IGFsbG93IGFueScsICdwbGFjZW1lbnRzLiBFbnN1cmUgdGhlIGBwbGFjZW1lbnRgIG9wdGlvbiBtYXRjaGVzIHRoZSB2YXJpYXRpb24nLCAnb2YgdGhlIGFsbG93ZWQgcGxhY2VtZW50cy4nLCAnRm9yIGV4YW1wbGUsIFwiYXV0b1wiIGNhbm5vdCBiZSB1c2VkIHRvIGFsbG93IFwiYm90dG9tLXN0YXJ0XCIuJywgJ1VzZSBcImF1dG8tc3RhcnRcIiBpbnN0ZWFkLiddLmpvaW4oJyAnKSk7XG4gICAgfVxuICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXR5cGVdOiBGbG93IHNlZW1zIHRvIGhhdmUgcHJvYmxlbXMgd2l0aCB0d28gYXJyYXkgdW5pb25zLi4uXG5cblxuICB2YXIgb3ZlcmZsb3dzID0gYWxsb3dlZFBsYWNlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIGFjY1twbGFjZW1lbnRdID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nXG4gICAgfSlbZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpXTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvdmVyZmxvd3MpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gb3ZlcmZsb3dzW2FdIC0gb3ZlcmZsb3dzW2JdO1xuICB9KTtcbn0iLCJpbXBvcnQgeyBtYXggYXMgbWF0aE1heCwgbWluIGFzIG1hdGhNaW4gfSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gd2l0aGluKG1pbiwgdmFsdWUsIG1heCkge1xuICByZXR1cm4gbWF0aE1heChtaW4sIG1hdGhNaW4odmFsdWUsIG1heCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhpbk1heENsYW1wKG1pbiwgdmFsdWUsIG1heCkge1xuICB2YXIgdiA9IHdpdGhpbihtaW4sIHZhbHVlLCBtYXgpO1xuICByZXR1cm4gdiA+IG1heCA/IG1heCA6IHY7XG59IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBzdGFydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldEFsdEF4aXMgZnJvbSBcIi4uL3V0aWxzL2dldEFsdEF4aXMuanNcIjtcbmltcG9ydCB7IHdpdGhpbiwgd2l0aGluTWF4Q2xhbXAgfSBmcm9tIFwiLi4vdXRpbHMvd2l0aGluLmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IGdldEZyZXNoU2lkZU9iamVjdCBmcm9tIFwiLi4vdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzXCI7XG5pbXBvcnQgeyBtaW4gYXMgbWF0aE1pbiwgbWF4IGFzIG1hdGhNYXggfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBwcmV2ZW50T3ZlcmZsb3coX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciBfb3B0aW9ucyRtYWluQXhpcyA9IG9wdGlvbnMubWFpbkF4aXMsXG4gICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcyxcbiAgICAgIF9vcHRpb25zJGFsdEF4aXMgPSBvcHRpb25zLmFsdEF4aXMsXG4gICAgICBjaGVja0FsdEF4aXMgPSBfb3B0aW9ucyRhbHRBeGlzID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBfb3B0aW9ucyR0ZXRoZXIgPSBvcHRpb25zLnRldGhlcixcbiAgICAgIHRldGhlciA9IF9vcHRpb25zJHRldGhlciA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHRldGhlcixcbiAgICAgIF9vcHRpb25zJHRldGhlck9mZnNldCA9IG9wdGlvbnMudGV0aGVyT2Zmc2V0LFxuICAgICAgdGV0aGVyT2Zmc2V0ID0gX29wdGlvbnMkdGV0aGVyT2Zmc2V0ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkdGV0aGVyT2Zmc2V0O1xuICB2YXIgb3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeVxuICB9KTtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCk7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9ICF2YXJpYXRpb247XG4gIHZhciBtYWluQXhpcyA9IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KTtcbiAgdmFyIGFsdEF4aXMgPSBnZXRBbHRBeGlzKG1haW5BeGlzKTtcbiAgdmFyIHBvcHBlck9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHM7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldCA9PT0gJ2Z1bmN0aW9uJyA/IHRldGhlck9mZnNldChPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5yZWN0cywge1xuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pKSA6IHRldGhlck9mZnNldDtcbiAgdmFyIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZSA9IHR5cGVvZiB0ZXRoZXJPZmZzZXRWYWx1ZSA9PT0gJ251bWJlcicgPyB7XG4gICAgbWFpbkF4aXM6IHRldGhlck9mZnNldFZhbHVlLFxuICAgIGFsdEF4aXM6IHRldGhlck9mZnNldFZhbHVlXG4gIH0gOiBPYmplY3QuYXNzaWduKHtcbiAgICBtYWluQXhpczogMCxcbiAgICBhbHRBeGlzOiAwXG4gIH0sIHRldGhlck9mZnNldFZhbHVlKTtcbiAgdmFyIG9mZnNldE1vZGlmaWVyU3RhdGUgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldCA/IHN0YXRlLm1vZGlmaWVyc0RhdGEub2Zmc2V0W3N0YXRlLnBsYWNlbWVudF0gOiBudWxsO1xuICB2YXIgZGF0YSA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcblxuICBpZiAoIXBvcHBlck9mZnNldHMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQ7XG5cbiAgICB2YXIgbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgICB2YXIgYWx0U2lkZSA9IG1haW5BeGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcbiAgICB2YXIgb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1ttYWluQXhpc107XG4gICAgdmFyIG1pbiA9IG9mZnNldCArIG92ZXJmbG93W21haW5TaWRlXTtcbiAgICB2YXIgbWF4ID0gb2Zmc2V0IC0gb3ZlcmZsb3dbYWx0U2lkZV07XG4gICAgdmFyIGFkZGl0aXZlID0gdGV0aGVyID8gLXBvcHBlclJlY3RbbGVuXSAvIDIgOiAwO1xuICAgIHZhciBtaW5MZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gcmVmZXJlbmNlUmVjdFtsZW5dIDogcG9wcGVyUmVjdFtsZW5dO1xuICAgIHZhciBtYXhMZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gLXBvcHBlclJlY3RbbGVuXSA6IC1yZWZlcmVuY2VSZWN0W2xlbl07IC8vIFdlIG5lZWQgdG8gaW5jbHVkZSB0aGUgYXJyb3cgaW4gdGhlIGNhbGN1bGF0aW9uIHNvIHRoZSBhcnJvdyBkb2Vzbid0IGdvXG4gICAgLy8gb3V0c2lkZSB0aGUgcmVmZXJlbmNlIGJvdW5kc1xuXG4gICAgdmFyIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLmFycm93O1xuICAgIHZhciBhcnJvd1JlY3QgPSB0ZXRoZXIgJiYgYXJyb3dFbGVtZW50ID8gZ2V0TGF5b3V0UmVjdChhcnJvd0VsZW1lbnQpIDoge1xuICAgICAgd2lkdGg6IDAsXG4gICAgICBoZWlnaHQ6IDBcbiAgICB9O1xuICAgIHZhciBhcnJvd1BhZGRpbmdPYmplY3QgPSBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10gPyBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10ucGFkZGluZyA6IGdldEZyZXNoU2lkZU9iamVjdCgpO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNaW4gPSBhcnJvd1BhZGRpbmdPYmplY3RbbWFpblNpZGVdO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNYXggPSBhcnJvd1BhZGRpbmdPYmplY3RbYWx0U2lkZV07IC8vIElmIHRoZSByZWZlcmVuY2UgbGVuZ3RoIGlzIHNtYWxsZXIgdGhhbiB0aGUgYXJyb3cgbGVuZ3RoLCB3ZSBkb24ndCB3YW50XG4gICAgLy8gdG8gaW5jbHVkZSBpdHMgZnVsbCBzaXplIGluIHRoZSBjYWxjdWxhdGlvbi4gSWYgdGhlIHJlZmVyZW5jZSBpcyBzbWFsbFxuICAgIC8vIGFuZCBuZWFyIHRoZSBlZGdlIG9mIGEgYm91bmRhcnksIHRoZSBwb3BwZXIgY2FuIG92ZXJmbG93IGV2ZW4gaWYgdGhlXG4gICAgLy8gcmVmZXJlbmNlIGlzIG5vdCBvdmVyZmxvd2luZyBhcyB3ZWxsIChlLmcuIHZpcnR1YWwgZWxlbWVudHMgd2l0aCBub1xuICAgIC8vIHdpZHRoIG9yIGhlaWdodClcblxuICAgIHZhciBhcnJvd0xlbiA9IHdpdGhpbigwLCByZWZlcmVuY2VSZWN0W2xlbl0sIGFycm93UmVjdFtsZW5dKTtcbiAgICB2YXIgbWluT2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gcmVmZXJlbmNlUmVjdFtsZW5dIC8gMiAtIGFkZGl0aXZlIC0gYXJyb3dMZW4gLSBhcnJvd1BhZGRpbmdNaW4gLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXMgOiBtaW5MZW4gLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcztcbiAgICB2YXIgbWF4T2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gLXJlZmVyZW5jZVJlY3RbbGVuXSAvIDIgKyBhZGRpdGl2ZSArIGFycm93TGVuICsgYXJyb3dQYWRkaW5nTWF4ICsgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzIDogbWF4TGVuICsgYXJyb3dMZW4gKyBhcnJvd1BhZGRpbmdNYXggKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXM7XG4gICAgdmFyIGFycm93T2Zmc2V0UGFyZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3cgJiYgZ2V0T2Zmc2V0UGFyZW50KHN0YXRlLmVsZW1lbnRzLmFycm93KTtcbiAgICB2YXIgY2xpZW50T2Zmc2V0ID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBtYWluQXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50VG9wIHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRMZWZ0IHx8IDAgOiAwO1xuICAgIHZhciBvZmZzZXRNb2RpZmllclZhbHVlID0gKF9vZmZzZXRNb2RpZmllclN0YXRlJCA9IG9mZnNldE1vZGlmaWVyU3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IG9mZnNldE1vZGlmaWVyU3RhdGVbbWFpbkF4aXNdKSAhPSBudWxsID8gX29mZnNldE1vZGlmaWVyU3RhdGUkIDogMDtcbiAgICB2YXIgdGV0aGVyTWluID0gb2Zmc2V0ICsgbWluT2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZSAtIGNsaWVudE9mZnNldDtcbiAgICB2YXIgdGV0aGVyTWF4ID0gb2Zmc2V0ICsgbWF4T2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZTtcbiAgICB2YXIgcHJldmVudGVkT2Zmc2V0ID0gd2l0aGluKHRldGhlciA/IG1hdGhNaW4obWluLCB0ZXRoZXJNaW4pIDogbWluLCBvZmZzZXQsIHRldGhlciA/IG1hdGhNYXgobWF4LCB0ZXRoZXJNYXgpIDogbWF4KTtcbiAgICBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldDtcbiAgICBkYXRhW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldCAtIG9mZnNldDtcbiAgfVxuXG4gIGlmIChjaGVja0FsdEF4aXMpIHtcbiAgICB2YXIgX29mZnNldE1vZGlmaWVyU3RhdGUkMjtcblxuICAgIHZhciBfbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3gnID8gdG9wIDogbGVmdDtcblxuICAgIHZhciBfYWx0U2lkZSA9IG1haW5BeGlzID09PSAneCcgPyBib3R0b20gOiByaWdodDtcblxuICAgIHZhciBfb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1thbHRBeGlzXTtcblxuICAgIHZhciBfbGVuID0gYWx0QXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gICAgdmFyIF9taW4gPSBfb2Zmc2V0ICsgb3ZlcmZsb3dbX21haW5TaWRlXTtcblxuICAgIHZhciBfbWF4ID0gX29mZnNldCAtIG92ZXJmbG93W19hbHRTaWRlXTtcblxuICAgIHZhciBpc09yaWdpblNpZGUgPSBbdG9wLCBsZWZ0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpICE9PSAtMTtcblxuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSA9IChfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVthbHRBeGlzXSkgIT0gbnVsbCA/IF9vZmZzZXRNb2RpZmllclN0YXRlJDIgOiAwO1xuXG4gICAgdmFyIF90ZXRoZXJNaW4gPSBpc09yaWdpblNpZGUgPyBfbWluIDogX29mZnNldCAtIHJlZmVyZW5jZVJlY3RbX2xlbl0gLSBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcztcblxuICAgIHZhciBfdGV0aGVyTWF4ID0gaXNPcmlnaW5TaWRlID8gX29mZnNldCArIHJlZmVyZW5jZVJlY3RbX2xlbl0gKyBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcyA6IF9tYXg7XG5cbiAgICB2YXIgX3ByZXZlbnRlZE9mZnNldCA9IHRldGhlciAmJiBpc09yaWdpblNpZGUgPyB3aXRoaW5NYXhDbGFtcChfdGV0aGVyTWluLCBfb2Zmc2V0LCBfdGV0aGVyTWF4KSA6IHdpdGhpbih0ZXRoZXIgPyBfdGV0aGVyTWluIDogX21pbiwgX29mZnNldCwgdGV0aGVyID8gX3RldGhlck1heCA6IF9tYXgpO1xuXG4gICAgcG9wcGVyT2Zmc2V0c1thbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQ7XG4gICAgZGF0YVthbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQgLSBfb2Zmc2V0O1xuICB9XG5cbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGRhdGE7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogcHJldmVudE92ZXJmbG93LFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ29mZnNldCddXG59OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEFsdEF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gJ3gnID8gJ3knIDogJ3gnO1xufSIsImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi4vZG9tLXV0aWxzL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IHdpdGhpbiB9IGZyb20gXCIuLi91dGlscy93aXRoaW4uanNcIjtcbmltcG9ydCBtZXJnZVBhZGRpbmdPYmplY3QgZnJvbSBcIi4uL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi4vdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzXCI7XG5pbXBvcnQgeyBsZWZ0LCByaWdodCwgYmFzZVBsYWNlbWVudHMsIHRvcCwgYm90dG9tIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHRvUGFkZGluZ09iamVjdCA9IGZ1bmN0aW9uIHRvUGFkZGluZ09iamVjdChwYWRkaW5nLCBzdGF0ZSkge1xuICBwYWRkaW5nID0gdHlwZW9mIHBhZGRpbmcgPT09ICdmdW5jdGlvbicgPyBwYWRkaW5nKE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSkpIDogcGFkZGluZztcbiAgcmV0dXJuIG1lcmdlUGFkZGluZ09iamVjdCh0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBwYWRkaW5nIDogZXhwYW5kVG9IYXNoTWFwKHBhZGRpbmcsIGJhc2VQbGFjZW1lbnRzKSk7XG59O1xuXG5mdW5jdGlvbiBhcnJvdyhfcmVmKSB7XG4gIHZhciBfc3RhdGUkbW9kaWZpZXJzRGF0YSQ7XG5cbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWUsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3c7XG4gIHZhciBwb3BwZXJPZmZzZXRzID0gc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzO1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQoc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGF4aXMgPSBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQoYmFzZVBsYWNlbWVudCk7XG4gIHZhciBpc1ZlcnRpY2FsID0gW2xlZnQsIHJpZ2h0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDA7XG4gIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gIGlmICghYXJyb3dFbGVtZW50IHx8ICFwb3BwZXJPZmZzZXRzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHBhZGRpbmdPYmplY3QgPSB0b1BhZGRpbmdPYmplY3Qob3B0aW9ucy5wYWRkaW5nLCBzdGF0ZSk7XG4gIHZhciBhcnJvd1JlY3QgPSBnZXRMYXlvdXRSZWN0KGFycm93RWxlbWVudCk7XG4gIHZhciBtaW5Qcm9wID0gYXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgdmFyIG1heFByb3AgPSBheGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgdmFyIGVuZERpZmYgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbbGVuXSArIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXSAtIHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5wb3BwZXJbbGVuXTtcbiAgdmFyIHN0YXJ0RGlmZiA9IHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbYXhpc107XG4gIHZhciBhcnJvd09mZnNldFBhcmVudCA9IGdldE9mZnNldFBhcmVudChhcnJvd0VsZW1lbnQpO1xuICB2YXIgY2xpZW50U2l6ZSA9IGFycm93T2Zmc2V0UGFyZW50ID8gYXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50SGVpZ2h0IHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRXaWR0aCB8fCAwIDogMDtcbiAgdmFyIGNlbnRlclRvUmVmZXJlbmNlID0gZW5kRGlmZiAvIDIgLSBzdGFydERpZmYgLyAyOyAvLyBNYWtlIHN1cmUgdGhlIGFycm93IGRvZXNuJ3Qgb3ZlcmZsb3cgdGhlIHBvcHBlciBpZiB0aGUgY2VudGVyIHBvaW50IGlzXG4gIC8vIG91dHNpZGUgb2YgdGhlIHBvcHBlciBib3VuZHNcblxuICB2YXIgbWluID0gcGFkZGluZ09iamVjdFttaW5Qcm9wXTtcbiAgdmFyIG1heCA9IGNsaWVudFNpemUgLSBhcnJvd1JlY3RbbGVuXSAtIHBhZGRpbmdPYmplY3RbbWF4UHJvcF07XG4gIHZhciBjZW50ZXIgPSBjbGllbnRTaXplIC8gMiAtIGFycm93UmVjdFtsZW5dIC8gMiArIGNlbnRlclRvUmVmZXJlbmNlO1xuICB2YXIgb2Zmc2V0ID0gd2l0aGluKG1pbiwgY2VudGVyLCBtYXgpOyAvLyBQcmV2ZW50cyBicmVha2luZyBzeW50YXggaGlnaGxpZ2h0aW5nLi4uXG5cbiAgdmFyIGF4aXNQcm9wID0gYXhpcztcbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IChfc3RhdGUkbW9kaWZpZXJzRGF0YSQgPSB7fSwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkW2F4aXNQcm9wXSA9IG9mZnNldCwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkLmNlbnRlck9mZnNldCA9IG9mZnNldCAtIGNlbnRlciwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkKTtcbn1cblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnM7XG4gIHZhciBfb3B0aW9ucyRlbGVtZW50ID0gb3B0aW9ucy5lbGVtZW50LFxuICAgICAgYXJyb3dFbGVtZW50ID0gX29wdGlvbnMkZWxlbWVudCA9PT0gdm9pZCAwID8gJ1tkYXRhLXBvcHBlci1hcnJvd10nIDogX29wdGlvbnMkZWxlbWVudDtcblxuICBpZiAoYXJyb3dFbGVtZW50ID09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gQ1NTIHNlbGVjdG9yXG5cblxuICBpZiAodHlwZW9mIGFycm93RWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5wb3BwZXIucXVlcnlTZWxlY3RvcihhcnJvd0VsZW1lbnQpO1xuXG4gICAgaWYgKCFhcnJvd0VsZW1lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgaWYgKCFpc0hUTUxFbGVtZW50KGFycm93RWxlbWVudCkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydQb3BwZXI6IFwiYXJyb3dcIiBlbGVtZW50IG11c3QgYmUgYW4gSFRNTEVsZW1lbnQgKG5vdCBhbiBTVkdFbGVtZW50KS4nLCAnVG8gdXNlIGFuIFNWRyBhcnJvdywgd3JhcCBpdCBpbiBhbiBIVE1MRWxlbWVudCB0aGF0IHdpbGwgYmUgdXNlZCBhcycsICd0aGUgYXJyb3cuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbnRhaW5zKHN0YXRlLmVsZW1lbnRzLnBvcHBlciwgYXJyb3dFbGVtZW50KSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoWydQb3BwZXI6IFwiYXJyb3dcIiBtb2RpZmllclxcJ3MgYGVsZW1lbnRgIG11c3QgYmUgYSBjaGlsZCBvZiB0aGUgcG9wcGVyJywgJ2VsZW1lbnQuJ10uam9pbignICcpKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBzdGF0ZS5lbGVtZW50cy5hcnJvdyA9IGFycm93RWxlbWVudDtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2Fycm93JyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgZm46IGFycm93LFxuICBlZmZlY3Q6IGVmZmVjdCxcbiAgcmVxdWlyZXM6IFsncG9wcGVyT2Zmc2V0cyddLFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ3ByZXZlbnRPdmVyZmxvdyddXG59OyIsImltcG9ydCB7IHRvcCwgYm90dG9tLCBsZWZ0LCByaWdodCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuXG5mdW5jdGlvbiBnZXRTaWRlT2Zmc2V0cyhvdmVyZmxvdywgcmVjdCwgcHJldmVudGVkT2Zmc2V0cykge1xuICBpZiAocHJldmVudGVkT2Zmc2V0cyA9PT0gdm9pZCAwKSB7XG4gICAgcHJldmVudGVkT2Zmc2V0cyA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdG9wOiBvdmVyZmxvdy50b3AgLSByZWN0LmhlaWdodCAtIHByZXZlbnRlZE9mZnNldHMueSxcbiAgICByaWdodDogb3ZlcmZsb3cucmlnaHQgLSByZWN0LndpZHRoICsgcHJldmVudGVkT2Zmc2V0cy54LFxuICAgIGJvdHRvbTogb3ZlcmZsb3cuYm90dG9tIC0gcmVjdC5oZWlnaHQgKyBwcmV2ZW50ZWRPZmZzZXRzLnksXG4gICAgbGVmdDogb3ZlcmZsb3cubGVmdCAtIHJlY3Qud2lkdGggLSBwcmV2ZW50ZWRPZmZzZXRzLnhcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKG92ZXJmbG93KSB7XG4gIHJldHVybiBbdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0XS5zb21lKGZ1bmN0aW9uIChzaWRlKSB7XG4gICAgcmV0dXJuIG92ZXJmbG93W3NpZGVdID49IDA7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoaWRlKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHByZXZlbnRlZE9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnByZXZlbnRPdmVyZmxvdztcbiAgdmFyIHJlZmVyZW5jZU92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICBlbGVtZW50Q29udGV4dDogJ3JlZmVyZW5jZSdcbiAgfSk7XG4gIHZhciBwb3BwZXJBbHRPdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgYWx0Qm91bmRhcnk6IHRydWVcbiAgfSk7XG4gIHZhciByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMgPSBnZXRTaWRlT2Zmc2V0cyhyZWZlcmVuY2VPdmVyZmxvdywgcmVmZXJlbmNlUmVjdCk7XG4gIHZhciBwb3BwZXJFc2NhcGVPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocG9wcGVyQWx0T3ZlcmZsb3csIHBvcHBlclJlY3QsIHByZXZlbnRlZE9mZnNldHMpO1xuICB2YXIgaXNSZWZlcmVuY2VIaWRkZW4gPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzKTtcbiAgdmFyIGhhc1BvcHBlckVzY2FwZWQgPSBpc0FueVNpZGVGdWxseUNsaXBwZWQocG9wcGVyRXNjYXBlT2Zmc2V0cyk7XG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSB7XG4gICAgcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzOiByZWZlcmVuY2VDbGlwcGluZ09mZnNldHMsXG4gICAgcG9wcGVyRXNjYXBlT2Zmc2V0czogcG9wcGVyRXNjYXBlT2Zmc2V0cyxcbiAgICBpc1JlZmVyZW5jZUhpZGRlbjogaXNSZWZlcmVuY2VIaWRkZW4sXG4gICAgaGFzUG9wcGVyRXNjYXBlZDogaGFzUG9wcGVyRXNjYXBlZFxuICB9O1xuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXJlZmVyZW5jZS1oaWRkZW4nOiBpc1JlZmVyZW5jZUhpZGRlbixcbiAgICAnZGF0YS1wb3BwZXItZXNjYXBlZCc6IGhhc1BvcHBlckVzY2FwZWRcbiAgfSk7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdoaWRlJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgcmVxdWlyZXNJZkV4aXN0czogWydwcmV2ZW50T3ZlcmZsb3cnXSxcbiAgZm46IGhpZGVcbn07IiwiaW1wb3J0IHsgcG9wcGVyR2VuZXJhdG9yLCBkZXRlY3RPdmVyZmxvdyB9IGZyb20gXCIuL2NyZWF0ZVBvcHBlci5qc1wiO1xuaW1wb3J0IGV2ZW50TGlzdGVuZXJzIGZyb20gXCIuL21vZGlmaWVycy9ldmVudExpc3RlbmVycy5qc1wiO1xuaW1wb3J0IHBvcHBlck9mZnNldHMgZnJvbSBcIi4vbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanNcIjtcbmltcG9ydCBjb21wdXRlU3R5bGVzIGZyb20gXCIuL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzXCI7XG5pbXBvcnQgYXBwbHlTdHlsZXMgZnJvbSBcIi4vbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzXCI7XG5pbXBvcnQgb2Zmc2V0IGZyb20gXCIuL21vZGlmaWVycy9vZmZzZXQuanNcIjtcbmltcG9ydCBmbGlwIGZyb20gXCIuL21vZGlmaWVycy9mbGlwLmpzXCI7XG5pbXBvcnQgcHJldmVudE92ZXJmbG93IGZyb20gXCIuL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBhcnJvdyBmcm9tIFwiLi9tb2RpZmllcnMvYXJyb3cuanNcIjtcbmltcG9ydCBoaWRlIGZyb20gXCIuL21vZGlmaWVycy9oaWRlLmpzXCI7XG52YXIgZGVmYXVsdE1vZGlmaWVycyA9IFtldmVudExpc3RlbmVycywgcG9wcGVyT2Zmc2V0cywgY29tcHV0ZVN0eWxlcywgYXBwbHlTdHlsZXMsIG9mZnNldCwgZmxpcCwgcHJldmVudE92ZXJmbG93LCBhcnJvdywgaGlkZV07XG52YXIgY3JlYXRlUG9wcGVyID0gLyojX19QVVJFX18qL3BvcHBlckdlbmVyYXRvcih7XG4gIGRlZmF1bHRNb2RpZmllcnM6IGRlZmF1bHRNb2RpZmllcnNcbn0pOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciwgcG9wcGVyR2VuZXJhdG9yLCBkZWZhdWx0TW9kaWZpZXJzLCBkZXRlY3RPdmVyZmxvdyB9OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciBhcyBjcmVhdGVQb3BwZXJMaXRlIH0gZnJvbSBcIi4vcG9wcGVyLWxpdGUuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgKiBmcm9tIFwiLi9tb2RpZmllcnMvaW5kZXguanNcIjsiLCJpbXBvcnQgY29tcHV0ZU9mZnNldHMgZnJvbSBcIi4uL3V0aWxzL2NvbXB1dGVPZmZzZXRzLmpzXCI7XG5cbmZ1bmN0aW9uIHBvcHBlck9mZnNldHMoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZTtcbiAgLy8gT2Zmc2V0cyBhcmUgdGhlIGFjdHVhbCBwb3NpdGlvbiB0aGUgcG9wcGVyIG5lZWRzIHRvIGhhdmUgdG8gYmVcbiAgLy8gcHJvcGVybHkgcG9zaXRpb25lZCBuZWFyIGl0cyByZWZlcmVuY2UgZWxlbWVudFxuICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHBsYWNlbWVudCwgYW5kIHdpbGwgYmUgYWRqdXN0ZWQgYnlcbiAgLy8gdGhlIG1vZGlmaWVycyBpbiB0aGUgbmV4dCBzdGVwXG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSBjb21wdXRlT2Zmc2V0cyh7XG4gICAgcmVmZXJlbmNlOiBzdGF0ZS5yZWN0cy5yZWZlcmVuY2UsXG4gICAgZWxlbWVudDogc3RhdGUucmVjdHMucG9wcGVyLFxuICAgIHN0cmF0ZWd5OiAnYWJzb2x1dGUnLFxuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pO1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAncG9wcGVyT2Zmc2V0cycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAncmVhZCcsXG4gIGZuOiBwb3BwZXJPZmZzZXRzLFxuICBkYXRhOiB7fVxufTsiLCIvKiohXG4qIHRpcHB5LmpzIHY2LjMuN1xuKiAoYykgMjAxNy0yMDIxIGF0b21pa3NcbiogTUlUIExpY2Vuc2VcbiovXG5pbXBvcnQgeyBjcmVhdGVQb3BwZXIsIGFwcGx5U3R5bGVzIH0gZnJvbSAnQHBvcHBlcmpzL2NvcmUnO1xuXG52YXIgUk9VTkRfQVJST1cgPSAnPHN2ZyB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiNlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBkPVwiTTAgNnMxLjc5Ni0uMDEzIDQuNjctMy42MTVDNS44NTEuOSA2LjkzLjAwNiA4IDBjMS4wNy0uMDA2IDIuMTQ4Ljg4NyAzLjM0MyAyLjM4NUMxNC4yMzMgNi4wMDUgMTYgNiAxNiA2SDB6XCI+PC9zdmc+JztcbnZhciBCT1hfQ0xBU1MgPSBcInRpcHB5LWJveFwiO1xudmFyIENPTlRFTlRfQ0xBU1MgPSBcInRpcHB5LWNvbnRlbnRcIjtcbnZhciBCQUNLRFJPUF9DTEFTUyA9IFwidGlwcHktYmFja2Ryb3BcIjtcbnZhciBBUlJPV19DTEFTUyA9IFwidGlwcHktYXJyb3dcIjtcbnZhciBTVkdfQVJST1dfQ0xBU1MgPSBcInRpcHB5LXN2Zy1hcnJvd1wiO1xudmFyIFRPVUNIX09QVElPTlMgPSB7XG4gIHBhc3NpdmU6IHRydWUsXG4gIGNhcHR1cmU6IHRydWVcbn07XG52YXIgVElQUFlfREVGQVVMVF9BUFBFTkRfVE8gPSBmdW5jdGlvbiBUSVBQWV9ERUZBVUxUX0FQUEVORF9UTygpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmJvZHk7XG59O1xuXG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIGtleSkge1xuICByZXR1cm4ge30uaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSk7XG59XG5mdW5jdGlvbiBnZXRWYWx1ZUF0SW5kZXhPclJldHVybih2YWx1ZSwgaW5kZXgsIGRlZmF1bHRWYWx1ZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICB2YXIgdiA9IHZhbHVlW2luZGV4XTtcbiAgICByZXR1cm4gdiA9PSBudWxsID8gQXJyYXkuaXNBcnJheShkZWZhdWx0VmFsdWUpID8gZGVmYXVsdFZhbHVlW2luZGV4XSA6IGRlZmF1bHRWYWx1ZSA6IHY7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBpc1R5cGUodmFsdWUsIHR5cGUpIHtcbiAgdmFyIHN0ciA9IHt9LnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICByZXR1cm4gc3RyLmluZGV4T2YoJ1tvYmplY3QnKSA9PT0gMCAmJiBzdHIuaW5kZXhPZih0eXBlICsgXCJdXCIpID4gLTE7XG59XG5mdW5jdGlvbiBpbnZva2VXaXRoQXJnc09yUmV0dXJuKHZhbHVlLCBhcmdzKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicgPyB2YWx1ZS5hcHBseSh2b2lkIDAsIGFyZ3MpIDogdmFsdWU7XG59XG5mdW5jdGlvbiBkZWJvdW5jZShmbiwgbXMpIHtcbiAgLy8gQXZvaWQgd3JhcHBpbmcgaW4gYHNldFRpbWVvdXRgIGlmIG1zIGlzIDAgYW55d2F5XG4gIGlmIChtcyA9PT0gMCkge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHZhciB0aW1lb3V0O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBmbihhcmcpO1xuICAgIH0sIG1zKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVByb3BlcnRpZXMob2JqLCBrZXlzKSB7XG4gIHZhciBjbG9uZSA9IE9iamVjdC5hc3NpZ24oe30sIG9iaik7XG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgZGVsZXRlIGNsb25lW2tleV07XG4gIH0pO1xuICByZXR1cm4gY2xvbmU7XG59XG5mdW5jdGlvbiBzcGxpdEJ5U3BhY2VzKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS5zcGxpdCgvXFxzKy8pLmZpbHRlcihCb29sZWFuKTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVRvQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIFtdLmNvbmNhdCh2YWx1ZSk7XG59XG5mdW5jdGlvbiBwdXNoSWZVbmlxdWUoYXJyLCB2YWx1ZSkge1xuICBpZiAoYXJyLmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGFyci5wdXNoKHZhbHVlKTtcbiAgfVxufVxuZnVuY3Rpb24gdW5pcXVlKGFycikge1xuICByZXR1cm4gYXJyLmZpbHRlcihmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICByZXR1cm4gYXJyLmluZGV4T2YoaXRlbSkgPT09IGluZGV4O1xuICB9KTtcbn1cbmZ1bmN0aW9uIGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbn1cbmZ1bmN0aW9uIGFycmF5RnJvbSh2YWx1ZSkge1xuICByZXR1cm4gW10uc2xpY2UuY2FsbCh2YWx1ZSk7XG59XG5mdW5jdGlvbiByZW1vdmVVbmRlZmluZWRQcm9wcyhvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgIGlmIChvYmpba2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBhY2Nba2V5XSA9IG9ialtrZXldO1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cblxuZnVuY3Rpb24gZGl2KCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQodmFsdWUpIHtcbiAgcmV0dXJuIFsnRWxlbWVudCcsICdGcmFnbWVudCddLnNvbWUoZnVuY3Rpb24gKHR5cGUpIHtcbiAgICByZXR1cm4gaXNUeXBlKHZhbHVlLCB0eXBlKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBpc05vZGVMaXN0KHZhbHVlKSB7XG4gIHJldHVybiBpc1R5cGUodmFsdWUsICdOb2RlTGlzdCcpO1xufVxuZnVuY3Rpb24gaXNNb3VzZUV2ZW50KHZhbHVlKSB7XG4gIHJldHVybiBpc1R5cGUodmFsdWUsICdNb3VzZUV2ZW50Jyk7XG59XG5mdW5jdGlvbiBpc1JlZmVyZW5jZUVsZW1lbnQodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl90aXBweSAmJiB2YWx1ZS5fdGlwcHkucmVmZXJlbmNlID09PSB2YWx1ZSk7XG59XG5mdW5jdGlvbiBnZXRBcnJheU9mRWxlbWVudHModmFsdWUpIHtcbiAgaWYgKGlzRWxlbWVudCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gW3ZhbHVlXTtcbiAgfVxuXG4gIGlmIChpc05vZGVMaXN0KHZhbHVlKSkge1xuICAgIHJldHVybiBhcnJheUZyb20odmFsdWUpO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIGFycmF5RnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbHVlKSk7XG59XG5mdW5jdGlvbiBzZXRUcmFuc2l0aW9uRHVyYXRpb24oZWxzLCB2YWx1ZSkge1xuICBlbHMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICBpZiAoZWwpIHtcbiAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IHZhbHVlICsgXCJtc1wiO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBzZXRWaXNpYmlsaXR5U3RhdGUoZWxzLCBzdGF0ZSkge1xuICBlbHMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICBpZiAoZWwpIHtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0ZScsIHN0YXRlKTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0T3duZXJEb2N1bWVudChlbGVtZW50T3JFbGVtZW50cykge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuXG4gIHZhciBfbm9ybWFsaXplVG9BcnJheSA9IG5vcm1hbGl6ZVRvQXJyYXkoZWxlbWVudE9yRWxlbWVudHMpLFxuICAgICAgZWxlbWVudCA9IF9ub3JtYWxpemVUb0FycmF5WzBdOyAvLyBFbGVtZW50cyBjcmVhdGVkIHZpYSBhIDx0ZW1wbGF0ZT4gaGF2ZSBhbiBvd25lckRvY3VtZW50IHdpdGggbm8gcmVmZXJlbmNlIHRvIHRoZSBib2R5XG5cblxuICByZXR1cm4gZWxlbWVudCAhPSBudWxsICYmIChfZWxlbWVudCRvd25lckRvY3VtZW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQpICE9IG51bGwgJiYgX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHkgPyBlbGVtZW50Lm93bmVyRG9jdW1lbnQgOiBkb2N1bWVudDtcbn1cbmZ1bmN0aW9uIGlzQ3Vyc29yT3V0c2lkZUludGVyYWN0aXZlQm9yZGVyKHBvcHBlclRyZWVEYXRhLCBldmVudCkge1xuICB2YXIgY2xpZW50WCA9IGV2ZW50LmNsaWVudFgsXG4gICAgICBjbGllbnRZID0gZXZlbnQuY2xpZW50WTtcbiAgcmV0dXJuIHBvcHBlclRyZWVEYXRhLmV2ZXJ5KGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIHBvcHBlclJlY3QgPSBfcmVmLnBvcHBlclJlY3QsXG4gICAgICAgIHBvcHBlclN0YXRlID0gX3JlZi5wb3BwZXJTdGF0ZSxcbiAgICAgICAgcHJvcHMgPSBfcmVmLnByb3BzO1xuICAgIHZhciBpbnRlcmFjdGl2ZUJvcmRlciA9IHByb3BzLmludGVyYWN0aXZlQm9yZGVyO1xuICAgIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwb3BwZXJTdGF0ZS5wbGFjZW1lbnQpO1xuICAgIHZhciBvZmZzZXREYXRhID0gcG9wcGVyU3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXQ7XG5cbiAgICBpZiAoIW9mZnNldERhdGEpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciB0b3BEaXN0YW5jZSA9IGJhc2VQbGFjZW1lbnQgPT09ICdib3R0b20nID8gb2Zmc2V0RGF0YS50b3AueSA6IDA7XG4gICAgdmFyIGJvdHRvbURpc3RhbmNlID0gYmFzZVBsYWNlbWVudCA9PT0gJ3RvcCcgPyBvZmZzZXREYXRhLmJvdHRvbS55IDogMDtcbiAgICB2YXIgbGVmdERpc3RhbmNlID0gYmFzZVBsYWNlbWVudCA9PT0gJ3JpZ2h0JyA/IG9mZnNldERhdGEubGVmdC54IDogMDtcbiAgICB2YXIgcmlnaHREaXN0YW5jZSA9IGJhc2VQbGFjZW1lbnQgPT09ICdsZWZ0JyA/IG9mZnNldERhdGEucmlnaHQueCA6IDA7XG4gICAgdmFyIGV4Y2VlZHNUb3AgPSBwb3BwZXJSZWN0LnRvcCAtIGNsaWVudFkgKyB0b3BEaXN0YW5jZSA+IGludGVyYWN0aXZlQm9yZGVyO1xuICAgIHZhciBleGNlZWRzQm90dG9tID0gY2xpZW50WSAtIHBvcHBlclJlY3QuYm90dG9tIC0gYm90dG9tRGlzdGFuY2UgPiBpbnRlcmFjdGl2ZUJvcmRlcjtcbiAgICB2YXIgZXhjZWVkc0xlZnQgPSBwb3BwZXJSZWN0LmxlZnQgLSBjbGllbnRYICsgbGVmdERpc3RhbmNlID4gaW50ZXJhY3RpdmVCb3JkZXI7XG4gICAgdmFyIGV4Y2VlZHNSaWdodCA9IGNsaWVudFggLSBwb3BwZXJSZWN0LnJpZ2h0IC0gcmlnaHREaXN0YW5jZSA+IGludGVyYWN0aXZlQm9yZGVyO1xuICAgIHJldHVybiBleGNlZWRzVG9wIHx8IGV4Y2VlZHNCb3R0b20gfHwgZXhjZWVkc0xlZnQgfHwgZXhjZWVkc1JpZ2h0O1xuICB9KTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVRyYW5zaXRpb25FbmRMaXN0ZW5lcihib3gsIGFjdGlvbiwgbGlzdGVuZXIpIHtcbiAgdmFyIG1ldGhvZCA9IGFjdGlvbiArIFwiRXZlbnRMaXN0ZW5lclwiOyAvLyBzb21lIGJyb3dzZXJzIGFwcGFyZW50bHkgc3VwcG9ydCBgdHJhbnNpdGlvbmAgKHVucHJlZml4ZWQpIGJ1dCBvbmx5IGZpcmVcbiAgLy8gYHdlYmtpdFRyYW5zaXRpb25FbmRgLi4uXG5cbiAgWyd0cmFuc2l0aW9uZW5kJywgJ3dlYmtpdFRyYW5zaXRpb25FbmQnXS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgIGJveFttZXRob2RdKGV2ZW50LCBsaXN0ZW5lcik7XG4gIH0pO1xufVxuLyoqXG4gKiBDb21wYXJlZCB0byB4eHguY29udGFpbnMsIHRoaXMgZnVuY3Rpb24gd29ya3MgZm9yIGRvbSBzdHJ1Y3R1cmVzIHdpdGggc2hhZG93XG4gKiBkb21cbiAqL1xuXG5mdW5jdGlvbiBhY3R1YWxDb250YWlucyhwYXJlbnQsIGNoaWxkKSB7XG4gIHZhciB0YXJnZXQgPSBjaGlsZDtcblxuICB3aGlsZSAodGFyZ2V0KSB7XG4gICAgdmFyIF90YXJnZXQkZ2V0Um9vdE5vZGU7XG5cbiAgICBpZiAocGFyZW50LmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHRhcmdldCA9IHRhcmdldC5nZXRSb290Tm9kZSA9PSBudWxsID8gdm9pZCAwIDogKF90YXJnZXQkZ2V0Um9vdE5vZGUgPSB0YXJnZXQuZ2V0Um9vdE5vZGUoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90YXJnZXQkZ2V0Um9vdE5vZGUuaG9zdDtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxudmFyIGN1cnJlbnRJbnB1dCA9IHtcbiAgaXNUb3VjaDogZmFsc2Vcbn07XG52YXIgbGFzdE1vdXNlTW92ZVRpbWUgPSAwO1xuLyoqXG4gKiBXaGVuIGEgYHRvdWNoc3RhcnRgIGV2ZW50IGlzIGZpcmVkLCBpdCdzIGFzc3VtZWQgdGhlIHVzZXIgaXMgdXNpbmcgdG91Y2hcbiAqIGlucHV0LiBXZSdsbCBiaW5kIGEgYG1vdXNlbW92ZWAgZXZlbnQgbGlzdGVuZXIgdG8gbGlzdGVuIGZvciBtb3VzZSBpbnB1dCBpblxuICogdGhlIGZ1dHVyZS4gVGhpcyB3YXksIHRoZSBgaXNUb3VjaGAgcHJvcGVydHkgaXMgZnVsbHkgZHluYW1pYyBhbmQgd2lsbCBoYW5kbGVcbiAqIGh5YnJpZCBkZXZpY2VzIHRoYXQgdXNlIGEgbWl4IG9mIHRvdWNoICsgbW91c2UgaW5wdXQuXG4gKi9cblxuZnVuY3Rpb24gb25Eb2N1bWVudFRvdWNoU3RhcnQoKSB7XG4gIGlmIChjdXJyZW50SW5wdXQuaXNUb3VjaCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGN1cnJlbnRJbnB1dC5pc1RvdWNoID0gdHJ1ZTtcblxuICBpZiAod2luZG93LnBlcmZvcm1hbmNlKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgb25Eb2N1bWVudE1vdXNlTW92ZSk7XG4gIH1cbn1cbi8qKlxuICogV2hlbiB0d28gYG1vdXNlbW92ZWAgZXZlbnQgYXJlIGZpcmVkIGNvbnNlY3V0aXZlbHkgd2l0aGluIDIwbXMsIGl0J3MgYXNzdW1lZFxuICogdGhlIHVzZXIgaXMgdXNpbmcgbW91c2UgaW5wdXQgYWdhaW4uIGBtb3VzZW1vdmVgIGNhbiBmaXJlIG9uIHRvdWNoIGRldmljZXMgYXNcbiAqIHdlbGwsIGJ1dCB2ZXJ5IHJhcmVseSB0aGF0IHF1aWNrbHkuXG4gKi9cblxuZnVuY3Rpb24gb25Eb2N1bWVudE1vdXNlTW92ZSgpIHtcbiAgdmFyIG5vdyA9IHBlcmZvcm1hbmNlLm5vdygpO1xuXG4gIGlmIChub3cgLSBsYXN0TW91c2VNb3ZlVGltZSA8IDIwKSB7XG4gICAgY3VycmVudElucHV0LmlzVG91Y2ggPSBmYWxzZTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBvbkRvY3VtZW50TW91c2VNb3ZlKTtcbiAgfVxuXG4gIGxhc3RNb3VzZU1vdmVUaW1lID0gbm93O1xufVxuLyoqXG4gKiBXaGVuIGFuIGVsZW1lbnQgaXMgaW4gZm9jdXMgYW5kIGhhcyBhIHRpcHB5LCBsZWF2aW5nIHRoZSB0YWIvd2luZG93IGFuZFxuICogcmV0dXJuaW5nIGNhdXNlcyBpdCB0byBzaG93IGFnYWluLiBGb3IgbW91c2UgdXNlcnMgdGhpcyBpcyB1bmV4cGVjdGVkLCBidXRcbiAqIGZvciBrZXlib2FyZCB1c2UgaXQgbWFrZXMgc2Vuc2UuXG4gKiBUT0RPOiBmaW5kIGEgYmV0dGVyIHRlY2huaXF1ZSB0byBzb2x2ZSB0aGlzIHByb2JsZW1cbiAqL1xuXG5mdW5jdGlvbiBvbldpbmRvd0JsdXIoKSB7XG4gIHZhciBhY3RpdmVFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblxuICBpZiAoaXNSZWZlcmVuY2VFbGVtZW50KGFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgdmFyIGluc3RhbmNlID0gYWN0aXZlRWxlbWVudC5fdGlwcHk7XG5cbiAgICBpZiAoYWN0aXZlRWxlbWVudC5ibHVyICYmICFpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgIGFjdGl2ZUVsZW1lbnQuYmx1cigpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gYmluZEdsb2JhbEV2ZW50TGlzdGVuZXJzKCkge1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0Jywgb25Eb2N1bWVudFRvdWNoU3RhcnQsIFRPVUNIX09QVElPTlMpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIG9uV2luZG93Qmx1cik7XG59XG5cbnZhciBpc0Jyb3dzZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnO1xudmFyIGlzSUUxMSA9IGlzQnJvd3NlciA/IC8vIEB0cy1pZ25vcmVcbiEhd2luZG93Lm1zQ3J5cHRvIDogZmFsc2U7XG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUxlYWtXYXJuaW5nKG1ldGhvZCkge1xuICB2YXIgdHh0ID0gbWV0aG9kID09PSAnZGVzdHJveScgPyAnbiBhbHJlYWR5LScgOiAnICc7XG4gIHJldHVybiBbbWV0aG9kICsgXCIoKSB3YXMgY2FsbGVkIG9uIGFcIiArIHR4dCArIFwiZGVzdHJveWVkIGluc3RhbmNlLiBUaGlzIGlzIGEgbm8tb3AgYnV0XCIsICdpbmRpY2F0ZXMgYSBwb3RlbnRpYWwgbWVtb3J5IGxlYWsuJ10uam9pbignICcpO1xufVxuZnVuY3Rpb24gY2xlYW4odmFsdWUpIHtcbiAgdmFyIHNwYWNlc0FuZFRhYnMgPSAvWyBcXHRdezIsfS9nO1xuICB2YXIgbGluZVN0YXJ0V2l0aFNwYWNlcyA9IC9eWyBcXHRdKi9nbTtcbiAgcmV0dXJuIHZhbHVlLnJlcGxhY2Uoc3BhY2VzQW5kVGFicywgJyAnKS5yZXBsYWNlKGxpbmVTdGFydFdpdGhTcGFjZXMsICcnKS50cmltKCk7XG59XG5cbmZ1bmN0aW9uIGdldERldk1lc3NhZ2UobWVzc2FnZSkge1xuICByZXR1cm4gY2xlYW4oXCJcXG4gICVjdGlwcHkuanNcXG5cXG4gICVjXCIgKyBjbGVhbihtZXNzYWdlKSArIFwiXFxuXFxuICAlY1xcdUQ4M0RcXHVEQzc3XFx1MjAwRCBUaGlzIGlzIGEgZGV2ZWxvcG1lbnQtb25seSBtZXNzYWdlLiBJdCB3aWxsIGJlIHJlbW92ZWQgaW4gcHJvZHVjdGlvbi5cXG4gIFwiKTtcbn1cblxuZnVuY3Rpb24gZ2V0Rm9ybWF0dGVkTWVzc2FnZShtZXNzYWdlKSB7XG4gIHJldHVybiBbZ2V0RGV2TWVzc2FnZShtZXNzYWdlKSwgLy8gdGl0bGVcbiAgJ2NvbG9yOiAjMDBDNTg0OyBmb250LXNpemU6IDEuM2VtOyBmb250LXdlaWdodDogYm9sZDsnLCAvLyBtZXNzYWdlXG4gICdsaW5lLWhlaWdodDogMS41JywgLy8gZm9vdGVyXG4gICdjb2xvcjogI2E2YTA5NTsnXTtcbn0gLy8gQXNzdW1lIHdhcm5pbmdzIGFuZCBlcnJvcnMgbmV2ZXIgaGF2ZSB0aGUgc2FtZSBtZXNzYWdlXG5cbnZhciB2aXNpdGVkTWVzc2FnZXM7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgcmVzZXRWaXNpdGVkTWVzc2FnZXMoKTtcbn1cblxuZnVuY3Rpb24gcmVzZXRWaXNpdGVkTWVzc2FnZXMoKSB7XG4gIHZpc2l0ZWRNZXNzYWdlcyA9IG5ldyBTZXQoKTtcbn1cbmZ1bmN0aW9uIHdhcm5XaGVuKGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uICYmICF2aXNpdGVkTWVzc2FnZXMuaGFzKG1lc3NhZ2UpKSB7XG4gICAgdmFyIF9jb25zb2xlO1xuXG4gICAgdmlzaXRlZE1lc3NhZ2VzLmFkZChtZXNzYWdlKTtcblxuICAgIChfY29uc29sZSA9IGNvbnNvbGUpLndhcm4uYXBwbHkoX2NvbnNvbGUsIGdldEZvcm1hdHRlZE1lc3NhZ2UobWVzc2FnZSkpO1xuICB9XG59XG5mdW5jdGlvbiBlcnJvcldoZW4oY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmIChjb25kaXRpb24gJiYgIXZpc2l0ZWRNZXNzYWdlcy5oYXMobWVzc2FnZSkpIHtcbiAgICB2YXIgX2NvbnNvbGUyO1xuXG4gICAgdmlzaXRlZE1lc3NhZ2VzLmFkZChtZXNzYWdlKTtcblxuICAgIChfY29uc29sZTIgPSBjb25zb2xlKS5lcnJvci5hcHBseShfY29uc29sZTIsIGdldEZvcm1hdHRlZE1lc3NhZ2UobWVzc2FnZSkpO1xuICB9XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVRhcmdldHModGFyZ2V0cykge1xuICB2YXIgZGlkUGFzc0ZhbHN5VmFsdWUgPSAhdGFyZ2V0cztcbiAgdmFyIGRpZFBhc3NQbGFpbk9iamVjdCA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0YXJnZXRzKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScgJiYgIXRhcmdldHMuYWRkRXZlbnRMaXN0ZW5lcjtcbiAgZXJyb3JXaGVuKGRpZFBhc3NGYWxzeVZhbHVlLCBbJ3RpcHB5KCkgd2FzIHBhc3NlZCcsICdgJyArIFN0cmluZyh0YXJnZXRzKSArICdgJywgJ2FzIGl0cyB0YXJnZXRzIChmaXJzdCkgYXJndW1lbnQuIFZhbGlkIHR5cGVzIGFyZTogU3RyaW5nLCBFbGVtZW50LCcsICdFbGVtZW50W10sIG9yIE5vZGVMaXN0LiddLmpvaW4oJyAnKSk7XG4gIGVycm9yV2hlbihkaWRQYXNzUGxhaW5PYmplY3QsIFsndGlwcHkoKSB3YXMgcGFzc2VkIGEgcGxhaW4gb2JqZWN0IHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQgYXMgYW4gYXJndW1lbnQnLCAnZm9yIHZpcnR1YWwgcG9zaXRpb25pbmcuIFVzZSBwcm9wcy5nZXRSZWZlcmVuY2VDbGllbnRSZWN0IGluc3RlYWQuJ10uam9pbignICcpKTtcbn1cblxudmFyIHBsdWdpblByb3BzID0ge1xuICBhbmltYXRlRmlsbDogZmFsc2UsXG4gIGZvbGxvd0N1cnNvcjogZmFsc2UsXG4gIGlubGluZVBvc2l0aW9uaW5nOiBmYWxzZSxcbiAgc3RpY2t5OiBmYWxzZVxufTtcbnZhciByZW5kZXJQcm9wcyA9IHtcbiAgYWxsb3dIVE1MOiBmYWxzZSxcbiAgYW5pbWF0aW9uOiAnZmFkZScsXG4gIGFycm93OiB0cnVlLFxuICBjb250ZW50OiAnJyxcbiAgaW5lcnRpYTogZmFsc2UsXG4gIG1heFdpZHRoOiAzNTAsXG4gIHJvbGU6ICd0b29sdGlwJyxcbiAgdGhlbWU6ICcnLFxuICB6SW5kZXg6IDk5OTlcbn07XG52YXIgZGVmYXVsdFByb3BzID0gT2JqZWN0LmFzc2lnbih7XG4gIGFwcGVuZFRvOiBUSVBQWV9ERUZBVUxUX0FQUEVORF9UTyxcbiAgYXJpYToge1xuICAgIGNvbnRlbnQ6ICdhdXRvJyxcbiAgICBleHBhbmRlZDogJ2F1dG8nXG4gIH0sXG4gIGRlbGF5OiAwLFxuICBkdXJhdGlvbjogWzMwMCwgMjUwXSxcbiAgZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdDogbnVsbCxcbiAgaGlkZU9uQ2xpY2s6IHRydWUsXG4gIGlnbm9yZUF0dHJpYnV0ZXM6IGZhbHNlLFxuICBpbnRlcmFjdGl2ZTogZmFsc2UsXG4gIGludGVyYWN0aXZlQm9yZGVyOiAyLFxuICBpbnRlcmFjdGl2ZURlYm91bmNlOiAwLFxuICBtb3ZlVHJhbnNpdGlvbjogJycsXG4gIG9mZnNldDogWzAsIDEwXSxcbiAgb25BZnRlclVwZGF0ZTogZnVuY3Rpb24gb25BZnRlclVwZGF0ZSgpIHt9LFxuICBvbkJlZm9yZVVwZGF0ZTogZnVuY3Rpb24gb25CZWZvcmVVcGRhdGUoKSB7fSxcbiAgb25DcmVhdGU6IGZ1bmN0aW9uIG9uQ3JlYXRlKCkge30sXG4gIG9uRGVzdHJveTogZnVuY3Rpb24gb25EZXN0cm95KCkge30sXG4gIG9uSGlkZGVuOiBmdW5jdGlvbiBvbkhpZGRlbigpIHt9LFxuICBvbkhpZGU6IGZ1bmN0aW9uIG9uSGlkZSgpIHt9LFxuICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge30sXG4gIG9uU2hvdzogZnVuY3Rpb24gb25TaG93KCkge30sXG4gIG9uU2hvd246IGZ1bmN0aW9uIG9uU2hvd24oKSB7fSxcbiAgb25UcmlnZ2VyOiBmdW5jdGlvbiBvblRyaWdnZXIoKSB7fSxcbiAgb25VbnRyaWdnZXI6IGZ1bmN0aW9uIG9uVW50cmlnZ2VyKCkge30sXG4gIG9uQ2xpY2tPdXRzaWRlOiBmdW5jdGlvbiBvbkNsaWNrT3V0c2lkZSgpIHt9LFxuICBwbGFjZW1lbnQ6ICd0b3AnLFxuICBwbHVnaW5zOiBbXSxcbiAgcG9wcGVyT3B0aW9uczoge30sXG4gIHJlbmRlcjogbnVsbCxcbiAgc2hvd09uQ3JlYXRlOiBmYWxzZSxcbiAgdG91Y2g6IHRydWUsXG4gIHRyaWdnZXI6ICdtb3VzZWVudGVyIGZvY3VzJyxcbiAgdHJpZ2dlclRhcmdldDogbnVsbFxufSwgcGx1Z2luUHJvcHMsIHJlbmRlclByb3BzKTtcbnZhciBkZWZhdWx0S2V5cyA9IE9iamVjdC5rZXlzKGRlZmF1bHRQcm9wcyk7XG52YXIgc2V0RGVmYXVsdFByb3BzID0gZnVuY3Rpb24gc2V0RGVmYXVsdFByb3BzKHBhcnRpYWxQcm9wcykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgdmFsaWRhdGVQcm9wcyhwYXJ0aWFsUHJvcHMsIFtdKTtcbiAgfVxuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMocGFydGlhbFByb3BzKTtcbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBkZWZhdWx0UHJvcHNba2V5XSA9IHBhcnRpYWxQcm9wc1trZXldO1xuICB9KTtcbn07XG5mdW5jdGlvbiBnZXRFeHRlbmRlZFBhc3NlZFByb3BzKHBhc3NlZFByb3BzKSB7XG4gIHZhciBwbHVnaW5zID0gcGFzc2VkUHJvcHMucGx1Z2lucyB8fCBbXTtcbiAgdmFyIHBsdWdpblByb3BzID0gcGx1Z2lucy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGx1Z2luKSB7XG4gICAgdmFyIG5hbWUgPSBwbHVnaW4ubmFtZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlID0gcGx1Z2luLmRlZmF1bHRWYWx1ZTtcblxuICAgIGlmIChuYW1lKSB7XG4gICAgICB2YXIgX25hbWU7XG5cbiAgICAgIGFjY1tuYW1lXSA9IHBhc3NlZFByb3BzW25hbWVdICE9PSB1bmRlZmluZWQgPyBwYXNzZWRQcm9wc1tuYW1lXSA6IChfbmFtZSA9IGRlZmF1bHRQcm9wc1tuYW1lXSkgIT0gbnVsbCA/IF9uYW1lIDogZGVmYXVsdFZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHBhc3NlZFByb3BzLCBwbHVnaW5Qcm9wcyk7XG59XG5mdW5jdGlvbiBnZXREYXRhQXR0cmlidXRlUHJvcHMocmVmZXJlbmNlLCBwbHVnaW5zKSB7XG4gIHZhciBwcm9wS2V5cyA9IHBsdWdpbnMgPyBPYmplY3Qua2V5cyhnZXRFeHRlbmRlZFBhc3NlZFByb3BzKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRQcm9wcywge1xuICAgIHBsdWdpbnM6IHBsdWdpbnNcbiAgfSkpKSA6IGRlZmF1bHRLZXlzO1xuICB2YXIgcHJvcHMgPSBwcm9wS2V5cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgdmFyIHZhbHVlQXNTdHJpbmcgPSAocmVmZXJlbmNlLmdldEF0dHJpYnV0ZShcImRhdGEtdGlwcHktXCIgKyBrZXkpIHx8ICcnKS50cmltKCk7XG5cbiAgICBpZiAoIXZhbHVlQXNTdHJpbmcpIHtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ2NvbnRlbnQnKSB7XG4gICAgICBhY2Nba2V5XSA9IHZhbHVlQXNTdHJpbmc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGFjY1trZXldID0gSlNPTi5wYXJzZSh2YWx1ZUFzU3RyaW5nKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgYWNjW2tleV0gPSB2YWx1ZUFzU3RyaW5nO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgcmV0dXJuIHByb3BzO1xufVxuZnVuY3Rpb24gZXZhbHVhdGVQcm9wcyhyZWZlcmVuY2UsIHByb3BzKSB7XG4gIHZhciBvdXQgPSBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywge1xuICAgIGNvbnRlbnQ6IGludm9rZVdpdGhBcmdzT3JSZXR1cm4ocHJvcHMuY29udGVudCwgW3JlZmVyZW5jZV0pXG4gIH0sIHByb3BzLmlnbm9yZUF0dHJpYnV0ZXMgPyB7fSA6IGdldERhdGFBdHRyaWJ1dGVQcm9wcyhyZWZlcmVuY2UsIHByb3BzLnBsdWdpbnMpKTtcbiAgb3V0LmFyaWEgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0UHJvcHMuYXJpYSwgb3V0LmFyaWEpO1xuICBvdXQuYXJpYSA9IHtcbiAgICBleHBhbmRlZDogb3V0LmFyaWEuZXhwYW5kZWQgPT09ICdhdXRvJyA/IHByb3BzLmludGVyYWN0aXZlIDogb3V0LmFyaWEuZXhwYW5kZWQsXG4gICAgY29udGVudDogb3V0LmFyaWEuY29udGVudCA9PT0gJ2F1dG8nID8gcHJvcHMuaW50ZXJhY3RpdmUgPyBudWxsIDogJ2Rlc2NyaWJlZGJ5JyA6IG91dC5hcmlhLmNvbnRlbnRcbiAgfTtcbiAgcmV0dXJuIG91dDtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUHJvcHMocGFydGlhbFByb3BzLCBwbHVnaW5zKSB7XG4gIGlmIChwYXJ0aWFsUHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHBhcnRpYWxQcm9wcyA9IHt9O1xuICB9XG5cbiAgaWYgKHBsdWdpbnMgPT09IHZvaWQgMCkge1xuICAgIHBsdWdpbnMgPSBbXTtcbiAgfVxuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMocGFydGlhbFByb3BzKTtcbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgdmFyIG5vblBsdWdpblByb3BzID0gcmVtb3ZlUHJvcGVydGllcyhkZWZhdWx0UHJvcHMsIE9iamVjdC5rZXlzKHBsdWdpblByb3BzKSk7XG4gICAgdmFyIGRpZFBhc3NVbmtub3duUHJvcCA9ICFoYXNPd25Qcm9wZXJ0eShub25QbHVnaW5Qcm9wcywgcHJvcCk7IC8vIENoZWNrIGlmIHRoZSBwcm9wIGV4aXN0cyBpbiBgcGx1Z2luc2BcblxuICAgIGlmIChkaWRQYXNzVW5rbm93blByb3ApIHtcbiAgICAgIGRpZFBhc3NVbmtub3duUHJvcCA9IHBsdWdpbnMuZmlsdGVyKGZ1bmN0aW9uIChwbHVnaW4pIHtcbiAgICAgICAgcmV0dXJuIHBsdWdpbi5uYW1lID09PSBwcm9wO1xuICAgICAgfSkubGVuZ3RoID09PSAwO1xuICAgIH1cblxuICAgIHdhcm5XaGVuKGRpZFBhc3NVbmtub3duUHJvcCwgW1wiYFwiICsgcHJvcCArIFwiYFwiLCBcImlzIG5vdCBhIHZhbGlkIHByb3AuIFlvdSBtYXkgaGF2ZSBzcGVsbGVkIGl0IGluY29ycmVjdGx5LCBvciBpZiBpdCdzXCIsICdhIHBsdWdpbiwgZm9yZ290IHRvIHBhc3MgaXQgaW4gYW4gYXJyYXkgYXMgcHJvcHMucGx1Z2lucy4nLCAnXFxuXFxuJywgJ0FsbCBwcm9wczogaHR0cHM6Ly9hdG9taWtzLmdpdGh1Yi5pby90aXBweWpzL3Y2L2FsbC1wcm9wcy9cXG4nLCAnUGx1Z2luczogaHR0cHM6Ly9hdG9taWtzLmdpdGh1Yi5pby90aXBweWpzL3Y2L3BsdWdpbnMvJ10uam9pbignICcpKTtcbiAgfSk7XG59XG5cbnZhciBpbm5lckhUTUwgPSBmdW5jdGlvbiBpbm5lckhUTUwoKSB7XG4gIHJldHVybiAnaW5uZXJIVE1MJztcbn07XG5cbmZ1bmN0aW9uIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKGVsZW1lbnQsIGh0bWwpIHtcbiAgZWxlbWVudFtpbm5lckhUTUwoKV0gPSBodG1sO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBcnJvd0VsZW1lbnQodmFsdWUpIHtcbiAgdmFyIGFycm93ID0gZGl2KCk7XG5cbiAgaWYgKHZhbHVlID09PSB0cnVlKSB7XG4gICAgYXJyb3cuY2xhc3NOYW1lID0gQVJST1dfQ0xBU1M7XG4gIH0gZWxzZSB7XG4gICAgYXJyb3cuY2xhc3NOYW1lID0gU1ZHX0FSUk9XX0NMQVNTO1xuXG4gICAgaWYgKGlzRWxlbWVudCh2YWx1ZSkpIHtcbiAgICAgIGFycm93LmFwcGVuZENoaWxkKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwoYXJyb3csIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXJyb3c7XG59XG5cbmZ1bmN0aW9uIHNldENvbnRlbnQoY29udGVudCwgcHJvcHMpIHtcbiAgaWYgKGlzRWxlbWVudChwcm9wcy5jb250ZW50KSkge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKGNvbnRlbnQsICcnKTtcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHByb3BzLmNvbnRlbnQpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9wcy5jb250ZW50ICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKHByb3BzLmFsbG93SFRNTCkge1xuICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwoY29udGVudCwgcHJvcHMuY29udGVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnRlbnQudGV4dENvbnRlbnQgPSBwcm9wcy5jb250ZW50O1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gZ2V0Q2hpbGRyZW4ocG9wcGVyKSB7XG4gIHZhciBib3ggPSBwb3BwZXIuZmlyc3RFbGVtZW50Q2hpbGQ7XG4gIHZhciBib3hDaGlsZHJlbiA9IGFycmF5RnJvbShib3guY2hpbGRyZW4pO1xuICByZXR1cm4ge1xuICAgIGJveDogYm94LFxuICAgIGNvbnRlbnQ6IGJveENoaWxkcmVuLmZpbmQoZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIHJldHVybiBub2RlLmNsYXNzTGlzdC5jb250YWlucyhDT05URU5UX0NMQVNTKTtcbiAgICB9KSxcbiAgICBhcnJvdzogYm94Q2hpbGRyZW4uZmluZChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKEFSUk9XX0NMQVNTKSB8fCBub2RlLmNsYXNzTGlzdC5jb250YWlucyhTVkdfQVJST1dfQ0xBU1MpO1xuICAgIH0pLFxuICAgIGJhY2tkcm9wOiBib3hDaGlsZHJlbi5maW5kKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICByZXR1cm4gbm9kZS5jbGFzc0xpc3QuY29udGFpbnMoQkFDS0RST1BfQ0xBU1MpO1xuICAgIH0pXG4gIH07XG59XG5mdW5jdGlvbiByZW5kZXIoaW5zdGFuY2UpIHtcbiAgdmFyIHBvcHBlciA9IGRpdigpO1xuICB2YXIgYm94ID0gZGl2KCk7XG4gIGJveC5jbGFzc05hbWUgPSBCT1hfQ0xBU1M7XG4gIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdGUnLCAnaGlkZGVuJyk7XG4gIGJveC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gIHZhciBjb250ZW50ID0gZGl2KCk7XG4gIGNvbnRlbnQuY2xhc3NOYW1lID0gQ09OVEVOVF9DTEFTUztcbiAgY29udGVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdGUnLCAnaGlkZGVuJyk7XG4gIHNldENvbnRlbnQoY29udGVudCwgaW5zdGFuY2UucHJvcHMpO1xuICBwb3BwZXIuYXBwZW5kQ2hpbGQoYm94KTtcbiAgYm94LmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICBvblVwZGF0ZShpbnN0YW5jZS5wcm9wcywgaW5zdGFuY2UucHJvcHMpO1xuXG4gIGZ1bmN0aW9uIG9uVXBkYXRlKHByZXZQcm9wcywgbmV4dFByb3BzKSB7XG4gICAgdmFyIF9nZXRDaGlsZHJlbiA9IGdldENoaWxkcmVuKHBvcHBlciksXG4gICAgICAgIGJveCA9IF9nZXRDaGlsZHJlbi5ib3gsXG4gICAgICAgIGNvbnRlbnQgPSBfZ2V0Q2hpbGRyZW4uY29udGVudCxcbiAgICAgICAgYXJyb3cgPSBfZ2V0Q2hpbGRyZW4uYXJyb3c7XG5cbiAgICBpZiAobmV4dFByb3BzLnRoZW1lKSB7XG4gICAgICBib3guc2V0QXR0cmlidXRlKCdkYXRhLXRoZW1lJywgbmV4dFByb3BzLnRoZW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYm94LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS10aGVtZScpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmV4dFByb3BzLmFuaW1hdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYW5pbWF0aW9uJywgbmV4dFByb3BzLmFuaW1hdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJveC5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtYW5pbWF0aW9uJyk7XG4gICAgfVxuXG4gICAgaWYgKG5leHRQcm9wcy5pbmVydGlhKSB7XG4gICAgICBib3guc2V0QXR0cmlidXRlKCdkYXRhLWluZXJ0aWEnLCAnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJveC5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtaW5lcnRpYScpO1xuICAgIH1cblxuICAgIGJveC5zdHlsZS5tYXhXaWR0aCA9IHR5cGVvZiBuZXh0UHJvcHMubWF4V2lkdGggPT09ICdudW1iZXInID8gbmV4dFByb3BzLm1heFdpZHRoICsgXCJweFwiIDogbmV4dFByb3BzLm1heFdpZHRoO1xuXG4gICAgaWYgKG5leHRQcm9wcy5yb2xlKSB7XG4gICAgICBib3guc2V0QXR0cmlidXRlKCdyb2xlJywgbmV4dFByb3BzLnJvbGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBib3gucmVtb3ZlQXR0cmlidXRlKCdyb2xlJyk7XG4gICAgfVxuXG4gICAgaWYgKHByZXZQcm9wcy5jb250ZW50ICE9PSBuZXh0UHJvcHMuY29udGVudCB8fCBwcmV2UHJvcHMuYWxsb3dIVE1MICE9PSBuZXh0UHJvcHMuYWxsb3dIVE1MKSB7XG4gICAgICBzZXRDb250ZW50KGNvbnRlbnQsIGluc3RhbmNlLnByb3BzKTtcbiAgICB9XG5cbiAgICBpZiAobmV4dFByb3BzLmFycm93KSB7XG4gICAgICBpZiAoIWFycm93KSB7XG4gICAgICAgIGJveC5hcHBlbmRDaGlsZChjcmVhdGVBcnJvd0VsZW1lbnQobmV4dFByb3BzLmFycm93KSk7XG4gICAgICB9IGVsc2UgaWYgKHByZXZQcm9wcy5hcnJvdyAhPT0gbmV4dFByb3BzLmFycm93KSB7XG4gICAgICAgIGJveC5yZW1vdmVDaGlsZChhcnJvdyk7XG4gICAgICAgIGJveC5hcHBlbmRDaGlsZChjcmVhdGVBcnJvd0VsZW1lbnQobmV4dFByb3BzLmFycm93KSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChhcnJvdykge1xuICAgICAgYm94LnJlbW92ZUNoaWxkKGFycm93KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBvcHBlcjogcG9wcGVyLFxuICAgIG9uVXBkYXRlOiBvblVwZGF0ZVxuICB9O1xufSAvLyBSdW50aW1lIGNoZWNrIHRvIGlkZW50aWZ5IGlmIHRoZSByZW5kZXIgZnVuY3Rpb24gaXMgdGhlIGRlZmF1bHQgb25lOyB0aGlzXG4vLyB3YXkgd2UgY2FuIGFwcGx5IGRlZmF1bHQgQ1NTIHRyYW5zaXRpb25zIGxvZ2ljIGFuZCBpdCBjYW4gYmUgdHJlZS1zaGFrZW4gYXdheVxuXG5yZW5kZXIuJCR0aXBweSA9IHRydWU7XG5cbnZhciBpZENvdW50ZXIgPSAxO1xudmFyIG1vdXNlTW92ZUxpc3RlbmVycyA9IFtdOyAvLyBVc2VkIGJ5IGBoaWRlQWxsKClgXG5cbnZhciBtb3VudGVkSW5zdGFuY2VzID0gW107XG5mdW5jdGlvbiBjcmVhdGVUaXBweShyZWZlcmVuY2UsIHBhc3NlZFByb3BzKSB7XG4gIHZhciBwcm9wcyA9IGV2YWx1YXRlUHJvcHMocmVmZXJlbmNlLCBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0UHJvcHMsIGdldEV4dGVuZGVkUGFzc2VkUHJvcHMocmVtb3ZlVW5kZWZpbmVkUHJvcHMocGFzc2VkUHJvcHMpKSkpOyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8g8J+UkiBQcml2YXRlIG1lbWJlcnNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIHNob3dUaW1lb3V0O1xuICB2YXIgaGlkZVRpbWVvdXQ7XG4gIHZhciBzY2hlZHVsZUhpZGVBbmltYXRpb25GcmFtZTtcbiAgdmFyIGlzVmlzaWJsZUZyb21DbGljayA9IGZhbHNlO1xuICB2YXIgZGlkSGlkZUR1ZVRvRG9jdW1lbnRNb3VzZURvd24gPSBmYWxzZTtcbiAgdmFyIGRpZFRvdWNoTW92ZSA9IGZhbHNlO1xuICB2YXIgaWdub3JlT25GaXJzdFVwZGF0ZSA9IGZhbHNlO1xuICB2YXIgbGFzdFRyaWdnZXJFdmVudDtcbiAgdmFyIGN1cnJlbnRUcmFuc2l0aW9uRW5kTGlzdGVuZXI7XG4gIHZhciBvbkZpcnN0VXBkYXRlO1xuICB2YXIgbGlzdGVuZXJzID0gW107XG4gIHZhciBkZWJvdW5jZWRPbk1vdXNlTW92ZSA9IGRlYm91bmNlKG9uTW91c2VNb3ZlLCBwcm9wcy5pbnRlcmFjdGl2ZURlYm91bmNlKTtcbiAgdmFyIGN1cnJlbnRUYXJnZXQ7IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyDwn5SRIFB1YmxpYyBtZW1iZXJzXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBpZCA9IGlkQ291bnRlcisrO1xuICB2YXIgcG9wcGVySW5zdGFuY2UgPSBudWxsO1xuICB2YXIgcGx1Z2lucyA9IHVuaXF1ZShwcm9wcy5wbHVnaW5zKTtcbiAgdmFyIHN0YXRlID0ge1xuICAgIC8vIElzIHRoZSBpbnN0YW5jZSBjdXJyZW50bHkgZW5hYmxlZD9cbiAgICBpc0VuYWJsZWQ6IHRydWUsXG4gICAgLy8gSXMgdGhlIHRpcHB5IGN1cnJlbnRseSBzaG93aW5nIGFuZCBub3QgdHJhbnNpdGlvbmluZyBvdXQ/XG4gICAgaXNWaXNpYmxlOiBmYWxzZSxcbiAgICAvLyBIYXMgdGhlIGluc3RhbmNlIGJlZW4gZGVzdHJveWVkP1xuICAgIGlzRGVzdHJveWVkOiBmYWxzZSxcbiAgICAvLyBJcyB0aGUgdGlwcHkgY3VycmVudGx5IG1vdW50ZWQgdG8gdGhlIERPTT9cbiAgICBpc01vdW50ZWQ6IGZhbHNlLFxuICAgIC8vIEhhcyB0aGUgdGlwcHkgZmluaXNoZWQgdHJhbnNpdGlvbmluZyBpbj9cbiAgICBpc1Nob3duOiBmYWxzZVxuICB9O1xuICB2YXIgaW5zdGFuY2UgPSB7XG4gICAgLy8gcHJvcGVydGllc1xuICAgIGlkOiBpZCxcbiAgICByZWZlcmVuY2U6IHJlZmVyZW5jZSxcbiAgICBwb3BwZXI6IGRpdigpLFxuICAgIHBvcHBlckluc3RhbmNlOiBwb3BwZXJJbnN0YW5jZSxcbiAgICBwcm9wczogcHJvcHMsXG4gICAgc3RhdGU6IHN0YXRlLFxuICAgIHBsdWdpbnM6IHBsdWdpbnMsXG4gICAgLy8gbWV0aG9kc1xuICAgIGNsZWFyRGVsYXlUaW1lb3V0czogY2xlYXJEZWxheVRpbWVvdXRzLFxuICAgIHNldFByb3BzOiBzZXRQcm9wcyxcbiAgICBzZXRDb250ZW50OiBzZXRDb250ZW50LFxuICAgIHNob3c6IHNob3csXG4gICAgaGlkZTogaGlkZSxcbiAgICBoaWRlV2l0aEludGVyYWN0aXZpdHk6IGhpZGVXaXRoSW50ZXJhY3Rpdml0eSxcbiAgICBlbmFibGU6IGVuYWJsZSxcbiAgICBkaXNhYmxlOiBkaXNhYmxlLFxuICAgIHVubW91bnQ6IHVubW91bnQsXG4gICAgZGVzdHJveTogZGVzdHJveVxuICB9OyAvLyBUT0RPOiBJbnZlc3RpZ2F0ZSB3aHkgdGhpcyBlYXJseSByZXR1cm4gY2F1c2VzIGEgVERaIGVycm9yIGluIHRoZSB0ZXN0cyDigJRcbiAgLy8gaXQgZG9lc24ndCBzZWVtIHRvIGhhcHBlbiBpbiB0aGUgYnJvd3NlclxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuXG4gIGlmICghcHJvcHMucmVuZGVyKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgZXJyb3JXaGVuKHRydWUsICdyZW5kZXIoKSBmdW5jdGlvbiBoYXMgbm90IGJlZW4gc3VwcGxpZWQuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBJbml0aWFsIG11dGF0aW9uc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4gIHZhciBfcHJvcHMkcmVuZGVyID0gcHJvcHMucmVuZGVyKGluc3RhbmNlKSxcbiAgICAgIHBvcHBlciA9IF9wcm9wcyRyZW5kZXIucG9wcGVyLFxuICAgICAgb25VcGRhdGUgPSBfcHJvcHMkcmVuZGVyLm9uVXBkYXRlO1xuXG4gIHBvcHBlci5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGlwcHktcm9vdCcsICcnKTtcbiAgcG9wcGVyLmlkID0gXCJ0aXBweS1cIiArIGluc3RhbmNlLmlkO1xuICBpbnN0YW5jZS5wb3BwZXIgPSBwb3BwZXI7XG4gIHJlZmVyZW5jZS5fdGlwcHkgPSBpbnN0YW5jZTtcbiAgcG9wcGVyLl90aXBweSA9IGluc3RhbmNlO1xuICB2YXIgcGx1Z2luc0hvb2tzID0gcGx1Z2lucy5tYXAoZnVuY3Rpb24gKHBsdWdpbikge1xuICAgIHJldHVybiBwbHVnaW4uZm4oaW5zdGFuY2UpO1xuICB9KTtcbiAgdmFyIGhhc0FyaWFFeHBhbmRlZCA9IHJlZmVyZW5jZS5oYXNBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKTtcbiAgYWRkTGlzdGVuZXJzKCk7XG4gIGhhbmRsZUFyaWFFeHBhbmRlZEF0dHJpYnV0ZSgpO1xuICBoYW5kbGVTdHlsZXMoKTtcbiAgaW52b2tlSG9vaygnb25DcmVhdGUnLCBbaW5zdGFuY2VdKTtcblxuICBpZiAocHJvcHMuc2hvd09uQ3JlYXRlKSB7XG4gICAgc2NoZWR1bGVTaG93KCk7XG4gIH0gLy8gUHJldmVudCBhIHRpcHB5IHdpdGggYSBkZWxheSBmcm9tIGhpZGluZyBpZiB0aGUgY3Vyc29yIGxlZnQgdGhlbiByZXR1cm5lZFxuICAvLyBiZWZvcmUgaXQgc3RhcnRlZCBoaWRpbmdcblxuXG4gIHBvcHBlci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgZnVuY3Rpb24gKCkge1xuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSAmJiBpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgIGluc3RhbmNlLmNsZWFyRGVsYXlUaW1lb3V0cygpO1xuICAgIH1cbiAgfSk7XG4gIHBvcHBlci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKCkge1xuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSAmJiBpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ21vdXNlZW50ZXInKSA+PSAwKSB7XG4gICAgICBnZXREb2N1bWVudCgpLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRlYm91bmNlZE9uTW91c2VNb3ZlKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gaW5zdGFuY2U7IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyDwn5SSIFByaXZhdGUgbWV0aG9kc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBnZXROb3JtYWxpemVkVG91Y2hTZXR0aW5ncygpIHtcbiAgICB2YXIgdG91Y2ggPSBpbnN0YW5jZS5wcm9wcy50b3VjaDtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0b3VjaCkgPyB0b3VjaCA6IFt0b3VjaCwgMF07XG4gIH1cblxuICBmdW5jdGlvbiBnZXRJc0N1c3RvbVRvdWNoQmVoYXZpb3IoKSB7XG4gICAgcmV0dXJuIGdldE5vcm1hbGl6ZWRUb3VjaFNldHRpbmdzKClbMF0gPT09ICdob2xkJztcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldElzRGVmYXVsdFJlbmRlckZuKCkge1xuICAgIHZhciBfaW5zdGFuY2UkcHJvcHMkcmVuZGU7XG5cbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmV0dXJuICEhKChfaW5zdGFuY2UkcHJvcHMkcmVuZGUgPSBpbnN0YW5jZS5wcm9wcy5yZW5kZXIpICE9IG51bGwgJiYgX2luc3RhbmNlJHByb3BzJHJlbmRlLiQkdGlwcHkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Q3VycmVudFRhcmdldCgpIHtcbiAgICByZXR1cm4gY3VycmVudFRhcmdldCB8fCByZWZlcmVuY2U7XG4gIH1cblxuICBmdW5jdGlvbiBnZXREb2N1bWVudCgpIHtcbiAgICB2YXIgcGFyZW50ID0gZ2V0Q3VycmVudFRhcmdldCgpLnBhcmVudE5vZGU7XG4gICAgcmV0dXJuIHBhcmVudCA/IGdldE93bmVyRG9jdW1lbnQocGFyZW50KSA6IGRvY3VtZW50O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGVmYXVsdFRlbXBsYXRlQ2hpbGRyZW4oKSB7XG4gICAgcmV0dXJuIGdldENoaWxkcmVuKHBvcHBlcik7XG4gIH1cblxuICBmdW5jdGlvbiBnZXREZWxheShpc1Nob3cpIHtcbiAgICAvLyBGb3IgdG91Y2ggb3Iga2V5Ym9hcmQgaW5wdXQsIGZvcmNlIGAwYCBkZWxheSBmb3IgVVggcmVhc29uc1xuICAgIC8vIEFsc28gaWYgdGhlIGluc3RhbmNlIGlzIG1vdW50ZWQgYnV0IG5vdCB2aXNpYmxlICh0cmFuc2l0aW9uaW5nIG91dCksXG4gICAgLy8gaWdub3JlIGRlbGF5XG4gICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCAmJiAhaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlIHx8IGN1cnJlbnRJbnB1dC5pc1RvdWNoIHx8IGxhc3RUcmlnZ2VyRXZlbnQgJiYgbGFzdFRyaWdnZXJFdmVudC50eXBlID09PSAnZm9jdXMnKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gZ2V0VmFsdWVBdEluZGV4T3JSZXR1cm4oaW5zdGFuY2UucHJvcHMuZGVsYXksIGlzU2hvdyA/IDAgOiAxLCBkZWZhdWx0UHJvcHMuZGVsYXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3R5bGVzKGZyb21IaWRlKSB7XG4gICAgaWYgKGZyb21IaWRlID09PSB2b2lkIDApIHtcbiAgICAgIGZyb21IaWRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcG9wcGVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSAmJiAhZnJvbUhpZGUgPyAnJyA6ICdub25lJztcbiAgICBwb3BwZXIuc3R5bGUuekluZGV4ID0gXCJcIiArIGluc3RhbmNlLnByb3BzLnpJbmRleDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludm9rZUhvb2soaG9vaywgYXJncywgc2hvdWxkSW52b2tlUHJvcHNIb29rKSB7XG4gICAgaWYgKHNob3VsZEludm9rZVByb3BzSG9vayA9PT0gdm9pZCAwKSB7XG4gICAgICBzaG91bGRJbnZva2VQcm9wc0hvb2sgPSB0cnVlO1xuICAgIH1cblxuICAgIHBsdWdpbnNIb29rcy5mb3JFYWNoKGZ1bmN0aW9uIChwbHVnaW5Ib29rcykge1xuICAgICAgaWYgKHBsdWdpbkhvb2tzW2hvb2tdKSB7XG4gICAgICAgIHBsdWdpbkhvb2tzW2hvb2tdLmFwcGx5KHBsdWdpbkhvb2tzLCBhcmdzKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChzaG91bGRJbnZva2VQcm9wc0hvb2spIHtcbiAgICAgIHZhciBfaW5zdGFuY2UkcHJvcHM7XG5cbiAgICAgIChfaW5zdGFuY2UkcHJvcHMgPSBpbnN0YW5jZS5wcm9wcylbaG9va10uYXBwbHkoX2luc3RhbmNlJHByb3BzLCBhcmdzKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVBcmlhQ29udGVudEF0dHJpYnV0ZSgpIHtcbiAgICB2YXIgYXJpYSA9IGluc3RhbmNlLnByb3BzLmFyaWE7XG5cbiAgICBpZiAoIWFyaWEuY29udGVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBhdHRyID0gXCJhcmlhLVwiICsgYXJpYS5jb250ZW50O1xuICAgIHZhciBpZCA9IHBvcHBlci5pZDtcbiAgICB2YXIgbm9kZXMgPSBub3JtYWxpemVUb0FycmF5KGluc3RhbmNlLnByb3BzLnRyaWdnZXJUYXJnZXQgfHwgcmVmZXJlbmNlKTtcbiAgICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgY3VycmVudFZhbHVlID0gbm9kZS5nZXRBdHRyaWJ1dGUoYXR0cik7XG5cbiAgICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoYXR0ciwgY3VycmVudFZhbHVlID8gY3VycmVudFZhbHVlICsgXCIgXCIgKyBpZCA6IGlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBuZXh0VmFsdWUgPSBjdXJyZW50VmFsdWUgJiYgY3VycmVudFZhbHVlLnJlcGxhY2UoaWQsICcnKS50cmltKCk7XG5cbiAgICAgICAgaWYgKG5leHRWYWx1ZSkge1xuICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKGF0dHIsIG5leHRWYWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUFyaWFFeHBhbmRlZEF0dHJpYnV0ZSgpIHtcbiAgICBpZiAoaGFzQXJpYUV4cGFuZGVkIHx8ICFpbnN0YW5jZS5wcm9wcy5hcmlhLmV4cGFuZGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIG5vZGVzID0gbm9ybWFsaXplVG9BcnJheShpbnN0YW5jZS5wcm9wcy50cmlnZ2VyVGFyZ2V0IHx8IHJlZmVyZW5jZSk7XG4gICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlKSB7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlICYmIG5vZGUgPT09IGdldEN1cnJlbnRUYXJnZXQoKSA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFudXBJbnRlcmFjdGl2ZU1vdXNlTGlzdGVuZXJzKCkge1xuICAgIGdldERvY3VtZW50KCkucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZGVib3VuY2VkT25Nb3VzZU1vdmUpO1xuICAgIG1vdXNlTW92ZUxpc3RlbmVycyA9IG1vdXNlTW92ZUxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIgIT09IGRlYm91bmNlZE9uTW91c2VNb3ZlO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gb25Eb2N1bWVudFByZXNzKGV2ZW50KSB7XG4gICAgLy8gTW92ZWQgZmluZ2VyIHRvIHNjcm9sbCBpbnN0ZWFkIG9mIGFuIGludGVudGlvbmFsIHRhcCBvdXRzaWRlXG4gICAgaWYgKGN1cnJlbnRJbnB1dC5pc1RvdWNoKSB7XG4gICAgICBpZiAoZGlkVG91Y2hNb3ZlIHx8IGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgYWN0dWFsVGFyZ2V0ID0gZXZlbnQuY29tcG9zZWRQYXRoICYmIGV2ZW50LmNvbXBvc2VkUGF0aCgpWzBdIHx8IGV2ZW50LnRhcmdldDsgLy8gQ2xpY2tlZCBvbiBpbnRlcmFjdGl2ZSBwb3BwZXJcblxuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSAmJiBhY3R1YWxDb250YWlucyhwb3BwZXIsIGFjdHVhbFRhcmdldCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIENsaWNrZWQgb24gdGhlIGV2ZW50IGxpc3RlbmVycyB0YXJnZXRcblxuXG4gICAgaWYgKG5vcm1hbGl6ZVRvQXJyYXkoaW5zdGFuY2UucHJvcHMudHJpZ2dlclRhcmdldCB8fCByZWZlcmVuY2UpLnNvbWUoZnVuY3Rpb24gKGVsKSB7XG4gICAgICByZXR1cm4gYWN0dWFsQ29udGFpbnMoZWwsIGFjdHVhbFRhcmdldCk7XG4gICAgfSkpIHtcbiAgICAgIGlmIChjdXJyZW50SW5wdXQuaXNUb3VjaCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgJiYgaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdjbGljaycpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpbnZva2VIb29rKCdvbkNsaWNrT3V0c2lkZScsIFtpbnN0YW5jZSwgZXZlbnRdKTtcbiAgICB9XG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMuaGlkZU9uQ2xpY2sgPT09IHRydWUpIHtcbiAgICAgIGluc3RhbmNlLmNsZWFyRGVsYXlUaW1lb3V0cygpO1xuICAgICAgaW5zdGFuY2UuaGlkZSgpOyAvLyBgbW91c2Vkb3duYCBldmVudCBpcyBmaXJlZCByaWdodCBiZWZvcmUgYGZvY3VzYCBpZiBwcmVzc2luZyB0aGVcbiAgICAgIC8vIGN1cnJlbnRUYXJnZXQuIFRoaXMgbGV0cyBhIHRpcHB5IHdpdGggYGZvY3VzYCB0cmlnZ2VyIGtub3cgdGhhdCBpdFxuICAgICAgLy8gc2hvdWxkIG5vdCBzaG93XG5cbiAgICAgIGRpZEhpZGVEdWVUb0RvY3VtZW50TW91c2VEb3duID0gdHJ1ZTtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBkaWRIaWRlRHVlVG9Eb2N1bWVudE1vdXNlRG93biA9IGZhbHNlO1xuICAgICAgfSk7IC8vIFRoZSBsaXN0ZW5lciBnZXRzIGFkZGVkIGluIGBzY2hlZHVsZVNob3coKWAsIGJ1dCB0aGlzIG1heSBiZSBoaWRpbmcgaXRcbiAgICAgIC8vIGJlZm9yZSBpdCBzaG93cywgYW5kIGhpZGUoKSdzIGVhcmx5IGJhaWwtb3V0IGJlaGF2aW9yIGNhbiBwcmV2ZW50IGl0XG4gICAgICAvLyBmcm9tIGJlaW5nIGNsZWFuZWQgdXBcblxuICAgICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQpIHtcbiAgICAgICAgcmVtb3ZlRG9jdW1lbnRQcmVzcygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVG91Y2hNb3ZlKCkge1xuICAgIGRpZFRvdWNoTW92ZSA9IHRydWU7XG4gIH1cblxuICBmdW5jdGlvbiBvblRvdWNoU3RhcnQoKSB7XG4gICAgZGlkVG91Y2hNb3ZlID0gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBhZGREb2N1bWVudFByZXNzKCkge1xuICAgIHZhciBkb2MgPSBnZXREb2N1bWVudCgpO1xuICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBvbkRvY3VtZW50UHJlc3MsIHRydWUpO1xuICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIG9uRG9jdW1lbnRQcmVzcywgVE9VQ0hfT1BUSU9OUyk7XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvblRvdWNoU3RhcnQsIFRPVUNIX09QVElPTlMpO1xuICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBvblRvdWNoTW92ZSwgVE9VQ0hfT1BUSU9OUyk7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVEb2N1bWVudFByZXNzKCkge1xuICAgIHZhciBkb2MgPSBnZXREb2N1bWVudCgpO1xuICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBvbkRvY3VtZW50UHJlc3MsIHRydWUpO1xuICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIG9uRG9jdW1lbnRQcmVzcywgVE9VQ0hfT1BUSU9OUyk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvblRvdWNoU3RhcnQsIFRPVUNIX09QVElPTlMpO1xuICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBvblRvdWNoTW92ZSwgVE9VQ0hfT1BUSU9OUyk7XG4gIH1cblxuICBmdW5jdGlvbiBvblRyYW5zaXRpb25lZE91dChkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgICBvblRyYW5zaXRpb25FbmQoZHVyYXRpb24sIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlICYmIHBvcHBlci5wYXJlbnROb2RlICYmIHBvcHBlci5wYXJlbnROb2RlLmNvbnRhaW5zKHBvcHBlcikpIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVHJhbnNpdGlvbmVkSW4oZHVyYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgb25UcmFuc2l0aW9uRW5kKGR1cmF0aW9uLCBjYWxsYmFjayk7XG4gIH1cblxuICBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQoZHVyYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgdmFyIGJveCA9IGdldERlZmF1bHRUZW1wbGF0ZUNoaWxkcmVuKCkuYm94O1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC50YXJnZXQgPT09IGJveCkge1xuICAgICAgICB1cGRhdGVUcmFuc2l0aW9uRW5kTGlzdGVuZXIoYm94LCAncmVtb3ZlJywgbGlzdGVuZXIpO1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH0gLy8gTWFrZSBjYWxsYmFjayBzeW5jaHJvbm91cyBpZiBkdXJhdGlvbiBpcyAwXG4gICAgLy8gYHRyYW5zaXRpb25lbmRgIHdvbid0IGZpcmUgb3RoZXJ3aXNlXG5cblxuICAgIGlmIChkdXJhdGlvbiA9PT0gMCkge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgfVxuXG4gICAgdXBkYXRlVHJhbnNpdGlvbkVuZExpc3RlbmVyKGJveCwgJ3JlbW92ZScsIGN1cnJlbnRUcmFuc2l0aW9uRW5kTGlzdGVuZXIpO1xuICAgIHVwZGF0ZVRyYW5zaXRpb25FbmRMaXN0ZW5lcihib3gsICdhZGQnLCBsaXN0ZW5lcik7XG4gICAgY3VycmVudFRyYW5zaXRpb25FbmRMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICB9XG5cbiAgZnVuY3Rpb24gb24oZXZlbnRUeXBlLCBoYW5kbGVyLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBub2RlcyA9IG5vcm1hbGl6ZVRvQXJyYXkoaW5zdGFuY2UucHJvcHMudHJpZ2dlclRhcmdldCB8fCByZWZlcmVuY2UpO1xuICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgICAgbGlzdGVuZXJzLnB1c2goe1xuICAgICAgICBub2RlOiBub2RlLFxuICAgICAgICBldmVudFR5cGU6IGV2ZW50VHlwZSxcbiAgICAgICAgaGFuZGxlcjogaGFuZGxlcixcbiAgICAgICAgb3B0aW9uczogb3B0aW9uc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBhZGRMaXN0ZW5lcnMoKSB7XG4gICAgaWYgKGdldElzQ3VzdG9tVG91Y2hCZWhhdmlvcigpKSB7XG4gICAgICBvbigndG91Y2hzdGFydCcsIG9uVHJpZ2dlciwge1xuICAgICAgICBwYXNzaXZlOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIG9uKCd0b3VjaGVuZCcsIG9uTW91c2VMZWF2ZSwge1xuICAgICAgICBwYXNzaXZlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzcGxpdEJ5U3BhY2VzKGluc3RhbmNlLnByb3BzLnRyaWdnZXIpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50VHlwZSkge1xuICAgICAgaWYgKGV2ZW50VHlwZSA9PT0gJ21hbnVhbCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBvbihldmVudFR5cGUsIG9uVHJpZ2dlcik7XG5cbiAgICAgIHN3aXRjaCAoZXZlbnRUeXBlKSB7XG4gICAgICAgIGNhc2UgJ21vdXNlZW50ZXInOlxuICAgICAgICAgIG9uKCdtb3VzZWxlYXZlJywgb25Nb3VzZUxlYXZlKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdmb2N1cyc6XG4gICAgICAgICAgb24oaXNJRTExID8gJ2ZvY3Vzb3V0JyA6ICdibHVyJywgb25CbHVyT3JGb2N1c091dCk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnZm9jdXNpbic6XG4gICAgICAgICAgb24oJ2ZvY3Vzb3V0Jywgb25CbHVyT3JGb2N1c091dCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcnMoKSB7XG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBub2RlID0gX3JlZi5ub2RlLFxuICAgICAgICAgIGV2ZW50VHlwZSA9IF9yZWYuZXZlbnRUeXBlLFxuICAgICAgICAgIGhhbmRsZXIgPSBfcmVmLmhhbmRsZXIsXG4gICAgICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucztcbiAgICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgIH0pO1xuICAgIGxpc3RlbmVycyA9IFtdO1xuICB9XG5cbiAgZnVuY3Rpb24gb25UcmlnZ2VyKGV2ZW50KSB7XG4gICAgdmFyIF9sYXN0VHJpZ2dlckV2ZW50O1xuXG4gICAgdmFyIHNob3VsZFNjaGVkdWxlQ2xpY2tIaWRlID0gZmFsc2U7XG5cbiAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzRW5hYmxlZCB8fCBpc0V2ZW50TGlzdGVuZXJTdG9wcGVkKGV2ZW50KSB8fCBkaWRIaWRlRHVlVG9Eb2N1bWVudE1vdXNlRG93bikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB3YXNGb2N1c2VkID0gKChfbGFzdFRyaWdnZXJFdmVudCA9IGxhc3RUcmlnZ2VyRXZlbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbGFzdFRyaWdnZXJFdmVudC50eXBlKSA9PT0gJ2ZvY3VzJztcbiAgICBsYXN0VHJpZ2dlckV2ZW50ID0gZXZlbnQ7XG4gICAgY3VycmVudFRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCk7XG5cbiAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSAmJiBpc01vdXNlRXZlbnQoZXZlbnQpKSB7XG4gICAgICAvLyBJZiBzY3JvbGxpbmcsIGBtb3VzZWVudGVyYCBldmVudHMgY2FuIGJlIGZpcmVkIGlmIHRoZSBjdXJzb3IgbGFuZHNcbiAgICAgIC8vIG92ZXIgYSBuZXcgdGFyZ2V0LCBidXQgYG1vdXNlbW92ZWAgZXZlbnRzIGRvbid0IGdldCBmaXJlZC4gVGhpc1xuICAgICAgLy8gY2F1c2VzIGludGVyYWN0aXZlIHRvb2x0aXBzIHRvIGdldCBzdHVjayBvcGVuIHVudGlsIHRoZSBjdXJzb3IgaXNcbiAgICAgIC8vIG1vdmVkXG4gICAgICBtb3VzZU1vdmVMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgcmV0dXJuIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0gLy8gVG9nZ2xlIHNob3cvaGlkZSB3aGVuIGNsaWNraW5nIGNsaWNrLXRyaWdnZXJlZCB0b29sdGlwc1xuXG5cbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ2NsaWNrJyAmJiAoaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdtb3VzZWVudGVyJykgPCAwIHx8IGlzVmlzaWJsZUZyb21DbGljaykgJiYgaW5zdGFuY2UucHJvcHMuaGlkZU9uQ2xpY2sgIT09IGZhbHNlICYmIGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSkge1xuICAgICAgc2hvdWxkU2NoZWR1bGVDbGlja0hpZGUgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZVNob3coZXZlbnQpO1xuICAgIH1cblxuICAgIGlmIChldmVudC50eXBlID09PSAnY2xpY2snKSB7XG4gICAgICBpc1Zpc2libGVGcm9tQ2xpY2sgPSAhc2hvdWxkU2NoZWR1bGVDbGlja0hpZGU7XG4gICAgfVxuXG4gICAgaWYgKHNob3VsZFNjaGVkdWxlQ2xpY2tIaWRlICYmICF3YXNGb2N1c2VkKSB7XG4gICAgICBzY2hlZHVsZUhpZGUoZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICB2YXIgaXNDdXJzb3JPdmVyUmVmZXJlbmNlT3JQb3BwZXIgPSBnZXRDdXJyZW50VGFyZ2V0KCkuY29udGFpbnModGFyZ2V0KSB8fCBwb3BwZXIuY29udGFpbnModGFyZ2V0KTtcblxuICAgIGlmIChldmVudC50eXBlID09PSAnbW91c2Vtb3ZlJyAmJiBpc0N1cnNvck92ZXJSZWZlcmVuY2VPclBvcHBlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBwb3BwZXJUcmVlRGF0YSA9IGdldE5lc3RlZFBvcHBlclRyZWUoKS5jb25jYXQocG9wcGVyKS5tYXAoZnVuY3Rpb24gKHBvcHBlcikge1xuICAgICAgdmFyIF9pbnN0YW5jZSRwb3BwZXJJbnN0YTtcblxuICAgICAgdmFyIGluc3RhbmNlID0gcG9wcGVyLl90aXBweTtcbiAgICAgIHZhciBzdGF0ZSA9IChfaW5zdGFuY2UkcG9wcGVySW5zdGEgPSBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9pbnN0YW5jZSRwb3BwZXJJbnN0YS5zdGF0ZTtcblxuICAgICAgaWYgKHN0YXRlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcG9wcGVyUmVjdDogcG9wcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgIHBvcHBlclN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICBwcm9wczogcHJvcHNcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSkuZmlsdGVyKEJvb2xlYW4pO1xuXG4gICAgaWYgKGlzQ3Vyc29yT3V0c2lkZUludGVyYWN0aXZlQm9yZGVyKHBvcHBlclRyZWVEYXRhLCBldmVudCkpIHtcbiAgICAgIGNsZWFudXBJbnRlcmFjdGl2ZU1vdXNlTGlzdGVuZXJzKCk7XG4gICAgICBzY2hlZHVsZUhpZGUoZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uTW91c2VMZWF2ZShldmVudCkge1xuICAgIHZhciBzaG91bGRCYWlsID0gaXNFdmVudExpc3RlbmVyU3RvcHBlZChldmVudCkgfHwgaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdjbGljaycpID49IDAgJiYgaXNWaXNpYmxlRnJvbUNsaWNrO1xuXG4gICAgaWYgKHNob3VsZEJhaWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMuaW50ZXJhY3RpdmUpIHtcbiAgICAgIGluc3RhbmNlLmhpZGVXaXRoSW50ZXJhY3Rpdml0eShldmVudCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2NoZWR1bGVIaWRlKGV2ZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uQmx1ck9yRm9jdXNPdXQoZXZlbnQpIHtcbiAgICBpZiAoaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdmb2N1c2luJykgPCAwICYmIGV2ZW50LnRhcmdldCAhPT0gZ2V0Q3VycmVudFRhcmdldCgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBJZiBmb2N1cyB3YXMgbW92ZWQgdG8gd2l0aGluIHRoZSBwb3BwZXJcblxuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGV2ZW50LnJlbGF0ZWRUYXJnZXQgJiYgcG9wcGVyLmNvbnRhaW5zKGV2ZW50LnJlbGF0ZWRUYXJnZXQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2NoZWR1bGVIaWRlKGV2ZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzRXZlbnRMaXN0ZW5lclN0b3BwZWQoZXZlbnQpIHtcbiAgICByZXR1cm4gY3VycmVudElucHV0LmlzVG91Y2ggPyBnZXRJc0N1c3RvbVRvdWNoQmVoYXZpb3IoKSAhPT0gZXZlbnQudHlwZS5pbmRleE9mKCd0b3VjaCcpID49IDAgOiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVBvcHBlckluc3RhbmNlKCkge1xuICAgIGRlc3Ryb3lQb3BwZXJJbnN0YW5jZSgpO1xuICAgIHZhciBfaW5zdGFuY2UkcHJvcHMyID0gaW5zdGFuY2UucHJvcHMsXG4gICAgICAgIHBvcHBlck9wdGlvbnMgPSBfaW5zdGFuY2UkcHJvcHMyLnBvcHBlck9wdGlvbnMsXG4gICAgICAgIHBsYWNlbWVudCA9IF9pbnN0YW5jZSRwcm9wczIucGxhY2VtZW50LFxuICAgICAgICBvZmZzZXQgPSBfaW5zdGFuY2UkcHJvcHMyLm9mZnNldCxcbiAgICAgICAgZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCA9IF9pbnN0YW5jZSRwcm9wczIuZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCxcbiAgICAgICAgbW92ZVRyYW5zaXRpb24gPSBfaW5zdGFuY2UkcHJvcHMyLm1vdmVUcmFuc2l0aW9uO1xuICAgIHZhciBhcnJvdyA9IGdldElzRGVmYXVsdFJlbmRlckZuKCkgPyBnZXRDaGlsZHJlbihwb3BwZXIpLmFycm93IDogbnVsbDtcbiAgICB2YXIgY29tcHV0ZWRSZWZlcmVuY2UgPSBnZXRSZWZlcmVuY2VDbGllbnRSZWN0ID8ge1xuICAgICAgZ2V0Qm91bmRpbmdDbGllbnRSZWN0OiBnZXRSZWZlcmVuY2VDbGllbnRSZWN0LFxuICAgICAgY29udGV4dEVsZW1lbnQ6IGdldFJlZmVyZW5jZUNsaWVudFJlY3QuY29udGV4dEVsZW1lbnQgfHwgZ2V0Q3VycmVudFRhcmdldCgpXG4gICAgfSA6IHJlZmVyZW5jZTtcbiAgICB2YXIgdGlwcHlNb2RpZmllciA9IHtcbiAgICAgIG5hbWU6ICckJHRpcHB5JyxcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICBwaGFzZTogJ2JlZm9yZVdyaXRlJyxcbiAgICAgIHJlcXVpcmVzOiBbJ2NvbXB1dGVTdHlsZXMnXSxcbiAgICAgIGZuOiBmdW5jdGlvbiBmbihfcmVmMikge1xuICAgICAgICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZTtcblxuICAgICAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgICAgIHZhciBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2ggPSBnZXREZWZhdWx0VGVtcGxhdGVDaGlsZHJlbigpLFxuICAgICAgICAgICAgICBib3ggPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2guYm94O1xuXG4gICAgICAgICAgWydwbGFjZW1lbnQnLCAncmVmZXJlbmNlLWhpZGRlbicsICdlc2NhcGVkJ10uZm9yRWFjaChmdW5jdGlvbiAoYXR0cikge1xuICAgICAgICAgICAgaWYgKGF0dHIgPT09ICdwbGFjZW1lbnQnKSB7XG4gICAgICAgICAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhY2VtZW50Jywgc3RhdGUucGxhY2VtZW50KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlcltcImRhdGEtcG9wcGVyLVwiICsgYXR0cl0pIHtcbiAgICAgICAgICAgICAgICBib3guc2V0QXR0cmlidXRlKFwiZGF0YS1cIiArIGF0dHIsICcnKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBib3gucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1cIiArIGF0dHIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgc3RhdGUuYXR0cmlidXRlcy5wb3BwZXIgPSB7fTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgdmFyIG1vZGlmaWVycyA9IFt7XG4gICAgICBuYW1lOiAnb2Zmc2V0JyxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgb2Zmc2V0OiBvZmZzZXRcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAncHJldmVudE92ZXJmbG93JyxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgIHRvcDogMixcbiAgICAgICAgICBib3R0b206IDIsXG4gICAgICAgICAgbGVmdDogNSxcbiAgICAgICAgICByaWdodDogNVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwge1xuICAgICAgbmFtZTogJ2ZsaXAnLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBwYWRkaW5nOiA1XG4gICAgICB9XG4gICAgfSwge1xuICAgICAgbmFtZTogJ2NvbXB1dGVTdHlsZXMnLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBhZGFwdGl2ZTogIW1vdmVUcmFuc2l0aW9uXG4gICAgICB9XG4gICAgfSwgdGlwcHlNb2RpZmllcl07XG5cbiAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSAmJiBhcnJvdykge1xuICAgICAgbW9kaWZpZXJzLnB1c2goe1xuICAgICAgICBuYW1lOiAnYXJyb3cnLFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgZWxlbWVudDogYXJyb3csXG4gICAgICAgICAgcGFkZGluZzogM1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBtb2RpZmllcnMucHVzaC5hcHBseShtb2RpZmllcnMsIChwb3BwZXJPcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBwb3BwZXJPcHRpb25zLm1vZGlmaWVycykgfHwgW10pO1xuICAgIGluc3RhbmNlLnBvcHBlckluc3RhbmNlID0gY3JlYXRlUG9wcGVyKGNvbXB1dGVkUmVmZXJlbmNlLCBwb3BwZXIsIE9iamVjdC5hc3NpZ24oe30sIHBvcHBlck9wdGlvbnMsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgb25GaXJzdFVwZGF0ZTogb25GaXJzdFVwZGF0ZSxcbiAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzXG4gICAgfSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVzdHJveVBvcHBlckluc3RhbmNlKCkge1xuICAgIGlmIChpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSkge1xuICAgICAgaW5zdGFuY2UucG9wcGVySW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgaW5zdGFuY2UucG9wcGVySW5zdGFuY2UgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdW50KCkge1xuICAgIHZhciBhcHBlbmRUbyA9IGluc3RhbmNlLnByb3BzLmFwcGVuZFRvO1xuICAgIHZhciBwYXJlbnROb2RlOyAvLyBCeSBkZWZhdWx0LCB3ZSdsbCBhcHBlbmQgdGhlIHBvcHBlciB0byB0aGUgdHJpZ2dlclRhcmdldHMncyBwYXJlbnROb2RlIHNvXG4gICAgLy8gaXQncyBkaXJlY3RseSBhZnRlciB0aGUgcmVmZXJlbmNlIGVsZW1lbnQgc28gdGhlIGVsZW1lbnRzIGluc2lkZSB0aGVcbiAgICAvLyB0aXBweSBjYW4gYmUgdGFiYmVkIHRvXG4gICAgLy8gSWYgdGhlcmUgYXJlIGNsaXBwaW5nIGlzc3VlcywgdGhlIHVzZXIgY2FuIHNwZWNpZnkgYSBkaWZmZXJlbnQgYXBwZW5kVG9cbiAgICAvLyBhbmQgZW5zdXJlIGZvY3VzIG1hbmFnZW1lbnQgaXMgaGFuZGxlZCBjb3JyZWN0bHkgbWFudWFsbHlcblxuICAgIHZhciBub2RlID0gZ2V0Q3VycmVudFRhcmdldCgpO1xuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGFwcGVuZFRvID09PSBUSVBQWV9ERUZBVUxUX0FQUEVORF9UTyB8fCBhcHBlbmRUbyA9PT0gJ3BhcmVudCcpIHtcbiAgICAgIHBhcmVudE5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcmVudE5vZGUgPSBpbnZva2VXaXRoQXJnc09yUmV0dXJuKGFwcGVuZFRvLCBbbm9kZV0pO1xuICAgIH0gLy8gVGhlIHBvcHBlciBlbGVtZW50IG5lZWRzIHRvIGV4aXN0IG9uIHRoZSBET00gYmVmb3JlIGl0cyBwb3NpdGlvbiBjYW4gYmVcbiAgICAvLyB1cGRhdGVkIGFzIFBvcHBlciBuZWVkcyB0byByZWFkIGl0cyBkaW1lbnNpb25zXG5cblxuICAgIGlmICghcGFyZW50Tm9kZS5jb250YWlucyhwb3BwZXIpKSB7XG4gICAgICBwYXJlbnROb2RlLmFwcGVuZENoaWxkKHBvcHBlcik7XG4gICAgfVxuXG4gICAgaW5zdGFuY2Uuc3RhdGUuaXNNb3VudGVkID0gdHJ1ZTtcbiAgICBjcmVhdGVQb3BwZXJJbnN0YW5jZSgpO1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAvLyBBY2Nlc3NpYmlsaXR5IGNoZWNrXG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSAmJiBhcHBlbmRUbyA9PT0gZGVmYXVsdFByb3BzLmFwcGVuZFRvICYmIG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nICE9PSBwb3BwZXIsIFsnSW50ZXJhY3RpdmUgdGlwcHkgZWxlbWVudCBtYXkgbm90IGJlIGFjY2Vzc2libGUgdmlhIGtleWJvYXJkJywgJ25hdmlnYXRpb24gYmVjYXVzZSBpdCBpcyBub3QgZGlyZWN0bHkgYWZ0ZXIgdGhlIHJlZmVyZW5jZSBlbGVtZW50JywgJ2luIHRoZSBET00gc291cmNlIG9yZGVyLicsICdcXG5cXG4nLCAnVXNpbmcgYSB3cmFwcGVyIDxkaXY+IG9yIDxzcGFuPiB0YWcgYXJvdW5kIHRoZSByZWZlcmVuY2UgZWxlbWVudCcsICdzb2x2ZXMgdGhpcyBieSBjcmVhdGluZyBhIG5ldyBwYXJlbnROb2RlIGNvbnRleHQuJywgJ1xcblxcbicsICdTcGVjaWZ5aW5nIGBhcHBlbmRUbzogZG9jdW1lbnQuYm9keWAgc2lsZW5jZXMgdGhpcyB3YXJuaW5nLCBidXQgaXQnLCAnYXNzdW1lcyB5b3UgYXJlIHVzaW5nIGEgZm9jdXMgbWFuYWdlbWVudCBzb2x1dGlvbiB0byBoYW5kbGUnLCAna2V5Ym9hcmQgbmF2aWdhdGlvbi4nLCAnXFxuXFxuJywgJ1NlZTogaHR0cHM6Ly9hdG9taWtzLmdpdGh1Yi5pby90aXBweWpzL3Y2L2FjY2Vzc2liaWxpdHkvI2ludGVyYWN0aXZpdHknXS5qb2luKCcgJykpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE5lc3RlZFBvcHBlclRyZWUoKSB7XG4gICAgcmV0dXJuIGFycmF5RnJvbShwb3BwZXIucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdGlwcHktcm9vdF0nKSk7XG4gIH1cblxuICBmdW5jdGlvbiBzY2hlZHVsZVNob3coZXZlbnQpIHtcbiAgICBpbnN0YW5jZS5jbGVhckRlbGF5VGltZW91dHMoKTtcblxuICAgIGlmIChldmVudCkge1xuICAgICAgaW52b2tlSG9vaygnb25UcmlnZ2VyJywgW2luc3RhbmNlLCBldmVudF0pO1xuICAgIH1cblxuICAgIGFkZERvY3VtZW50UHJlc3MoKTtcbiAgICB2YXIgZGVsYXkgPSBnZXREZWxheSh0cnVlKTtcblxuICAgIHZhciBfZ2V0Tm9ybWFsaXplZFRvdWNoU2UgPSBnZXROb3JtYWxpemVkVG91Y2hTZXR0aW5ncygpLFxuICAgICAgICB0b3VjaFZhbHVlID0gX2dldE5vcm1hbGl6ZWRUb3VjaFNlWzBdLFxuICAgICAgICB0b3VjaERlbGF5ID0gX2dldE5vcm1hbGl6ZWRUb3VjaFNlWzFdO1xuXG4gICAgaWYgKGN1cnJlbnRJbnB1dC5pc1RvdWNoICYmIHRvdWNoVmFsdWUgPT09ICdob2xkJyAmJiB0b3VjaERlbGF5KSB7XG4gICAgICBkZWxheSA9IHRvdWNoRGVsYXk7XG4gICAgfVxuXG4gICAgaWYgKGRlbGF5KSB7XG4gICAgICBzaG93VGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZS5zaG93KCk7XG4gICAgICB9LCBkZWxheSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGluc3RhbmNlLnNob3coKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzY2hlZHVsZUhpZGUoZXZlbnQpIHtcbiAgICBpbnN0YW5jZS5jbGVhckRlbGF5VGltZW91dHMoKTtcbiAgICBpbnZva2VIb29rKCdvblVudHJpZ2dlcicsIFtpbnN0YW5jZSwgZXZlbnRdKTtcblxuICAgIGlmICghaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlKSB7XG4gICAgICByZW1vdmVEb2N1bWVudFByZXNzKCk7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBGb3IgaW50ZXJhY3RpdmUgdGlwcGllcywgc2NoZWR1bGVIaWRlIGlzIGFkZGVkIHRvIGEgZG9jdW1lbnQuYm9keSBoYW5kbGVyXG4gICAgLy8gZnJvbSBvbk1vdXNlTGVhdmUgc28gbXVzdCBpbnRlcmNlcHQgc2NoZWR1bGVkIGhpZGVzIGZyb20gbW91c2Vtb3ZlL2xlYXZlXG4gICAgLy8gZXZlbnRzIHdoZW4gdHJpZ2dlciBjb250YWlucyBtb3VzZWVudGVyIGFuZCBjbGljaywgYW5kIHRoZSB0aXAgaXNcbiAgICAvLyBjdXJyZW50bHkgc2hvd24gYXMgYSByZXN1bHQgb2YgYSBjbGljay5cblxuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLnRyaWdnZXIuaW5kZXhPZignbW91c2VlbnRlcicpID49IDAgJiYgaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdjbGljaycpID49IDAgJiYgWydtb3VzZWxlYXZlJywgJ21vdXNlbW92ZSddLmluZGV4T2YoZXZlbnQudHlwZSkgPj0gMCAmJiBpc1Zpc2libGVGcm9tQ2xpY2spIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgZGVsYXkgPSBnZXREZWxheShmYWxzZSk7XG5cbiAgICBpZiAoZGVsYXkpIHtcbiAgICAgIGhpZGVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgICAgICBpbnN0YW5jZS5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGRlbGF5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gRml4ZXMgYSBgdHJhbnNpdGlvbmVuZGAgcHJvYmxlbSB3aGVuIGl0IGZpcmVzIDEgZnJhbWUgdG9vXG4gICAgICAvLyBsYXRlIHNvbWV0aW1lcywgd2UgZG9uJ3Qgd2FudCBoaWRlKCkgdG8gYmUgY2FsbGVkLlxuICAgICAgc2NoZWR1bGVIaWRlQW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZS5oaWRlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIPCflJEgUHVibGljIG1ldGhvZHNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuICBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgaW5zdGFuY2Uuc3RhdGUuaXNFbmFibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgLy8gRGlzYWJsaW5nIHRoZSBpbnN0YW5jZSBzaG91bGQgYWxzbyBoaWRlIGl0XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2F0b21pa3MvdGlwcHkuanMtcmVhY3QvaXNzdWVzLzEwNlxuICAgIGluc3RhbmNlLmhpZGUoKTtcbiAgICBpbnN0YW5jZS5zdGF0ZS5pc0VuYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFyRGVsYXlUaW1lb3V0cygpIHtcbiAgICBjbGVhclRpbWVvdXQoc2hvd1RpbWVvdXQpO1xuICAgIGNsZWFyVGltZW91dChoaWRlVGltZW91dCk7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoc2NoZWR1bGVIaWRlQW5pbWF0aW9uRnJhbWUpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0UHJvcHMocGFydGlhbFByb3BzKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCwgY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcoJ3NldFByb3BzJykpO1xuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGludm9rZUhvb2soJ29uQmVmb3JlVXBkYXRlJywgW2luc3RhbmNlLCBwYXJ0aWFsUHJvcHNdKTtcbiAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICB2YXIgcHJldlByb3BzID0gaW5zdGFuY2UucHJvcHM7XG4gICAgdmFyIG5leHRQcm9wcyA9IGV2YWx1YXRlUHJvcHMocmVmZXJlbmNlLCBPYmplY3QuYXNzaWduKHt9LCBwcmV2UHJvcHMsIHJlbW92ZVVuZGVmaW5lZFByb3BzKHBhcnRpYWxQcm9wcyksIHtcbiAgICAgIGlnbm9yZUF0dHJpYnV0ZXM6IHRydWVcbiAgICB9KSk7XG4gICAgaW5zdGFuY2UucHJvcHMgPSBuZXh0UHJvcHM7XG4gICAgYWRkTGlzdGVuZXJzKCk7XG5cbiAgICBpZiAocHJldlByb3BzLmludGVyYWN0aXZlRGVib3VuY2UgIT09IG5leHRQcm9wcy5pbnRlcmFjdGl2ZURlYm91bmNlKSB7XG4gICAgICBjbGVhbnVwSW50ZXJhY3RpdmVNb3VzZUxpc3RlbmVycygpO1xuICAgICAgZGVib3VuY2VkT25Nb3VzZU1vdmUgPSBkZWJvdW5jZShvbk1vdXNlTW92ZSwgbmV4dFByb3BzLmludGVyYWN0aXZlRGVib3VuY2UpO1xuICAgIH0gLy8gRW5zdXJlIHN0YWxlIGFyaWEtZXhwYW5kZWQgYXR0cmlidXRlcyBhcmUgcmVtb3ZlZFxuXG5cbiAgICBpZiAocHJldlByb3BzLnRyaWdnZXJUYXJnZXQgJiYgIW5leHRQcm9wcy50cmlnZ2VyVGFyZ2V0KSB7XG4gICAgICBub3JtYWxpemVUb0FycmF5KHByZXZQcm9wcy50cmlnZ2VyVGFyZ2V0KS5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKG5leHRQcm9wcy50cmlnZ2VyVGFyZ2V0KSB7XG4gICAgICByZWZlcmVuY2UucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJyk7XG4gICAgfVxuXG4gICAgaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCk7XG4gICAgaGFuZGxlU3R5bGVzKCk7XG5cbiAgICBpZiAob25VcGRhdGUpIHtcbiAgICAgIG9uVXBkYXRlKHByZXZQcm9wcywgbmV4dFByb3BzKTtcbiAgICB9XG5cbiAgICBpZiAoaW5zdGFuY2UucG9wcGVySW5zdGFuY2UpIHtcbiAgICAgIGNyZWF0ZVBvcHBlckluc3RhbmNlKCk7IC8vIEZpeGVzIGFuIGlzc3VlIHdpdGggbmVzdGVkIHRpcHBpZXMgaWYgdGhleSBhcmUgYWxsIGdldHRpbmcgcmUtcmVuZGVyZWQsXG4gICAgICAvLyBhbmQgdGhlIG5lc3RlZCBvbmVzIGdldCByZS1yZW5kZXJlZCBmaXJzdC5cbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hdG9taWtzL3RpcHB5anMtcmVhY3QvaXNzdWVzLzE3N1xuICAgICAgLy8gVE9ETzogZmluZCBhIGNsZWFuZXIgLyBtb3JlIGVmZmljaWVudCBzb2x1dGlvbighKVxuXG4gICAgICBnZXROZXN0ZWRQb3BwZXJUcmVlKCkuZm9yRWFjaChmdW5jdGlvbiAobmVzdGVkUG9wcGVyKSB7XG4gICAgICAgIC8vIFJlYWN0IChhbmQgb3RoZXIgVUkgbGlicyBsaWtlbHkpIHJlcXVpcmVzIGEgckFGIHdyYXBwZXIgYXMgaXQgZmx1c2hlc1xuICAgICAgICAvLyBpdHMgd29yayBpbiBvbmVcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKG5lc3RlZFBvcHBlci5fdGlwcHkucG9wcGVySW5zdGFuY2UuZm9yY2VVcGRhdGUpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaW52b2tlSG9vaygnb25BZnRlclVwZGF0ZScsIFtpbnN0YW5jZSwgcGFydGlhbFByb3BzXSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRDb250ZW50KGNvbnRlbnQpIHtcbiAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICBjb250ZW50OiBjb250ZW50XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBzaG93KCkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgd2FybldoZW4oaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQsIGNyZWF0ZU1lbW9yeUxlYWtXYXJuaW5nKCdzaG93JykpO1xuICAgIH0gLy8gRWFybHkgYmFpbC1vdXRcblxuXG4gICAgdmFyIGlzQWxyZWFkeVZpc2libGUgPSBpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGU7XG4gICAgdmFyIGlzRGVzdHJveWVkID0gaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQ7XG4gICAgdmFyIGlzRGlzYWJsZWQgPSAhaW5zdGFuY2Uuc3RhdGUuaXNFbmFibGVkO1xuICAgIHZhciBpc1RvdWNoQW5kVG91Y2hEaXNhYmxlZCA9IGN1cnJlbnRJbnB1dC5pc1RvdWNoICYmICFpbnN0YW5jZS5wcm9wcy50b3VjaDtcbiAgICB2YXIgZHVyYXRpb24gPSBnZXRWYWx1ZUF0SW5kZXhPclJldHVybihpbnN0YW5jZS5wcm9wcy5kdXJhdGlvbiwgMCwgZGVmYXVsdFByb3BzLmR1cmF0aW9uKTtcblxuICAgIGlmIChpc0FscmVhZHlWaXNpYmxlIHx8IGlzRGVzdHJveWVkIHx8IGlzRGlzYWJsZWQgfHwgaXNUb3VjaEFuZFRvdWNoRGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIE5vcm1hbGl6ZSBgZGlzYWJsZWRgIGJlaGF2aW9yIGFjcm9zcyBicm93c2Vycy5cbiAgICAvLyBGaXJlZm94IGFsbG93cyBldmVudHMgb24gZGlzYWJsZWQgZWxlbWVudHMsIGJ1dCBDaHJvbWUgZG9lc24ndC5cbiAgICAvLyBVc2luZyBhIHdyYXBwZXIgZWxlbWVudCAoaS5lLiA8c3Bhbj4pIGlzIHJlY29tbWVuZGVkLlxuXG5cbiAgICBpZiAoZ2V0Q3VycmVudFRhcmdldCgpLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGludm9rZUhvb2soJ29uU2hvdycsIFtpbnN0YW5jZV0sIGZhbHNlKTtcblxuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5vblNob3coaW5zdGFuY2UpID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSA9IHRydWU7XG5cbiAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgcG9wcGVyLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG4gICAgfVxuXG4gICAgaGFuZGxlU3R5bGVzKCk7XG4gICAgYWRkRG9jdW1lbnRQcmVzcygpO1xuXG4gICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQpIHtcbiAgICAgIHBvcHBlci5zdHlsZS50cmFuc2l0aW9uID0gJ25vbmUnO1xuICAgIH0gLy8gSWYgZmxpcHBpbmcgdG8gdGhlIG9wcG9zaXRlIHNpZGUgYWZ0ZXIgaGlkaW5nIGF0IGxlYXN0IG9uY2UsIHRoZVxuICAgIC8vIGFuaW1hdGlvbiB3aWxsIHVzZSB0aGUgd3JvbmcgcGxhY2VtZW50IHdpdGhvdXQgcmVzZXR0aW5nIHRoZSBkdXJhdGlvblxuXG5cbiAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgdmFyIF9nZXREZWZhdWx0VGVtcGxhdGVDaDIgPSBnZXREZWZhdWx0VGVtcGxhdGVDaGlsZHJlbigpLFxuICAgICAgICAgIGJveCA9IF9nZXREZWZhdWx0VGVtcGxhdGVDaDIuYm94LFxuICAgICAgICAgIGNvbnRlbnQgPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2gyLmNvbnRlbnQ7XG5cbiAgICAgIHNldFRyYW5zaXRpb25EdXJhdGlvbihbYm94LCBjb250ZW50XSwgMCk7XG4gICAgfVxuXG4gICAgb25GaXJzdFVwZGF0ZSA9IGZ1bmN0aW9uIG9uRmlyc3RVcGRhdGUoKSB7XG4gICAgICB2YXIgX2luc3RhbmNlJHBvcHBlckluc3RhMjtcblxuICAgICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgfHwgaWdub3JlT25GaXJzdFVwZGF0ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlnbm9yZU9uRmlyc3RVcGRhdGUgPSB0cnVlOyAvLyByZWZsb3dcblxuICAgICAgdm9pZCBwb3BwZXIub2Zmc2V0SGVpZ2h0O1xuICAgICAgcG9wcGVyLnN0eWxlLnRyYW5zaXRpb24gPSBpbnN0YW5jZS5wcm9wcy5tb3ZlVHJhbnNpdGlvbjtcblxuICAgICAgaWYgKGdldElzRGVmYXVsdFJlbmRlckZuKCkgJiYgaW5zdGFuY2UucHJvcHMuYW5pbWF0aW9uKSB7XG4gICAgICAgIHZhciBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2gzID0gZ2V0RGVmYXVsdFRlbXBsYXRlQ2hpbGRyZW4oKSxcbiAgICAgICAgICAgIF9ib3ggPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2gzLmJveCxcbiAgICAgICAgICAgIF9jb250ZW50ID0gX2dldERlZmF1bHRUZW1wbGF0ZUNoMy5jb250ZW50O1xuXG4gICAgICAgIHNldFRyYW5zaXRpb25EdXJhdGlvbihbX2JveCwgX2NvbnRlbnRdLCBkdXJhdGlvbik7XG4gICAgICAgIHNldFZpc2liaWxpdHlTdGF0ZShbX2JveCwgX2NvbnRlbnRdLCAndmlzaWJsZScpO1xuICAgICAgfVxuXG4gICAgICBoYW5kbGVBcmlhQ29udGVudEF0dHJpYnV0ZSgpO1xuICAgICAgaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCk7XG4gICAgICBwdXNoSWZVbmlxdWUobW91bnRlZEluc3RhbmNlcywgaW5zdGFuY2UpOyAvLyBjZXJ0YWluIG1vZGlmaWVycyAoZS5nLiBgbWF4U2l6ZWApIHJlcXVpcmUgYSBzZWNvbmQgdXBkYXRlIGFmdGVyIHRoZVxuICAgICAgLy8gcG9wcGVyIGhhcyBiZWVuIHBvc2l0aW9uZWQgZm9yIHRoZSBmaXJzdCB0aW1lXG5cbiAgICAgIChfaW5zdGFuY2UkcG9wcGVySW5zdGEyID0gaW5zdGFuY2UucG9wcGVySW5zdGFuY2UpID09IG51bGwgPyB2b2lkIDAgOiBfaW5zdGFuY2UkcG9wcGVySW5zdGEyLmZvcmNlVXBkYXRlKCk7XG4gICAgICBpbnZva2VIb29rKCdvbk1vdW50JywgW2luc3RhbmNlXSk7XG5cbiAgICAgIGlmIChpbnN0YW5jZS5wcm9wcy5hbmltYXRpb24gJiYgZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgICBvblRyYW5zaXRpb25lZEluKGR1cmF0aW9uLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW5zdGFuY2Uuc3RhdGUuaXNTaG93biA9IHRydWU7XG4gICAgICAgICAgaW52b2tlSG9vaygnb25TaG93bicsIFtpbnN0YW5jZV0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgbW91bnQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhpZGUoKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCwgY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcoJ2hpZGUnKSk7XG4gICAgfSAvLyBFYXJseSBiYWlsLW91dFxuXG5cbiAgICB2YXIgaXNBbHJlYWR5SGlkZGVuID0gIWluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZTtcbiAgICB2YXIgaXNEZXN0cm95ZWQgPSBpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZDtcbiAgICB2YXIgaXNEaXNhYmxlZCA9ICFpbnN0YW5jZS5zdGF0ZS5pc0VuYWJsZWQ7XG4gICAgdmFyIGR1cmF0aW9uID0gZ2V0VmFsdWVBdEluZGV4T3JSZXR1cm4oaW5zdGFuY2UucHJvcHMuZHVyYXRpb24sIDEsIGRlZmF1bHRQcm9wcy5kdXJhdGlvbik7XG5cbiAgICBpZiAoaXNBbHJlYWR5SGlkZGVuIHx8IGlzRGVzdHJveWVkIHx8IGlzRGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpbnZva2VIb29rKCdvbkhpZGUnLCBbaW5zdGFuY2VdLCBmYWxzZSk7XG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMub25IaWRlKGluc3RhbmNlKSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgPSBmYWxzZTtcbiAgICBpbnN0YW5jZS5zdGF0ZS5pc1Nob3duID0gZmFsc2U7XG4gICAgaWdub3JlT25GaXJzdFVwZGF0ZSA9IGZhbHNlO1xuICAgIGlzVmlzaWJsZUZyb21DbGljayA9IGZhbHNlO1xuXG4gICAgaWYgKGdldElzRGVmYXVsdFJlbmRlckZuKCkpIHtcbiAgICAgIHBvcHBlci5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgfVxuXG4gICAgY2xlYW51cEludGVyYWN0aXZlTW91c2VMaXN0ZW5lcnMoKTtcbiAgICByZW1vdmVEb2N1bWVudFByZXNzKCk7XG4gICAgaGFuZGxlU3R5bGVzKHRydWUpO1xuXG4gICAgaWYgKGdldElzRGVmYXVsdFJlbmRlckZuKCkpIHtcbiAgICAgIHZhciBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2g0ID0gZ2V0RGVmYXVsdFRlbXBsYXRlQ2hpbGRyZW4oKSxcbiAgICAgICAgICBib3ggPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2g0LmJveCxcbiAgICAgICAgICBjb250ZW50ID0gX2dldERlZmF1bHRUZW1wbGF0ZUNoNC5jb250ZW50O1xuXG4gICAgICBpZiAoaW5zdGFuY2UucHJvcHMuYW5pbWF0aW9uKSB7XG4gICAgICAgIHNldFRyYW5zaXRpb25EdXJhdGlvbihbYm94LCBjb250ZW50XSwgZHVyYXRpb24pO1xuICAgICAgICBzZXRWaXNpYmlsaXR5U3RhdGUoW2JveCwgY29udGVudF0sICdoaWRkZW4nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVBcmlhQ29udGVudEF0dHJpYnV0ZSgpO1xuICAgIGhhbmRsZUFyaWFFeHBhbmRlZEF0dHJpYnV0ZSgpO1xuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmFuaW1hdGlvbikge1xuICAgICAgaWYgKGdldElzRGVmYXVsdFJlbmRlckZuKCkpIHtcbiAgICAgICAgb25UcmFuc2l0aW9uZWRPdXQoZHVyYXRpb24sIGluc3RhbmNlLnVubW91bnQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpbnN0YW5jZS51bm1vdW50KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGlkZVdpdGhJbnRlcmFjdGl2aXR5KGV2ZW50KSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCwgY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcoJ2hpZGVXaXRoSW50ZXJhY3Rpdml0eScpKTtcbiAgICB9XG5cbiAgICBnZXREb2N1bWVudCgpLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRlYm91bmNlZE9uTW91c2VNb3ZlKTtcbiAgICBwdXNoSWZVbmlxdWUobW91c2VNb3ZlTGlzdGVuZXJzLCBkZWJvdW5jZWRPbk1vdXNlTW92ZSk7XG4gICAgZGVib3VuY2VkT25Nb3VzZU1vdmUoZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5tb3VudCgpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkLCBjcmVhdGVNZW1vcnlMZWFrV2FybmluZygndW5tb3VudCcpKTtcbiAgICB9XG5cbiAgICBpZiAoaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlKSB7XG4gICAgICBpbnN0YW5jZS5oaWRlKCk7XG4gICAgfVxuXG4gICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBkZXN0cm95UG9wcGVySW5zdGFuY2UoKTsgLy8gSWYgYSBwb3BwZXIgaXMgbm90IGludGVyYWN0aXZlLCBpdCB3aWxsIGJlIGFwcGVuZGVkIG91dHNpZGUgdGhlIHBvcHBlclxuICAgIC8vIHRyZWUgYnkgZGVmYXVsdC4gVGhpcyBzZWVtcyBtYWlubHkgZm9yIGludGVyYWN0aXZlIHRpcHBpZXMsIGJ1dCB3ZSBzaG91bGRcbiAgICAvLyBmaW5kIGEgd29ya2Fyb3VuZCBpZiBwb3NzaWJsZVxuXG4gICAgZ2V0TmVzdGVkUG9wcGVyVHJlZSgpLmZvckVhY2goZnVuY3Rpb24gKG5lc3RlZFBvcHBlcikge1xuICAgICAgbmVzdGVkUG9wcGVyLl90aXBweS51bm1vdW50KCk7XG4gICAgfSk7XG5cbiAgICBpZiAocG9wcGVyLnBhcmVudE5vZGUpIHtcbiAgICAgIHBvcHBlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHBvcHBlcik7XG4gICAgfVxuXG4gICAgbW91bnRlZEluc3RhbmNlcyA9IG1vdW50ZWRJbnN0YW5jZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgICByZXR1cm4gaSAhPT0gaW5zdGFuY2U7XG4gICAgfSk7XG4gICAgaW5zdGFuY2Uuc3RhdGUuaXNNb3VudGVkID0gZmFsc2U7XG4gICAgaW52b2tlSG9vaygnb25IaWRkZW4nLCBbaW5zdGFuY2VdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCwgY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcoJ2Rlc3Ryb3knKSk7XG4gICAgfVxuXG4gICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW5zdGFuY2UuY2xlYXJEZWxheVRpbWVvdXRzKCk7XG4gICAgaW5zdGFuY2UudW5tb3VudCgpO1xuICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgIGRlbGV0ZSByZWZlcmVuY2UuX3RpcHB5O1xuICAgIGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkID0gdHJ1ZTtcbiAgICBpbnZva2VIb29rKCdvbkRlc3Ryb3knLCBbaW5zdGFuY2VdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0aXBweSh0YXJnZXRzLCBvcHRpb25hbFByb3BzKSB7XG4gIGlmIChvcHRpb25hbFByb3BzID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25hbFByb3BzID0ge307XG4gIH1cblxuICB2YXIgcGx1Z2lucyA9IGRlZmF1bHRQcm9wcy5wbHVnaW5zLmNvbmNhdChvcHRpb25hbFByb3BzLnBsdWdpbnMgfHwgW10pO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICB2YWxpZGF0ZVRhcmdldHModGFyZ2V0cyk7XG4gICAgdmFsaWRhdGVQcm9wcyhvcHRpb25hbFByb3BzLCBwbHVnaW5zKTtcbiAgfVxuXG4gIGJpbmRHbG9iYWxFdmVudExpc3RlbmVycygpO1xuICB2YXIgcGFzc2VkUHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25hbFByb3BzLCB7XG4gICAgcGx1Z2luczogcGx1Z2luc1xuICB9KTtcbiAgdmFyIGVsZW1lbnRzID0gZ2V0QXJyYXlPZkVsZW1lbnRzKHRhcmdldHMpO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICB2YXIgaXNTaW5nbGVDb250ZW50RWxlbWVudCA9IGlzRWxlbWVudChwYXNzZWRQcm9wcy5jb250ZW50KTtcbiAgICB2YXIgaXNNb3JlVGhhbk9uZVJlZmVyZW5jZUVsZW1lbnQgPSBlbGVtZW50cy5sZW5ndGggPiAxO1xuICAgIHdhcm5XaGVuKGlzU2luZ2xlQ29udGVudEVsZW1lbnQgJiYgaXNNb3JlVGhhbk9uZVJlZmVyZW5jZUVsZW1lbnQsIFsndGlwcHkoKSB3YXMgcGFzc2VkIGFuIEVsZW1lbnQgYXMgdGhlIGBjb250ZW50YCBwcm9wLCBidXQgbW9yZSB0aGFuJywgJ29uZSB0aXBweSBpbnN0YW5jZSB3YXMgY3JlYXRlZCBieSB0aGlzIGludm9jYXRpb24uIFRoaXMgbWVhbnMgdGhlJywgJ2NvbnRlbnQgZWxlbWVudCB3aWxsIG9ubHkgYmUgYXBwZW5kZWQgdG8gdGhlIGxhc3QgdGlwcHkgaW5zdGFuY2UuJywgJ1xcblxcbicsICdJbnN0ZWFkLCBwYXNzIHRoZSAuaW5uZXJIVE1MIG9mIHRoZSBlbGVtZW50LCBvciB1c2UgYSBmdW5jdGlvbiB0aGF0JywgJ3JldHVybnMgYSBjbG9uZWQgdmVyc2lvbiBvZiB0aGUgZWxlbWVudCBpbnN0ZWFkLicsICdcXG5cXG4nLCAnMSkgY29udGVudDogZWxlbWVudC5pbm5lckhUTUxcXG4nLCAnMikgY29udGVudDogKCkgPT4gZWxlbWVudC5jbG9uZU5vZGUodHJ1ZSknXS5qb2luKCcgJykpO1xuICB9XG5cbiAgdmFyIGluc3RhbmNlcyA9IGVsZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCByZWZlcmVuY2UpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSByZWZlcmVuY2UgJiYgY3JlYXRlVGlwcHkocmVmZXJlbmNlLCBwYXNzZWRQcm9wcyk7XG5cbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIGFjYy5wdXNoKGluc3RhbmNlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCBbXSk7XG4gIHJldHVybiBpc0VsZW1lbnQodGFyZ2V0cykgPyBpbnN0YW5jZXNbMF0gOiBpbnN0YW5jZXM7XG59XG5cbnRpcHB5LmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbnRpcHB5LnNldERlZmF1bHRQcm9wcyA9IHNldERlZmF1bHRQcm9wcztcbnRpcHB5LmN1cnJlbnRJbnB1dCA9IGN1cnJlbnRJbnB1dDtcbnZhciBoaWRlQWxsID0gZnVuY3Rpb24gaGlkZUFsbChfdGVtcCkge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgZXhjbHVkZWRSZWZlcmVuY2VPckluc3RhbmNlID0gX3JlZi5leGNsdWRlLFxuICAgICAgZHVyYXRpb24gPSBfcmVmLmR1cmF0aW9uO1xuXG4gIG1vdW50ZWRJbnN0YW5jZXMuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICB2YXIgaXNFeGNsdWRlZCA9IGZhbHNlO1xuXG4gICAgaWYgKGV4Y2x1ZGVkUmVmZXJlbmNlT3JJbnN0YW5jZSkge1xuICAgICAgaXNFeGNsdWRlZCA9IGlzUmVmZXJlbmNlRWxlbWVudChleGNsdWRlZFJlZmVyZW5jZU9ySW5zdGFuY2UpID8gaW5zdGFuY2UucmVmZXJlbmNlID09PSBleGNsdWRlZFJlZmVyZW5jZU9ySW5zdGFuY2UgOiBpbnN0YW5jZS5wb3BwZXIgPT09IGV4Y2x1ZGVkUmVmZXJlbmNlT3JJbnN0YW5jZS5wb3BwZXI7XG4gICAgfVxuXG4gICAgaWYgKCFpc0V4Y2x1ZGVkKSB7XG4gICAgICB2YXIgb3JpZ2luYWxEdXJhdGlvbiA9IGluc3RhbmNlLnByb3BzLmR1cmF0aW9uO1xuICAgICAgaW5zdGFuY2Uuc2V0UHJvcHMoe1xuICAgICAgICBkdXJhdGlvbjogZHVyYXRpb25cbiAgICAgIH0pO1xuICAgICAgaW5zdGFuY2UuaGlkZSgpO1xuXG4gICAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkKSB7XG4gICAgICAgIGluc3RhbmNlLnNldFByb3BzKHtcbiAgICAgICAgICBkdXJhdGlvbjogb3JpZ2luYWxEdXJhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuLy8gZXZlcnkgdGltZSB0aGUgcG9wcGVyIGlzIGRlc3Ryb3llZCAoaS5lLiBhIG5ldyB0YXJnZXQpLCByZW1vdmluZyB0aGUgc3R5bGVzXG4vLyBhbmQgY2F1c2luZyB0cmFuc2l0aW9ucyB0byBicmVhayBmb3Igc2luZ2xldG9ucyB3aGVuIHRoZSBjb25zb2xlIGlzIG9wZW4sIGJ1dFxuLy8gbW9zdCBub3RhYmx5IGZvciBub24tdHJhbnNmb3JtIHN0eWxlcyBiZWluZyB1c2VkLCBgZ3B1QWNjZWxlcmF0aW9uOiBmYWxzZWAuXG5cbnZhciBhcHBseVN0eWxlc01vZGlmaWVyID0gT2JqZWN0LmFzc2lnbih7fSwgYXBwbHlTdHlsZXMsIHtcbiAgZWZmZWN0OiBmdW5jdGlvbiBlZmZlY3QoX3JlZikge1xuICAgIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGU7XG4gICAgdmFyIGluaXRpYWxTdHlsZXMgPSB7XG4gICAgICBwb3BwZXI6IHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3ksXG4gICAgICAgIGxlZnQ6ICcwJyxcbiAgICAgICAgdG9wOiAnMCcsXG4gICAgICAgIG1hcmdpbjogJzAnXG4gICAgICB9LFxuICAgICAgYXJyb3c6IHtcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZSdcbiAgICAgIH0sXG4gICAgICByZWZlcmVuY2U6IHt9XG4gICAgfTtcbiAgICBPYmplY3QuYXNzaWduKHN0YXRlLmVsZW1lbnRzLnBvcHBlci5zdHlsZSwgaW5pdGlhbFN0eWxlcy5wb3BwZXIpO1xuICAgIHN0YXRlLnN0eWxlcyA9IGluaXRpYWxTdHlsZXM7XG5cbiAgICBpZiAoc3RhdGUuZWxlbWVudHMuYXJyb3cpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMuYXJyb3cuc3R5bGUsIGluaXRpYWxTdHlsZXMuYXJyb3cpO1xuICAgIH0gLy8gaW50ZW50aW9uYWxseSByZXR1cm4gbm8gY2xlYW51cCBmdW5jdGlvblxuICAgIC8vIHJldHVybiAoKSA9PiB7IC4uLiB9XG5cbiAgfVxufSk7XG5cbnZhciBjcmVhdGVTaW5nbGV0b24gPSBmdW5jdGlvbiBjcmVhdGVTaW5nbGV0b24odGlwcHlJbnN0YW5jZXMsIG9wdGlvbmFsUHJvcHMpIHtcbiAgdmFyIF9vcHRpb25hbFByb3BzJHBvcHBlcjtcblxuICBpZiAob3B0aW9uYWxQcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9uYWxQcm9wcyA9IHt9O1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGVycm9yV2hlbighQXJyYXkuaXNBcnJheSh0aXBweUluc3RhbmNlcyksIFsnVGhlIGZpcnN0IGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTaW5nbGV0b24oKSBtdXN0IGJlIGFuIGFycmF5IG9mJywgJ3RpcHB5IGluc3RhbmNlcy4gVGhlIHBhc3NlZCB2YWx1ZSB3YXMnLCBTdHJpbmcodGlwcHlJbnN0YW5jZXMpXS5qb2luKCcgJykpO1xuICB9XG5cbiAgdmFyIGluZGl2aWR1YWxJbnN0YW5jZXMgPSB0aXBweUluc3RhbmNlcztcbiAgdmFyIHJlZmVyZW5jZXMgPSBbXTtcbiAgdmFyIHRyaWdnZXJUYXJnZXRzID0gW107XG4gIHZhciBjdXJyZW50VGFyZ2V0O1xuICB2YXIgb3ZlcnJpZGVzID0gb3B0aW9uYWxQcm9wcy5vdmVycmlkZXM7XG4gIHZhciBpbnRlcmNlcHRTZXRQcm9wc0NsZWFudXBzID0gW107XG4gIHZhciBzaG93bk9uQ3JlYXRlID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gc2V0VHJpZ2dlclRhcmdldHMoKSB7XG4gICAgdHJpZ2dlclRhcmdldHMgPSBpbmRpdmlkdWFsSW5zdGFuY2VzLm1hcChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemVUb0FycmF5KGluc3RhbmNlLnByb3BzLnRyaWdnZXJUYXJnZXQgfHwgaW5zdGFuY2UucmVmZXJlbmNlKTtcbiAgICB9KS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgaXRlbSkge1xuICAgICAgcmV0dXJuIGFjYy5jb25jYXQoaXRlbSk7XG4gICAgfSwgW10pO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0UmVmZXJlbmNlcygpIHtcbiAgICByZWZlcmVuY2VzID0gaW5kaXZpZHVhbEluc3RhbmNlcy5tYXAoZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICByZXR1cm4gaW5zdGFuY2UucmVmZXJlbmNlO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZW5hYmxlSW5zdGFuY2VzKGlzRW5hYmxlZCkge1xuICAgIGluZGl2aWR1YWxJbnN0YW5jZXMuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgIGlmIChpc0VuYWJsZWQpIHtcbiAgICAgICAgaW5zdGFuY2UuZW5hYmxlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbnN0YW5jZS5kaXNhYmxlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBpbnRlcmNlcHRTZXRQcm9wcyhzaW5nbGV0b24pIHtcbiAgICByZXR1cm4gaW5kaXZpZHVhbEluc3RhbmNlcy5tYXAoZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICB2YXIgb3JpZ2luYWxTZXRQcm9wcyA9IGluc3RhbmNlLnNldFByb3BzO1xuXG4gICAgICBpbnN0YW5jZS5zZXRQcm9wcyA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgICBvcmlnaW5hbFNldFByb3BzKHByb3BzKTtcblxuICAgICAgICBpZiAoaW5zdGFuY2UucmVmZXJlbmNlID09PSBjdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgc2luZ2xldG9uLnNldFByb3BzKHByb3BzKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaW5zdGFuY2Uuc2V0UHJvcHMgPSBvcmlnaW5hbFNldFByb3BzO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfSAvLyBoYXZlIHRvIHBhc3Mgc2luZ2xldG9uLCBhcyBpdCBtYXliZSB1bmRlZmluZWQgb24gZmlyc3QgY2FsbFxuXG5cbiAgZnVuY3Rpb24gcHJlcGFyZUluc3RhbmNlKHNpbmdsZXRvbiwgdGFyZ2V0KSB7XG4gICAgdmFyIGluZGV4ID0gdHJpZ2dlclRhcmdldHMuaW5kZXhPZih0YXJnZXQpOyAvLyBiYWlsLW91dFxuXG4gICAgaWYgKHRhcmdldCA9PT0gY3VycmVudFRhcmdldCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGN1cnJlbnRUYXJnZXQgPSB0YXJnZXQ7XG4gICAgdmFyIG92ZXJyaWRlUHJvcHMgPSAob3ZlcnJpZGVzIHx8IFtdKS5jb25jYXQoJ2NvbnRlbnQnKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcHJvcCkge1xuICAgICAgYWNjW3Byb3BdID0gaW5kaXZpZHVhbEluc3RhbmNlc1tpbmRleF0ucHJvcHNbcHJvcF07XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgICBzaW5nbGV0b24uc2V0UHJvcHMoT2JqZWN0LmFzc2lnbih7fSwgb3ZlcnJpZGVQcm9wcywge1xuICAgICAgZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdDogdHlwZW9mIG92ZXJyaWRlUHJvcHMuZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCA9PT0gJ2Z1bmN0aW9uJyA/IG92ZXJyaWRlUHJvcHMuZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9yZWZlcmVuY2VzJGluZGV4O1xuXG4gICAgICAgIHJldHVybiAoX3JlZmVyZW5jZXMkaW5kZXggPSByZWZlcmVuY2VzW2luZGV4XSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9yZWZlcmVuY2VzJGluZGV4LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgfVxuICAgIH0pKTtcbiAgfVxuXG4gIGVuYWJsZUluc3RhbmNlcyhmYWxzZSk7XG4gIHNldFJlZmVyZW5jZXMoKTtcbiAgc2V0VHJpZ2dlclRhcmdldHMoKTtcbiAgdmFyIHBsdWdpbiA9IHtcbiAgICBmbjogZnVuY3Rpb24gZm4oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvbkRlc3Ryb3k6IGZ1bmN0aW9uIG9uRGVzdHJveSgpIHtcbiAgICAgICAgICBlbmFibGVJbnN0YW5jZXModHJ1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uSGlkZGVuOiBmdW5jdGlvbiBvbkhpZGRlbigpIHtcbiAgICAgICAgICBjdXJyZW50VGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgb25DbGlja091dHNpZGU6IGZ1bmN0aW9uIG9uQ2xpY2tPdXRzaWRlKGluc3RhbmNlKSB7XG4gICAgICAgICAgaWYgKGluc3RhbmNlLnByb3BzLnNob3dPbkNyZWF0ZSAmJiAhc2hvd25PbkNyZWF0ZSkge1xuICAgICAgICAgICAgc2hvd25PbkNyZWF0ZSA9IHRydWU7XG4gICAgICAgICAgICBjdXJyZW50VGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uU2hvdzogZnVuY3Rpb24gb25TaG93KGluc3RhbmNlKSB7XG4gICAgICAgICAgaWYgKGluc3RhbmNlLnByb3BzLnNob3dPbkNyZWF0ZSAmJiAhc2hvd25PbkNyZWF0ZSkge1xuICAgICAgICAgICAgc2hvd25PbkNyZWF0ZSA9IHRydWU7XG4gICAgICAgICAgICBwcmVwYXJlSW5zdGFuY2UoaW5zdGFuY2UsIHJlZmVyZW5jZXNbMF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25UcmlnZ2VyOiBmdW5jdGlvbiBvblRyaWdnZXIoaW5zdGFuY2UsIGV2ZW50KSB7XG4gICAgICAgICAgcHJlcGFyZUluc3RhbmNlKGluc3RhbmNlLCBldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG4gIHZhciBzaW5nbGV0b24gPSB0aXBweShkaXYoKSwgT2JqZWN0LmFzc2lnbih7fSwgcmVtb3ZlUHJvcGVydGllcyhvcHRpb25hbFByb3BzLCBbJ292ZXJyaWRlcyddKSwge1xuICAgIHBsdWdpbnM6IFtwbHVnaW5dLmNvbmNhdChvcHRpb25hbFByb3BzLnBsdWdpbnMgfHwgW10pLFxuICAgIHRyaWdnZXJUYXJnZXQ6IHRyaWdnZXJUYXJnZXRzLFxuICAgIHBvcHBlck9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbmFsUHJvcHMucG9wcGVyT3B0aW9ucywge1xuICAgICAgbW9kaWZpZXJzOiBbXS5jb25jYXQoKChfb3B0aW9uYWxQcm9wcyRwb3BwZXIgPSBvcHRpb25hbFByb3BzLnBvcHBlck9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfb3B0aW9uYWxQcm9wcyRwb3BwZXIubW9kaWZpZXJzKSB8fCBbXSwgW2FwcGx5U3R5bGVzTW9kaWZpZXJdKVxuICAgIH0pXG4gIH0pKTtcbiAgdmFyIG9yaWdpbmFsU2hvdyA9IHNpbmdsZXRvbi5zaG93O1xuXG4gIHNpbmdsZXRvbi5zaG93ID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIG9yaWdpbmFsU2hvdygpOyAvLyBmaXJzdCB0aW1lLCBzaG93T25DcmVhdGUgb3IgcHJvZ3JhbW1hdGljIGNhbGwgd2l0aCBubyBwYXJhbXNcbiAgICAvLyBkZWZhdWx0IHRvIHNob3dpbmcgZmlyc3QgaW5zdGFuY2VcblxuICAgIGlmICghY3VycmVudFRhcmdldCAmJiB0YXJnZXQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHByZXBhcmVJbnN0YW5jZShzaW5nbGV0b24sIHJlZmVyZW5jZXNbMF0pO1xuICAgIH0gLy8gdHJpZ2dlcmVkIGZyb20gZXZlbnQgKGRvIG5vdGhpbmcgYXMgcHJlcGFyZUluc3RhbmNlIGFscmVhZHkgY2FsbGVkIGJ5IG9uVHJpZ2dlcilcbiAgICAvLyBwcm9ncmFtbWF0aWMgY2FsbCB3aXRoIG5vIHBhcmFtcyB3aGVuIGFscmVhZHkgdmlzaWJsZSAoZG8gbm90aGluZyBhZ2FpbilcblxuXG4gICAgaWYgKGN1cnJlbnRUYXJnZXQgJiYgdGFyZ2V0ID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIHRhcmdldCBpcyBpbmRleCBvZiBpbnN0YW5jZVxuXG5cbiAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiByZWZlcmVuY2VzW3RhcmdldF0gJiYgcHJlcGFyZUluc3RhbmNlKHNpbmdsZXRvbiwgcmVmZXJlbmNlc1t0YXJnZXRdKTtcbiAgICB9IC8vIHRhcmdldCBpcyBhIGNoaWxkIHRpcHB5IGluc3RhbmNlXG5cblxuICAgIGlmIChpbmRpdmlkdWFsSW5zdGFuY2VzLmluZGV4T2YodGFyZ2V0KSA+PSAwKSB7XG4gICAgICB2YXIgcmVmID0gdGFyZ2V0LnJlZmVyZW5jZTtcbiAgICAgIHJldHVybiBwcmVwYXJlSW5zdGFuY2Uoc2luZ2xldG9uLCByZWYpO1xuICAgIH0gLy8gdGFyZ2V0IGlzIGEgUmVmZXJlbmNlRWxlbWVudFxuXG5cbiAgICBpZiAocmVmZXJlbmNlcy5pbmRleE9mKHRhcmdldCkgPj0gMCkge1xuICAgICAgcmV0dXJuIHByZXBhcmVJbnN0YW5jZShzaW5nbGV0b24sIHRhcmdldCk7XG4gICAgfVxuICB9O1xuXG4gIHNpbmdsZXRvbi5zaG93TmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZmlyc3QgPSByZWZlcmVuY2VzWzBdO1xuXG4gICAgaWYgKCFjdXJyZW50VGFyZ2V0KSB7XG4gICAgICByZXR1cm4gc2luZ2xldG9uLnNob3coMCk7XG4gICAgfVxuXG4gICAgdmFyIGluZGV4ID0gcmVmZXJlbmNlcy5pbmRleE9mKGN1cnJlbnRUYXJnZXQpO1xuICAgIHNpbmdsZXRvbi5zaG93KHJlZmVyZW5jZXNbaW5kZXggKyAxXSB8fCBmaXJzdCk7XG4gIH07XG5cbiAgc2luZ2xldG9uLnNob3dQcmV2aW91cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbGFzdCA9IHJlZmVyZW5jZXNbcmVmZXJlbmNlcy5sZW5ndGggLSAxXTtcblxuICAgIGlmICghY3VycmVudFRhcmdldCkge1xuICAgICAgcmV0dXJuIHNpbmdsZXRvbi5zaG93KGxhc3QpO1xuICAgIH1cblxuICAgIHZhciBpbmRleCA9IHJlZmVyZW5jZXMuaW5kZXhPZihjdXJyZW50VGFyZ2V0KTtcbiAgICB2YXIgdGFyZ2V0ID0gcmVmZXJlbmNlc1tpbmRleCAtIDFdIHx8IGxhc3Q7XG4gICAgc2luZ2xldG9uLnNob3codGFyZ2V0KTtcbiAgfTtcblxuICB2YXIgb3JpZ2luYWxTZXRQcm9wcyA9IHNpbmdsZXRvbi5zZXRQcm9wcztcblxuICBzaW5nbGV0b24uc2V0UHJvcHMgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICBvdmVycmlkZXMgPSBwcm9wcy5vdmVycmlkZXMgfHwgb3ZlcnJpZGVzO1xuICAgIG9yaWdpbmFsU2V0UHJvcHMocHJvcHMpO1xuICB9O1xuXG4gIHNpbmdsZXRvbi5zZXRJbnN0YW5jZXMgPSBmdW5jdGlvbiAobmV4dEluc3RhbmNlcykge1xuICAgIGVuYWJsZUluc3RhbmNlcyh0cnVlKTtcbiAgICBpbnRlcmNlcHRTZXRQcm9wc0NsZWFudXBzLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICByZXR1cm4gZm4oKTtcbiAgICB9KTtcbiAgICBpbmRpdmlkdWFsSW5zdGFuY2VzID0gbmV4dEluc3RhbmNlcztcbiAgICBlbmFibGVJbnN0YW5jZXMoZmFsc2UpO1xuICAgIHNldFJlZmVyZW5jZXMoKTtcbiAgICBzZXRUcmlnZ2VyVGFyZ2V0cygpO1xuICAgIGludGVyY2VwdFNldFByb3BzQ2xlYW51cHMgPSBpbnRlcmNlcHRTZXRQcm9wcyhzaW5nbGV0b24pO1xuICAgIHNpbmdsZXRvbi5zZXRQcm9wcyh7XG4gICAgICB0cmlnZ2VyVGFyZ2V0OiB0cmlnZ2VyVGFyZ2V0c1xuICAgIH0pO1xuICB9O1xuXG4gIGludGVyY2VwdFNldFByb3BzQ2xlYW51cHMgPSBpbnRlcmNlcHRTZXRQcm9wcyhzaW5nbGV0b24pO1xuICByZXR1cm4gc2luZ2xldG9uO1xufTtcblxudmFyIEJVQkJMSU5HX0VWRU5UU19NQVAgPSB7XG4gIG1vdXNlb3ZlcjogJ21vdXNlZW50ZXInLFxuICBmb2N1c2luOiAnZm9jdXMnLFxuICBjbGljazogJ2NsaWNrJ1xufTtcbi8qKlxuICogQ3JlYXRlcyBhIGRlbGVnYXRlIGluc3RhbmNlIHRoYXQgY29udHJvbHMgdGhlIGNyZWF0aW9uIG9mIHRpcHB5IGluc3RhbmNlc1xuICogZm9yIGNoaWxkIGVsZW1lbnRzIChgdGFyZ2V0YCBDU1Mgc2VsZWN0b3IpLlxuICovXG5cbmZ1bmN0aW9uIGRlbGVnYXRlKHRhcmdldHMsIHByb3BzKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBlcnJvcldoZW4oIShwcm9wcyAmJiBwcm9wcy50YXJnZXQpLCBbJ1lvdSBtdXN0IHNwZWNpdHkgYSBgdGFyZ2V0YCBwcm9wIGluZGljYXRpbmcgYSBDU1Mgc2VsZWN0b3Igc3RyaW5nIG1hdGNoaW5nJywgJ3RoZSB0YXJnZXQgZWxlbWVudHMgdGhhdCBzaG91bGQgcmVjZWl2ZSBhIHRpcHB5LiddLmpvaW4oJyAnKSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG4gIHZhciBjaGlsZFRpcHB5SW5zdGFuY2VzID0gW107XG4gIHZhciBkaXNhYmxlZCA9IGZhbHNlO1xuICB2YXIgdGFyZ2V0ID0gcHJvcHMudGFyZ2V0O1xuICB2YXIgbmF0aXZlUHJvcHMgPSByZW1vdmVQcm9wZXJ0aWVzKHByb3BzLCBbJ3RhcmdldCddKTtcbiAgdmFyIHBhcmVudFByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgbmF0aXZlUHJvcHMsIHtcbiAgICB0cmlnZ2VyOiAnbWFudWFsJyxcbiAgICB0b3VjaDogZmFsc2VcbiAgfSk7XG4gIHZhciBjaGlsZFByb3BzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgdG91Y2g6IGRlZmF1bHRQcm9wcy50b3VjaFxuICB9LCBuYXRpdmVQcm9wcywge1xuICAgIHNob3dPbkNyZWF0ZTogdHJ1ZVxuICB9KTtcbiAgdmFyIHJldHVyblZhbHVlID0gdGlwcHkodGFyZ2V0cywgcGFyZW50UHJvcHMpO1xuICB2YXIgbm9ybWFsaXplZFJldHVyblZhbHVlID0gbm9ybWFsaXplVG9BcnJheShyZXR1cm5WYWx1ZSk7XG5cbiAgZnVuY3Rpb24gb25UcmlnZ2VyKGV2ZW50KSB7XG4gICAgaWYgKCFldmVudC50YXJnZXQgfHwgZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0Tm9kZSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KHRhcmdldCk7XG5cbiAgICBpZiAoIXRhcmdldE5vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEdldCByZWxldmFudCB0cmlnZ2VyIHdpdGggZmFsbGJhY2tzOlxuICAgIC8vIDEuIENoZWNrIGBkYXRhLXRpcHB5LXRyaWdnZXJgIGF0dHJpYnV0ZSBvbiB0YXJnZXQgbm9kZVxuICAgIC8vIDIuIEZhbGxiYWNrIHRvIGB0cmlnZ2VyYCBwYXNzZWQgdG8gYGRlbGVnYXRlKClgXG4gICAgLy8gMy4gRmFsbGJhY2sgdG8gYGRlZmF1bHRQcm9wcy50cmlnZ2VyYFxuXG5cbiAgICB2YXIgdHJpZ2dlciA9IHRhcmdldE5vZGUuZ2V0QXR0cmlidXRlKCdkYXRhLXRpcHB5LXRyaWdnZXInKSB8fCBwcm9wcy50cmlnZ2VyIHx8IGRlZmF1bHRQcm9wcy50cmlnZ2VyOyAvLyBAdHMtaWdub3JlXG5cbiAgICBpZiAodGFyZ2V0Tm9kZS5fdGlwcHkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3RvdWNoc3RhcnQnICYmIHR5cGVvZiBjaGlsZFByb3BzLnRvdWNoID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZXZlbnQudHlwZSAhPT0gJ3RvdWNoc3RhcnQnICYmIHRyaWdnZXIuaW5kZXhPZihCVUJCTElOR19FVkVOVFNfTUFQW2V2ZW50LnR5cGVdKSA8IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgaW5zdGFuY2UgPSB0aXBweSh0YXJnZXROb2RlLCBjaGlsZFByb3BzKTtcblxuICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgY2hpbGRUaXBweUluc3RhbmNlcyA9IGNoaWxkVGlwcHlJbnN0YW5jZXMuY29uY2F0KGluc3RhbmNlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbihub2RlLCBldmVudFR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0gZmFsc2U7XG4gICAgfVxuXG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgbGlzdGVuZXJzLnB1c2goe1xuICAgICAgbm9kZTogbm9kZSxcbiAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLFxuICAgICAgaGFuZGxlcjogaGFuZGxlcixcbiAgICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXJzKGluc3RhbmNlKSB7XG4gICAgdmFyIHJlZmVyZW5jZSA9IGluc3RhbmNlLnJlZmVyZW5jZTtcbiAgICBvbihyZWZlcmVuY2UsICd0b3VjaHN0YXJ0Jywgb25UcmlnZ2VyLCBUT1VDSF9PUFRJT05TKTtcbiAgICBvbihyZWZlcmVuY2UsICdtb3VzZW92ZXInLCBvblRyaWdnZXIpO1xuICAgIG9uKHJlZmVyZW5jZSwgJ2ZvY3VzaW4nLCBvblRyaWdnZXIpO1xuICAgIG9uKHJlZmVyZW5jZSwgJ2NsaWNrJywgb25UcmlnZ2VyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgbm9kZSA9IF9yZWYubm9kZSxcbiAgICAgICAgICBldmVudFR5cGUgPSBfcmVmLmV2ZW50VHlwZSxcbiAgICAgICAgICBoYW5kbGVyID0gX3JlZi5oYW5kbGVyLFxuICAgICAgICAgIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnM7XG4gICAgICBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBvcHRpb25zKTtcbiAgICB9KTtcbiAgICBsaXN0ZW5lcnMgPSBbXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGx5TXV0YXRpb25zKGluc3RhbmNlKSB7XG4gICAgdmFyIG9yaWdpbmFsRGVzdHJveSA9IGluc3RhbmNlLmRlc3Ryb3k7XG4gICAgdmFyIG9yaWdpbmFsRW5hYmxlID0gaW5zdGFuY2UuZW5hYmxlO1xuICAgIHZhciBvcmlnaW5hbERpc2FibGUgPSBpbnN0YW5jZS5kaXNhYmxlO1xuXG4gICAgaW5zdGFuY2UuZGVzdHJveSA9IGZ1bmN0aW9uIChzaG91bGREZXN0cm95Q2hpbGRJbnN0YW5jZXMpIHtcbiAgICAgIGlmIChzaG91bGREZXN0cm95Q2hpbGRJbnN0YW5jZXMgPT09IHZvaWQgMCkge1xuICAgICAgICBzaG91bGREZXN0cm95Q2hpbGRJbnN0YW5jZXMgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2hvdWxkRGVzdHJveUNoaWxkSW5zdGFuY2VzKSB7XG4gICAgICAgIGNoaWxkVGlwcHlJbnN0YW5jZXMuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgICBpbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBjaGlsZFRpcHB5SW5zdGFuY2VzID0gW107XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVycygpO1xuICAgICAgb3JpZ2luYWxEZXN0cm95KCk7XG4gICAgfTtcblxuICAgIGluc3RhbmNlLmVuYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG9yaWdpbmFsRW5hYmxlKCk7XG4gICAgICBjaGlsZFRpcHB5SW5zdGFuY2VzLmZvckVhY2goZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgIHJldHVybiBpbnN0YW5jZS5lbmFibGUoKTtcbiAgICAgIH0pO1xuICAgICAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgaW5zdGFuY2UuZGlzYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG9yaWdpbmFsRGlzYWJsZSgpO1xuICAgICAgY2hpbGRUaXBweUluc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICByZXR1cm4gaW5zdGFuY2UuZGlzYWJsZSgpO1xuICAgICAgfSk7XG4gICAgICBkaXNhYmxlZCA9IHRydWU7XG4gICAgfTtcblxuICAgIGFkZEV2ZW50TGlzdGVuZXJzKGluc3RhbmNlKTtcbiAgfVxuXG4gIG5vcm1hbGl6ZWRSZXR1cm5WYWx1ZS5mb3JFYWNoKGFwcGx5TXV0YXRpb25zKTtcbiAgcmV0dXJuIHJldHVyblZhbHVlO1xufVxuXG52YXIgYW5pbWF0ZUZpbGwgPSB7XG4gIG5hbWU6ICdhbmltYXRlRmlsbCcsXG4gIGRlZmF1bHRWYWx1ZTogZmFsc2UsXG4gIGZuOiBmdW5jdGlvbiBmbihpbnN0YW5jZSkge1xuICAgIHZhciBfaW5zdGFuY2UkcHJvcHMkcmVuZGU7XG5cbiAgICAvLyBAdHMtaWdub3JlXG4gICAgaWYgKCEoKF9pbnN0YW5jZSRwcm9wcyRyZW5kZSA9IGluc3RhbmNlLnByb3BzLnJlbmRlcikgIT0gbnVsbCAmJiBfaW5zdGFuY2UkcHJvcHMkcmVuZGUuJCR0aXBweSkpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgZXJyb3JXaGVuKGluc3RhbmNlLnByb3BzLmFuaW1hdGVGaWxsLCAnVGhlIGBhbmltYXRlRmlsbGAgcGx1Z2luIHJlcXVpcmVzIHRoZSBkZWZhdWx0IHJlbmRlciBmdW5jdGlvbi4nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIHZhciBfZ2V0Q2hpbGRyZW4gPSBnZXRDaGlsZHJlbihpbnN0YW5jZS5wb3BwZXIpLFxuICAgICAgICBib3ggPSBfZ2V0Q2hpbGRyZW4uYm94LFxuICAgICAgICBjb250ZW50ID0gX2dldENoaWxkcmVuLmNvbnRlbnQ7XG5cbiAgICB2YXIgYmFja2Ryb3AgPSBpbnN0YW5jZS5wcm9wcy5hbmltYXRlRmlsbCA/IGNyZWF0ZUJhY2tkcm9wRWxlbWVudCgpIDogbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgb25DcmVhdGU6IGZ1bmN0aW9uIG9uQ3JlYXRlKCkge1xuICAgICAgICBpZiAoYmFja2Ryb3ApIHtcbiAgICAgICAgICBib3guaW5zZXJ0QmVmb3JlKGJhY2tkcm9wLCBib3guZmlyc3RFbGVtZW50Q2hpbGQpO1xuICAgICAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYW5pbWF0ZWZpbGwnLCAnJyk7XG4gICAgICAgICAgYm94LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgICAgICAgaW5zdGFuY2Uuc2V0UHJvcHMoe1xuICAgICAgICAgICAgYXJyb3c6IGZhbHNlLFxuICAgICAgICAgICAgYW5pbWF0aW9uOiAnc2hpZnQtYXdheSdcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIGlmIChiYWNrZHJvcCkge1xuICAgICAgICAgIHZhciB0cmFuc2l0aW9uRHVyYXRpb24gPSBib3guc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgICAgICAgIHZhciBkdXJhdGlvbiA9IE51bWJlcih0cmFuc2l0aW9uRHVyYXRpb24ucmVwbGFjZSgnbXMnLCAnJykpOyAvLyBUaGUgY29udGVudCBzaG91bGQgZmFkZSBpbiBhZnRlciB0aGUgYmFja2Ryb3AgaGFzIG1vc3RseSBmaWxsZWQgdGhlXG4gICAgICAgICAgLy8gdG9vbHRpcCBlbGVtZW50LiBgY2xpcC1wYXRoYCBpcyB0aGUgb3RoZXIgYWx0ZXJuYXRpdmUgYnV0IGlzIG5vdFxuICAgICAgICAgIC8vIHdlbGwtc3VwcG9ydGVkIGFuZCBpcyBidWdneSBvbiBzb21lIGRldmljZXMuXG5cbiAgICAgICAgICBjb250ZW50LnN0eWxlLnRyYW5zaXRpb25EZWxheSA9IE1hdGgucm91bmQoZHVyYXRpb24gLyAxMCkgKyBcIm1zXCI7XG4gICAgICAgICAgYmFja2Ryb3Auc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgICAgICAgIHNldFZpc2liaWxpdHlTdGF0ZShbYmFja2Ryb3BdLCAndmlzaWJsZScpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25TaG93OiBmdW5jdGlvbiBvblNob3coKSB7XG4gICAgICAgIGlmIChiYWNrZHJvcCkge1xuICAgICAgICAgIGJhY2tkcm9wLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcwbXMnO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25IaWRlOiBmdW5jdGlvbiBvbkhpZGUoKSB7XG4gICAgICAgIGlmIChiYWNrZHJvcCkge1xuICAgICAgICAgIHNldFZpc2liaWxpdHlTdGF0ZShbYmFja2Ryb3BdLCAnaGlkZGVuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVCYWNrZHJvcEVsZW1lbnQoKSB7XG4gIHZhciBiYWNrZHJvcCA9IGRpdigpO1xuICBiYWNrZHJvcC5jbGFzc05hbWUgPSBCQUNLRFJPUF9DTEFTUztcbiAgc2V0VmlzaWJpbGl0eVN0YXRlKFtiYWNrZHJvcF0sICdoaWRkZW4nKTtcbiAgcmV0dXJuIGJhY2tkcm9wO1xufVxuXG52YXIgbW91c2VDb29yZHMgPSB7XG4gIGNsaWVudFg6IDAsXG4gIGNsaWVudFk6IDBcbn07XG52YXIgYWN0aXZlSW5zdGFuY2VzID0gW107XG5cbmZ1bmN0aW9uIHN0b3JlTW91c2VDb29yZHMoX3JlZikge1xuICB2YXIgY2xpZW50WCA9IF9yZWYuY2xpZW50WCxcbiAgICAgIGNsaWVudFkgPSBfcmVmLmNsaWVudFk7XG4gIG1vdXNlQ29vcmRzID0ge1xuICAgIGNsaWVudFg6IGNsaWVudFgsXG4gICAgY2xpZW50WTogY2xpZW50WVxuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRNb3VzZUNvb3Jkc0xpc3RlbmVyKGRvYykge1xuICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc3RvcmVNb3VzZUNvb3Jkcyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZU1vdXNlQ29vcmRzTGlzdGVuZXIoZG9jKSB7XG4gIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBzdG9yZU1vdXNlQ29vcmRzKTtcbn1cblxudmFyIGZvbGxvd0N1cnNvciA9IHtcbiAgbmFtZTogJ2ZvbGxvd0N1cnNvcicsXG4gIGRlZmF1bHRWYWx1ZTogZmFsc2UsXG4gIGZuOiBmdW5jdGlvbiBmbihpbnN0YW5jZSkge1xuICAgIHZhciByZWZlcmVuY2UgPSBpbnN0YW5jZS5yZWZlcmVuY2U7XG4gICAgdmFyIGRvYyA9IGdldE93bmVyRG9jdW1lbnQoaW5zdGFuY2UucHJvcHMudHJpZ2dlclRhcmdldCB8fCByZWZlcmVuY2UpO1xuICAgIHZhciBpc0ludGVybmFsVXBkYXRlID0gZmFsc2U7XG4gICAgdmFyIHdhc0ZvY3VzRXZlbnQgPSBmYWxzZTtcbiAgICB2YXIgaXNVbm1vdW50ZWQgPSB0cnVlO1xuICAgIHZhciBwcmV2UHJvcHMgPSBpbnN0YW5jZS5wcm9wcztcblxuICAgIGZ1bmN0aW9uIGdldElzSW5pdGlhbEJlaGF2aW9yKCkge1xuICAgICAgcmV0dXJuIGluc3RhbmNlLnByb3BzLmZvbGxvd0N1cnNvciA9PT0gJ2luaXRpYWwnICYmIGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhZGRMaXN0ZW5lcigpIHtcbiAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBvbk1vdXNlTW92ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIoKSB7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgb25Nb3VzZU1vdmUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVuc2V0R2V0UmVmZXJlbmNlQ2xpZW50UmVjdCgpIHtcbiAgICAgIGlzSW50ZXJuYWxVcGRhdGUgPSB0cnVlO1xuICAgICAgaW5zdGFuY2Uuc2V0UHJvcHMoe1xuICAgICAgICBnZXRSZWZlcmVuY2VDbGllbnRSZWN0OiBudWxsXG4gICAgICB9KTtcbiAgICAgIGlzSW50ZXJuYWxVcGRhdGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbk1vdXNlTW92ZShldmVudCkge1xuICAgICAgLy8gSWYgdGhlIGluc3RhbmNlIGlzIGludGVyYWN0aXZlLCBhdm9pZCB1cGRhdGluZyB0aGUgcG9zaXRpb24gdW5sZXNzIGl0J3NcbiAgICAgIC8vIG92ZXIgdGhlIHJlZmVyZW5jZSBlbGVtZW50XG4gICAgICB2YXIgaXNDdXJzb3JPdmVyUmVmZXJlbmNlID0gZXZlbnQudGFyZ2V0ID8gcmVmZXJlbmNlLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkgOiB0cnVlO1xuICAgICAgdmFyIGZvbGxvd0N1cnNvciA9IGluc3RhbmNlLnByb3BzLmZvbGxvd0N1cnNvcjtcbiAgICAgIHZhciBjbGllbnRYID0gZXZlbnQuY2xpZW50WCxcbiAgICAgICAgICBjbGllbnRZID0gZXZlbnQuY2xpZW50WTtcbiAgICAgIHZhciByZWN0ID0gcmVmZXJlbmNlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdmFyIHJlbGF0aXZlWCA9IGNsaWVudFggLSByZWN0LmxlZnQ7XG4gICAgICB2YXIgcmVsYXRpdmVZID0gY2xpZW50WSAtIHJlY3QudG9wO1xuXG4gICAgICBpZiAoaXNDdXJzb3JPdmVyUmVmZXJlbmNlIHx8ICFpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSkge1xuICAgICAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIHVubmVlZGVkIERPTVJlY3QgcHJvcGVydGllc1xuICAgICAgICAgIGdldFJlZmVyZW5jZUNsaWVudFJlY3Q6IGZ1bmN0aW9uIGdldFJlZmVyZW5jZUNsaWVudFJlY3QoKSB7XG4gICAgICAgICAgICB2YXIgcmVjdCA9IHJlZmVyZW5jZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHZhciB4ID0gY2xpZW50WDtcbiAgICAgICAgICAgIHZhciB5ID0gY2xpZW50WTtcblxuICAgICAgICAgICAgaWYgKGZvbGxvd0N1cnNvciA9PT0gJ2luaXRpYWwnKSB7XG4gICAgICAgICAgICAgIHggPSByZWN0LmxlZnQgKyByZWxhdGl2ZVg7XG4gICAgICAgICAgICAgIHkgPSByZWN0LnRvcCArIHJlbGF0aXZlWTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHRvcCA9IGZvbGxvd0N1cnNvciA9PT0gJ2hvcml6b250YWwnID8gcmVjdC50b3AgOiB5O1xuICAgICAgICAgICAgdmFyIHJpZ2h0ID0gZm9sbG93Q3Vyc29yID09PSAndmVydGljYWwnID8gcmVjdC5yaWdodCA6IHg7XG4gICAgICAgICAgICB2YXIgYm90dG9tID0gZm9sbG93Q3Vyc29yID09PSAnaG9yaXpvbnRhbCcgPyByZWN0LmJvdHRvbSA6IHk7XG4gICAgICAgICAgICB2YXIgbGVmdCA9IGZvbGxvd0N1cnNvciA9PT0gJ3ZlcnRpY2FsJyA/IHJlY3QubGVmdCA6IHg7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICB3aWR0aDogcmlnaHQgLSBsZWZ0LFxuICAgICAgICAgICAgICBoZWlnaHQ6IGJvdHRvbSAtIHRvcCxcbiAgICAgICAgICAgICAgdG9wOiB0b3AsXG4gICAgICAgICAgICAgIHJpZ2h0OiByaWdodCxcbiAgICAgICAgICAgICAgYm90dG9tOiBib3R0b20sXG4gICAgICAgICAgICAgIGxlZnQ6IGxlZnRcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICBpZiAoaW5zdGFuY2UucHJvcHMuZm9sbG93Q3Vyc29yKSB7XG4gICAgICAgIGFjdGl2ZUluc3RhbmNlcy5wdXNoKHtcbiAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UsXG4gICAgICAgICAgZG9jOiBkb2NcbiAgICAgICAgfSk7XG4gICAgICAgIGFkZE1vdXNlQ29vcmRzTGlzdGVuZXIoZG9jKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgYWN0aXZlSW5zdGFuY2VzID0gYWN0aXZlSW5zdGFuY2VzLmZpbHRlcihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICByZXR1cm4gZGF0YS5pbnN0YW5jZSAhPT0gaW5zdGFuY2U7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGFjdGl2ZUluc3RhbmNlcy5maWx0ZXIoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGRhdGEuZG9jID09PSBkb2M7XG4gICAgICB9KS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmVtb3ZlTW91c2VDb29yZHNMaXN0ZW5lcihkb2MpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBvbkNyZWF0ZTogY3JlYXRlLFxuICAgICAgb25EZXN0cm95OiBkZXN0cm95LFxuICAgICAgb25CZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIG9uQmVmb3JlVXBkYXRlKCkge1xuICAgICAgICBwcmV2UHJvcHMgPSBpbnN0YW5jZS5wcm9wcztcbiAgICAgIH0sXG4gICAgICBvbkFmdGVyVXBkYXRlOiBmdW5jdGlvbiBvbkFmdGVyVXBkYXRlKF8sIF9yZWYyKSB7XG4gICAgICAgIHZhciBmb2xsb3dDdXJzb3IgPSBfcmVmMi5mb2xsb3dDdXJzb3I7XG5cbiAgICAgICAgaWYgKGlzSW50ZXJuYWxVcGRhdGUpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZm9sbG93Q3Vyc29yICE9PSB1bmRlZmluZWQgJiYgcHJldlByb3BzLmZvbGxvd0N1cnNvciAhPT0gZm9sbG93Q3Vyc29yKSB7XG4gICAgICAgICAgZGVzdHJveSgpO1xuXG4gICAgICAgICAgaWYgKGZvbGxvd0N1cnNvcikge1xuICAgICAgICAgICAgY3JlYXRlKCk7XG5cbiAgICAgICAgICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQgJiYgIXdhc0ZvY3VzRXZlbnQgJiYgIWdldElzSW5pdGlhbEJlaGF2aW9yKCkpIHtcbiAgICAgICAgICAgICAgYWRkTGlzdGVuZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXIoKTtcbiAgICAgICAgICAgIHVuc2V0R2V0UmVmZXJlbmNlQ2xpZW50UmVjdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIGlmIChpbnN0YW5jZS5wcm9wcy5mb2xsb3dDdXJzb3IgJiYgIXdhc0ZvY3VzRXZlbnQpIHtcbiAgICAgICAgICBpZiAoaXNVbm1vdW50ZWQpIHtcbiAgICAgICAgICAgIG9uTW91c2VNb3ZlKG1vdXNlQ29vcmRzKTtcbiAgICAgICAgICAgIGlzVW5tb3VudGVkID0gZmFsc2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKCFnZXRJc0luaXRpYWxCZWhhdmlvcigpKSB7XG4gICAgICAgICAgICBhZGRMaXN0ZW5lcigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVHJpZ2dlcjogZnVuY3Rpb24gb25UcmlnZ2VyKF8sIGV2ZW50KSB7XG4gICAgICAgIGlmIChpc01vdXNlRXZlbnQoZXZlbnQpKSB7XG4gICAgICAgICAgbW91c2VDb29yZHMgPSB7XG4gICAgICAgICAgICBjbGllbnRYOiBldmVudC5jbGllbnRYLFxuICAgICAgICAgICAgY2xpZW50WTogZXZlbnQuY2xpZW50WVxuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICB3YXNGb2N1c0V2ZW50ID0gZXZlbnQudHlwZSA9PT0gJ2ZvY3VzJztcbiAgICAgIH0sXG4gICAgICBvbkhpZGRlbjogZnVuY3Rpb24gb25IaWRkZW4oKSB7XG4gICAgICAgIGlmIChpbnN0YW5jZS5wcm9wcy5mb2xsb3dDdXJzb3IpIHtcbiAgICAgICAgICB1bnNldEdldFJlZmVyZW5jZUNsaWVudFJlY3QoKTtcbiAgICAgICAgICByZW1vdmVMaXN0ZW5lcigpO1xuICAgICAgICAgIGlzVW5tb3VudGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldFByb3BzKHByb3BzLCBtb2RpZmllcikge1xuICB2YXIgX3Byb3BzJHBvcHBlck9wdGlvbnM7XG5cbiAgcmV0dXJuIHtcbiAgICBwb3BwZXJPcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBwcm9wcy5wb3BwZXJPcHRpb25zLCB7XG4gICAgICBtb2RpZmllcnM6IFtdLmNvbmNhdCgoKChfcHJvcHMkcG9wcGVyT3B0aW9ucyA9IHByb3BzLnBvcHBlck9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfcHJvcHMkcG9wcGVyT3B0aW9ucy5tb2RpZmllcnMpIHx8IFtdKS5maWx0ZXIoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWU7XG4gICAgICAgIHJldHVybiBuYW1lICE9PSBtb2RpZmllci5uYW1lO1xuICAgICAgfSksIFttb2RpZmllcl0pXG4gICAgfSlcbiAgfTtcbn1cblxudmFyIGlubGluZVBvc2l0aW9uaW5nID0ge1xuICBuYW1lOiAnaW5saW5lUG9zaXRpb25pbmcnLFxuICBkZWZhdWx0VmFsdWU6IGZhbHNlLFxuICBmbjogZnVuY3Rpb24gZm4oaW5zdGFuY2UpIHtcbiAgICB2YXIgcmVmZXJlbmNlID0gaW5zdGFuY2UucmVmZXJlbmNlO1xuXG4gICAgZnVuY3Rpb24gaXNFbmFibGVkKCkge1xuICAgICAgcmV0dXJuICEhaW5zdGFuY2UucHJvcHMuaW5saW5lUG9zaXRpb25pbmc7XG4gICAgfVxuXG4gICAgdmFyIHBsYWNlbWVudDtcbiAgICB2YXIgY3Vyc29yUmVjdEluZGV4ID0gLTE7XG4gICAgdmFyIGlzSW50ZXJuYWxVcGRhdGUgPSBmYWxzZTtcbiAgICB2YXIgdHJpZWRQbGFjZW1lbnRzID0gW107XG4gICAgdmFyIG1vZGlmaWVyID0ge1xuICAgICAgbmFtZTogJ3RpcHB5SW5saW5lUG9zaXRpb25pbmcnLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIHBoYXNlOiAnYWZ0ZXJXcml0ZScsXG4gICAgICBmbjogZnVuY3Rpb24gZm4oX3JlZjIpIHtcbiAgICAgICAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGU7XG5cbiAgICAgICAgaWYgKGlzRW5hYmxlZCgpKSB7XG4gICAgICAgICAgaWYgKHRyaWVkUGxhY2VtZW50cy5pbmRleE9mKHN0YXRlLnBsYWNlbWVudCkgIT09IC0xKSB7XG4gICAgICAgICAgICB0cmllZFBsYWNlbWVudHMgPSBbXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAocGxhY2VtZW50ICE9PSBzdGF0ZS5wbGFjZW1lbnQgJiYgdHJpZWRQbGFjZW1lbnRzLmluZGV4T2Yoc3RhdGUucGxhY2VtZW50KSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRyaWVkUGxhY2VtZW50cy5wdXNoKHN0YXRlLnBsYWNlbWVudCk7XG4gICAgICAgICAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgLSB1bm5lZWRlZCBET01SZWN0IHByb3BlcnRpZXNcbiAgICAgICAgICAgICAgZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdDogZnVuY3Rpb24gZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2dldFJlZmVyZW5jZUNsaWVudFJlY3Qoc3RhdGUucGxhY2VtZW50KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGxhY2VtZW50ID0gc3RhdGUucGxhY2VtZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIF9nZXRSZWZlcmVuY2VDbGllbnRSZWN0KHBsYWNlbWVudCkge1xuICAgICAgcmV0dXJuIGdldElubGluZUJvdW5kaW5nQ2xpZW50UmVjdChnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCksIHJlZmVyZW5jZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwgYXJyYXlGcm9tKHJlZmVyZW5jZS5nZXRDbGllbnRSZWN0cygpKSwgY3Vyc29yUmVjdEluZGV4KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRJbnRlcm5hbFByb3BzKHBhcnRpYWxQcm9wcykge1xuICAgICAgaXNJbnRlcm5hbFVwZGF0ZSA9IHRydWU7XG4gICAgICBpbnN0YW5jZS5zZXRQcm9wcyhwYXJ0aWFsUHJvcHMpO1xuICAgICAgaXNJbnRlcm5hbFVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZE1vZGlmaWVyKCkge1xuICAgICAgaWYgKCFpc0ludGVybmFsVXBkYXRlKSB7XG4gICAgICAgIHNldEludGVybmFsUHJvcHMoZ2V0UHJvcHMoaW5zdGFuY2UucHJvcHMsIG1vZGlmaWVyKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIG9uQ3JlYXRlOiBhZGRNb2RpZmllcixcbiAgICAgIG9uQWZ0ZXJVcGRhdGU6IGFkZE1vZGlmaWVyLFxuICAgICAgb25UcmlnZ2VyOiBmdW5jdGlvbiBvblRyaWdnZXIoXywgZXZlbnQpIHtcbiAgICAgICAgaWYgKGlzTW91c2VFdmVudChldmVudCkpIHtcbiAgICAgICAgICB2YXIgcmVjdHMgPSBhcnJheUZyb20oaW5zdGFuY2UucmVmZXJlbmNlLmdldENsaWVudFJlY3RzKCkpO1xuICAgICAgICAgIHZhciBjdXJzb3JSZWN0ID0gcmVjdHMuZmluZChmdW5jdGlvbiAocmVjdCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlY3QubGVmdCAtIDIgPD0gZXZlbnQuY2xpZW50WCAmJiByZWN0LnJpZ2h0ICsgMiA+PSBldmVudC5jbGllbnRYICYmIHJlY3QudG9wIC0gMiA8PSBldmVudC5jbGllbnRZICYmIHJlY3QuYm90dG9tICsgMiA+PSBldmVudC5jbGllbnRZO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBpbmRleCA9IHJlY3RzLmluZGV4T2YoY3Vyc29yUmVjdCk7XG4gICAgICAgICAgY3Vyc29yUmVjdEluZGV4ID0gaW5kZXggPiAtMSA/IGluZGV4IDogY3Vyc29yUmVjdEluZGV4O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25IaWRkZW46IGZ1bmN0aW9uIG9uSGlkZGVuKCkge1xuICAgICAgICBjdXJzb3JSZWN0SW5kZXggPSAtMTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuZnVuY3Rpb24gZ2V0SW5saW5lQm91bmRpbmdDbGllbnRSZWN0KGN1cnJlbnRCYXNlUGxhY2VtZW50LCBib3VuZGluZ1JlY3QsIGNsaWVudFJlY3RzLCBjdXJzb3JSZWN0SW5kZXgpIHtcbiAgLy8gTm90IGFuIGlubGluZSBlbGVtZW50LCBvciBwbGFjZW1lbnQgaXMgbm90IHlldCBrbm93blxuICBpZiAoY2xpZW50UmVjdHMubGVuZ3RoIDwgMiB8fCBjdXJyZW50QmFzZVBsYWNlbWVudCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBib3VuZGluZ1JlY3Q7XG4gIH0gLy8gVGhlcmUgYXJlIHR3byByZWN0cyBhbmQgdGhleSBhcmUgZGlzam9pbmVkXG5cblxuICBpZiAoY2xpZW50UmVjdHMubGVuZ3RoID09PSAyICYmIGN1cnNvclJlY3RJbmRleCA+PSAwICYmIGNsaWVudFJlY3RzWzBdLmxlZnQgPiBjbGllbnRSZWN0c1sxXS5yaWdodCkge1xuICAgIHJldHVybiBjbGllbnRSZWN0c1tjdXJzb3JSZWN0SW5kZXhdIHx8IGJvdW5kaW5nUmVjdDtcbiAgfVxuXG4gIHN3aXRjaCAoY3VycmVudEJhc2VQbGFjZW1lbnQpIHtcbiAgICBjYXNlICd0b3AnOlxuICAgIGNhc2UgJ2JvdHRvbSc6XG4gICAgICB7XG4gICAgICAgIHZhciBmaXJzdFJlY3QgPSBjbGllbnRSZWN0c1swXTtcbiAgICAgICAgdmFyIGxhc3RSZWN0ID0gY2xpZW50UmVjdHNbY2xpZW50UmVjdHMubGVuZ3RoIC0gMV07XG4gICAgICAgIHZhciBpc1RvcCA9IGN1cnJlbnRCYXNlUGxhY2VtZW50ID09PSAndG9wJztcbiAgICAgICAgdmFyIHRvcCA9IGZpcnN0UmVjdC50b3A7XG4gICAgICAgIHZhciBib3R0b20gPSBsYXN0UmVjdC5ib3R0b207XG4gICAgICAgIHZhciBsZWZ0ID0gaXNUb3AgPyBmaXJzdFJlY3QubGVmdCA6IGxhc3RSZWN0LmxlZnQ7XG4gICAgICAgIHZhciByaWdodCA9IGlzVG9wID8gZmlyc3RSZWN0LnJpZ2h0IDogbGFzdFJlY3QucmlnaHQ7XG4gICAgICAgIHZhciB3aWR0aCA9IHJpZ2h0IC0gbGVmdDtcbiAgICAgICAgdmFyIGhlaWdodCA9IGJvdHRvbSAtIHRvcDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0b3A6IHRvcCxcbiAgICAgICAgICBib3R0b206IGJvdHRvbSxcbiAgICAgICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgICAgIHJpZ2h0OiByaWdodCxcbiAgICAgICAgICB3aWR0aDogd2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2xlZnQnOlxuICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgIHtcbiAgICAgICAgdmFyIG1pbkxlZnQgPSBNYXRoLm1pbi5hcHBseShNYXRoLCBjbGllbnRSZWN0cy5tYXAoZnVuY3Rpb24gKHJlY3RzKSB7XG4gICAgICAgICAgcmV0dXJuIHJlY3RzLmxlZnQ7XG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIG1heFJpZ2h0ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgY2xpZW50UmVjdHMubWFwKGZ1bmN0aW9uIChyZWN0cykge1xuICAgICAgICAgIHJldHVybiByZWN0cy5yaWdodDtcbiAgICAgICAgfSkpO1xuICAgICAgICB2YXIgbWVhc3VyZVJlY3RzID0gY2xpZW50UmVjdHMuZmlsdGVyKGZ1bmN0aW9uIChyZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIGN1cnJlbnRCYXNlUGxhY2VtZW50ID09PSAnbGVmdCcgPyByZWN0LmxlZnQgPT09IG1pbkxlZnQgOiByZWN0LnJpZ2h0ID09PSBtYXhSaWdodDtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBfdG9wID0gbWVhc3VyZVJlY3RzWzBdLnRvcDtcbiAgICAgICAgdmFyIF9ib3R0b20gPSBtZWFzdXJlUmVjdHNbbWVhc3VyZVJlY3RzLmxlbmd0aCAtIDFdLmJvdHRvbTtcbiAgICAgICAgdmFyIF9sZWZ0ID0gbWluTGVmdDtcbiAgICAgICAgdmFyIF9yaWdodCA9IG1heFJpZ2h0O1xuXG4gICAgICAgIHZhciBfd2lkdGggPSBfcmlnaHQgLSBfbGVmdDtcblxuICAgICAgICB2YXIgX2hlaWdodCA9IF9ib3R0b20gLSBfdG9wO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdG9wOiBfdG9wLFxuICAgICAgICAgIGJvdHRvbTogX2JvdHRvbSxcbiAgICAgICAgICBsZWZ0OiBfbGVmdCxcbiAgICAgICAgICByaWdodDogX3JpZ2h0LFxuICAgICAgICAgIHdpZHRoOiBfd2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBfaGVpZ2h0XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAge1xuICAgICAgICByZXR1cm4gYm91bmRpbmdSZWN0O1xuICAgICAgfVxuICB9XG59XG5cbnZhciBzdGlja3kgPSB7XG4gIG5hbWU6ICdzdGlja3knLFxuICBkZWZhdWx0VmFsdWU6IGZhbHNlLFxuICBmbjogZnVuY3Rpb24gZm4oaW5zdGFuY2UpIHtcbiAgICB2YXIgcmVmZXJlbmNlID0gaW5zdGFuY2UucmVmZXJlbmNlLFxuICAgICAgICBwb3BwZXIgPSBpbnN0YW5jZS5wb3BwZXI7XG5cbiAgICBmdW5jdGlvbiBnZXRSZWZlcmVuY2UoKSB7XG4gICAgICByZXR1cm4gaW5zdGFuY2UucG9wcGVySW5zdGFuY2UgPyBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZS5zdGF0ZS5lbGVtZW50cy5yZWZlcmVuY2UgOiByZWZlcmVuY2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2hvdWxkQ2hlY2sodmFsdWUpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZS5wcm9wcy5zdGlja3kgPT09IHRydWUgfHwgaW5zdGFuY2UucHJvcHMuc3RpY2t5ID09PSB2YWx1ZTtcbiAgICB9XG5cbiAgICB2YXIgcHJldlJlZlJlY3QgPSBudWxsO1xuICAgIHZhciBwcmV2UG9wUmVjdCA9IG51bGw7XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVQb3NpdGlvbigpIHtcbiAgICAgIHZhciBjdXJyZW50UmVmUmVjdCA9IHNob3VsZENoZWNrKCdyZWZlcmVuY2UnKSA/IGdldFJlZmVyZW5jZSgpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIDogbnVsbDtcbiAgICAgIHZhciBjdXJyZW50UG9wUmVjdCA9IHNob3VsZENoZWNrKCdwb3BwZXInKSA/IHBvcHBlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSA6IG51bGw7XG5cbiAgICAgIGlmIChjdXJyZW50UmVmUmVjdCAmJiBhcmVSZWN0c0RpZmZlcmVudChwcmV2UmVmUmVjdCwgY3VycmVudFJlZlJlY3QpIHx8IGN1cnJlbnRQb3BSZWN0ICYmIGFyZVJlY3RzRGlmZmVyZW50KHByZXZQb3BSZWN0LCBjdXJyZW50UG9wUmVjdCkpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnBvcHBlckluc3RhbmNlKSB7XG4gICAgICAgICAgaW5zdGFuY2UucG9wcGVySW5zdGFuY2UudXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcHJldlJlZlJlY3QgPSBjdXJyZW50UmVmUmVjdDtcbiAgICAgIHByZXZQb3BSZWN0ID0gY3VycmVudFBvcFJlY3Q7XG5cbiAgICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQpIHtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHVwZGF0ZVBvc2l0aW9uKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnByb3BzLnN0aWNreSkge1xuICAgICAgICAgIHVwZGF0ZVBvc2l0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuXG5mdW5jdGlvbiBhcmVSZWN0c0RpZmZlcmVudChyZWN0QSwgcmVjdEIpIHtcbiAgaWYgKHJlY3RBICYmIHJlY3RCKSB7XG4gICAgcmV0dXJuIHJlY3RBLnRvcCAhPT0gcmVjdEIudG9wIHx8IHJlY3RBLnJpZ2h0ICE9PSByZWN0Qi5yaWdodCB8fCByZWN0QS5ib3R0b20gIT09IHJlY3RCLmJvdHRvbSB8fCByZWN0QS5sZWZ0ICE9PSByZWN0Qi5sZWZ0O1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbnRpcHB5LnNldERlZmF1bHRQcm9wcyh7XG4gIHJlbmRlcjogcmVuZGVyXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdGlwcHk7XG5leHBvcnQgeyBhbmltYXRlRmlsbCwgY3JlYXRlU2luZ2xldG9uLCBkZWxlZ2F0ZSwgZm9sbG93Q3Vyc29yLCBoaWRlQWxsLCBpbmxpbmVQb3NpdGlvbmluZywgUk9VTkRfQVJST1cgYXMgcm91bmRBcnJvdywgc3RpY2t5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aXBweS5lc20uanMubWFwXG4iLCJpbXBvcnQgdGlwcHkgZnJvbSAndGlwcHkuanMnXG5cbmNvbnN0IHRvb2x0aXBzQnlJZCA9IHtcbiAgICBcImVhc3ktbGFiZWxcIjogXCJNb3N0bHkgd2VsbCBrbm93biBjb3VudHJpZXMgYW5kIGZsYWdzXCIsXG4gICAgXCJub3JtYWwtbGFiZWxcIjogXCJNYW55IHNtYWxsZXIgYW5kIGxlc3NlciBrbm93biBjb3VudHJpZXMgYXJlIGluY2x1ZGVkLCBidXQgdGhlcmUgYXJlbid0IGFueSB0aW55IGlzbGFuZCBuYXRpb25zXCIsXG4gICAgXCJleHBlcnQtbGFiZWxcIjogXCJBbG1vc3QgZXZlcnkgY291bnRyeSBhbmQgdGVycml0b3J5IGlzIGluY2x1ZGVkLCBvbmx5IGZvciBnZW9ncmFwaHkgc3VwZXIgbmVyZHNcIixcbiAgICBcImVuZGxlc3MtbGFiZWxcIjogXCJLZWVwIGdvaW5nIGZvcmV2ZXIgYW5kIGV2ZXIsIG5vIGNvbnNlcXVlbmNlc1wiLFxuICAgIFwicXVlc3Rpb25zLWxhYmVsXCI6IFwiQXNrIGFuIGFyYml0cmFyeSBudW1iZXIgb2YgcXVlc3Rpb25zIGJlZm9yZSB0aGUgZ2FtZSBpcyBvdmVyIGFuZCB5b3UgZ2V0IGEgc2NvcmVcIixcbiAgICBcInN0cmVhay1sYWJlbFwiOiBcIktlZXAgcGxheWluZyBhbmQgZ3Jvd2luZyB5b3VyIHN0cmVhayB1bnRpbCB5b3UgZ2V0IGEgcXVlc3Rpb24gd3JvbmdcIixcbiAgICBcInNwLWZsYWdzUGVyY2VudFwiOiBcIlBlcmNlbnRhZ2Ugb2YgdGhlIHdvcmxkJ3MgZmxhZ3MgdGhhdCB5b3UndmUgZW5jb3VudGVyZWQgd2hpbGUgcGxheWluZ1wiLFxuICAgIFwicmVwbGF5LWJ0blwiOiBcIlN0YXJ0IG92ZXIgdXNpbmcgdGhlIHNhbWUgb3B0aW9uc1wiXG59XG5cbmZvciAobGV0IGVsZW1lbnRJZCBpbiB0b29sdGlwc0J5SWQpIHtcbiAgICB0aXBweShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50SWQpLCB7XG4gICAgICAgIGNvbnRlbnQ6IHRvb2x0aXBzQnlJZFtlbGVtZW50SWRdLFxuICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgICAgICBhbmltYXRpb246ICdzaGlmdC1hd2F5LXN1YnRsZSdcbiAgICB9KVxufSIsImNvbnN0IGxvcmVtID0gXCJMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LlwiXG5cbmZ1bmN0aW9uIHNldENvbnRlbnQoZWxlbWVudCwgY29udGVudCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLnBsYWluVGV4dCkge1xuICAgICAgICBlbGVtZW50LmlubmVyVGV4dCA9IGNvbnRlbnRcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IGNvbnRlbnRcbiAgICB9XG59XG5cbmNsYXNzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIGlmICghKCdjb250ZW50JyBpbiBvcHRpb25zKSkge1xuICAgICAgICAgICAgb3B0aW9ucy5jb250ZW50ID0gbG9yZW1cbiAgICAgICAgfVxuICAgICAgICBpZiAoISgndGl0bGUnIGluIG9wdGlvbnMpKSBvcHRpb25zLnRpdGxlID0gXCJcIlxuICAgICAgICBpZiAoISgncGxhaW5UZXh0JyBpbiBvcHRpb25zKSkgb3B0aW9ucy5wbGFpblRleHQgPSB0cnVlXG4gICAgICAgIGlmICghKCdjbGlja0JhY2tkcm9wVG9DbG9zZScgaW4gb3B0aW9ucykpIG9wdGlvbnMuY2xpY2tCYWNrZHJvcFRvQ2xvc2UgPSB0cnVlXG4gICAgICAgIGlmICghKCdjbG9zZUtleXMnIGluIG9wdGlvbnMpKSBvcHRpb25zLmNsb3NlS2V5cyA9IFsnRXNjYXBlJ11cbiAgICAgICAgY29uc3QgYmFja2Ryb3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgIGJhY2tkcm9wLmNsYXNzTmFtZSA9IFwicG9wdXAtYmFja2Ryb3BcIlxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJhY2tkcm9wKVxuICAgICAgICBjb25zdCBQb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgIFBvcHVwRWxlbWVudC5jbGFzc05hbWUgPSBcInBvcHVwLWNvbnRhaW5lclwiXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoUG9wdXBFbGVtZW50KVxuICAgICAgICBjb25zdCBoZWFkZXJDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIpXG4gICAgICAgIGhlYWRlckNvbnRhaW5lci5jbGFzc05hbWUgPSBcInBvcHVwLWhlYWRlclwiXG4gICAgICAgIFBvcHVwRWxlbWVudC5hcHBlbmRDaGlsZChoZWFkZXJDb250YWluZXIpXG4gICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpXG4gICAgICAgIHRpdGxlRWxlbWVudC5jbGFzc05hbWUgPSBcInBvcHVwLXRpdGxlXCJcbiAgICAgICAgc2V0Q29udGVudCh0aXRsZUVsZW1lbnQsIG9wdGlvbnMudGl0bGUsIG9wdGlvbnMpXG4gICAgICAgIGhlYWRlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aXRsZUVsZW1lbnQpXG4gICAgICAgIGNvbnN0IHhCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgIHhCdXR0b24uaW5uZXJIVE1MID0gXCJYXCJcbiAgICAgICAgeEJ1dHRvbi5jbGFzc05hbWUgPSAncG9wdXAtY2xvc2UnXG4gICAgICAgIGhlYWRlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh4QnV0dG9uKVxuICAgICAgICBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcbiAgICAgICAgbWFpbkNvbnRlbnQuY2xhc3NOYW1lID0gJ3BvcHVwLWNvbnRlbnQnXG4gICAgICAgIHNldENvbnRlbnQobWFpbkNvbnRlbnQsIG9wdGlvbnMuY29udGVudCwgb3B0aW9ucylcbiAgICAgICAgUG9wdXBFbGVtZW50LmFwcGVuZENoaWxkKG1haW5Db250ZW50KVxuICAgICAgICB0aGlzLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMuY2FsbGJhY2tSZXBsYWNlRGVmYXVsdCkge1xuICAgICAgICAgICAgICAgIFBvcHVwRWxlbWVudC5yZW1vdmUoKVxuICAgICAgICAgICAgICAgIGJhY2tkcm9wLnJlbW92ZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJ29uQ2xvc2UnIGluIG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLm9uQ2xvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgcHJvY2Vzc0tleURvd24pXG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcHJvY2Vzc0tleURvd24oZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmNsb3NlS2V5cy5pbmNsdWRlcyhldmVudC5rZXkpIHx8IG9wdGlvbnMuY2xvc2VLZXlzLmluY2x1ZGVzKGV2ZW50LmtleUNvZGUpKSB7XG4gICAgICAgICAgICAgICAgeEJ1dHRvbi5jbGljaygpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgcHJvY2Vzc0tleURvd24pXG4gICAgICAgIHhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xvc2UpXG4gICAgICAgIGlmIChvcHRpb25zLmNsaWNrQmFja2Ryb3BUb0Nsb3NlKSB7XG4gICAgICAgICAgICBiYWNrZHJvcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXAiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4Lmxlc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5sZXNzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQge1xuICAgIGluY29ycmVjdEVuZGxlc3NNZXNzYWdlczogW1xuICAgICAgICBcIkR1c3QgeW91cnNlbGYgb2ZmISBUaGUgY29ycmVjdCBhbnN3ZXIgd2FzICUlXCIsXG4gICAgICAgIFwiT29wcyEgVGhlIGNvcnJlY3QgYW5zd2VyIHdhcyAlJVwiLFxuICAgICAgICBcIlNvcnJ5ISBUaGUgYWN0dWFsIGFuc3dlciB3YXMgJSVcIixcbiAgICAgICAgXCJZb3UnbGwgZ2V0IGl0IG5leHQgdGltZSEgVGhlIGFuc3dlciB3YXMgJSUuXCIsXG4gICAgICAgIFwiSSBiZWxpZXZlIGluIHlvdSEgVGhlIGNvcnJlY3QgYW5zd2VyIHdhcyAlJVwiLFxuICAgICAgICBcIkRvbid0IHN3ZWF0ISBUaGUgY29ycmVjdCBhbnN3ZXIgd2FzICUlXCIsXG4gICAgICAgIFwiTmljZSB0cnksIHRoZSBjb3JyZWN0IGFuc3dlciB3YXMgJSVcIlxuICAgIF0sXG4gICAgc3RyZWFrQ29ycmVjdE1lc3NhZ2VzOiBbXG4gICAgICAgIFwiQXdlc29tZSEgWW91ciBzdHJlYWsgaXMgbm93ICUlIVwiLFxuICAgICAgICBcIllvdXIgc3RyZWFrIGlzIG5vdyAlJSFcIixcbiAgICAgICAgXCJTaWNrISBZb3VyIG5ldyBzdHJlYWsgaXMgJSUhXCIsXG4gICAgICAgIFwiU3dlZXQhIFN0cmVhazogJSVcIixcbiAgICAgICAgXCJLZWVwIGdvaW5nISBTdHJlYWs6ICUlXCIsXG4gICAgICAgIFwiR0chIFN0cmVhazogJSVcIlxuICAgIF0sXG4gICAgbG9zZVN0cmVha01lc3NhZ2VzOiBbXG4gICAgICAgIFwiQXcgbWFuISBCZXR0ZXIgbHVjayBuZXh0IHRpbWUuIFlvdSBnb3QgYSBzdHJlYWsgb2YgJSUgcXVlc3Rpb25zLlwiLFxuICAgICAgICBcIkJldHRlciBsdWNrIG5leHQgdGltZSEgWW91ciBzdHJlYWsgd2FzICUlIHF1ZXN0aW9ucy5cIixcbiAgICAgICAgXCIlJSBxdWVzdGlvbnMsIG5vdCBiYWQhXCIsXG4gICAgICAgIFwiTWF5YmUgbmV4dCB0aW1lISBZb3UgZ290IGEgc3RyZWFrIG9mICUlIHF1ZXN0aW9ucy5cIlxuICAgIF0sXG4gICAgcXVlc3Rpb25zRmFpbDogW1xuICAgICAgICBcIllvdSBmaW5pc2hlZCB3aXRoIGEgc2NvcmUgb2YgJSUgb3V0IG9mICUlLiBCZXR0ZXIgbHVjayBuZXh0IHRpbWUhXCIsXG4gICAgICAgIFwiWW91IGdvdCAlJS8lJS4gSSBiZXQgeW91J2xsIGRvIGJldHRlciBuZXh0IHRpbWUhXCIsXG4gICAgICAgIFwiS2VlcCB0cnlpbmchIFlvdSBmaW5pc2hlZCB3aXRoIGEgc2NvcmUgb2YgJSUvJSUuXCJcbiAgICBdLFxuICAgIHF1ZXN0aW9uc0ZpbmlzaDogW1xuICAgICAgICBcIkF3ZXNvbWUhIFlvdXIgc2NvcmUgaXMgJSUvJSUhXCIsXG4gICAgICAgIFwiTmljZSBqb2IhIFlvdSBmaW5pc2hlZCB3aXRoIGEgc2NvcmUgb2YgJSUgb3V0IG9mICUlIVwiLFxuICAgICAgICBcIlN1cGVyISBZb3VyIHNjb3JlIGlzICUlLyUlXCIsXG4gICAgICAgIFwiTmljZSEgWW91IGdvdCAlJSBvdXQgb2YgJSUgY29ycmVjdCFcIlxuICAgIF1cbn0iLCJpbXBvcnQgeyBSZXBvcnQgfSBmcm9tICdub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1yZXBvcnQtYWlvJztcbmltcG9ydCB7IExvYWRpbmcgfSBmcm9tICdub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1sb2FkaW5nLWFpbyc7XG5pbXBvcnQgeyBDb25maXJtIH0gZnJvbSAnbm90aWZsaXgvYnVpbGQvbm90aWZsaXgtY29uZmlybS1haW8nO1xuaW1wb3J0IHsgZ2V0RGF0YVVybCwgZ2V0U2V0dGluZywgZ2V0VXNlck9wdGlvbnMgfSBmcm9tICcuL29wdGlvbnMnO1xuaW1wb3J0IHsgaW5jcmVtZW50U3RhdCwgdXBkYXRlU3RhdCwgZ2V0U3RhdCwgaW5jcmVtZW50R2FtZVN0YXQsIHNob3dFbmRTY3JlZW4sIHVwZGF0ZUdhbWVTdGF0IH0gZnJvbSAnLi9zdGF0aXN0aWNzJztcbmltcG9ydCAnLi90b29sdGlwcydcbmltcG9ydCAnLi9vcHRpb25zJ1xuaW1wb3J0IHtzaG93QWJvdXR9IGZyb20gJy4vYWJvdXQnXG5pbXBvcnQgJy4vc3R5bGVzL2luZGV4Lmxlc3MnXG5pbXBvcnQgc3RyaW5ncyBmcm9tICcuL3N0cmluZ3MnXG5pbXBvcnQgUG9wdXAgZnJvbSAnc3VwZXItc2ltcGxlLXBvcHVwJztcbmltcG9ydCB7IGNvbmZpcm1PcHRpb25zLCByZXBvcnRPcHRpb25zIH0gZnJvbSAnLi90aGVtZXMnO1xuXG5jb25zdCB2ZXJzaW9uID0gJyV2ZXIlJ1xuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2ZXJzaW9uXCIpLmlubmVyVGV4dCA9IFwiVmVyc2lvbjogXCIgKyB2ZXJzaW9uXG5cbmxldCBvcHRpb25Db3VudCA9IDRcbmxldCBkYXRhID0ge31cbmxldCBjdXJyZW50Q291bnRyeTsgLy8gZ3JyIG5vIGNoZWF0aW5nXG5sZXQgcHJldmlvdXNDb3VudHJ5O1xubGV0IHF1ZXN0aW9uTnVtID0gMFxubGV0IHF1ZXN0aW9uQ291bnQgPSAxMFxubGV0IHNjb3JlID0gMFxubGV0IGNhbkNvbnRpbnVlID0gdHJ1ZVxuY29uc3QgZmxhZ0FwaUVuZHBvaW50ID0gXCJmbGFncy9cIiAvLyBpZ25vcmUgdGhlIHZhcmlhYmxlIG5hbWUgWERcbmNvbnN0IGZsYWdGYWxsYmFja1VybFN0YXJ0ID0gXCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2NvdW50cnktZmxhZy1lbW9qaS1qc29uQDIuMC4wL2Rpc3QvaW1hZ2VzL1wiXG4vLyBOb3RlOiBVcGRhdGUgdGhlIHVzZUZhbGxiYWNrIHZhcmlhYmxlIGluIGdhbGxlcnkuaHRtbCBhbHNvXG5jb25zdCB1c2VGYWxsYmFjayA9IFtcIkFDXCIsXCJDUFwiLFwiREdcIixcIkVBXCIsXCJJQ1wiLFwiVEFcIl0gLy8gRmxhZ3MgdGhhdCBuZWVkIHRvIHVzZSB0aGUgc2ltcGxpZmllZCBzdHlsZSBmcm9tIG9wZW5tb2ppXG5sZXQgcHJvZ3Jlc3NCYXJQZXJjZW50ID0gMFxubGV0IHVzZXJPcHRpb25zID0ge31cbmxldCBzdHJlYWsgPSAwXG5sZXQgdW5zYXZlZENoYW5nZXMgPSBmYWxzZVxuXG5jb25zdCBwcm9ncmVzc0JhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvZ3Jlc3MtZmlsbFwiKVxuY29uc3Qgc3RyZWFrTnVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdHJlYWstbnVtXCIpXG5jb25zdCBzdHJlYWtDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0cmVhay1jb250YWluZXJcIilcbmNvbnN0IHR5cGluZ0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGluZy1mb3JtXCIpXG5jb25zdCB0eXBpbmdJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHlwaW5nLWlucHV0XCIpXG5jb25zdCBjb3JyZWN0VGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29ycmVjdC10ZXh0XCIpXG5cbnR5cGluZ0Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxufSlcblxuZnVuY3Rpb24gY2hlY2tBbnN3ZXIoYW5zd2VyLCBjb3VudHJ5KSB7XG4gICAgbGV0IHZhbGlkQW5zd2VycyA9IFtdXG4gICAgdmFsaWRBbnN3ZXJzLnB1c2goY291bnRyeS5uYW1lLnRvTG93ZXJDYXNlKCkpXG4gICAgaWYgKCdhbHQnIGluIGNvdW50cnkpIHtcbiAgICAgICAgY291bnRyeS5hbHQuZm9yRWFjaCgoYWx0KSA9PiB7XG4gICAgICAgICAgICB2YWxpZEFuc3dlcnMucHVzaChhbHQudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgfSlcbiAgICB9XG4gICAgcmV0dXJuIHZhbGlkQW5zd2Vycy5pbmNsdWRlcyhhbnN3ZXIudG9Mb3dlckNhc2UoKS50cmltKCkpXG59XG5cbmZ1bmN0aW9uIHNob3dVc2VyRXJyb3IoZXJyb3JNKSB7XG4gICAgTG9hZGluZy5yZW1vdmUoKVxuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3JNKVxuICAgIFJlcG9ydC5mYWlsdXJlKFwiRXJyb3JcIiwgZXJyb3JNLnRvU3RyaW5nKCkgfHwgXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkLlwiLCBcIk9rXCIsIHJlcG9ydE9wdGlvbnMpXG59XG5cbmZ1bmN0aW9uIHJhbmRvbUNvdW50cnkoKSB7XG4gICAgcmV0dXJuIGRhdGFbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZGF0YS5sZW5ndGgpXVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGlkZUFsbFNjcmVlbnMoKSB7XG4gICAgY29uc3Qgc2NyZWVucyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNjcmVlblwiKSlcbiAgICBzY3JlZW5zLmZvckVhY2goKHNjcmVlbikgPT4ge1xuICAgICAgICBzY3JlZW4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY2xlYXJPcHRpb25zKCkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvcHRpb25cIikpXG4gICAgb3B0aW9ucy5mb3JFYWNoKChvcHRpb24pID0+IHtcbiAgICAgICAgb3B0aW9uLnJlbW92ZSgpXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY3VycmVudENvdW50cnkgPSBudWxsXG4gICAgcHJldmlvdXNDb3VudHJ5ID0gbnVsbFxuICAgIHF1ZXN0aW9uTnVtID0gMFxuICAgIHByb2dyZXNzQmFyUGVyY2VudCA9IDBcbiAgICBzY29yZSA9IDBcbiAgICBzdHJlYWsgPSAwXG4gICAgdW5zYXZlZENoYW5nZXMgPSBmYWxzZVxufVxuXG5mdW5jdGlvbiByZXR1cm5Ub0hvbWUoKSB7XG4gICAgcmVzZXQoKVxuICAgIGhpZGVBbGxTY3JlZW5zKClcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlbGNvbWVcIikuc3R5bGUuZGlzcGxheSA9IFwidW5zZXRcIlxufVxuXG5mdW5jdGlvbiBnZXRGbGFnVXJsKGNvdW50cnkpIHtcbiAgICBpZiAodXNlck9wdGlvbnMuc2V0ID09IFwidXMtc3RhdGVzXCIpIHtcbiAgICAgICAgcmV0dXJuICdmbGFncy9zdGF0ZS8nICsgY291bnRyeS5jb2RlICsgJy5wbmcnXG4gICAgfVxuICAgIGlmICh1c2VyT3B0aW9ucy5zZXQgPT0gXCJ1cy1zdGF0ZXMtYnktbWFwXCIpIHtcbiAgICAgICAgcmV0dXJuIGBmbGFncy9zdGF0ZS9tYXBzLyR7Y291bnRyeS5jb2RlfS5wbmdgXG4gICAgfVxuICAgIGlmICh1c2VGYWxsYmFjay5pbmNsdWRlcyhjb3VudHJ5LmNvZGUpKSB7XG4gICAgICAgIHJldHVybiBmbGFnRmFsbGJhY2tVcmxTdGFydCArIGNvdW50cnkuaW1hZ2VcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmxhZ0FwaUVuZHBvaW50ICsgY291bnRyeS5jb2RlICsgXCIuc3ZnXCJcbiAgICB9XG59XG5cbmNvbnN0IGd1ZXNzU2NyZWVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJndWVzc1wiKVxuY29uc3QgZmxhZ1N2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmxhZy1zdmdcIilcbmNvbnN0IG9wdGlvbnNEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImd1ZXNzVHlwZS1tdWx0aVwiKVxuXG5jb25zdCBhbnN3ZXJUeXBlcyA9IFtdXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT0nYW5zd2VyVHlwZSddXCIpLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICBhbnN3ZXJUeXBlcy5wdXNoKGVsZW1lbnQuaWQpXG59KVxuZnVuY3Rpb24gc2hvd0Fuc3dlck1vZGUoYW5zd2VyVHlwZSkge1xuICAgIGFuc3dlclR5cGVzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImd1ZXNzVHlwZS1cIiArIGVsZW1lbnQpXG4gICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSlcbiAgICBsZXQgYW5zd2VyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2d1ZXNzVHlwZS0ke2Fuc3dlclR5cGV9YClcbiAgICBpZiAoYW5zd2VyRGl2KSB7XG4gICAgICAgIGFuc3dlckRpdi5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcIlwiKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gbW92ZU9uKGNvdW50cnkpIHtcbiAgICBxdWVzdGlvbk51bSsrXG4gICAgcHJvZ3Jlc3NCYXJQZXJjZW50ID0gKDEwMCAqIHF1ZXN0aW9uTnVtKSAvIHF1ZXN0aW9uQ291bnRcbiAgICBwcm9ncmVzc0Jhci5zdHlsZS53aWR0aCA9IHByb2dyZXNzQmFyUGVyY2VudCArIFwiJVwiXG4gICAgcHJldmlvdXNDb3VudHJ5ID0gY291bnRyeVxuICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsUXVlc3Rpb25zJylcbiAgICBpbmNyZW1lbnRHYW1lU3RhdCgndG90YWxRdWVzdGlvbnMnKVxuICAgIGlmIChxdWVzdGlvbk51bSArIDEgPiBxdWVzdGlvbkNvdW50ICYmIHVzZXJPcHRpb25zLm1vZGUgPT0gXCJxdWVzdGlvbnNcIikge1xuICAgICAgICB1bnNhdmVkQ2hhbmdlcyA9IGZhbHNlOyByZXR1cm4gc2hvd0VuZFNjcmVlbih1c2VyT3B0aW9ucy5tb2RlLCBzdHJlYWssIHNjb3JlLCB1c2VyT3B0aW9ucy5xdWVzdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgZ3Vlc3NGb3IocmFuZG9tQ291bnRyeSgpKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gZ3Vlc3NGb3IoY291bnRyeSkge1xuICAgIGxldCBvcHRpb25zID0gW11cbiAgICBjdXJyZW50Q291bnRyeSA9IGNvdW50cnlcbiAgICBpZiAoY3VycmVudENvdW50cnkgPT0gcHJldmlvdXNDb3VudHJ5KSB7XG4gICAgICAgIGd1ZXNzRm9yKHJhbmRvbUNvdW50cnkoKSlcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGZsYWdTdmcuc3JjID0gZ2V0RmxhZ1VybChjb3VudHJ5KSAgICAgICAgXG4gICAgZnVuY3Rpb24gcGljaygpIHtcbiAgICAgICAgY29uc3QgckNvdW50cnkgPSByYW5kb21Db3VudHJ5KClcbiAgICAgICAgaWYgKG9wdGlvbnMuaW5jbHVkZXMockNvdW50cnkubmFtZSkgfHwgckNvdW50cnkubmFtZSA9PSBjb3VudHJ5Lm5hbWUpIHsgLy8gTm8gZHVwbGljYXRlcyFcbiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoXCJEdXBsaWNhdGUgZGV0ZWN0ZWQ6IFwiICsgckNvdW50cnkubmFtZSlcbiAgICAgICAgICAgIHBpY2soKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgb3B0aW9ucy5wdXNoKHJDb3VudHJ5Lm5hbWUpXG4gICAgfVxuICAgIGZ1bmN0aW9uIHByb2Nlc3NDYW5Db250aW51ZSgpIHtcbiAgICAgICAgY2FuQ29udGludWUgPSBmYWxzZVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNhbkNvbnRpbnVlID0gdHJ1ZVxuICAgICAgICB9LCAzNzApXG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0cmVha0luY29ycmVjdCgpIHtcbiAgICAgICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICAgICAgaWYgKCFjYW5Db250aW51ZSkgcmV0dXJuXG4gICAgICAgICAgICBwcm9jZXNzQ2FuQ29udGludWUoKVxuICAgICAgICAgICAgaW5jcmVtZW50U3RhdCgndG90YWxRdWVzdGlvbnMnKVxuICAgICAgICAgICAgaW5jcmVtZW50R2FtZVN0YXQoJ3RvdGFsUXVlc3Rpb25zJylcbiAgICAgICAgICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsSW5jb3JyZWN0JylcbiAgICAgICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbEluY29ycmVjdCcpXG4gICAgICAgICAgICBpZiAoZ2V0U3RhdCgnc3RyZWFrJykgPCBzdHJlYWspIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVTdGF0KCdzdHJlYWsnLCBzdHJlYWspXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1bnNhdmVkQ2hhbmdlcyA9IGZhbHNlOyByZXR1cm4gc2hvd0VuZFNjcmVlbih1c2VyT3B0aW9ucy5tb2RlLCBzdHJlYWssIHNjb3JlLCB1c2VyT3B0aW9ucy5xdWVzdGlvbnMsIGNvdW50cnkubmFtZSlcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodXNlck9wdGlvbnMuYW5zd2VyVHlwZSA9PSBcIm11bHRpXCIpIHtcbiAgICAgICAgY2xlYXJPcHRpb25zKClcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvcHRpb25Db3VudCAtIDE7IGkrKykge1xuICAgICAgICAgICAgcGljaygpXG4gICAgICAgIH1cbiAgICAgICAgLy8gQWRkIGNvcnJlY3Qgb3B0aW9uIHJhbmRvbWx5XG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG9wdGlvbnMubGVuZ3RoICsgMSkpO1xuICAgICAgICBvcHRpb25zLnNwbGljZShyYW5kb21JbmRleCwgMCwgY291bnRyeS5uYW1lKTtcbiAgICAgICAgb3B0aW9ucy5mb3JFYWNoKChvcHRpb24pID0+IHtcbiAgICAgICAgICAgIGxldCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgICAgICBidG4uY2xhc3NOYW1lID0gXCJvcHRpb25cIlxuICAgICAgICAgICAgYnRuLmlubmVyVGV4dCA9IG9wdGlvblxuICAgICAgICAgICAgb3B0aW9uc0Rpdi5hcHBlbmRDaGlsZChidG4pXG4gICAgICAgICAgICBmdW5jdGlvbiBvbkJ0bkNsaWNrKCkge1xuICAgICAgICAgICAgICAgIGlmIChidG4uZ2V0QXR0cmlidXRlKFwiY2xpY2tlZFwiKSkgcmV0dXJuXG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrQW5zd2VyKG9wdGlvbiwgY291bnRyeSkpIHsgLy8gWUFZIElUJ1MgQ09SUkVDVCEhISEgTEVUJ1MgR08hISFcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFrKytcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFrTnVtLmlubmVyVGV4dCA9IHN0cmVha1xuICAgICAgICAgICAgICAgICAgICBSZXBvcnQuc3VjY2VzcyhcIkNvcnJlY3QhXCIsIHVzZXJPcHRpb25zLm1vZGUgPT0gXCJzdHJlYWtcIiA/IHN0cmluZ3Muc3RyZWFrQ29ycmVjdE1lc3NhZ2VzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHN0cmluZ3Muc3RyZWFrQ29ycmVjdE1lc3NhZ2VzLmxlbmd0aCldLnJlcGxhY2VBbGwoXCIlJVwiLCBzdHJlYWspIDogXCJcIiwgXCJOZXh0IFF1ZXN0aW9uXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2FuQ29udGludWUpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc0NhbkNvbnRpbnVlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsQ29ycmVjdCcpXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnRHYW1lU3RhdCgndG90YWxDb3JyZWN0JylcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VyT3B0aW9ucy5tb2RlID09IFwic3RyZWFrXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0U3RhdCgnc3RyZWFrJykgPCBzdHJlYWspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlU3RhdCgnc3RyZWFrJywgc3RyZWFrKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3JlKytcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVPbihjb3VudHJ5KVxuICAgICAgICAgICAgICAgICAgICB9LCByZXBvcnRPcHRpb25zKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIFlPVSdSRSBXUk9ORyBYRCBHRVQgVFJPTExFRFxuICAgICAgICAgICAgICAgICAgICBpZiAodXNlck9wdGlvbnMubW9kZSA9PSBcInN0cmVha1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYWtJbmNvcnJlY3QoKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgUmVwb3J0LmZhaWx1cmUoXCJJbmNvcnJlY3RcIiwgc3RyaW5ncy5pbmNvcnJlY3RFbmRsZXNzTWVzc2FnZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc3RyaW5ncy5pbmNvcnJlY3RFbmRsZXNzTWVzc2FnZXMubGVuZ3RoKV0ucmVwbGFjZUFsbChcIiUlXCIsICc8Yj4nICsgY291bnRyeS5uYW1lICsgJzwvYj4nKSwgXCJOZXh0IFF1ZXN0aW9uXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNhbkNvbnRpbnVlKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzQ2FuQ29udGludWUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsSW5jb3JyZWN0JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnRHYW1lU3RhdCgndG90YWxJbmNvcnJlY3QnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVPbihjb3VudHJ5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzQ291bnRyeSA9IGNvdW50cnlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHJlcG9ydE9wdGlvbnMpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnRuLnNldEF0dHJpYnV0ZShcImNsaWNrZWRcIiwgdHJ1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25CdG5DbGljaylcbiAgICAgICAgfSlcbiAgICB9IGVsc2UgaWYgKHVzZXJPcHRpb25zLmFuc3dlclR5cGUgPT0gXCJ0eXBpbmdcIikge1xuICAgICAgICBjb25zdCBmb3JtTGlzdGVuZXIgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBndWVzcyA9IHR5cGluZ0lucHV0LnZhbHVlXG4gICAgICAgICAgICBpZiAoZ3Vlc3MgPT09IFwiXCIpIHJldHVybiAvLyBNaXN0YWtlIGZhaWxzYWZlXG4gICAgICAgICAgICB0eXBpbmdJbnB1dC52YWx1ZSA9IFwiXCJcbiAgICAgICAgICAgIHR5cGluZ0lucHV0LmZvY3VzKClcbiAgICAgICAgICAgIGlmIChjaGVja0Fuc3dlcihndWVzcywgY291bnRyeSkpIHtcbiAgICAgICAgICAgICAgICAvLyBUeXBpbmcgY29ycmVjdFxuICAgICAgICAgICAgICAgIHR5cGluZ0lucHV0LmNsYXNzTGlzdC5hZGQoXCJjb3JyZWN0XCIpXG4gICAgICAgICAgICAgICAgc3RyZWFrKytcbiAgICAgICAgICAgICAgICBzdHJlYWtOdW0uaW5uZXJUZXh0ID0gc3RyZWFrICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbmNyZW1lbnRTdGF0KCd0b3RhbENvcnJlY3QnKVxuICAgICAgICAgICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbENvcnJlY3QnKVxuICAgICAgICAgICAgICAgIGlmICh1c2VyT3B0aW9ucy5tb2RlID09IFwic3RyZWFrXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGdldFN0YXQoJ3N0cmVhaycpIDwgc3RyZWFrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVTdGF0KCdzdHJlYWsnLCBzdHJlYWspXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2NvcmUrK1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0eXBpbmdJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwiY29ycmVjdFwiKVxuICAgICAgICAgICAgICAgICAgICBtb3ZlT24oKVxuICAgICAgICAgICAgICAgIH0sIDYwMClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gVHlwaW5nIGluY29ycmVjdFxuICAgICAgICAgICAgICAgIHR5cGluZ0lucHV0LmNsYXNzTGlzdC5hZGQoXCJpbmNvcnJlY3RcIilcbiAgICAgICAgICAgICAgICBjb3JyZWN0VGV4dC5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCJcbiAgICAgICAgICAgICAgICBjb3JyZWN0VGV4dC5xdWVyeVNlbGVjdG9yKFwiLnZhbHVlXCIpLmlubmVyVGV4dCA9IGNvdW50cnkubmFtZVxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb3JyZWN0VGV4dC5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIlxuICAgICAgICAgICAgICAgICAgICB0eXBpbmdJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwiaW5jb3JyZWN0XCIpXG4gICAgICAgICAgICAgICAgICAgIGlmICh1c2VyT3B0aW9ucy5tb2RlID09IFwic3RyZWFrXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVha0luY29ycmVjdCgpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnRTdGF0KCd0b3RhbEluY29ycmVjdCcpXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnRHYW1lU3RhdCgndG90YWxJbmNvcnJlY3QnKVxuICAgICAgICAgICAgICAgICAgICAgICAgbW92ZU9uKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIDYwMClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHR5cGluZ0Zvcm0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmb3JtTGlzdGVuZXIpXG4gICAgICAgIH1cbiAgICAgICAgdHlwaW5nRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZvcm1MaXN0ZW5lcilcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHVzZXJPcHRpb25zLnNldCAhPSBcInVzLXN0YXRlc1wiICYmIHVzZXJPcHRpb25zLnNldCAhPSBcInVzLXN0YXRlcy1ieS1tYXBcIikge1xuICAgICAgICAgICAgaWYgKCFnZXRTdGF0KCdmbGFnc1NlZW4nKS5pbmNsdWRlcyhjb3VudHJ5LmNvZGUpKSB7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1N0YXQgPSBnZXRTdGF0KCdmbGFnc1NlZW4nKVxuICAgICAgICAgICAgICAgIG5ld1N0YXQucHVzaChjb3VudHJ5LmNvZGUpXG4gICAgICAgICAgICAgICAgdXBkYXRlU3RhdCgnZmxhZ3NTZWVuJywgbmV3U3RhdClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gY2F0Y2goZXJyb3JNKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gdXBkYXRlIHN0YXRpc3RpY3MhXCIpXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3JNKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgdXNlck9wdGlvbnMgPSBnZXRVc2VyT3B0aW9ucygpXG4gICAgaWYgKGdldFNldHRpbmcoJ3ByYWN0aWNlJykgPT09IFwicHJhY3RpY2Utb25cIikge1xuICAgICAgICBDb25maXJtLnNob3coXCJQcmFjdGljZSBNb2RlXCIsIFwiWW91ciBzdGF0cyB3b24ndCBjb3VudCB3aGlsZSBwbGF5aW5nIGluIHByYWN0aWNlIG1vZGUuIENoZWNrIHlvdXIgc2V0dGluZ3MgdG8gZGlzYWJsZSBpdC5cIiwgXCJPa1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBjb25maXJtT3B0aW9ucylcbiAgICB9XG4gICAgb3B0aW9uQ291bnQgPSB1c2VyT3B0aW9ucy5vcHRpb25zLnNwbGl0KFwib3B0LVwiKVsxXVxuICAgIHF1ZXN0aW9uQ291bnQgPSB1c2VyT3B0aW9ucy5xdWVzdGlvbnMuc3BsaXQoXCJxLVwiKVsxXVxuICAgIGNvbnNvbGUubG9nKFwiRGF0YSB1cmw6IFwiICsgZ2V0RGF0YVVybCgpKVxuICAgIGNvbnNvbGUubG9nKFwiT3B0aW9uIGNvdW50OiBcIiArIG9wdGlvbkNvdW50KVxuICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsR2FtZXMnKVxuICAgIHNob3dBbnN3ZXJNb2RlKHVzZXJPcHRpb25zLmFuc3dlclR5cGUpXG4gICAgdW5zYXZlZENoYW5nZXMgPSB0cnVlXG4gICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgIT09IFwicXVlc3Rpb25zXCIpIHtcbiAgICAgICAgcHJvZ3Jlc3NCYXIucGFyZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9IGVsc2Uge1xuICAgICAgICBwcm9ncmVzc0Jhci5wYXJlbnRFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsICcnKVxuICAgIH1cbiAgICBpZiAodXNlck9wdGlvbnMubW9kZSAhPT0gXCJzdHJlYWtcIikge1xuICAgICAgICBzdHJlYWtDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSBlbHNlIHtcbiAgICAgICAgc3RyZWFrQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcbiAgICB9XG4gICAgaWYgKHVzZXJPcHRpb25zLmF1dG9jb21wbGV0ZSA9PSBcImF1dG9jb21wbGV0ZS1vblwiKSB7XG4gICAgICAgIHR5cGluZ0lucHV0LnNldEF0dHJpYnV0ZShcImxpc3RcIiwgXCJjb3VudHJpZXMtYXV0b1wiKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHR5cGluZ0lucHV0LnNldEF0dHJpYnV0ZShcImxpc3RcIiwgXCJcIilcbiAgICB9XG4gICAgdHlwaW5nSW5wdXQudmFsdWUgPSBcIlwiXG4gICAgdXBkYXRlR2FtZVN0YXQoJ2RpZmZpY3VsdHknLCB1c2VyT3B0aW9ucy5zZXQpXG4gICAgdXBkYXRlR2FtZVN0YXQoJ3F1ZXN0aW9ucycsIHVzZXJPcHRpb25zLnF1ZXN0aW9ucy5zcGxpdChcInEtXCIpWzFdKVxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5mby1kaWZmaWN1bHR5ID4gc3BhblwiKS5pbm5lclRleHQgPSB1c2VyT3B0aW9ucy5zZXQucmVwbGFjZUFsbChcIi1cIiwgXCIgXCIpXG4gICAgc3RyZWFrTnVtLmlubmVyVGV4dCA9IHN0cmVha1xuICAgIExvYWRpbmcuY2lyY2xlKCdGZXRjaGluZyBkYXRhLi4uJylcbiAgICBmZXRjaChnZXREYXRhVXJsKCkpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBMb2FkaW5nLmNoYW5nZSgnUGFyc2luZyBkYXRhLi4uJylcbiAgICAgICAgcmVzLmpzb24oKS50aGVuKChmZXRjaGVkRGF0YSkgPT4ge1xuICAgICAgICAgICAgZGF0YSA9IGZldGNoZWREYXRhXG4gICAgICAgICAgICBjb25zdCBhdXRvY29tcGxldGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvdW50cmllcy1hdXRvXCIpXG4gICAgICAgICAgICBhdXRvY29tcGxldGUucXVlcnlTZWxlY3RvckFsbChcIm9wdGlvblwiKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmUoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGRhdGEuZm9yRWFjaChjb3VudHJ5ID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIilcbiAgICAgICAgICAgICAgICBlbGVtZW50LnZhbHVlID0gY291bnRyeS5uYW1lXG4gICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlLmFwcGVuZENoaWxkKGVsZW1lbnQpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaWYgKHVzZXJPcHRpb25zLmFuc3dlclR5cGUgPT0gXCJ0eXBpbmdcIikge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0eXBpbmdJbnB1dC5mb2N1cygpXG4gICAgICAgICAgICAgICAgfSwgMzAwKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgTG9hZGluZy5yZW1vdmUoKVxuICAgICAgICAgICAgaGlkZUFsbFNjcmVlbnMoKVxuICAgICAgICAgICAgZ3Vlc3NTY3JlZW4uc3R5bGUuZGlzcGxheSA9IFwidW5zZXRcIlxuICAgICAgICAgICAgcHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGggPSBwcm9ncmVzc0JhclBlcmNlbnQgKyBcIiVcIlxuICAgICAgICAgICAgZ3Vlc3NGb3IocmFuZG9tQ291bnRyeSgpKVxuICAgICAgICB9KS5jYXRjaChzaG93VXNlckVycm9yKVxuICAgIH0pLmNhdGNoKHNob3dVc2VyRXJyb3IpXG59XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PSBcIkVudGVyXCIgfHwgZS5rZXkgPT0gXCIgXCIgfHwgZS5rZXkgPT0gXCJFc2NhcGVcIikge1xuICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWFJlcG9ydEJ1dHRvblwiKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWFJlcG9ydEJ1dHRvblwiKS5jbGljaygpXG4gICAgICAgIH1cbiAgICB9XG59KVxuXG4vLyBTaG93IHRoZSB1bnNhdmVkIGNoYW5nZXMgcHJvbXB0XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgZXZlbnQgPT4ge1xuICAgIGlmICh1bnNhdmVkQ2hhbmdlcykge1xuICAgICAgICBldmVudC5yZXR1cm5WYWx1ZSA9IHRydWVcbiAgICB9XG59KVxuXG4vLyBUaWNrIHBsYXl0aW1lIHN0YXRcbnNldEludGVydmFsKCgpID0+IHtcbiAgICBpZiAodW5zYXZlZENoYW5nZXMpIHtcbiAgICAgICAgaW5jcmVtZW50R2FtZVN0YXQoJ3BsYXl0aW1lJylcbiAgICB9XG59LCAxMDAwKVxuXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNsb3NlLWJ0blwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIENvbmZpcm0uc2hvdyhcIkFyZSB5b3Ugc3VyZT9cIiwgXCJZb3VyIHN0YXRpc3RpY3MgYXJlIGFscmVhZHkgc2F2ZWQsIGJ1dCBhbnkgY3VycmVudCBnYW1lIHByb2dyZXNzIHdpbGwgYmUgbG9zdC5cIiwgXCJMZWF2ZVwiLCBcIlN0YXlcIiwgcmV0dXJuVG9Ib21lLCB1bmRlZmluZWQsIGNvbmZpcm1PcHRpb25zKVxufSlcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXBsYXktYnRuJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBoaWRlQWxsU2NyZWVucygpXG4gICAgcmVzZXQoKVxuICAgIHN0YXJ0KClcbn0pXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlldy1mbGFnLWJ0bicpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgbmV3IFBvcHVwKHtcbiAgICAgICAgdGl0bGU6IGBGbGFnIG9mICR7Y3VycmVudENvdW50cnkubmFtZX1gLFxuICAgICAgICBjb250ZW50OiBgPGltZyBzcmM9XCIke2dldEZsYWdVcmwoY3VycmVudENvdW50cnkpfVwiIGNsYXNzPVwidmlldy1mbGFnLWltZ1wiPmAsXG4gICAgICAgIHBsYWluVGV4dDogZmFsc2VcbiAgICB9KVxufSlcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdob21lLWJ0bicpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByZXR1cm5Ub0hvbWUpXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxheS1idG4nKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc3RhcnQpXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWJvdXQtYnRuJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNob3dBYm91dCkiLCJpbXBvcnQgUG9wdXAgZnJvbSBcInN1cGVyLXNpbXBsZS1wb3B1cFwiXG5cbmNvbnN0IGNvbnRlbnQgPSBgXG48aDM+V2hhdCBpcyB0aGlzPzwvaDM+XG5GbGFnIGd1ZXNzZXIgaXMgYW4gPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9waWthcG93ZXI5MDgwL2ZsYWctZ3Vlc3NlclwiIHRhcmdldD1cIl9ibGFua1wiPm9wZW4gc291cmNlPC9hPiB2YW5pbGxhIGphdmFzY3JpcHQgZ2FtZSBhYm91dCBndWVzc2luZyB3b3JsZCBmbGFncy5cbjxoMz5EaWZmaWN1bHR5PC9oMz5cbkluIGFuIGF0dGVtcHQgdG8gbWFrZSB0aGUgZ2FtZSBmdW4gZm9yIGV2ZXJ5b25lLCBhIGRpZmZpY3VsdHkgb3B0aW9uIGhhcyBiZWVuIGFkZGVkLiBUaGUgdGhyZWUgZGlmZmljdWx0aWVzIGFyZSBkZXNjcmliZWQgd2hlbiB5b3UgaG92ZXIgb3ZlciB0aGVpciBidXR0b25zLiBZb3UgbWlnaHQgbm90IGFncmVlIHdpdGggdGhlc2UgcHJlc2V0cywgYW5kIGlmIHlvdSBoYXZlIGFueSBmZWVkYmFjayBwbGVhc2Ugb3BlbiBhIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcGlrYXBvd2VyOTA4MC9mbGFnLWd1ZXNzZXIvaXNzdWVzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+Z2l0aHViIGlzc3VlPC9hPi5cbjxoMz5DdXN0b21pemF0aW9uPC9oMz5cbkZsYWcgZ3Vlc3NlciBpcyBleHRyZW1lbHkgY3VzdG9taXphYmxlISBCZWxvdyB0aGUgcGxheSBidXR0b24geW91J2xsIGZpbmQgYSBtZW51IHdpdGggbWFueSBvcHRpb25zLiBBZnRlciB0aGUgZ2FtZSBlbmRzLCB5b3UgY2FuIHByZXNzIHRoZSBwbGF5IGFnYWluIGJ1dHRvbiB0byByZXRyeSB3aXRoIHRoZSBleGFjdCBzYW1lIG9wdGlvbnMuXG48aDM+QnVncyAvIEZlYXR1cmUgUmVxdWVzdHM8L2gzPlxuSWYgeW91J3ZlIGZvdW5kIGEgYnVnIG9yIGhhdmUgYW4gaWRlYSBmb3IgYSBmZWF0dXJlLCBwbGVhc2UgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9waWthcG93ZXI5MDgwL2ZsYWctZ3Vlc3Nlci9pc3N1ZXNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5vcGVuIGFuIGlzc3VlPC9hPiBvbiBnaXRodWIuIFlvdSB1bmZvcnR1bmF0ZWx5IHdpbGwgbmVlZCB0byBzaWduIHVwIGZvciBhbiBhY2NvdW50LlxuPGgzPkFja25vd2xlZGdlbWVudHM8L2gzPlxuPHVsPlxuPGxpPkV4dHJhIHNwZWNpYWwgdGhhbmtzIHRvIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcmlzYW4vY291bnRyeS1mbGFnLWVtb2ppLWpzb25cIiB0YXJnZXQ9XCJfYmxhbmtcIj5jb3VudHJ5LWZsYWctZW1vamktanNvbjwvYT4sIHRoaXMgcHJvamVjdCB3b3VsZCBub3QgYmUgcG9zc2libGUgd2l0aG91dCBpdC48L2xpPlxuPGxpPkZsYWcgaW1hZ2VzIGNvdXJ0ZXN5IG9mIDxhIGhyZWY9XCJodHRwczovL2NvdW50cnlmbGFnc2FwaS5jb20vXCIgdGFyZ2V0PVwiX2JsYW5rXCI+Y291bnRyeWZsYWdzYXBpLmNvbTwvYT48L2xpPlxuPGxpPlJhZGlvIGJ1dHRvbiBzdHlsZXMgdGFrZW4gZnJvbSA8YSBocmVmPVwiaHR0cHM6Ly9tYXJraGVhdGgubmV0L3Bvc3QvY3VzdG9taXplLXJhZGlvLWJ1dHRvbi1jc3NcIiB0YXJnZXQ9XCJfYmxhbmtcIj5oZXJlPC9hPjwvbGk+XG48bGk+SWNvbnMgYnkgPGEgaHJlZj1cImh0dHBzOi8vZm9udGF3ZXNvbWUuY29tL1wiIHRhcmdldD1cIl9ibGFua1wiPkZvbnRBd2Vzb21lPC9hPjwvbGk+XG48L3VsPlxuYFxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd0Fib3V0KCkge1xuICAgIG5ldyBQb3B1cCh7XG4gICAgICAgIHRpdGxlOiAnQWJvdXQnLFxuICAgICAgICBwbGFpblRleHQ6IGZhbHNlLFxuICAgICAgICBjb250ZW50OiBjb250ZW50XG4gICAgfSlcbn1cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJyb290IiwiZyIsIndpbmRvdyIsImRvY3VtZW50IiwibmV3Q29uZmlybVNldHRpbmdzIiwidHlwZXNDb25maXJtIiwiY29uZmlybVNldHRpbmdzIiwiSUQiLCJjbGFzc05hbWUiLCJ3aWR0aCIsInppbmRleCIsInBvc2l0aW9uIiwiZGlzdGFuY2UiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJSYWRpdXMiLCJiYWNrT3ZlcmxheSIsImJhY2tPdmVybGF5Q29sb3IiLCJydGwiLCJmb250RmFtaWx5IiwiY3NzQW5pbWF0aW9uIiwiY3NzQW5pbWF0aW9uRHVyYXRpb24iLCJjc3NBbmltYXRpb25TdHlsZSIsInBsYWluVGV4dCIsInRpdGxlQ29sb3IiLCJ0aXRsZUZvbnRTaXplIiwidGl0bGVNYXhMZW5ndGgiLCJtZXNzYWdlQ29sb3IiLCJtZXNzYWdlRm9udFNpemUiLCJtZXNzYWdlTWF4TGVuZ3RoIiwiYnV0dG9uc0ZvbnRTaXplIiwiYnV0dG9uc01heExlbmd0aCIsIm9rQnV0dG9uQ29sb3IiLCJva0J1dHRvbkJhY2tncm91bmQiLCJjYW5jZWxCdXR0b25Db2xvciIsImNhbmNlbEJ1dHRvbkJhY2tncm91bmQiLCJjb21tb25Db25zb2xlRXJyb3IiLCJtZXNzYWdlIiwiY29uc29sZSIsImVycm9yIiwiY29tbW9uQ2hlY2tIZWFkT3JCb2R5IiwiZWxlbWVudCIsImNvbW1vbkV4dGVuZE9wdGlvbnMiLCJleHRlbmRlZCIsImRlZXAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJjYWxsIiwiYXJndW1lbnRzIiwibWVyZ2UiLCJvYmoiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJjb21tb25HZXRQbGFpbnRleHQiLCJodG1sIiwiaHRtbFBvb2wiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwidGV4dENvbnRlbnQiLCJpbm5lclRleHQiLCJjb25maXJtR2V0SW50ZXJuYWxDU1NDb2RlcyIsImNvbmZpcm1DcmVhdGUiLCJjb25maXJtVHlwZSIsInRpdGxlIiwibWVzc2FnZU9yUXVlc3Rpb24iLCJhbnN3ZXIiLCJva0J1dHRvblRleHQiLCJjYW5jZWxCdXR0b25UZXh0Iiwib2tCdXR0b25DYWxsYmFjayIsImNhbmNlbEJ1dHRvbkNhbGxiYWNrIiwib3B0aW9ucyIsIk5vdGlmbGl4IiwiQ29uZmlybSIsImluaXQiLCJuZXdDb25maXJtU2V0dGluZ3NCYWNrdXAiLCJBcnJheSIsImlzQXJyYXkiLCJzdWJzdHJpbmciLCJudGZseENvbmZpcm1XcmFwIiwic3R5bGUiLCJ6SW5kZXgiLCJwYWRkaW5nIiwic2V0QXR0cmlidXRlIiwiY2xhc3NMaXN0IiwiYWRkIiwiY29uZmlybVBvc2l0aW9uIiwidHJpbSIsImNvbmZpcm1PdmVybGF5IiwiY2FuY2VsQnV0dG9uSFRNTCIsInNldFZhbGlkYXRpb25JbnB1dCIsInRoZUV4cGVjdGVkQW5zd2VyIiwidGhlQ2xpZW50QW5zd2VyIiwiaW5wdXRNYXhMZW5ndGgiLCJNYXRoIiwiY2VpbCIsImdldEVsZW1lbnRCeUlkIiwiYm9keSIsImFwcGVuZENoaWxkIiwiY29uZmlybUNsb3NlV3JhcCIsIm9rQnV0dG9uIiwidmFsaWRhdGlvbklucHV0IiwiZm9jdXMiLCJzZXRTZWxlY3Rpb25SYW5nZSIsInZhbHVlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGhpc1ZhbHVlIiwidGFyZ2V0IiwicHJldmVudERlZmF1bHQiLCJyZW1vdmUiLCJrZXkiLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsImtleUNvZGUiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJyZXR1cm5WYWx1ZSIsImNhbmNlbEJ1YmJsZSIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiY2xlYXJUaW1lb3V0IiwidXNlckNvbmZpcm1PcHRpb25zIiwiZ2V0SW50ZXJuYWxDU1NDb2RlcyIsInN0eWxlRWxlbWVudElkIiwiaW50ZXJuYWxDU1MiLCJoZWFkIiwiY29tbW9uU2V0SW50ZXJuYWxDU1NDb2RlcyIsInVzZXJDb25maXJtRXh0ZW5kT3B0aW9ucyIsInNob3ciLCJhc2siLCJxdWVzdGlvbiIsInByb21wdCIsImRlZmF1bHRBbnN3ZXIiLCJmYWN0b3J5IiwibmV3TG9hZGluZ1NldHRpbmdzIiwidHlwZXNMb2FkaW5nIiwibG9hZGluZ1NldHRpbmdzIiwiY2xpY2tUb0Nsb3NlIiwiY3VzdG9tU3ZnVXJsIiwiY3VzdG9tU3ZnQ29kZSIsInN2Z1NpemUiLCJzdmdDb2xvciIsIm1lc3NhZ2VJRCIsImxvYWRpbmdHZXRJbnRlcm5hbENTU0NvZGVzIiwibG9hZGluZ0NyZWF0ZSIsImxvYWRpbmdUeXBlIiwibWVzc2FnZU9yT3B0aW9ucyIsImRpc3BsYXkiLCJkZWxheSIsIkxvYWRpbmciLCJuZXdMb2FkaW5nU2V0dGluZ3NCYWNrdXAiLCJuZXdPcHRpb25zIiwiY29sb3IiLCJtZXNzYWdlSFRNTCIsInN2Z0ljb24iLCJsb2FkaW5nQW5kQmxvY2tTdmdJY29uSG91cmdsYXNzIiwibG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkNpcmNsZSIsImxvYWRpbmdBbmRCbG9ja1N2Z0ljb25BcnJvd3MiLCJsb2FkaW5nQW5kQmxvY2tTdmdJY29uRG90cyIsImxvYWRpbmdBbmRCbG9ja1N2Z0ljb25QdWxzZSIsIndoaXRlIiwiZ3JlZW4iLCJsb2FkaW5nQW5kQmxvY2tTdmdJY29uTm90aWZsaXgiLCJzdmdTaXplQXNEaWdpdCIsInBhcnNlSW50IiwicmVwbGFjZSIsIndpbldpZHRoIiwiaW5uZXJXaWR0aCIsIm1heFN2Z1dpZHRoUHgiLCJzdmdJY29uSFRNTCIsIm50Zmx4TG9hZGluZ1dyYXAiLCJiYWNrZ3JvdW5kIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJmbGV4V3JhcCIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJsb2FkaW5nRWxtIiwidGltZW91dDIiLCJ1c2VyTG9hZGluZ09wdGlvbnMiLCJ1c2VyTG9hZGluZ0V4dGVuZE9wdGlvbnMiLCJzdGFuZGFyZCIsImhvdXJnbGFzcyIsImNpcmNsZSIsImFycm93cyIsImRvdHMiLCJwdWxzZSIsImN1c3RvbSIsIm5vdGlmbGl4IiwiY2hhbmdlIiwibmV3TWVzc2FnZSIsIm1lc3NhZ2VXcmFwIiwib2xkTWVzc2FnZUVsbSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibmV3TWVzc2FnZUhUTUwiLCJmb250U2l6ZSIsImxvYWRpbmdDaGFuZ2VNZXNzYWdlIiwibmV3UmVwb3J0U2V0dGluZ3MiLCJ0eXBlc1JlcG9ydCIsInJlcG9ydFNldHRpbmdzIiwiYmFja092ZXJsYXlDbGlja1RvQ2xvc2UiLCJidXR0b25Gb250U2l6ZSIsImJ1dHRvbk1heExlbmd0aCIsInN1Y2Nlc3MiLCJidXR0b25CYWNrZ3JvdW5kIiwiYnV0dG9uQ29sb3IiLCJmYWlsdXJlIiwid2FybmluZyIsImluZm8iLCJyZXBvcnRHZXRJbnRlcm5hbENTU0NvZGVzIiwicmVwb3J0Q3JlYXRlIiwicmVwb3J0VHlwZSIsImJ1dHRvblRleHQiLCJjYWxsYmFja09yT3B0aW9ucyIsIlJlcG9ydCIsIm5ld1JlcG9ydFNldHRpbmdzQmFja3VwIiwidGhlVHlwZSIsIm50Zmx4UmVwb3J0V3JhcCIsInJlcG9ydE92ZXJsYXkiLCJyZXBvcnRPdmVybGF5Q2xpY2tUb0Nsb3NlIiwicmVwb3J0U3ZnSWNvbkZhaWx1cmUiLCJyZXBvcnRTdmdJY29uV2FybmluZyIsInJlcG9ydFN2Z0ljb25JbmZvIiwicmVwb3J0UmVtb3ZlIiwiZWxlbWVudFdyYXBwZXIiLCJxdWVyeVNlbGVjdG9yIiwidXNlclJlcG9ydE9wdGlvbnMiLCJ1c2VyUmVwb3J0RXh0ZW5kT3B0aW9ucyIsInQiLCJlIiwiYSIsIm4iLCJvIiwiciIsInMiLCJsIiwibSIsIndyYXBJRCIsIm92ZXJsYXlJRCIsIm9wYWNpdHkiLCJzaG93T25seVRoZUxhc3RPbmUiLCJwYXVzZU9uSG92ZXIiLCJjbG9zZUJ1dHRvbiIsInVzZUljb24iLCJ1c2VGb250QXdlc29tZSIsImZvbnRBd2Vzb21lSWNvblN0eWxlIiwiZm9udEF3ZXNvbWVJY29uU2l6ZSIsInRleHRDb2xvciIsImNoaWxkQ2xhc3NOYW1lIiwibm90aWZsaXhJY29uQ29sb3IiLCJmb250QXdlc29tZUNsYXNzTmFtZSIsImZvbnRBd2Vzb21lSWNvbkNvbG9yIiwiYyIsInAiLCJmIiwiZCIsIngiLCJiIiwidSIsInF1ZXJ5U2VsZWN0b3JMaW1pdCIsInkiLCJsb2ciLCJ3IiwiaCIsInYiLCJOIiwiVyIsIkkiLCJSIiwiQSIsIk0iLCJCIiwiRCIsIlQiLCJGIiwiRyIsIk5vdGlmeSIsImxlZnQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsIm1hcmdpbiIsIm1heEhlaWdodCIsInBvaW50ZXJFdmVudHMiLCJoZWlnaHQiLCJpbnNlcnRCZWZvcmUiLCJmaXJzdENoaWxkIiwiQyIsInoiLCJjaGlsZEVsZW1lbnRDb3VudCIsIlMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiRSIsImoiLCJMIiwiTyIsIkgiLCJQIiwiVSIsIlgiLCJWIiwicSIsIlEiLCJZIiwiaXNQcm90b3R5cGVPZiIsIk5vZGVMaXN0Iiwic2xpY2UiLCJCbG9jayIsImluZGV4T2YiLCJ0YWdOYW1lIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJyb3VuZCIsIm9mZnNldEhlaWdodCIsImdldEF0dHJpYnV0ZSIsIksiLCIkIiwiSiIsImNyZWF0ZVJhbmdlIiwic2VsZWN0Tm9kZSIsIloiLCJjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQiLCJfIiwidHQiLCJldCIsIml0Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJnZXRUYXJnZXQiLCJFcnJvciIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsIm5jIiwicmVwb3J0T3B0aW9ucyIsImNvbmZpcm1PcHRpb25zIiwidGhlbWVzIiwiYXBwbHlUaGVtZSIsInRoZW1lTmFtZSIsInJlc2V0VGhlbWUiLCJ0aGVtZSIsIndhcm4iLCJwcm9wZXJ0eSIsInN0YXJ0c1dpdGgiLCJkb2N1bWVudEVsZW1lbnQiLCJzZXRQcm9wZXJ0eSIsImdsb2JhbE9wdGlvbnMiLCJuZXdHbG9iYWxPcHRpb25zIiwiZ2V0U2V0dGluZyIsImNoZWNrZWQiLCJhbGVydCIsImJnIiwibm9UaGVtZUNvbG9yIiwicmFkaW9zIiwiZnJvbSIsInVzZXJPcHRpb25zIiwidXNlclNldHRpbmdzIiwiZ2V0RGF0YVVybCIsInNldCIsImxvYWRTZXR0aW5ncyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNhdmVTZXR0aW5ncyIsInNldHRpbmdzIiwic2V0SXRlbSIsInNldHRpbmdOYW1lIiwiZm9yRWFjaCIsImlucHV0IiwibmFtZSIsImRlYnVnIiwicHJvY2Vzc1N1YlNldHMiLCJsb2FkZWRTZXR0aW5ncyIsInN1YnNldCIsImRhdGFzZXQiLCJyZXF1aXJlcyIsInR5cGUiLCJzZWxlY3RvciIsInN0YXRpc3RpY3MiLCJzdHJlYWsiLCJ0b3RhbFF1ZXN0aW9ucyIsInRvdGFsQ29ycmVjdCIsInRvdGFsSW5jb3JyZWN0IiwidG90YWxHYW1lcyIsImZsYWdzU2VlbiIsImdhbWVTdGF0aXN0aWNzIiwicGxheXRpbWUiLCJkaWZmaWN1bHR5Iiwic2F2ZVN0YXRzIiwic3RhdHMiLCJ1cGRhdGVTdGF0UmVhZGluZyIsImxvYWRTdGF0cyIsImdldFN0YXQiLCJzdGF0TmFtZSIsInVwZGF0ZVN0YXQiLCJuZXdWYWx1ZSIsImluY3JlbWVudFN0YXQiLCJ1cGRhdGVHYW1lU3RhdCIsImluY3JlbWVudEdhbWVTdGF0Iiwic2hvd0VuZFNjcmVlbiIsImdhbWVNb2RlIiwic2NvcmUiLCJtYXhTY29yZSIsImNvcnJlY3RBbnN3ZXIiLCJoaWRlQWxsU2NyZWVucyIsInN0YXRJZCIsInN0YXRFbGVtZW50IiwicmVwbGFjZUFsbCIsInNlY29uZHMiLCJmbG9vciIsInN1YlN0cmVhayIsInN1YlF1aXpTY29yZSIsInNwbGl0IiwiY29ycmVjdFBlcmNlbnRhZ2UiLCJlbmRDb3JyZWN0QW5zd2VyIiwicXVlc3Rpb25Db3VudFN0YXQiLCJzdGF0IiwiY2xlYXJHYW1lU3RhdHMiLCJpc05hTiIsImZsYWdzU2VlblBlcmNlbnRhZ2UiLCJsb2FkZWRTdGF0cyIsImdldFdpbmRvdyIsIm5vZGUiLCJvd25lckRvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJpc0VsZW1lbnQiLCJFbGVtZW50IiwiaXNIVE1MRWxlbWVudCIsIkhUTUxFbGVtZW50IiwiaXNTaGFkb3dSb290IiwiU2hhZG93Um9vdCIsInJlbW92ZUl0ZW0iLCJsb2NhdGlvbiIsInJlbG9hZCIsInRleHRFbGVtZW50IiwibGluZXMiLCJsaXN0SXRlbSIsImdlbmVyYXRlQ29weVRleHQiLCJzZWxlY3QiLCJleGVjQ29tbWFuZCIsImVycm9yTSIsIm1heCIsIm1pbiIsImdldFVBU3RyaW5nIiwidWFEYXRhIiwibmF2aWdhdG9yIiwidXNlckFnZW50RGF0YSIsImJyYW5kcyIsImJyYW5kIiwidmVyc2lvbiIsInVzZXJBZ2VudCIsImlzTGF5b3V0Vmlld3BvcnQiLCJ0ZXN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaW5jbHVkZVNjYWxlIiwiaXNGaXhlZFN0cmF0ZWd5IiwiY2xpZW50UmVjdCIsInNjYWxlWCIsInNjYWxlWSIsIm9mZnNldFdpZHRoIiwidmlzdWFsVmlld3BvcnQiLCJhZGRWaXN1YWxPZmZzZXRzIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsImdldFdpbmRvd1Njcm9sbCIsIndpbiIsInNjcm9sbExlZnQiLCJwYWdlWE9mZnNldCIsInNjcm9sbFRvcCIsInBhZ2VZT2Zmc2V0IiwiZ2V0Tm9kZU5hbWUiLCJub2RlTmFtZSIsInRvTG93ZXJDYXNlIiwiZ2V0RG9jdW1lbnRFbGVtZW50IiwiZ2V0V2luZG93U2Nyb2xsQmFyWCIsImlzU2Nyb2xsUGFyZW50IiwiX2dldENvbXB1dGVkU3R5bGUiLCJvdmVyZmxvdyIsIm92ZXJmbG93WCIsIm92ZXJmbG93WSIsImdldENvbXBvc2l0ZVJlY3QiLCJlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCIsIm9mZnNldFBhcmVudCIsImlzRml4ZWQiLCJpc09mZnNldFBhcmVudEFuRWxlbWVudCIsIm9mZnNldFBhcmVudElzU2NhbGVkIiwicmVjdCIsImlzRWxlbWVudFNjYWxlZCIsInNjcm9sbCIsIm9mZnNldHMiLCJjbGllbnRMZWZ0IiwiY2xpZW50VG9wIiwiZ2V0TGF5b3V0UmVjdCIsImFicyIsImdldFBhcmVudE5vZGUiLCJhc3NpZ25lZFNsb3QiLCJob3N0IiwiZ2V0U2Nyb2xsUGFyZW50IiwibGlzdFNjcm9sbFBhcmVudHMiLCJfZWxlbWVudCRvd25lckRvY3VtZW4iLCJzY3JvbGxQYXJlbnQiLCJpc0JvZHkiLCJ1cGRhdGVkTGlzdCIsImlzVGFibGVFbGVtZW50IiwiZ2V0VHJ1ZU9mZnNldFBhcmVudCIsImdldE9mZnNldFBhcmVudCIsImlzRmlyZWZveCIsImN1cnJlbnROb2RlIiwidHJhbnNmb3JtIiwicGVyc3BlY3RpdmUiLCJjb250YWluIiwid2lsbENoYW5nZSIsImZpbHRlciIsImdldENvbnRhaW5pbmdCbG9jayIsImF1dG8iLCJiYXNlUGxhY2VtZW50cyIsInN0YXJ0IiwiZW5kIiwidmlld3BvcnQiLCJwb3BwZXIiLCJ2YXJpYXRpb25QbGFjZW1lbnRzIiwicmVkdWNlIiwiYWNjIiwicGxhY2VtZW50IiwibW9kaWZpZXJQaGFzZXMiLCJvcmRlciIsIm1vZGlmaWVycyIsIk1hcCIsInZpc2l0ZWQiLCJTZXQiLCJzb3J0IiwibW9kaWZpZXIiLCJyZXF1aXJlc0lmRXhpc3RzIiwiZGVwIiwiaGFzIiwiZGVwTW9kaWZpZXIiLCJERUZBVUxUX09QVElPTlMiLCJzdHJhdGVneSIsImFyZVZhbGlkRWxlbWVudHMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJzb21lIiwicG9wcGVyR2VuZXJhdG9yIiwiZ2VuZXJhdG9yT3B0aW9ucyIsIl9nZW5lcmF0b3JPcHRpb25zIiwiX2dlbmVyYXRvck9wdGlvbnMkZGVmIiwiZGVmYXVsdE1vZGlmaWVycyIsIl9nZW5lcmF0b3JPcHRpb25zJGRlZjIiLCJkZWZhdWx0T3B0aW9ucyIsInJlZmVyZW5jZSIsImZuIiwicGVuZGluZyIsInN0YXRlIiwib3JkZXJlZE1vZGlmaWVycyIsImFzc2lnbiIsIm1vZGlmaWVyc0RhdGEiLCJlbGVtZW50cyIsInN0eWxlcyIsImVmZmVjdENsZWFudXBGbnMiLCJpc0Rlc3Ryb3llZCIsImluc3RhbmNlIiwic2V0T3B0aW9ucyIsInNldE9wdGlvbnNBY3Rpb24iLCJjbGVhbnVwTW9kaWZpZXJFZmZlY3RzIiwic2Nyb2xsUGFyZW50cyIsImNvbnRleHRFbGVtZW50IiwibWVyZ2VkIiwicGhhc2UiLCJvcmRlck1vZGlmaWVycyIsImN1cnJlbnQiLCJleGlzdGluZyIsImtleXMiLCJlbmFibGVkIiwiX3JlZjMiLCJfcmVmMyRvcHRpb25zIiwiZWZmZWN0IiwiY2xlYW51cEZuIiwiZm9yY2VVcGRhdGUiLCJfc3RhdGUkZWxlbWVudHMiLCJyZWN0cyIsInJlc2V0IiwiX3N0YXRlJG9yZGVyZWRNb2RpZmllIiwiX3N0YXRlJG9yZGVyZWRNb2RpZmllMiIsIl9vcHRpb25zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwiZGVzdHJveSIsIm9uRmlyc3RVcGRhdGUiLCJwYXNzaXZlIiwiX3JlZiIsIl9vcHRpb25zJHNjcm9sbCIsIl9vcHRpb25zJHJlc2l6ZSIsInJlc2l6ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRCYXNlUGxhY2VtZW50IiwiZ2V0VmFyaWF0aW9uIiwiZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IiwiY29tcHV0ZU9mZnNldHMiLCJiYXNlUGxhY2VtZW50IiwidmFyaWF0aW9uIiwiY29tbW9uWCIsImNvbW1vblkiLCJtYWluQXhpcyIsImxlbiIsInVuc2V0U2lkZXMiLCJtYXBUb1N0eWxlcyIsIl9yZWYyIiwiX09iamVjdCRhc3NpZ24yIiwicG9wcGVyUmVjdCIsImdwdUFjY2VsZXJhdGlvbiIsImFkYXB0aXZlIiwicm91bmRPZmZzZXRzIiwiX29mZnNldHMkeCIsIl9vZmZzZXRzJHkiLCJoYXNYIiwiaGFzWSIsInNpZGVYIiwic2lkZVkiLCJoZWlnaHRQcm9wIiwid2lkdGhQcm9wIiwiX09iamVjdCRhc3NpZ24iLCJjb21tb25TdHlsZXMiLCJfcmVmNCIsImRwciIsImRldmljZVBpeGVsUmF0aW8iLCJyb3VuZE9mZnNldHNCeURQUiIsIl9yZWY1IiwiX29wdGlvbnMkZ3B1QWNjZWxlcmF0IiwiX29wdGlvbnMkYWRhcHRpdmUiLCJfb3B0aW9ucyRyb3VuZE9mZnNldHMiLCJwb3BwZXJPZmZzZXRzIiwiYXJyb3ciLCJyZW1vdmVBdHRyaWJ1dGUiLCJpbml0aWFsU3R5bGVzIiwiYXR0cmlidXRlIiwiX29wdGlvbnMkb2Zmc2V0Iiwib2Zmc2V0IiwiaW52ZXJ0RGlzdGFuY2UiLCJza2lkZGluZyIsImRpc3RhbmNlQW5kU2tpZGRpbmdUb1hZIiwiX2RhdGEkc3RhdGUkcGxhY2VtZW50IiwiaGFzaCIsImdldE9wcG9zaXRlUGxhY2VtZW50IiwibWF0Y2hlZCIsImdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50IiwiY29udGFpbnMiLCJwYXJlbnQiLCJjaGlsZCIsInJvb3ROb2RlIiwiZ2V0Um9vdE5vZGUiLCJuZXh0IiwiaXNTYW1lTm9kZSIsInJlY3RUb0NsaWVudFJlY3QiLCJnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZSIsImNsaXBwaW5nUGFyZW50IiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJsYXlvdXRWaWV3cG9ydCIsImdldFZpZXdwb3J0UmVjdCIsImdldElubmVyQm91bmRpbmdDbGllbnRSZWN0Iiwid2luU2Nyb2xsIiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxIZWlnaHQiLCJkaXJlY3Rpb24iLCJnZXREb2N1bWVudFJlY3QiLCJtZXJnZVBhZGRpbmdPYmplY3QiLCJwYWRkaW5nT2JqZWN0IiwiZXhwYW5kVG9IYXNoTWFwIiwiaGFzaE1hcCIsImRldGVjdE92ZXJmbG93IiwiX29wdGlvbnMkcGxhY2VtZW50IiwiX29wdGlvbnMkc3RyYXRlZ3kiLCJfb3B0aW9ucyRib3VuZGFyeSIsImJvdW5kYXJ5IiwiX29wdGlvbnMkcm9vdEJvdW5kYXJ5Iiwicm9vdEJvdW5kYXJ5IiwiX29wdGlvbnMkZWxlbWVudENvbnRlIiwiZWxlbWVudENvbnRleHQiLCJfb3B0aW9ucyRhbHRCb3VuZGFyeSIsImFsdEJvdW5kYXJ5IiwiX29wdGlvbnMkcGFkZGluZyIsImFsdENvbnRleHQiLCJjbGlwcGluZ0NsaWVudFJlY3QiLCJtYWluQ2xpcHBpbmdQYXJlbnRzIiwiY2xpcHBpbmdQYXJlbnRzIiwiY2xpcHBlckVsZW1lbnQiLCJnZXRDbGlwcGluZ1BhcmVudHMiLCJmaXJzdENsaXBwaW5nUGFyZW50IiwiY2xpcHBpbmdSZWN0IiwiYWNjUmVjdCIsImdldENsaXBwaW5nUmVjdCIsInJlZmVyZW5jZUNsaWVudFJlY3QiLCJwb3BwZXJDbGllbnRSZWN0IiwiZWxlbWVudENsaWVudFJlY3QiLCJvdmVyZmxvd09mZnNldHMiLCJvZmZzZXREYXRhIiwibXVsdGlwbHkiLCJheGlzIiwiX3NraXAiLCJfb3B0aW9ucyRtYWluQXhpcyIsImNoZWNrTWFpbkF4aXMiLCJfb3B0aW9ucyRhbHRBeGlzIiwiYWx0QXhpcyIsImNoZWNrQWx0QXhpcyIsInNwZWNpZmllZEZhbGxiYWNrUGxhY2VtZW50cyIsImZhbGxiYWNrUGxhY2VtZW50cyIsIl9vcHRpb25zJGZsaXBWYXJpYXRpbyIsImZsaXBWYXJpYXRpb25zIiwiYWxsb3dlZEF1dG9QbGFjZW1lbnRzIiwicHJlZmVycmVkUGxhY2VtZW50Iiwib3Bwb3NpdGVQbGFjZW1lbnQiLCJnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyIsInBsYWNlbWVudHMiLCJfb3B0aW9ucyRhbGxvd2VkQXV0b1AiLCJhbGxvd2VkUGxhY2VtZW50cyIsIm92ZXJmbG93cyIsImNvbXB1dGVBdXRvUGxhY2VtZW50IiwicmVmZXJlbmNlUmVjdCIsImNoZWNrc01hcCIsIm1ha2VGYWxsYmFja0NoZWNrcyIsImZpcnN0Rml0dGluZ1BsYWNlbWVudCIsIl9iYXNlUGxhY2VtZW50IiwiaXNTdGFydFZhcmlhdGlvbiIsImlzVmVydGljYWwiLCJtYWluVmFyaWF0aW9uU2lkZSIsImFsdFZhcmlhdGlvblNpZGUiLCJjaGVja3MiLCJldmVyeSIsImNoZWNrIiwiX2xvb3AiLCJmaXR0aW5nUGxhY2VtZW50IiwiZmluZCIsIndpdGhpbiIsIl9vcHRpb25zJHRldGhlciIsInRldGhlciIsIl9vcHRpb25zJHRldGhlck9mZnNldCIsInRldGhlck9mZnNldCIsImlzQmFzZVBsYWNlbWVudCIsInRldGhlck9mZnNldFZhbHVlIiwibm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlIiwib2Zmc2V0TW9kaWZpZXJTdGF0ZSIsIl9vZmZzZXRNb2RpZmllclN0YXRlJCIsIm1haW5TaWRlIiwiYWx0U2lkZSIsImFkZGl0aXZlIiwibWluTGVuIiwibWF4TGVuIiwiYXJyb3dFbGVtZW50IiwiYXJyb3dSZWN0IiwiYXJyb3dQYWRkaW5nT2JqZWN0IiwiYXJyb3dQYWRkaW5nTWluIiwiYXJyb3dQYWRkaW5nTWF4IiwiYXJyb3dMZW4iLCJtaW5PZmZzZXQiLCJtYXhPZmZzZXQiLCJhcnJvd09mZnNldFBhcmVudCIsImNsaWVudE9mZnNldCIsIm9mZnNldE1vZGlmaWVyVmFsdWUiLCJ0ZXRoZXJNYXgiLCJwcmV2ZW50ZWRPZmZzZXQiLCJfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyIiwiX21haW5TaWRlIiwiX2FsdFNpZGUiLCJfb2Zmc2V0IiwiX21pbiIsIl9tYXgiLCJpc09yaWdpblNpZGUiLCJfb2Zmc2V0TW9kaWZpZXJWYWx1ZSIsIl90ZXRoZXJNaW4iLCJfdGV0aGVyTWF4IiwiX3ByZXZlbnRlZE9mZnNldCIsIndpdGhpbk1heENsYW1wIiwiX3N0YXRlJG1vZGlmaWVyc0RhdGEkIiwidG9QYWRkaW5nT2JqZWN0IiwibWluUHJvcCIsIm1heFByb3AiLCJlbmREaWZmIiwic3RhcnREaWZmIiwiY2xpZW50U2l6ZSIsImNlbnRlclRvUmVmZXJlbmNlIiwiY2VudGVyIiwiYXhpc1Byb3AiLCJjZW50ZXJPZmZzZXQiLCJfb3B0aW9ucyRlbGVtZW50IiwiZ2V0U2lkZU9mZnNldHMiLCJwcmV2ZW50ZWRPZmZzZXRzIiwiaXNBbnlTaWRlRnVsbHlDbGlwcGVkIiwic2lkZSIsImV2ZW50TGlzdGVuZXJzIiwicHJldmVudE92ZXJmbG93IiwicmVmZXJlbmNlT3ZlcmZsb3ciLCJwb3BwZXJBbHRPdmVyZmxvdyIsInJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cyIsInBvcHBlckVzY2FwZU9mZnNldHMiLCJpc1JlZmVyZW5jZUhpZGRlbiIsImhhc1BvcHBlckVzY2FwZWQiLCJDT05URU5UX0NMQVNTIiwiQVJST1dfQ0xBU1MiLCJTVkdfQVJST1dfQ0xBU1MiLCJUT1VDSF9PUFRJT05TIiwiY2FwdHVyZSIsIlRJUFBZX0RFRkFVTFRfQVBQRU5EX1RPIiwiZ2V0VmFsdWVBdEluZGV4T3JSZXR1cm4iLCJkZWZhdWx0VmFsdWUiLCJpc1R5cGUiLCJzdHIiLCJpbnZva2VXaXRoQXJnc09yUmV0dXJuIiwibXMiLCJhcmciLCJub3JtYWxpemVUb0FycmF5IiwicHVzaElmVW5pcXVlIiwiYXJyIiwiYXJyYXlGcm9tIiwicmVtb3ZlVW5kZWZpbmVkUHJvcHMiLCJkaXYiLCJzZXRUcmFuc2l0aW9uRHVyYXRpb24iLCJlbHMiLCJlbCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInNldFZpc2liaWxpdHlTdGF0ZSIsInVwZGF0ZVRyYW5zaXRpb25FbmRMaXN0ZW5lciIsImJveCIsImFjdGlvbiIsImxpc3RlbmVyIiwibWV0aG9kIiwiYWN0dWFsQ29udGFpbnMiLCJfdGFyZ2V0JGdldFJvb3ROb2RlIiwiY3VycmVudElucHV0IiwiaXNUb3VjaCIsImxhc3RNb3VzZU1vdmVUaW1lIiwib25Eb2N1bWVudFRvdWNoU3RhcnQiLCJwZXJmb3JtYW5jZSIsIm9uRG9jdW1lbnRNb3VzZU1vdmUiLCJub3ciLCJvbldpbmRvd0JsdXIiLCJhY3RpdmVFbGVtZW50IiwiX3RpcHB5IiwiYmx1ciIsImlzVmlzaWJsZSIsImlzSUUxMSIsIm1zQ3J5cHRvIiwiZGVmYXVsdFByb3BzIiwiYXBwZW5kVG8iLCJhcmlhIiwiZXhwYW5kZWQiLCJkdXJhdGlvbiIsImdldFJlZmVyZW5jZUNsaWVudFJlY3QiLCJoaWRlT25DbGljayIsImlnbm9yZUF0dHJpYnV0ZXMiLCJpbnRlcmFjdGl2ZSIsImludGVyYWN0aXZlQm9yZGVyIiwiaW50ZXJhY3RpdmVEZWJvdW5jZSIsIm1vdmVUcmFuc2l0aW9uIiwib25BZnRlclVwZGF0ZSIsIm9uQmVmb3JlVXBkYXRlIiwib25DcmVhdGUiLCJvbkRlc3Ryb3kiLCJvbkhpZGRlbiIsIm9uSGlkZSIsIm9uTW91bnQiLCJvblNob3ciLCJvblNob3duIiwib25UcmlnZ2VyIiwib25VbnRyaWdnZXIiLCJvbkNsaWNrT3V0c2lkZSIsInBsdWdpbnMiLCJwb3BwZXJPcHRpb25zIiwicmVuZGVyIiwic2hvd09uQ3JlYXRlIiwidG91Y2giLCJ0cmlnZ2VyIiwidHJpZ2dlclRhcmdldCIsImFuaW1hdGVGaWxsIiwiZm9sbG93Q3Vyc29yIiwiaW5saW5lUG9zaXRpb25pbmciLCJzdGlja3kiLCJhbGxvd0hUTUwiLCJhbmltYXRpb24iLCJpbmVydGlhIiwibWF4V2lkdGgiLCJyb2xlIiwiZGVmYXVsdEtleXMiLCJnZXRFeHRlbmRlZFBhc3NlZFByb3BzIiwicGFzc2VkUHJvcHMiLCJwbHVnaW5Qcm9wcyIsInBsdWdpbiIsIl9uYW1lIiwiZXZhbHVhdGVQcm9wcyIsInByb3BzIiwib3V0IiwidmFsdWVBc1N0cmluZyIsImdldERhdGFBdHRyaWJ1dGVQcm9wcyIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY3JlYXRlQXJyb3dFbGVtZW50Iiwic2V0Q29udGVudCIsImdldENoaWxkcmVuIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJib3hDaGlsZHJlbiIsImNoaWxkcmVuIiwiYmFja2Ryb3AiLCJvblVwZGF0ZSIsInByZXZQcm9wcyIsIm5leHRQcm9wcyIsIl9nZXRDaGlsZHJlbiIsIiQkdGlwcHkiLCJpZENvdW50ZXIiLCJtb3VzZU1vdmVMaXN0ZW5lcnMiLCJtb3VudGVkSW5zdGFuY2VzIiwiY3JlYXRlVGlwcHkiLCJzaG93VGltZW91dCIsImhpZGVUaW1lb3V0Iiwic2NoZWR1bGVIaWRlQW5pbWF0aW9uRnJhbWUiLCJsYXN0VHJpZ2dlckV2ZW50IiwiY3VycmVudFRyYW5zaXRpb25FbmRMaXN0ZW5lciIsImN1cnJlbnRUYXJnZXQiLCJpc1Zpc2libGVGcm9tQ2xpY2siLCJkaWRIaWRlRHVlVG9Eb2N1bWVudE1vdXNlRG93biIsImRpZFRvdWNoTW92ZSIsImlnbm9yZU9uRmlyc3RVcGRhdGUiLCJsaXN0ZW5lcnMiLCJkZWJvdW5jZWRPbk1vdXNlTW92ZSIsIm9uTW91c2VNb3ZlIiwicG9wcGVySW5zdGFuY2UiLCJpc0VuYWJsZWQiLCJpc01vdW50ZWQiLCJpc1Nob3duIiwiY2xlYXJEZWxheVRpbWVvdXRzIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJzZXRQcm9wcyIsInBhcnRpYWxQcm9wcyIsImludm9rZUhvb2siLCJyZW1vdmVMaXN0ZW5lcnMiLCJhZGRMaXN0ZW5lcnMiLCJjbGVhbnVwSW50ZXJhY3RpdmVNb3VzZUxpc3RlbmVycyIsImhhbmRsZUFyaWFFeHBhbmRlZEF0dHJpYnV0ZSIsImhhbmRsZVN0eWxlcyIsImNyZWF0ZVBvcHBlckluc3RhbmNlIiwiZ2V0TmVzdGVkUG9wcGVyVHJlZSIsIm5lc3RlZFBvcHBlciIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImlzQWxyZWFkeVZpc2libGUiLCJpc0Rpc2FibGVkIiwiaXNUb3VjaEFuZFRvdWNoRGlzYWJsZWQiLCJnZXRDdXJyZW50VGFyZ2V0IiwiaGFzQXR0cmlidXRlIiwiZ2V0SXNEZWZhdWx0UmVuZGVyRm4iLCJ2aXNpYmlsaXR5IiwiYWRkRG9jdW1lbnRQcmVzcyIsInRyYW5zaXRpb24iLCJfZ2V0RGVmYXVsdFRlbXBsYXRlQ2gyIiwiZ2V0RGVmYXVsdFRlbXBsYXRlQ2hpbGRyZW4iLCJfaW5zdGFuY2UkcG9wcGVySW5zdGEyIiwiX2dldERlZmF1bHRUZW1wbGF0ZUNoMyIsIl9ib3giLCJfY29udGVudCIsImhhbmRsZUFyaWFDb250ZW50QXR0cmlidXRlIiwiY2FsbGJhY2siLCJvblRyYW5zaXRpb25FbmQiLCJvblRyYW5zaXRpb25lZEluIiwiaGlkZSIsImlzQWxyZWFkeUhpZGRlbiIsInJlbW92ZURvY3VtZW50UHJlc3MiLCJfZ2V0RGVmYXVsdFRlbXBsYXRlQ2g0Iiwib25UcmFuc2l0aW9uZWRPdXQiLCJ1bm1vdW50IiwiaGlkZVdpdGhJbnRlcmFjdGl2aXR5IiwiZ2V0RG9jdW1lbnQiLCJlbmFibGUiLCJkaXNhYmxlIiwiZGVzdHJveVBvcHBlckluc3RhbmNlIiwiX3Byb3BzJHJlbmRlciIsInBsdWdpbnNIb29rcyIsImhhc0FyaWFFeHBhbmRlZCIsInNjaGVkdWxlU2hvdyIsImdldE5vcm1hbGl6ZWRUb3VjaFNldHRpbmdzIiwiZ2V0SXNDdXN0b21Ub3VjaEJlaGF2aW9yIiwiX2luc3RhbmNlJHByb3BzJHJlbmRlIiwiZ2V0RGVsYXkiLCJpc1Nob3ciLCJmcm9tSGlkZSIsImhvb2siLCJzaG91bGRJbnZva2VQcm9wc0hvb2siLCJfaW5zdGFuY2UkcHJvcHMiLCJwbHVnaW5Ib29rcyIsImF0dHIiLCJjdXJyZW50VmFsdWUiLCJuZXh0VmFsdWUiLCJvbkRvY3VtZW50UHJlc3MiLCJhY3R1YWxUYXJnZXQiLCJjb21wb3NlZFBhdGgiLCJvblRvdWNoTW92ZSIsIm9uVG91Y2hTdGFydCIsImRvYyIsIm9uIiwiZXZlbnRUeXBlIiwiaGFuZGxlciIsIm9uTW91c2VMZWF2ZSIsIkJvb2xlYW4iLCJvbkJsdXJPckZvY3VzT3V0IiwiX2xhc3RUcmlnZ2VyRXZlbnQiLCJzaG91bGRTY2hlZHVsZUNsaWNrSGlkZSIsImlzRXZlbnRMaXN0ZW5lclN0b3BwZWQiLCJ3YXNGb2N1c2VkIiwic2NoZWR1bGVIaWRlIiwiaXNDdXJzb3JPdmVyUmVmZXJlbmNlT3JQb3BwZXIiLCJwb3BwZXJUcmVlRGF0YSIsIl9pbnN0YW5jZSRwb3BwZXJJbnN0YSIsInBvcHBlclN0YXRlIiwiY2xpZW50WCIsImNsaWVudFkiLCJ0b3BEaXN0YW5jZSIsImJvdHRvbURpc3RhbmNlIiwibGVmdERpc3RhbmNlIiwicmlnaHREaXN0YW5jZSIsImV4Y2VlZHNUb3AiLCJleGNlZWRzQm90dG9tIiwiZXhjZWVkc0xlZnQiLCJleGNlZWRzUmlnaHQiLCJpc0N1cnNvck91dHNpZGVJbnRlcmFjdGl2ZUJvcmRlciIsInJlbGF0ZWRUYXJnZXQiLCJfaW5zdGFuY2UkcHJvcHMyIiwiY29tcHV0ZWRSZWZlcmVuY2UiLCJfZ2V0Tm9ybWFsaXplZFRvdWNoU2UiLCJ0b3VjaFZhbHVlIiwidG91Y2hEZWxheSIsInRpcHB5IiwidGFyZ2V0cyIsIm9wdGlvbmFsUHJvcHMiLCJpbnN0YW5jZXMiLCJpc05vZGVMaXN0Iiwic2V0RGVmYXVsdFByb3BzIiwidG9vbHRpcHNCeUlkIiwiZWxlbWVudElkIiwiY29uc3RydWN0b3IiLCJjbGlja0JhY2tkcm9wVG9DbG9zZSIsImNsb3NlS2V5cyIsIlBvcHVwRWxlbWVudCIsImhlYWRlckNvbnRhaW5lciIsInRpdGxlRWxlbWVudCIsInhCdXR0b24iLCJtYWluQ29udGVudCIsInByb2Nlc3NLZXlEb3duIiwiaW5jbHVkZXMiLCJjbGljayIsImNsb3NlIiwiY2FsbGJhY2tSZXBsYWNlRGVmYXVsdCIsIm9uQ2xvc2UiLCJpbmNvcnJlY3RFbmRsZXNzTWVzc2FnZXMiLCJzdHJlYWtDb3JyZWN0TWVzc2FnZXMiLCJsb3NlU3RyZWFrTWVzc2FnZXMiLCJxdWVzdGlvbnNGYWlsIiwicXVlc3Rpb25zRmluaXNoIiwiY3VycmVudENvdW50cnkiLCJwcmV2aW91c0NvdW50cnkiLCJvcHRpb25Db3VudCIsInF1ZXN0aW9uTnVtIiwicXVlc3Rpb25Db3VudCIsImNhbkNvbnRpbnVlIiwidXNlRmFsbGJhY2siLCJwcm9ncmVzc0JhclBlcmNlbnQiLCJ1bnNhdmVkQ2hhbmdlcyIsInByb2dyZXNzQmFyIiwic3RyZWFrTnVtIiwic3RyZWFrQ29udGFpbmVyIiwidHlwaW5nRm9ybSIsInR5cGluZ0lucHV0IiwiY29ycmVjdFRleHQiLCJjaGVja0Fuc3dlciIsImNvdW50cnkiLCJ2YWxpZEFuc3dlcnMiLCJhbHQiLCJzaG93VXNlckVycm9yIiwicmFuZG9tQ291bnRyeSIsInJhbmRvbSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzY3JlZW4iLCJyZXR1cm5Ub0hvbWUiLCJnZXRGbGFnVXJsIiwiY29kZSIsImltYWdlIiwiZ3Vlc3NTY3JlZW4iLCJmbGFnU3ZnIiwib3B0aW9uc0RpdiIsImFuc3dlclR5cGVzIiwibW92ZU9uIiwibW9kZSIsInF1ZXN0aW9ucyIsImd1ZXNzRm9yIiwic3JjIiwiYW5zd2VyVHlwZSIsIm9wdGlvbiIsInBpY2siLCJyYW5kb21JbmRleCIsImJ0biIsInN0cmluZ3MiLCJwcm9jZXNzQ2FuQ29udGludWUiLCJzdHJlYWtJbmNvcnJlY3QiLCJmb3JtTGlzdGVuZXIiLCJndWVzcyIsIm5ld1N0YXQiLCJyQ291bnRyeSIsImFuc3dlckRpdiIsInNob3dBbnN3ZXJNb2RlIiwicGFyZW50RWxlbWVudCIsImF1dG9jb21wbGV0ZSIsImZldGNoIiwicmVzIiwianNvbiIsImZldGNoZWREYXRhIiwiY2F0Y2giLCJzZXRJbnRlcnZhbCJdLCJzb3VyY2VSb290IjoiIn0=