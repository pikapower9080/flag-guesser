(()=>{var t={74:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(537),o=n.n(i),a=n(645),r=n.n(a)()(o());r.push([t.id,":root {\n  --option-bg: #e9e9ed;\n  --option-hover-bg: #d5d3d3;\n  --option-border-color: #c4c4c5;\n  --progress-bar-color: #0d80bd;\n  --progress-bar-bg: #c6c6c6;\n  --text-color: #000000;\n  --secondary-text-color: #616161;\n  --link-color: #2e2ef1;\n  --gray-btn-color: #d4d4d4;\n  --gray-btn-hover: #c5c4c4;\n  --text-input-correct-outline: #1cda1f;\n  --text-input-incorrect-outline: #e50808;\n}\n.popup-backdrop {\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.65);\n  width: 100vw;\n  height: 100vh;\n}\n.popup-container {\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 35vw;\n  height: 320px;\n  background-color: var(--bg);\n  min-width: 320px;\n}\n.popup-close {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  margin: 4px;\n  padding: 0px;\n  min-width: 0px;\n  font-size: 18px;\n  color: var(--secondary-text-color);\n}\n.popup-title {\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  padding-right: calc(18px + 6px);\n  border-bottom: 1px solid rgba(128, 128, 128, 0.673);\n}\n.popup-header {\n  height: 20px;\n  background-color: var(--bg);\n  z-index: 2;\n}\n.popup-content {\n  padding-inline: 6px;\n  overflow-y: auto;\n  height: calc(calc(100% - 20px) - 9px);\n  margin-top: 9px;\n  z-index: 1;\n}\n.popup-content > ul > li::marker {\n  content: 'â˜ž ';\n}\n.view-flag-img {\n  width: 100%;\n}\n.btn-blue {\n  background-color: #6464ef;\n  color: white;\n}\n.btn-blue:hover {\n  background-color: #4e4edc;\n}\n.btn-green {\n  background-color: #07bb07;\n  color: white;\n}\n.btn-green:hover {\n  background-color: #1aa81a;\n}\n.thin {\n  padding: 4px;\n  padding-inline: 7px;\n  font-size: 16px;\n}\n.btn-red {\n  background-color: #e60808;\n  color: white;\n}\n.btn-red:hover {\n  background-color: #ce2020;\n}\n.btn-yellow {\n  background-color: #f5eb38;\n  color: black;\n}\n.btn-yellow:hover {\n  background-color: #eae138;\n}\n.btn-gray {\n  background-color: var(--gray-btn-color);\n  color: var(--text-color);\n}\n.btn-gray:hover {\n  background-color: var(--gray-btn-hover);\n}\n.btn-purple {\n  background-color: #a81cd7;\n  color: white;\n}\n.btn-purple:hover {\n  background-color: #9c34bf;\n}\nbody {\n  overflow: hidden;\n  color: var(--text-color);\n}\na {\n  color: var(--link-color);\n}\na:visited {\n  color: var(--link-color);\n}\n.screen {\n  width: 100vw;\n  height: 100vh;\n  overflow: auto;\n  position: fixed;\n  left: 0;\n  top: 0;\n  text-align: center;\n}\n.play {\n  margin-bottom: 15px;\n}\n#flag-svg {\n  height: 20vw;\n  padding: 20px;\n}\n#guessType-multi {\n  column-count: 2;\n  width: 100vw;\n  left: 0;\n}\n#close-btn {\n  width: 43px;\n  height: 43px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  margin: 5px;\n  margin-top: 0px;\n}\n.option {\n  width: 100%;\n  display: inline;\n  margin-bottom: 5px;\n  height: 50px;\n  transition: background 300ms;\n  border: var(--option-border-color) 1px solid;\n  background-color: var(--option-bg);\n  color: var(--text-color);\n}\n.option:hover {\n  background-color: var(--option-hover-bg);\n}\n#progress-container {\n  width: calc(100% - 85px);\n  height: 15px;\n  margin: 10px;\n  margin-inline: 25px;\n  border-radius: 20px;\n  background-color: var(--progress-bar-bg);\n}\n#progress-fill {\n  width: 0%;\n  height: 100%;\n  border-radius: 25px;\n  background-color: var(--progress-bar-color);\n  position: relative;\n  left: 0;\n  top: 0;\n  transition: width 200ms;\n}\nul {\n  list-style: none;\n  padding-left: 25px;\n}\n@media (max-width: 610px) {\n  #guessType-multi {\n    column-count: 1;\n  }\n}\n#streak-container,\n#sub-streak {\n  color: #ff8000;\n}\n#sub-quiz-score {\n  color: #0d80bd;\n}\n.capitalize {\n  text-transform: capitalize;\n}\n#difficulty-container {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  background-color: var(--bg);\n  padding: 6px;\n}\n.corner-item {\n  margin: 5px;\n  position: fixed;\n}\n#game-info {\n  color: var(--secondary-text-color);\n  bottom: 0;\n  right: 0;\n  background-color: var(--bg);\n  font-size: 12px;\n  text-align: right;\n  margin: 5px;\n  position: fixed;\n}\n.spacer {\n  margin-bottom: 15px;\n}\n#view-flag-btn {\n  cursor: pointer;\n  transform: scale(0.85);\n}\nfieldset.subset {\n  margin-top: 8px;\n}\n#typing-input {\n  background-color: transparent;\n  outline: solid 1px var(--option-border-color);\n  border: none;\n  color: var(--text-color);\n  font-size: 1.5rem;\n}\n#typing-input:focus {\n  outline: var(--option-border-color) 2px solid;\n  border: none;\n  transition: outline-color 300ms;\n}\n#typing-input.correct {\n  outline: var(--text-input-correct-outline) 2px solid;\n}\n#typing-input.incorrect {\n  outline: var(--text-input-incorrect-outline) 2px solid;\n}\n#correct-text {\n  color: var(--text-input-incorrect-outline);\n  text-align: center;\n  display: block;\n  margin-top: 5px;\n  font-weight: bold;\n}\n#correct-text .value {\n  font-weight: bolder;\n}\n","",{version:3,sources:["webpack://./src/styles/index.less","webpack://./src/styles/popup.less","webpack://./src/styles/buttons.less"],names:[],mappings:"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",sourcesContent:["// Styles are used only for index.html, see global.css for global styles like background color and fonts\n\n// Yes I'm using less.css and less.css variables are better, but these need to be changed with javascript\n:root {\n    // bg variable is added in global.css\n    --option-bg: #e9e9ed;\n    --option-hover-bg: rgb(213, 211, 211);\n    --option-border-color: #c4c4c5;\n    --progress-bar-color: #0d80bd;\n    --progress-bar-bg: #c6c6c6;\n    --text-color: #000000;\n    --secondary-text-color: rgb(97, 97, 97);\n    --link-color: #2e2ef1;\n    --gray-btn-color: rgb(212, 212, 212);\n    --gray-btn-hover: rgb(197, 196, 196);\n    --text-input-correct-outline: #1cda1f;\n    --text-input-incorrect-outline: #e50808;\n}\n\n@import url('popup.less');\n@import url('buttons.less');\n\nbody {\n    overflow: hidden;\n    color: var(--text-color);\n}\n\na {\n    color: var(--link-color);\n}\na:visited {\n    color: var(--link-color);\n}\n\n.screen {\n    width: 100vw;\n    height: 100vh;\n    overflow: auto;\n    position: fixed;\n    left: 0;\n    top: 0;\n    text-align: center;\n}\n\n.play {\n    margin-bottom: 15px;\n}\n\n#flag-svg {\n    height: 20vw;\n    padding: 20px;\n}\n\n#guessType-multi {\n    column-count: 2;\n    width: 100vw;\n    left: 0;\n}\n\n#close-btn {\n    width: 43px;\n    height: 43px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n    margin: 5px;\n    margin-top: 0px;\n}\n\n.option {\n    width: 100%;\n    display: inline;\n    margin-bottom: 5px;\n    height: 50px;\n    transition: background 300ms;\n    border: var(--option-border-color) 1px solid;\n    background-color: var(--option-bg);\n    color: var(--text-color);\n    &:hover {\n        background-color: var(--option-hover-bg);\n    }\n}\n\n#progress-container {\n    width: calc(100% - 85px);\n    height: 15px;\n    margin: 10px;\n    margin-inline: 25px;\n    border-radius: 20px;\n    background-color: var(--progress-bar-bg);\n}\n#progress-fill {\n    width: 0%;\n    height: 100%;\n    border-radius: 25px;\n    background-color: var(--progress-bar-color);\n    position: relative;\n    left: 0;\n    top: 0;\n    transition: width 200ms;\n}\nul {\n    list-style: none;\n    padding-left: 25px;\n}\n\n@media (max-width: 610px) {\n   #guessType-multi {\n    column-count: 1;\n   }\n}\n\n#streak-container, #sub-streak {\n    color: rgb(255, 128, 0);\n}\n#sub-quiz-score {\n    color: rgb(13, 128, 189);\n}\n.capitalize {\n    text-transform: capitalize;\n}\n\n// Difficulty display\n#difficulty-container {\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    background-color: var(--bg);\n    padding: 6px;\n}\n\n.corner-item {\n    margin: 5px;\n    position: fixed;\n}\n\n#game-info {\n    color: var(--secondary-text-color);\n    bottom: 0;\n    right: 0;\n    background-color: var(--bg);\n    font-size: 12px;\n    text-align: right;\n    .corner-item()\n}\n\n.spacer {\n    margin-bottom: 15px;\n}\n\n#view-flag-btn {\n    cursor: pointer;\n    transform: scale(0.85);\n}\n\nfieldset.subset {\n    margin-top: 8px;\n}\n\n#typing-input {\n    background-color: transparent;\n    outline: solid 1px var(--option-border-color);\n    border: none;\n    color: var(--text-color);\n    font-size: 1.5rem;\n}\n#typing-input:focus {\n    outline: var(--option-border-color) 2px solid;\n    border: none;\n    transition: outline-color 300ms;\n}\n#typing-input.correct {\n    outline: var(--text-input-correct-outline) 2px solid;\n}\n#typing-input.incorrect {\n    outline: var(--text-input-incorrect-outline) 2px solid;\n}\n#correct-text {\n    color: var(--text-input-incorrect-outline);\n    text-align: center;\n    display: block;\n    margin-top: 5px;\n    font-weight: bold;\n    .value {\n        font-weight: bolder;\n    }\n}",".popup-backdrop {\n    position: fixed;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.65);\n    width: 100vw;\n    height: 100vh;\n}\n\n.popup-container {\n    margin: auto;\n    position: absolute;\n    top: 0; left: 0; bottom: 0; right: 0;\n    width: 35vw;\n    height: 320px;\n    background-color: var(--bg);\n    min-width: 320px;\n}\n\n@xSize: 18px;\n.popup-close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: @xSize;\n    height: @xSize;\n    background: transparent;\n    margin: 4px;\n    padding: 0px;\n    min-width: 0px;\n    font-size: @xSize;\n    color: var(--secondary-text-color);\n}\n\n@header-height: 20px;\n.popup-title {\n    font-size: @header-height;\n    text-align: center;\n    display: block;\n    padding-right: calc(@xSize + 6px);\n    border-bottom: 1px solid rgba(128, 128, 128, 0.673);\n}\n\n.popup-header {\n    height: @header-height;\n    background-color: var(--bg);\n    z-index: 2;\n}\n\n.popup-content {\n    padding-inline: 6px;\n    overflow-y: auto;\n    height: calc(calc(100% - @header-height) - 9px);\n    margin-top: 9px;\n    z-index: 1;\n}\n\n.popup-content > ul> li::marker {\n    content: 'â˜ž ';\n}\n\n.view-flag-img {\n    width: 100%;\n}","@blueBg: rgb(100, 100, 239);\n@greenBg: rgb(7, 187, 7);\n@redBg: rgb(230, 8, 8);\n@yellowBg: rgb(245, 235, 56);\n@purpleBg: rgb(168, 28, 215);\n\n.btn-blue {\n    background-color: @blueBg;\n    color: white;\n    &:hover {\n        background-color: rgb(78, 78, 220);\n    }\n}\n\n.btn-green {\n    background-color: @greenBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@greenBg, 20%)\n    }\n}\n\n.thin {\n    padding: 4px;\n    padding-inline: 7px;\n    font-size: 16px;\n}\n\n.btn-red {\n    background-color: @redBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@redBg, 20%);\n    }\n}\n\n.btn-yellow {\n    background-color: @yellowBg;\n    color: black;\n    &:hover {\n        background-color: rgb(234, 225, 56);\n    }\n}\n\n.btn-gray {\n    background-color: var(--gray-btn-color);\n    color: var(--text-color);\n    &:hover {\n        background-color: var(--gray-btn-hover);\n    }\n}\n\n.btn-purple {\n    background-color: @purpleBg;\n    color: white;\n    &:hover {\n        background-color: desaturate(@purpleBg, 20%);\n    }\n}"],sourceRoot:""}]);const s=r},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(r[l]=!0)}for(var c=0;c<t.length;c++){var p=[].concat(t[c]);i&&r[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */"),r=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},642:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Show",i="Ask",o="Prompt",a={ID:"NotiflixConfirmWrap",className:"notiflix-confirm",width:"300px",zindex:4003,position:"center",distance:"10px",backgroundColor:"#f8f8f8",borderRadius:"25px",backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:"fade",plainText:!0,titleColor:"#32c682",titleFontSize:"16px",titleMaxLength:34,messageColor:"#1e1e1e",messageFontSize:"14px",messageMaxLength:110,buttonsFontSize:"15px",buttonsMaxLength:34,okButtonColor:"#f8f8f8",okButtonBackground:"#32c682",cancelButtonColor:"#f8f8f8",cancelButtonBackground:"#a9a9a9"},r=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},s=function(e){return e||(e="head"),null!==t.document[e]||(r('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},l=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=l(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},c=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},p=function(){return'[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*="-content"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-head"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*="-content"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*="-content"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},m=function(n,r,p,m,d,u,x,g,b){if(!s("body"))return!1;e||f.Confirm.init({});var y=l(!0,e,{});"object"!=typeof b||Array.isArray(b)||(e=l(!0,e,b)),"string"!=typeof r&&(r="Notiflix Confirm"),"string"!=typeof p&&(p="Do you agree with me?"),"string"!=typeof d&&(d="Yes"),"string"!=typeof u&&(u="No"),"function"!=typeof x&&(x=void 0),"function"!=typeof g&&(g=void 0),e.plainText&&(r=c(r),p=c(p),d=c(d),u=c(u)),e.plainText||(r.length>e.titleMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the title content length is more than "titleMaxLength" option.',d="Okay",u="..."),p.length>e.messageMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the message content length is more than "messageMaxLength" option.',d="Okay",u="..."),(d.length||u.length)>e.buttonsMaxLength&&(r="Possible HTML Tags Error",p='The "plainText" option is "false" and the buttons content length is more than "buttonsMaxLength" option.',d="Okay",u="...")),r.length>e.titleMaxLength&&(r=r.substring(0,e.titleMaxLength)+"..."),p.length>e.messageMaxLength&&(p=p.substring(0,e.messageMaxLength)+"..."),d.length>e.buttonsMaxLength&&(d=d.substring(0,e.buttonsMaxLength)+"..."),u.length>e.buttonsMaxLength&&(u=u.substring(0,e.buttonsMaxLength)+"..."),e.cssAnimation||(e.cssAnimationDuration=0);var h=t.document.createElement("div");h.id=a.ID,h.className=e.className+(e.cssAnimation?" nx-with-animation nx-"+e.cssAnimationStyle:""),h.style.zIndex=e.zindex,h.style.padding=e.distance,e.rtl&&(h.setAttribute("dir","rtl"),h.classList.add("nx-rtl-on"));var v="string"==typeof e.position?e.position.trim():"center";h.classList.add("nx-position-"+v),h.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif';var w="";e.backOverlay&&(w='<div class="'+e.className+"-overlay"+(e.cssAnimation?" nx-with-animation":"")+'" style="background:'+e.backOverlayColor+";animation-duration:"+e.cssAnimationDuration+'ms;"></div>');var k="";"function"==typeof x&&(k='<a id="NXConfirmButtonCancel" class="nx-confirm-button-cancel" style="color:'+e.cancelButtonColor+";background:"+e.cancelButtonBackground+";font-size:"+e.buttonsFontSize+';">'+u+"</a>");var A="",C=null,N=void 0;if(n===i||n===o){C=m||"";var E=n===i||C.length>200?Math.ceil(1.5*C.length):250;A='<div><input id="NXConfirmValidationInput" type="text" '+(n===o?'value="'+C+'"':"")+' maxlength="'+E+'" style="font-size:'+e.messageFontSize+";border-radius: "+e.borderRadius+';" autocomplete="off" spellcheck="false" autocapitalize="none" /></div>'}if(h.innerHTML=w+'<div class="'+e.className+'-content" style="width:'+e.width+"; background:"+e.backgroundColor+"; animation-duration:"+e.cssAnimationDuration+"ms; border-radius: "+e.borderRadius+';"><div class="'+e.className+'-head"><h5 style="color:'+e.titleColor+";font-size:"+e.titleFontSize+';">'+r+'</h5><div style="color:'+e.messageColor+";font-size:"+e.messageFontSize+';">'+p+A+'</div></div><div class="'+e.className+'-buttons"><a id="NXConfirmButtonOk" class="nx-confirm-button-ok'+("function"==typeof x?"":" nx-full")+'" style="color:'+e.okButtonColor+";background:"+e.okButtonBackground+";font-size:"+e.buttonsFontSize+';">'+d+"</a>"+k+"</div></div>",!t.document.getElementById(h.id)){t.document.body.appendChild(h);var z=t.document.getElementById(h.id),L=t.document.getElementById("NXConfirmButtonOk"),S=t.document.getElementById("NXConfirmValidationInput");S&&(S.focus(),S.setSelectionRange(0,(S.value||"").length),S.addEventListener("keyup",(function(t){var e=t.target.value;n===i&&e!==C?(t.preventDefault(),S.classList.add("nx-validation-failure"),S.classList.remove("nx-validation-success")):(n===i&&(S.classList.remove("nx-validation-failure"),S.classList.add("nx-validation-success")),("enter"===(t.key||"").toLocaleLowerCase("en")||13===t.keyCode)&&L.dispatchEvent(new Event("click")))}))),L.addEventListener("click",(function(t){if(n===i&&C&&S){if((S.value||"").toString()!==C)return S.focus(),S.classList.add("nx-validation-failure"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;S.classList.remove("nx-validation-failure")}"function"==typeof x&&(n===o&&S&&(N=S.value||""),x(N)),z.classList.add("nx-remove");var a=setTimeout((function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(a))}),e.cssAnimationDuration)})),"function"==typeof x&&t.document.getElementById("NXConfirmButtonCancel").addEventListener("click",(function(){"function"==typeof g&&(n===o&&S&&(N=S.value||""),g(N)),z.classList.add("nx-remove");var t=setTimeout((function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))}),e.cssAnimationDuration)}))}e=l(!0,e,y)},f={Confirm:{init:function(n){e=l(!0,a,n),function(e,n){if(!s("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(p,"NotiflixConfirmInternalCSS")},merge:function(t){if(!e)return r("You have to initialize the Confirm module before call Merge function."),!1;e=l(!0,e,t)},show:function(t,e,i,o,a,r,s){m(n,t,e,null,i,o,a,r,s)},ask:function(t,e,n,o,a,r,s,l){m(i,t,e,n,o,a,r,s,l)},prompt:function(t,e,n,i,a,r,s,l){m(o,t,e,n,i,a,r,s,l)}}};return"object"==typeof t.Notiflix?l(!0,t.Notiflix,{Confirm:f.Confirm}):{Confirm:f.Confirm}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},443:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Standard",i="Hourglass",o="Circle",a="Arrows",r="Dots",s="Pulse",l="Custom",c="Notiflix",p={ID:"NotiflixLoadingWrap",className:"notiflix-loading",zindex:4e3,backgroundColor:"rgba(0,0,0,0.8)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:"80px",svgColor:"#32c682",messageID:"NotiflixLoadingMessage",messageFontSize:"15px",messageMaxLength:34,messageColor:"#dcdcdc"},m=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},f=function(e){return e||(e="head"),null!==t.document[e]||(m('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},d=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=d(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},u=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},x=function(){return'[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}'},g=function(c,x,g,y,h){if(!f("body"))return!1;e||b.Loading.init({});var v=d(!0,e,{});if("object"==typeof x&&!Array.isArray(x)||"object"==typeof g&&!Array.isArray(g)){var w={};"object"==typeof x?w=x:"object"==typeof g&&(w=g),e=d(!0,e,w)}var k,A,C="";if("string"==typeof x&&x.length>0&&(C=x),y){var N="";(C=C.length>e.messageMaxLength?u(C).toString().substring(0,e.messageMaxLength)+"...":u(C).toString()).length>0&&(N='<p id="'+e.messageID+'" class="nx-loading-message" style="color:'+e.messageColor+";font-size:"+e.messageFontSize+';">'+C+"</p>"),e.cssAnimation||(e.cssAnimationDuration=0);var E="";if(c===n)k=e.svgSize,A=e.svgColor,k||(k="60px"),A||(A="#32c682"),E='<svg xmlns="http://www.w3.org/2000/svg" stroke="'+A+'" width="'+k+'" height="'+k+'" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>';else if(c===i)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>'}(e.svgSize,e.svgColor);else if(c===o)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+t+'" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:'+t+";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:"+t+';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="'+e+'" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>'}(e.svgSize,e.svgColor);else if(c===a)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>'}(e.svgSize,e.svgColor);else if(c===r)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>'}(e.svgSize,e.svgColor);else if(c===s)E=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>'}(e.svgSize,e.svgColor);else if(c===l&&null!==e.customSvgCode&&null===e.customSvgUrl)E=e.customSvgCode||"";else if(c===l&&null!==e.customSvgUrl&&null===e.customSvgCode)E='<img class="nx-custom-loading-icon" width="'+e.svgSize+'" height="'+e.svgSize+'" src="'+e.customSvgUrl+'" alt="Notiflix">';else{if(c===l&&(null===e.customSvgUrl||null===e.customSvgCode))return m('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.'),!1;E=function(t,e,n){return t||(t="60px"),e||(e="#f8f8f8"),n||(n="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:'+e+';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="'+n+'" stroke="'+n+'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>'}(e.svgSize,"#f8f8f8","#32c682")}var z=parseInt((e.svgSize||"").replace(/[^0-9]/g,"")),L=t.innerWidth,S=z>=L?L-40+"px":z+"px",I='<div style="width:'+S+"; height:"+S+';" class="'+e.className+"-icon"+(C.length>0?" nx-with-message":"")+'">'+E+"</div>",B=t.document.createElement("div");B.id=p.ID,B.className=e.className+(e.cssAnimation?" nx-with-animation":"")+(e.clickToClose?" nx-loading-click-to-close":""),B.style.zIndex=e.zindex,B.style.background=e.backgroundColor,B.style.animationDuration=e.cssAnimationDuration+"ms",B.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',B.style.display="flex",B.style.flexWrap="wrap",B.style.flexDirection="column",B.style.alignItems="center",B.style.justifyContent="center",e.rtl&&(B.setAttribute("dir","rtl"),B.classList.add("nx-rtl-on")),B.innerHTML=I+N,t.document.getElementById(B.id)||(t.document.body.appendChild(B),e.clickToClose&&t.document.getElementById(B.id).addEventListener("click",(function(){B.classList.add("nx-remove");var t=setTimeout((function(){null!==B.parentNode&&(B.parentNode.removeChild(B),clearTimeout(t))}),e.cssAnimationDuration)})))}else if(t.document.getElementById(p.ID))var T=t.document.getElementById(p.ID),R=setTimeout((function(){T.classList.add("nx-remove");var t=setTimeout((function(){null!==T.parentNode&&(T.parentNode.removeChild(T),clearTimeout(t))}),e.cssAnimationDuration);clearTimeout(R)}),h);e=d(!0,e,v)},b={Loading:{init:function(n){e=d(!0,p,n),function(e,n){if(!f("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(x,"NotiflixLoadingInternalCSS")},merge:function(t){if(!e)return m("You have to initialize the Loading module before call Merge function."),!1;e=d(!0,e,t)},standard:function(t,e){g(n,t,e,!0,0)},hourglass:function(t,e){g(i,t,e,!0,0)},circle:function(t,e){g(o,t,e,!0,0)},arrows:function(t,e){g(a,t,e,!0,0)},dots:function(t,e){g(r,t,e,!0,0)},pulse:function(t,e){g(s,t,e,!0,0)},custom:function(t,e){g(l,t,e,!0,0)},notiflix:function(t,e){g(c,t,e,!0,0)},remove:function(t){"number"!=typeof t&&(t=0),g(null,null,null,!1,t)},change:function(n){!function(n){"string"!=typeof n&&(n="");var i=t.document.getElementById(p.ID);if(i)if(n.length>0){n=n.length>e.messageMaxLength?u(n).substring(0,e.messageMaxLength)+"...":u(n);var o=i.getElementsByTagName("p")[0];if(o)o.innerHTML=n;else{var a=t.document.createElement("p");a.id=e.messageID,a.className="nx-loading-message nx-loading-message-new",a.style.color=e.messageColor,a.style.fontSize=e.messageFontSize,a.innerHTML=n,i.appendChild(a)}}else m("Where is the new message?")}(n)}}};return"object"==typeof t.Notiflix?d(!0,t.Notiflix,{Loading:b.Loading}):{Loading:b.Loading}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},980:function(t,e,n){var i,o;o=void 0!==n.g?n.g:"undefined"!=typeof window?window:this,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n="Success",i="Failure",o="Warning",a="Info",r={ID:"NotiflixReportWrap",className:"notiflix-report",width:"320px",backgroundColor:"#f8f8f8",borderRadius:"25px",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",backOverlayClickToClose:!1,fontFamily:"Quicksand",svgSize:"110px",plainText:!0,titleFontSize:"16px",titleMaxLength:34,messageFontSize:"13px",messageMaxLength:400,buttonFontSize:"14px",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:"fade",success:{svgColor:"#32c682",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#32c682",buttonColor:"#fff",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{svgColor:"#ff5549",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#ff5549",buttonColor:"#fff",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{svgColor:"#eebf31",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#eebf31",buttonColor:"#fff",backOverlayColor:"rgba(238,191,49,0.2)"},info:{svgColor:"#26c0d3",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#26c0d3",buttonColor:"#fff",backOverlayColor:"rgba(38,192,211,0.2)"}},s=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+"\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation")},l=function(e){return e||(e="head"),null!==t.document[e]||(s('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},c=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e&&"[object Object]"===Object.prototype.toString.call(n[i])?t[i]=c(t[i],n[i]):t[i]=n[i])};n<arguments.length;n++)i(arguments[n]);return t},p=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},m=function(){return'[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*="-content"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},f=function(s,m,f,u,x,g){if(!l("body"))return!1;e||d.Report.init({});var b={};if("object"==typeof x&&!Array.isArray(x)||"object"==typeof g&&!Array.isArray(g)){var y={};"object"==typeof x?y=x:"object"==typeof g&&(y=g),b=c(!0,e,{}),e=c(!0,e,y)}var h=e[s.toLocaleLowerCase("en")];"string"!=typeof m&&(m="Notiflix "+s),"string"!=typeof f&&(s===n?f='"Do not try to become a person of success but try to become a person of value." <br><br>- Albert Einstein':s===i?f='"Failure is simply the opportunity to begin again, this time more intelligently." <br><br>- Henry Ford':s===o?f='"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny." <br><br>- Mustafa Kemal Ataturk':s===a&&(f='"Knowledge rests not upon truth alone, but upon error also." <br><br>- Carl Gustav Jung')),"string"!=typeof u&&(u="Okay"),e.plainText&&(m=p(m),f=p(f),u=p(u)),e.plainText||(m.length>e.titleMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the title content length is more than the "titleMaxLength" option.',u="Okay"),f.length>e.messageMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the message content length is more than the "messageMaxLength" option.',u="Okay"),u.length>e.buttonMaxLength&&(m="Possible HTML Tags Error",f='The "plainText" option is "false" and the button content length is more than the "buttonMaxLength" option.',u="Okay")),m.length>e.titleMaxLength&&(m=m.substring(0,e.titleMaxLength)+"..."),f.length>e.messageMaxLength&&(f=f.substring(0,e.messageMaxLength)+"..."),u.length>e.buttonMaxLength&&(u=u.substring(0,e.buttonMaxLength)+"..."),e.cssAnimation||(e.cssAnimationDuration=0);var v=t.document.createElement("div");v.id=r.ID,v.className=e.className,v.style.zIndex=e.zindex,v.style.borderRadius=e.borderRadius,v.style.fontFamily='"'+e.fontFamily+'", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',e.rtl&&(v.setAttribute("dir","rtl"),v.classList.add("nx-rtl-on")),v.style.display="flex",v.style.flexWrap="wrap",v.style.flexDirection="column",v.style.alignItems="center",v.style.justifyContent="center";var w="",k=!0===e.backOverlayClickToClose;e.backOverlay&&(w='<div class="'+e.className+"-overlay"+(e.cssAnimation?" nx-with-animation":"")+(k?" nx-report-click-to-close":"")+'" style="background:'+(h.backOverlayColor||e.backOverlayColor)+";animation-duration:"+e.cssAnimationDuration+'ms;"></div>');var A,C,N="";if(s===n?(A=e.svgSize,C=h.svgColor,A||(A="110px"),C||(C="#32c682"),N='<svg xmlns="http://www.w3.org/2000/svg" id="NXReportSuccess" width="'+A+'" height="'+A+'" fill="'+C+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z" style="-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'):s===i?N=function(t,e){return t||(t="110px"),e||(e="#ff5549"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportFailure" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z" style="-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z" style="-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor):s===o?N=function(t,e){return t||(t="110px"),e||(e="#eebf31"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportWarning" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z" style="-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)"><path d="M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z" style="-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor):s===a&&(N=function(t,e){return t||(t="110px"),e||(e="#26c0d3"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportInfo" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z" style="-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(e.svgSize,h.svgColor)),v.innerHTML=w+'<div class="'+e.className+"-content"+(e.cssAnimation?" nx-with-animation ":"")+" nx-"+e.cssAnimationStyle+'" style="width:'+e.width+"; background:"+e.backgroundColor+"; animation-duration:"+e.cssAnimationDuration+'ms;"><div style="width:'+e.svgSize+"; height:"+e.svgSize+';" class="'+e.className+'-icon">'+N+'</div><h5 class="'+e.className+'-title" style="font-weight:500; font-size:'+e.titleFontSize+"; color:"+h.titleColor+';">'+m+'</h5><p class="'+e.className+'-message" style="font-size:'+e.messageFontSize+"; color:"+h.messageColor+';">'+f+'</p><a id="NXReportButton" class="'+e.className+'-button" style="font-weight:500; font-size:'+e.buttonFontSize+"; background:"+h.buttonBackground+"; color:"+h.buttonColor+';">'+u+"</a></div>",!t.document.getElementById(v.id)){t.document.body.appendChild(v);var E=function(){var n=t.document.getElementById(v.id);n.classList.add("nx-remove");var i=setTimeout((function(){null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)}),e.cssAnimationDuration)};t.document.getElementById("NXReportButton").addEventListener("click",(function(){"function"==typeof x&&x(),E()})),w&&k&&t.document.querySelector(".nx-report-click-to-close").addEventListener("click",(function(){E()}))}e=c(!0,e,b)},d={Report:{init:function(n){e=c(!0,r,n),function(e,n){if(!l("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}}(m,"NotiflixReportInternalCSS")},merge:function(t){if(!e)return s("You have to initialize the Report module before call Merge function."),!1;e=c(!0,e,t)},success:function(t,e,i,o,a){f(n,t,e,i,o,a)},failure:function(t,e,n,o,a){f(i,t,e,n,o,a)},warning:function(t,e,n,i,a){f(o,t,e,n,i,a)},info:function(t,e,n,i,o){f(a,t,e,n,i,o)}}};return"object"==typeof t.Notiflix?c(!0,t.Notiflix,{Report:d.Report}):{Report:d.Report}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},533:function(t,e,n){var i,o;o=void 0===n.g?"undefined"==typeof window?this:window:n.g,i=function(){return function(t){"use strict";if(void 0===t&&void 0===t.document)return!1;var e,n,i,o,a,r="\n\nVisit documentation page to learn more: https://notiflix.github.io/documentation",s='-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',l="Success",c="Failure",p="Warning",m="Info",f={wrapID:"NotiflixNotifyWrap",overlayID:"NotiflixNotifyOverlay",width:"280px",position:"right-top",distance:"10px",opacity:1,borderRadius:"5px",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:"rgba(0,0,0,0.5)",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:"NotiflixNotify",className:"notiflix-notify",zindex:4001,fontFamily:"Quicksand",fontSize:"13px",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:"fade",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:"basic",fontAwesomeIconSize:"34px",success:{background:"#32c682",textColor:"#fff",childClassName:"notiflix-notify-success",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-check-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{background:"#ff5549",textColor:"#fff",childClassName:"notiflix-notify-failure",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-times-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{background:"#eebf31",textColor:"#fff",childClassName:"notiflix-notify-warning",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-exclamation-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(238,191,49,0.2)"},info:{background:"#26c0d3",textColor:"#fff",childClassName:"notiflix-notify-info",notiflixIconColor:"rgba(0,0,0,0.2)",fontAwesomeClassName:"fas fa-info-circle",fontAwesomeIconColor:"rgba(0,0,0,0.2)",backOverlayColor:"rgba(38,192,211,0.2)"}},d="Success",u="Failure",x="Warning",g="Info",b={ID:"NotiflixReportWrap",className:"notiflix-report",width:"320px",backgroundColor:"#f8f8f8",borderRadius:"25px",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",backOverlayClickToClose:!1,fontFamily:"Quicksand",svgSize:"110px",plainText:!0,titleFontSize:"16px",titleMaxLength:34,messageFontSize:"13px",messageMaxLength:400,buttonFontSize:"14px",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:"fade",success:{svgColor:"#32c682",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#32c682",buttonColor:"#fff",backOverlayColor:"rgba(50,198,130,0.2)"},failure:{svgColor:"#ff5549",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#ff5549",buttonColor:"#fff",backOverlayColor:"rgba(255,85,73,0.2)"},warning:{svgColor:"#eebf31",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#eebf31",buttonColor:"#fff",backOverlayColor:"rgba(238,191,49,0.2)"},info:{svgColor:"#26c0d3",titleColor:"#1e1e1e",messageColor:"#242424",buttonBackground:"#26c0d3",buttonColor:"#fff",backOverlayColor:"rgba(38,192,211,0.2)"}},y="Show",h="Ask",v="Prompt",w={ID:"NotiflixConfirmWrap",className:"notiflix-confirm",width:"300px",zindex:4003,position:"center",distance:"10px",backgroundColor:"#f8f8f8",borderRadius:"25px",backOverlay:!0,backOverlayColor:"rgba(0,0,0,0.5)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:"fade",plainText:!0,titleColor:"#32c682",titleFontSize:"16px",titleMaxLength:34,messageColor:"#1e1e1e",messageFontSize:"14px",messageMaxLength:110,buttonsFontSize:"15px",buttonsMaxLength:34,okButtonColor:"#f8f8f8",okButtonBackground:"#32c682",cancelButtonColor:"#f8f8f8",cancelButtonBackground:"#a9a9a9"},k="Standard",A="Hourglass",C="Circle",N="Arrows",E="Dots",z="Pulse",L="Custom",S="Notiflix",I={ID:"NotiflixLoadingWrap",className:"notiflix-loading",zindex:4e3,backgroundColor:"rgba(0,0,0,0.8)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:"80px",svgColor:"#32c682",messageID:"NotiflixLoadingMessage",messageFontSize:"15px",messageMaxLength:34,messageColor:"#dcdcdc"},B="Standard",T="Hourglass",R="Circle",M="Arrows",W="Dots",F="Pulse",O={ID:"NotiflixBlockWrap",querySelectorLimit:200,className:"notiflix-block",position:"absolute",zindex:1e3,backgroundColor:"rgba(255,255,255,0.9)",rtl:!1,fontFamily:"Quicksand",cssAnimation:!0,cssAnimationDuration:300,svgSize:"45px",svgColor:"#383838",messageFontSize:"14px",messageMaxLength:34,messageColor:"#383838"},D=function(t){return console.error("%c Notiflix Error ","padding:2px;border-radius:20px;color:#fff;background:#ff5549","\n"+t+r)},X=function(t){return console.log("%c Notiflix Info ","padding:2px;border-radius:20px;color:#fff;background:#26c0d3","\n"+t+r)},j=function(e){return e||(e="head"),null!==t.document[e]||(D('\nNotiflix needs to be appended to the "<'+e+'>" element, but you called it before the "<'+e+'>" element has been created.'),!1)},H=function(e,n){if(!j("head"))return!1;if(null!==e()&&!t.document.getElementById(n)){var i=t.document.createElement("style");i.id=n,i.innerHTML=e(),t.document.head.appendChild(i)}},q=function(){var t={},e=!1,n=0;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],n++);for(var i=function(n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=e&&"[object Object]"===Object.prototype.toString.call(n[i])?q(t[i],n[i]):n[i])};n<arguments.length;n++)i(arguments[n]);return t},P=function(e){var n=t.document.createElement("div");return n.innerHTML=e,n.textContent||n.innerText||""},Y=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" transform="scale(.8)" viewBox="0 0 38 38"><g fill="none" fill-rule="evenodd" stroke-width="2" transform="translate(1 1)"><circle cx="18" cy="18" r="18" stroke-opacity=".25"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" dur="1s" from="0 18 18" repeatCount="indefinite" to="360 18 18" type="rotate"/></path></g></svg>'},V=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingHourglass" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group="true" data-animator-type="1" style="-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box"><g id="NXhourglass2" fill="inherit"><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass4" d="M100 100l-34.38 32.08v31.14h68.76v-31.14z"/></g><g data-animator-group="true" data-animator-type="2" style="-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box" opacity=".4"><path id="NXhourglass6" d="M100 100L65.62 67.92V36.78h68.76v31.14z"/></g><path d="M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z"/></g></g></svg>'},J=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+t+'" viewBox="25 25 50 50" style="-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:'+t+";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:"+t+';position:absolute;top:0;left:0;margin:auto"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx="50" cy="50" r="20" fill="none" stroke="'+e+'" stroke-width="2" style="-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite" stroke-dasharray="150 200" stroke-dashoffset="-10" stroke-linecap="round"/></svg>'},U=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 128 128"><g><path fill="inherit" d="M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z"/><animateTransform attributeName="transform" dur="1.5s" from="0 64 64" repeatCount="indefinite" to="360 64 64" type="rotate"/></g></svg>'},Q=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" fill="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 100 100"><g transform="translate(25 50)"><circle r="9" fill="inherit" transform="scale(.239)"><animateTransform attributeName="transform" begin="-0.266s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(50 50)"><circle r="9" fill="inherit" transform="scale(.00152)"><animateTransform attributeName="transform" begin="-0.133s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g><g transform="translate(75 50)"><circle r="9" fill="inherit" transform="scale(.299)"><animateTransform attributeName="transform" begin="0s" calcMode="spline" dur="0.8s" keySplines="0.3 0 0.7 1;0.3 0 0.7 1" keyTimes="0;0.5;1" repeatCount="indefinite" type="scale" values="0;1;0"/></circle></g></svg>'},$=function(t,e){return t||(t="60px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" stroke="'+e+'" width="'+t+'" height="'+t+'" viewBox="0 0 44 44"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>'},_=function(){return'[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}'},G=0,K=function(n,i,o,a){if(!j("body"))return!1;e||ct.Notify.init({});var r=q(!0,e,{});if("object"==typeof o&&!Array.isArray(o)||"object"==typeof a&&!Array.isArray(a)){var d={};"object"==typeof o?d=o:"object"==typeof a&&(d=a),e=q(!0,e,d)}var u=e[n.toLocaleLowerCase("en")];G++,"string"!=typeof i&&(i="Notiflix "+n),e.plainText&&(i=P(i)),!e.plainText&&i.length>e.messageMaxLength&&(e=q(!0,e,{closeButton:!0,messageMaxLength:150}),i='Possible HTML Tags Error: The "plainText" option is "false" and the notification content length is more than the "messageMaxLength" option.'),i.length>e.messageMaxLength&&(i=i.substring(0,e.messageMaxLength)+"..."),"shadow"===e.fontAwesomeIconStyle&&(u.fontAwesomeIconColor=u.background),e.cssAnimation||(e.cssAnimationDuration=0);var x=t.document.getElementById(f.wrapID)||t.document.createElement("div");if(x.id=f.wrapID,x.style.width=e.width,x.style.zIndex=e.zindex,x.style.opacity=e.opacity,"center-center"===e.position?(x.style.left=e.distance,x.style.top=e.distance,x.style.right=e.distance,x.style.bottom=e.distance,x.style.margin="auto",x.classList.add("nx-flex-center-center"),x.style.maxHeight="calc((100vh - "+e.distance+") - "+e.distance+")",x.style.display="flex",x.style.flexWrap="wrap",x.style.flexDirection="column",x.style.justifyContent="center",x.style.alignItems="center",x.style.pointerEvents="none"):"center-top"===e.position?(x.style.left=e.distance,x.style.right=e.distance,x.style.top=e.distance,x.style.bottom="auto",x.style.margin="auto"):"center-bottom"===e.position?(x.style.left=e.distance,x.style.right=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.margin="auto"):"right-bottom"===e.position?(x.style.right=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.left="auto"):"left-top"===e.position?(x.style.left=e.distance,x.style.top=e.distance,x.style.right="auto",x.style.bottom="auto"):"left-bottom"===e.position?(x.style.left=e.distance,x.style.bottom=e.distance,x.style.top="auto",x.style.right="auto"):(x.style.right=e.distance,x.style.top=e.distance,x.style.left="auto",x.style.bottom="auto"),e.backOverlay){var g=t.document.getElementById(f.overlayID)||t.document.createElement("div");g.id=f.overlayID,g.style.width="100%",g.style.height="100%",g.style.position="fixed",g.style.zIndex=e.zindex-1,g.style.left=0,g.style.top=0,g.style.right=0,g.style.bottom=0,g.style.background=u.backOverlayColor||e.backOverlayColor,g.className=e.cssAnimation?"nx-with-animation":"",g.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+"ms":"",t.document.getElementById(f.overlayID)||t.document.body.appendChild(g)}t.document.getElementById(f.wrapID)||t.document.body.appendChild(x);var b=t.document.createElement("div");b.id=e.ID+"-"+G,b.className=e.className+" "+u.childClassName+" "+(e.cssAnimation?"nx-with-animation":"")+" "+(e.useIcon?"nx-with-icon":"")+" nx-"+e.cssAnimationStyle+" "+(e.closeButton&&"function"!=typeof o?"nx-with-close-button":"")+" "+("function"==typeof o?"nx-with-callback":"")+" "+(e.clickToClose?"nx-notify-click-to-close":""),b.style.fontSize=e.fontSize,b.style.color=u.textColor,b.style.background=u.background,b.style.borderRadius=e.borderRadius,b.style.pointerEvents="all",e.rtl&&(b.setAttribute("dir","rtl"),b.classList.add("nx-rtl-on")),b.style.fontFamily='"'+e.fontFamily+'", '+s,e.cssAnimation&&(b.style.animationDuration=e.cssAnimationDuration+"ms");var y="";if(e.closeButton&&"function"!=typeof o&&(y='<span class="nx-close-button"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><g><path fill="'+u.notiflixIconColor+'" d="M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z"/></g></svg></span>'),e.useIcon)if(e.useFontAwesome)b.innerHTML='<i style="color:'+u.fontAwesomeIconColor+"; font-size:"+e.fontAwesomeIconSize+';" class="nx-message-icon nx-message-icon-fa '+u.fontAwesomeClassName+" "+("shadow"===e.fontAwesomeIconStyle?"nx-message-icon-fa-shadow":"nx-message-icon-fa-basic")+'"></i><span class="nx-message nx-with-icon">'+i+"</span>"+(e.closeButton?y:"");else{var h="";n===l?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z"/></g></svg>':n===c?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z"/></g></svg>':n===p?h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z"/></g></svg>':n===m&&(h='<svg class="nx-message-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"><g><path fill="'+u.notiflixIconColor+'" d="M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z"/></g></svg>'),b.innerHTML=h+'<span class="nx-message nx-with-icon">'+i+"</span>"+(e.closeButton?y:"")}else b.innerHTML='<span class="nx-message">'+i+"</span>"+(e.closeButton?y:"");if("left-bottom"===e.position||"right-bottom"===e.position){var v=t.document.getElementById(f.wrapID);v.insertBefore(b,v.firstChild)}else t.document.getElementById(f.wrapID).appendChild(b);var w=t.document.getElementById(b.id);if(w){var k,A,C=function(){w.classList.add("nx-remove");var e=t.document.getElementById(f.overlayID);e&&0>=x.childElementCount&&e.classList.add("nx-remove"),clearTimeout(k)},N=function(){if(w&&null!==w.parentNode&&w.parentNode.removeChild(w),0>=x.childElementCount&&null!==x.parentNode){x.parentNode.removeChild(x);var e=t.document.getElementById(f.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(A)};if(e.closeButton&&"function"!=typeof o&&t.document.getElementById(b.id).querySelector("span.nx-close-button").addEventListener("click",(function(){C();var t=setTimeout((function(){N(),clearTimeout(t)}),e.cssAnimationDuration)})),("function"==typeof o||e.clickToClose)&&w.addEventListener("click",(function(){"function"==typeof o&&o(),C();var t=setTimeout((function(){N(),clearTimeout(t)}),e.cssAnimationDuration)})),!e.closeButton&&"function"!=typeof o){var E=function(){k=setTimeout((function(){C()}),e.timeout),A=setTimeout((function(){N()}),e.timeout+e.cssAnimationDuration)};E(),e.pauseOnHover&&(w.addEventListener("mouseenter",(function(){w.classList.add("nx-paused"),clearTimeout(k),clearTimeout(A)})),w.addEventListener("mouseleave",(function(){w.classList.remove("nx-paused"),E()})))}}if(e.showOnlyTheLastOne&&0<G)for(var z,L=t.document.querySelectorAll("[id^="+e.ID+"-]:not([id="+e.ID+"-"+G+"])"),S=0;S<L.length;S++)null!==(z=L[S]).parentNode&&z.parentNode.removeChild(z);e=q(!0,e,r)},Z=function(){return'[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*="-content"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*="-content"]>div[class$="-icon"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*="-content"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*="-content"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},tt=function(e,i,o,a,r,l){if(!j("body"))return!1;n||ct.Report.init({});var c={};if("object"==typeof r&&!Array.isArray(r)||"object"==typeof l&&!Array.isArray(l)){var p={};"object"==typeof r?p=r:"object"==typeof l&&(p=l),c=q(!0,n,{}),n=q(!0,n,p)}var m=n[e.toLocaleLowerCase("en")];"string"!=typeof i&&(i="Notiflix "+e),"string"!=typeof o&&(e===d?o='"Do not try to become a person of success but try to become a person of value." <br><br>- Albert Einstein':e===u?o='"Failure is simply the opportunity to begin again, this time more intelligently." <br><br>- Henry Ford':e===x?o='"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny." <br><br>- Mustafa Kemal Ataturk':e===g&&(o='"Knowledge rests not upon truth alone, but upon error also." <br><br>- Carl Gustav Jung')),"string"!=typeof a&&(a="Okay"),n.plainText&&(i=P(i),o=P(o),a=P(a)),n.plainText||(i.length>n.titleMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the title content length is more than the "titleMaxLength" option.',a="Okay"),o.length>n.messageMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the message content length is more than the "messageMaxLength" option.',a="Okay"),a.length>n.buttonMaxLength&&(i="Possible HTML Tags Error",o='The "plainText" option is "false" and the button content length is more than the "buttonMaxLength" option.',a="Okay")),i.length>n.titleMaxLength&&(i=i.substring(0,n.titleMaxLength)+"..."),o.length>n.messageMaxLength&&(o=o.substring(0,n.messageMaxLength)+"..."),a.length>n.buttonMaxLength&&(a=a.substring(0,n.buttonMaxLength)+"..."),n.cssAnimation||(n.cssAnimationDuration=0);var f=t.document.createElement("div");f.id=b.ID,f.className=n.className,f.style.zIndex=n.zindex,f.style.borderRadius=n.borderRadius,f.style.fontFamily='"'+n.fontFamily+'", '+s,n.rtl&&(f.setAttribute("dir","rtl"),f.classList.add("nx-rtl-on")),f.style.display="flex",f.style.flexWrap="wrap",f.style.flexDirection="column",f.style.alignItems="center",f.style.justifyContent="center";var y="",h=!0===n.backOverlayClickToClose;n.backOverlay&&(y='<div class="'+n.className+"-overlay"+(n.cssAnimation?" nx-with-animation":"")+(h?" nx-report-click-to-close":"")+'" style="background:'+(m.backOverlayColor||n.backOverlayColor)+";animation-duration:"+n.cssAnimationDuration+'ms;"></div>');var v="";if(e===d?v=function(t,e){return t||(t="110px"),e||(e="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportSuccess" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)"><path d="M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z" style="-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===u?v=function(t,e){return t||(t="110px"),e||(e="#ff5549"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportFailure" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z" style="-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z" style="-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===x?v=function(t,e){return t||(t="110px"),e||(e="#eebf31"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportWarning" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z" style="-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)"><path d="M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z" style="-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor):e===g&&(v=function(t,e){return t||(t="110px"),e||(e="#26c0d3"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXReportInfo" width="'+t+'" height="'+t+'" fill="'+e+'" viewBox="0 0 120 120"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style="-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z" style="-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g><g style="-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)"><path d="M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z" style="-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)" fill="inherit" data-animator-group="true" data-animator-type="2"/></g></svg>'}(n.svgSize,m.svgColor)),f.innerHTML=y+'<div class="'+n.className+"-content"+(n.cssAnimation?" nx-with-animation ":"")+" nx-"+n.cssAnimationStyle+'" style="width:'+n.width+"; background:"+n.backgroundColor+"; animation-duration:"+n.cssAnimationDuration+'ms;"><div style="width:'+n.svgSize+"; height:"+n.svgSize+';" class="'+n.className+'-icon">'+v+'</div><h5 class="'+n.className+'-title" style="font-weight:500; font-size:'+n.titleFontSize+"; color:"+m.titleColor+';">'+i+'</h5><p class="'+n.className+'-message" style="font-size:'+n.messageFontSize+"; color:"+m.messageColor+';">'+o+'</p><a id="NXReportButton" class="'+n.className+'-button" style="font-weight:500; font-size:'+n.buttonFontSize+"; background:"+m.buttonBackground+"; color:"+m.buttonColor+';">'+a+"</a></div>",!t.document.getElementById(f.id)){t.document.body.appendChild(f);var w=function(){var e=t.document.getElementById(f.id);e.classList.add("nx-remove");var i=setTimeout((function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(i)}),n.cssAnimationDuration)};t.document.getElementById("NXReportButton").addEventListener("click",(function(){"function"==typeof r&&r(),w()})),y&&h&&t.document.querySelector(".nx-report-click-to-close").addEventListener("click",(function(){w()}))}n=q(!0,n,c)},et=function(){return'[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*="-overlay"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*="-overlay"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*="-overlay"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*="-content"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-head"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-head"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*="-content"]>div[class*="-buttons"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*="-content"]>div[class*="-buttons"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*="-content"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*="-content"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*="-content"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}'},nt=function(e,n,o,a,r,l,c,p,m){if(!j("body"))return!1;i||ct.Confirm.init({});var f=q(!0,i,{});"object"!=typeof m||Array.isArray(m)||(i=q(!0,i,m)),"string"!=typeof n&&(n="Notiflix Confirm"),"string"!=typeof o&&(o="Do you agree with me?"),"string"!=typeof r&&(r="Yes"),"string"!=typeof l&&(l="No"),"function"!=typeof c&&(c=void 0),"function"!=typeof p&&(p=void 0),i.plainText&&(n=P(n),o=P(o),r=P(r),l=P(l)),i.plainText||(n.length>i.titleMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the title content length is more than "titleMaxLength" option.',r="Okay",l="..."),o.length>i.messageMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the message content length is more than "messageMaxLength" option.',r="Okay",l="..."),(r.length||l.length)>i.buttonsMaxLength&&(n="Possible HTML Tags Error",o='The "plainText" option is "false" and the buttons content length is more than "buttonsMaxLength" option.',r="Okay",l="...")),n.length>i.titleMaxLength&&(n=n.substring(0,i.titleMaxLength)+"..."),o.length>i.messageMaxLength&&(o=o.substring(0,i.messageMaxLength)+"..."),r.length>i.buttonsMaxLength&&(r=r.substring(0,i.buttonsMaxLength)+"..."),l.length>i.buttonsMaxLength&&(l=l.substring(0,i.buttonsMaxLength)+"..."),i.cssAnimation||(i.cssAnimationDuration=0);var d=t.document.createElement("div");d.id=w.ID,d.className=i.className+(i.cssAnimation?" nx-with-animation nx-"+i.cssAnimationStyle:""),d.style.zIndex=i.zindex,d.style.padding=i.distance,i.rtl&&(d.setAttribute("dir","rtl"),d.classList.add("nx-rtl-on"));var u="string"==typeof i.position?i.position.trim():"center";d.classList.add("nx-position-"+u),d.style.fontFamily='"'+i.fontFamily+'", '+s;var x="";i.backOverlay&&(x='<div class="'+i.className+"-overlay"+(i.cssAnimation?" nx-with-animation":"")+'" style="background:'+i.backOverlayColor+";animation-duration:"+i.cssAnimationDuration+'ms;"></div>');var g="";"function"==typeof c&&(g='<a id="NXConfirmButtonCancel" class="nx-confirm-button-cancel" style="color:'+i.cancelButtonColor+";background:"+i.cancelButtonBackground+";font-size:"+i.buttonsFontSize+';">'+l+"</a>");var b="",y=null,k=void 0;if(e===h||e===v){y=a||"";var A=e===h||200<y.length?Math.ceil(1.5*y.length):250;b='<div><input id="NXConfirmValidationInput" type="text" '+(e===v?'value="'+y+'"':"")+' maxlength="'+A+'" style="font-size:'+i.messageFontSize+";border-radius: "+i.borderRadius+';" autocomplete="off" spellcheck="false" autocapitalize="none" /></div>'}if(d.innerHTML=x+'<div class="'+i.className+'-content" style="width:'+i.width+"; background:"+i.backgroundColor+"; animation-duration:"+i.cssAnimationDuration+"ms; border-radius: "+i.borderRadius+';"><div class="'+i.className+'-head"><h5 style="color:'+i.titleColor+";font-size:"+i.titleFontSize+';">'+n+'</h5><div style="color:'+i.messageColor+";font-size:"+i.messageFontSize+';">'+o+b+'</div></div><div class="'+i.className+'-buttons"><a id="NXConfirmButtonOk" class="nx-confirm-button-ok'+("function"==typeof c?"":" nx-full")+'" style="color:'+i.okButtonColor+";background:"+i.okButtonBackground+";font-size:"+i.buttonsFontSize+';">'+r+"</a>"+g+"</div></div>",!t.document.getElementById(d.id)){t.document.body.appendChild(d);var C=t.document.getElementById(d.id),N=t.document.getElementById("NXConfirmButtonOk"),E=t.document.getElementById("NXConfirmValidationInput");E&&(E.focus(),E.setSelectionRange(0,(E.value||"").length),E.addEventListener("keyup",(function(t){var n=t.target.value;e===h&&n!==y?(t.preventDefault(),E.classList.add("nx-validation-failure"),E.classList.remove("nx-validation-success")):(e===h&&(E.classList.remove("nx-validation-failure"),E.classList.add("nx-validation-success")),("enter"===(t.key||"").toLocaleLowerCase("en")||13===t.keyCode)&&N.dispatchEvent(new Event("click")))}))),N.addEventListener("click",(function(t){if(e===h&&y&&E){if((E.value||"").toString()!==y)return E.focus(),E.classList.add("nx-validation-failure"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;E.classList.remove("nx-validation-failure")}"function"==typeof c&&(e===v&&E&&(k=E.value||""),c(k)),C.classList.add("nx-remove");var n=setTimeout((function(){null!==C.parentNode&&(C.parentNode.removeChild(C),clearTimeout(n))}),i.cssAnimationDuration)})),"function"==typeof c&&t.document.getElementById("NXConfirmButtonCancel").addEventListener("click",(function(){"function"==typeof p&&(e===v&&E&&(k=E.value||""),p(k)),C.classList.add("nx-remove");var t=setTimeout((function(){null!==C.parentNode&&(C.parentNode.removeChild(C),clearTimeout(t))}),i.cssAnimationDuration)}))}i=q(!0,i,f)},it=function(){return'[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*="-icon"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*="-icon"] img,[id^=NotiflixLoadingWrap]>div[class*="-icon"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}'},ot=function(e,n,i,a,r){if(!j("body"))return!1;o||ct.Loading.init({});var l=q(!0,o,{});if("object"==typeof n&&!Array.isArray(n)||"object"==typeof i&&!Array.isArray(i)){var c={};"object"==typeof n?c=n:"object"==typeof i&&(c=i),o=q(!0,o,c)}var p="";if("string"==typeof n&&0<n.length&&(p=n),a){var m="";0<(p=p.length>o.messageMaxLength?P(p).toString().substring(0,o.messageMaxLength)+"...":P(p).toString()).length&&(m='<p id="'+o.messageID+'" class="nx-loading-message" style="color:'+o.messageColor+";font-size:"+o.messageFontSize+';">'+p+"</p>"),o.cssAnimation||(o.cssAnimationDuration=0);var f="";if(e===k)f=Y(o.svgSize,o.svgColor);else if(e===A)f=V(o.svgSize,o.svgColor);else if(e===C)f=J(o.svgSize,o.svgColor);else if(e===N)f=U(o.svgSize,o.svgColor);else if(e===E)f=Q(o.svgSize,o.svgColor);else if(e===z)f=$(o.svgSize,o.svgColor);else if(e===L&&null!==o.customSvgCode&&null===o.customSvgUrl)f=o.customSvgCode||"";else if(e===L&&null!==o.customSvgUrl&&null===o.customSvgCode)f='<img class="nx-custom-loading-icon" width="'+o.svgSize+'" height="'+o.svgSize+'" src="'+o.customSvgUrl+'" alt="Notiflix">';else{if(e===L&&(null===o.customSvgUrl||null===o.customSvgCode))return D('You have to set a static SVG url to "customSvgUrl" option to use Loading Custom.'),!1;f=function(t,e,n){return t||(t="60px"),e||(e="#f8f8f8"),n||(n="#32c682"),'<svg xmlns="http://www.w3.org/2000/svg" id="NXLoadingNotiflixLib" width="'+t+'" height="'+t+'" viewBox="0 0 200 200"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:'+e+';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d="M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z" style="animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal" fill="'+n+'" stroke="'+n+'" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="22" stroke-width="12"/><path class="nx-icon-line" d="M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21" style="animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/><path class="nx-icon-line" d="M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75" style="animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal" stroke-dasharray="500"/></svg>'}(o.svgSize,"#f8f8f8","#32c682")}var d=parseInt((o.svgSize||"").replace(/[^0-9]/g,"")),u=t.innerWidth,x=d>=u?u-40+"px":d+"px",g='<div style="width:'+x+"; height:"+x+';" class="'+o.className+"-icon"+(0<p.length?" nx-with-message":"")+'">'+f+"</div>",b=t.document.createElement("div");b.id=I.ID,b.className=o.className+(o.cssAnimation?" nx-with-animation":"")+(o.clickToClose?" nx-loading-click-to-close":""),b.style.zIndex=o.zindex,b.style.background=o.backgroundColor,b.style.animationDuration=o.cssAnimationDuration+"ms",b.style.fontFamily='"'+o.fontFamily+'", '+s,b.style.display="flex",b.style.flexWrap="wrap",b.style.flexDirection="column",b.style.alignItems="center",b.style.justifyContent="center",o.rtl&&(b.setAttribute("dir","rtl"),b.classList.add("nx-rtl-on")),b.innerHTML=g+m,!t.document.getElementById(b.id)&&(t.document.body.appendChild(b),o.clickToClose)&&t.document.getElementById(b.id).addEventListener("click",(function(){b.classList.add("nx-remove");var t=setTimeout((function(){null!==b.parentNode&&(b.parentNode.removeChild(b),clearTimeout(t))}),o.cssAnimationDuration)}))}else if(t.document.getElementById(I.ID))var y=t.document.getElementById(I.ID),h=setTimeout((function(){y.classList.add("nx-remove");var t=setTimeout((function(){null!==y.parentNode&&(y.parentNode.removeChild(y),clearTimeout(t))}),o.cssAnimationDuration);clearTimeout(h)}),r);o=q(!0,o,l)},at=function(e){"string"!=typeof e&&(e="");var n=t.document.getElementById(I.ID);if(n)if(0<e.length){e=e.length>o.messageMaxLength?P(e).substring(0,o.messageMaxLength)+"...":P(e);var i=n.getElementsByTagName("p")[0];if(i)i.innerHTML=e;else{var a=t.document.createElement("p");a.id=o.messageID,a.className="nx-loading-message nx-loading-message-new",a.style.color=o.messageColor,a.style.fontSize=o.messageFontSize,a.innerHTML=e,n.appendChild(a)}}else D("Where is the new message?")},rt=function(){return'[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:"Quicksand",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*="-icon"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*="-icon"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*="-message"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}'},st=0,lt=function(e,n,i,o,r,l){var c;if(Array.isArray(i)){if(1>i.length)return D("Array of HTMLElements should contains at least one HTMLElement."),!1;c=i}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,i)){if(1>i.length)return D("NodeListOf<HTMLElement> should contains at least one HTMLElement."),!1;c=Array.prototype.slice.call(i)}else{if("string"!=typeof i||1>(i||"").length||1===(i||"").length&&("#"===(i||"")[0]||"."===(i||"")[0]))return D("The selector parameter must be a string and matches a specified CSS selector(s)."),!1;var p=t.document.querySelectorAll(i);if(1>p.length)return D('You called the "Notiflix.Block..." function with "'+i+'" selector, but there is no such element(s) in the document.'),!1;c=p}a||ct.Block.init({});var m=q(!0,a,{});if("object"==typeof o&&!Array.isArray(o)||"object"==typeof r&&!Array.isArray(r)){var f={};"object"==typeof o?f=o:"object"==typeof r&&(f=r),a=q(!0,a,f)}var d="";"string"==typeof o&&0<o.length&&(d=o),a.cssAnimation||(a.cssAnimationDuration=0);var u=O.className;"string"==typeof a.className&&(u=a.className.trim());var x="number"==typeof a.querySelectorLimit?a.querySelectorLimit:200,g=(c||[]).length>=x?x:c.length,b="nx-block-temporary-position";if(e){for(var y,h=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","html","head","title","script","style","iframe"],v=0;v<g;v++)if(y=c[v]){if(-1<h.indexOf(y.tagName.toLocaleLowerCase("en")))break;var w=y.querySelectorAll("[id^="+O.ID+"]");if(1>w.length){var k="";n&&(k=n===T?V(a.svgSize,a.svgColor):n===R?J(a.svgSize,a.svgColor):n===M?U(a.svgSize,a.svgColor):n===W?Q(a.svgSize,a.svgColor):n===F?$(a.svgSize,a.svgColor):Y(a.svgSize,a.svgColor));var A='<span class="'+u+'-icon" style="width:'+a.svgSize+";height:"+a.svgSize+';">'+k+"</span>",C="";0<d.length&&(d=d.length>a.messageMaxLength?P(d).substring(0,a.messageMaxLength)+"...":P(d),C='<span style="font-size:'+a.messageFontSize+";color:"+a.messageColor+';" class="'+u+'-message">'+d+"</span>"),st++;var N=t.document.createElement("div");N.id=O.ID+"-"+st,N.className=u+(a.cssAnimation?" nx-with-animation":""),N.style.position=a.position,N.style.zIndex=a.zindex,N.style.background=a.backgroundColor,N.style.animationDuration=a.cssAnimationDuration+"ms",N.style.fontFamily='"'+a.fontFamily+'", '+s,N.style.display="flex",N.style.flexWrap="wrap",N.style.flexDirection="column",N.style.alignItems="center",N.style.justifyContent="center",a.rtl&&(N.setAttribute("dir","rtl"),N.classList.add("nx-rtl-on")),N.innerHTML=A+C;var E=t.getComputedStyle(y).getPropertyValue("position"),z="string"==typeof E?E.toLocaleLowerCase("en"):"relative",L=Math.round(1.25*parseInt(a.svgSize))+40,S="";L>(y.offsetHeight||0)&&(S="min-height:"+L+"px;");var I;I=y.getAttribute("id")?"#"+y.getAttribute("id"):y.classList[0]?"."+y.classList[0]:(y.tagName||"").toLocaleLowerCase("en");var B="",H=-1>=["absolute","relative","fixed","sticky"].indexOf(z);if(H||0<S.length){if(!j("head"))return!1;H&&(B="position:relative!important;");var _='<style id="Style-'+O.ID+"-"+st+'">'+I+"."+b+"{"+B+S+"}</style>",G=t.document.createRange();G.selectNode(t.document.head);var K=G.createContextualFragment(_);t.document.head.appendChild(K),y.classList.add(b)}y.appendChild(N)}}}else var Z=function(e){var n=setTimeout((function(){null!==e.parentNode&&e.parentNode.removeChild(e);var i=e.getAttribute("id"),o=t.document.getElementById("Style-"+i);o&&null!==o.parentNode&&o.parentNode.removeChild(o),clearTimeout(n)}),a.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)(e=t[n])&&(e.classList.add("nx-remove"),Z(e));else X("string"==typeof i?'"Notiflix.Block.remove();" function called with "'+i+'" selector, but this selector does not have a "Block" element to remove.':'"Notiflix.Block.remove();" function called with "'+i+'", but this "Array<HTMLElement>" or "NodeListOf<HTMLElement>" does not have a "Block" element to remove.')},et=function(t){var e=setTimeout((function(){t.classList.remove(b),clearTimeout(e)}),a.cssAnimationDuration+300)},nt=setTimeout((function(){for(var t,e=0;e<g;e++)(t=c[e])&&(et(t),w=t.querySelectorAll("[id^="+O.ID+"]"),tt(w));clearTimeout(nt)}),l);a=q(!0,a,m)},ct={Notify:{init:function(t){e=q(!0,f,t),H(_,"NotiflixNotifyInternalCSS")},merge:function(t){return e?void(e=q(!0,e,t)):(D("You have to initialize the Notify module before call Merge function."),!1)},success:function(t,e,n){K(l,t,e,n)},failure:function(t,e,n){K(c,t,e,n)},warning:function(t,e,n){K(p,t,e,n)},info:function(t,e,n){K(m,t,e,n)}},Report:{init:function(t){n=q(!0,b,t),H(Z,"NotiflixReportInternalCSS")},merge:function(t){return n?void(n=q(!0,n,t)):(D("You have to initialize the Report module before call Merge function."),!1)},success:function(t,e,n,i,o){tt(d,t,e,n,i,o)},failure:function(t,e,n,i,o){tt(u,t,e,n,i,o)},warning:function(t,e,n,i,o){tt(x,t,e,n,i,o)},info:function(t,e,n,i,o){tt(g,t,e,n,i,o)}},Confirm:{init:function(t){i=q(!0,w,t),H(et,"NotiflixConfirmInternalCSS")},merge:function(t){return i?void(i=q(!0,i,t)):(D("You have to initialize the Confirm module before call Merge function."),!1)},show:function(t,e,n,i,o,a,r){nt(y,t,e,null,n,i,o,a,r)},ask:function(t,e,n,i,o,a,r,s){nt(h,t,e,n,i,o,a,r,s)},prompt:function(t,e,n,i,o,a,r,s){nt(v,t,e,n,i,o,a,r,s)}},Loading:{init:function(t){o=q(!0,I,t),H(it,"NotiflixLoadingInternalCSS")},merge:function(t){return o?void(o=q(!0,o,t)):(D("You have to initialize the Loading module before call Merge function."),!1)},standard:function(t,e){ot(k,t,e,!0,0)},hourglass:function(t,e){ot(A,t,e,!0,0)},circle:function(t,e){ot(C,t,e,!0,0)},arrows:function(t,e){ot(N,t,e,!0,0)},dots:function(t,e){ot(E,t,e,!0,0)},pulse:function(t,e){ot(z,t,e,!0,0)},custom:function(t,e){ot(L,t,e,!0,0)},notiflix:function(t,e){ot(S,t,e,!0,0)},remove:function(t){"number"!=typeof t&&(t=0),ot(null,null,null,!1,t)},change:function(t){at(t)}},Block:{init:function(t){a=q(!0,O,t),H(rt,"NotiflixBlockInternalCSS")},merge:function(t){return a?void(a=q(!0,a,t)):(D('You have to initialize the "Notiflix.Block" module before call Merge function.'),!1)},standard:function(t,e,n){lt(!0,B,t,e,n)},hourglass:function(t,e,n){lt(!0,T,t,e,n)},circle:function(t,e,n){lt(!0,R,t,e,n)},arrows:function(t,e,n){lt(!0,M,t,e,n)},dots:function(t,e,n){lt(!0,W,t,e,n)},pulse:function(t,e,n){lt(!0,F,t,e,n)},remove:function(t,e){"number"!=typeof e&&(e=0),lt(!1,null,t,null,null,e)}}};return"object"==typeof t.Notiflix?q(!0,t.Notiflix,{Notify:ct.Notify,Report:ct.Report,Confirm:ct.Confirm,Loading:ct.Loading,Block:ct.Block}):{Notify:ct.Notify,Report:ct.Report,Confirm:ct.Confirm,Loading:ct.Loading,Block:ct.Block}}(o)}.apply(e,[]),void 0===i||(t.exports=i)},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},r=[],s=0;s<t.length;s++){var l=t[s],c=i.base?l[0]+i.base:l[0],p=a[c]||0,m="".concat(c," ").concat(p);a[c]=p+1;var f=n(m),d={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var u=o(d,i);i.byIndex=s,e.splice(s,0,{identifier:m,updater:u,references:1})}r.push(m)}return r}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var a=i(t=t||[],o=o||{});return function(t){t=t||[];for(var r=0;r<a.length;r++){var s=n(a[r]);e[s].references--}for(var l=i(t,o),c=0;c<a.length;c++){var p=n(a[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return t[i].call(a.exports,a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var i={};(()=>{"use strict";n.d(i,{k:()=>yn});var t=n(980),e=n(443),o=n(642);let a={},r={borderRadius:10};const s={dark:{bg:"#232323","text-color":"#FFFFFF","secondary-text-color":"#d1d1d1","option-bg":"#434343","option-hover-bg":"#303030","option-border-color":"#8a8a8a","progress-bar-color":"#1963bd","progress-bar-bg":"#636363","radio-bg":"#4D4D4D","radio-selected-bg":"#76EA5D","gray-btn-color":"#606060","gray-btn-hover":"#545454","card-border":"#626262","fieldset-border":"#6d6d6d","link-color":"#2BA7DE","nx-global":{messageColor:"#FFFFFF",backgroundColor:"#353535",success:{titleColor:"#FFFFFF",messageColor:"#FFFFFF"},failure:{titleColor:"#FFFFFF",messageColor:"#FFFFFF"}}},dim:{bg:"#38393D","text-color":"#F0F0F0","secondary-text-color":"#D0D3D4","option-bg":"#515A5A","option-hover-bg":"#424949","option-border-color":"#8a8a8a","progress-bar-color":"#3498DB","progress-bar-bg":"#636363","radio-bg":"#4d4d4d","radio-selected-bg":"#76EA5D","gray-btn-color":"#606060","gray-btn-hover":"#545454","card-border":"#626262","fieldset-border":"#808B96","link-color":"#2874A6","nx-global":{messageColor:"#F0F0F0",backgroundColor:"#38393D",success:{titleColor:"#f0f0f0",messageColor:"#f0f0f0"},failure:{titleColor:"#f0f0f0",messageColor:"#f0f0f0"}}}};function l(t){if("default-theme"==t||"default"==t)return;c(!0);let e=s[t];if(!e)return void console.warn(`Theme "${t}" not found!`);for(let t in e)t.startsWith("nx-")||document.documentElement.style.setProperty(`--${t}`,e[t]);let n=e["nx-global"],i={};for(let t in n)"all"!=t&&(i[t]=n[t]);i.plainText=!1,i.cssAnimationStyle=g("popup-animation"),a=i,i.borderRadius=10,r=i;try{document.querySelector(`#s-popup-${g("popup-animation")}`).checked=!0,document.querySelector(`#s-${t}`).checked=!0}catch(t){alert(t)}document.querySelector("meta[name='theme-color']").content=e.bg}function c(t){document.documentElement.setAttribute("style",""),r={plainText:!1,borderRadius:10,cssAnimationStyle:g("popup-animation")},a={plainText:!1,cssAnimationStyle:g("popup-animation")},t||(document.querySelector("meta[name='theme-color']").content="#ededed")}const p=Array.from(document.querySelectorAll("input[type='radio']"));let m={},f={theme:"default-theme","popup-animation":"fade"};function d(){return`data/${m.set}-opt.json`}function u(){return JSON.parse(localStorage.getItem("flag-guesser-settings"))}function x(t){localStorage.setItem("flag-guesser-settings",JSON.stringify(t))}function g(t){return f[t]}if(p.forEach((t=>{t.id.startsWith("s-")?t.addEventListener("input",(()=>{f[t.name]=t.value,console.debug(f),x(f),"default"!=f.theme?l(f.theme):c()})):(t.addEventListener("input",(()=>{m[t.name]=t.id,console.debug(m),b()})),m[t.name]||(m[t.name]=document.querySelector(`input[name='${t.name}']:checked`).id))})),u()){let t=u();for(let e in f)void 0===t[e]&&(console.log("Adding newly added setting "+e+", this should only appear once."),t[e]=f[e],x(t),b());f=t}else x(f);function b(){document.querySelectorAll("fieldset.subset[data-requires]").forEach((t=>{t.dataset.requires&&document.getElementById(t.dataset.requires)&&"radio"==document.getElementById(t.dataset.requires).type&&(document.getElementById(t.dataset.requires).checked?t.classList.remove("hidden"):t.classList.add("hidden"))}))}l(f.theme),b();var y=n(533);let h={streak:0,totalQuestions:0,totalCorrect:0,totalIncorrect:0,totalGames:0,flagsSeen:[]},v={totalQuestions:0,totalCorrect:0,totalIncorrect:0,playtime:0,difficulty:0};function w(t){localStorage.setItem("flag-guesser-stats",JSON.stringify(t)),S()}function k(){return JSON.parse(localStorage.getItem("flag-guesser-stats"))}function A(t){return h[t]}function C(t,e){h[t]=e,w(h)}function N(t){C(t,h[t]+1)}function E(t,e){v[t]=e}function z(t){E(t,v[t]+1)}function L(t,e=0,n=0,i=0,o=""){yn(),document.getElementById("end").style.display="unset";for(let t in v){let e=document.getElementById("tg-"+t);e&&(e.querySelector(".stat").innerText=v[t])}var a,r,s;document.getElementById("tsg-playtime").querySelector(".stat").innerText=(a=v.playtime,`${(r=Math.floor(a/3600))>0?r+" hours,":""} ${(s=Math.floor(a%3600/60))>0?s+" minutes,":""} ${Math.floor(a%3600%60)} seconds`);let l=document.getElementById("sub-streak"),c=document.getElementById("sub-quiz-score");"questions"==t?(c.style.display="block",l.style.display="none"):"streak"==t&&(c.style.display="none",l.style.display="block"),l.querySelector(".stat").innerText=e,document.getElementById("score-value").innerText=n,document.getElementById("score-max").innerText=i.split("q-")[1],document.getElementById("end-title").innerText="questions"==t?"Game Complete!":"Game Over!";let p=Math.floor(100*v.totalCorrect/v.totalQuestions),m=document.getElementById("end-correct-answer"),f=document.getElementById("tg-questions");document.getElementById("tsp-winRate").querySelector("span.stat").innerText=p,""==o?m.style.display="none":(m.style.display="block",m.querySelector(".stat").innerText=o),f.style.display="questions"==t?"unset":"none",Array.from(document.querySelectorAll(".no-streak")).forEach((e=>{e&&(e.style.display="streak"==t?"none":"block")})),function(){for(let t in v)v[t]=0}()}function S(){for(let t in h)document.getElementById(`s-${t}`)&&(document.getElementById(`s-${t}`).querySelector("span.stat").innerText=A(t));let t=Math.floor(100*A("totalCorrect")/A("totalQuestions"));isNaN(t)&&(t=0),document.getElementById("sp-winRate").querySelector("span.stat").innerText=t;let e=Math.floor(100*A("flagsSeen").length/254);isNaN(e)&&(e=0),e>100&&(e=100),document.getElementById("sp-flagsPercent").querySelector("span.stat").innerText=e}if(k()){let t=k();for(let e in h)void 0===t[e]&&(console.log("Adding stat "+e+", this should only appear once."),t[e]=h[e],w(t));h=t}else w(h);function I(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function B(t){return t instanceof I(t).Element||t instanceof Element}function T(t){return t instanceof I(t).HTMLElement||t instanceof HTMLElement}function R(t){return"undefined"!=typeof ShadowRoot&&(t instanceof I(t).ShadowRoot||t instanceof ShadowRoot)}S(),document.getElementById("reset-stats").addEventListener("click",(()=>{o.Confirm.show("Are you sure?","This cannot be undone!","Clear Stats","Cancel",(()=>{localStorage.removeItem("flag-guesser-stats"),window.location.reload()}),void 0,r)})),document.getElementById("copy-stats").addEventListener("click",(()=>{try{const t=document.createElement("textarea");t.value=function(){let t=[];return Array.from(document.querySelectorAll("#stats-container > ul > li")).forEach((e=>{e.getAttribute("icon")&&t.push(`${e.getAttribute("icon")}${e.innerText}`)})),t.join("\n")}(),document.body.appendChild(t),t.select(),document.execCommand("copy"),t.remove(),y.Report.success("Copied!","Successfully copied to clipboard.","Ok",a)}catch(t){console.error(t),y.Report.failure("Error","Failed to copy text, sorry about that :(","Ok",a)}}));var M=Math.max,W=Math.min,F=Math.round;function O(){var t=navigator.userAgentData;return null!=t&&t.brands?t.brands.map((function(t){return t.brand+"/"+t.version})).join(" "):navigator.userAgent}function D(){return!/^((?!chrome|android).)*safari/i.test(O())}function X(t,e,n){void 0===e&&(e=!1),void 0===n&&(n=!1);var i=t.getBoundingClientRect(),o=1,a=1;e&&T(t)&&(o=t.offsetWidth>0&&F(i.width)/t.offsetWidth||1,a=t.offsetHeight>0&&F(i.height)/t.offsetHeight||1);var r=(B(t)?I(t):window).visualViewport,s=!D()&&n,l=(i.left+(s&&r?r.offsetLeft:0))/o,c=(i.top+(s&&r?r.offsetTop:0))/a,p=i.width/o,m=i.height/a;return{width:p,height:m,top:c,right:l+p,bottom:c+m,left:l,x:l,y:c}}function j(t){var e=I(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function H(t){return t?(t.nodeName||"").toLowerCase():null}function q(t){return((B(t)?t.ownerDocument:t.document)||window.document).documentElement}function P(t){return X(q(t)).left+j(t).scrollLeft}function Y(t){return I(t).getComputedStyle(t)}function V(t){var e=Y(t),n=e.overflow,i=e.overflowX,o=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+o+i)}function J(t,e,n){void 0===n&&(n=!1);var i,o,a=T(e),r=T(e)&&function(t){var e=t.getBoundingClientRect(),n=F(e.width)/t.offsetWidth||1,i=F(e.height)/t.offsetHeight||1;return 1!==n||1!==i}(e),s=q(e),l=X(t,r,n),c={scrollLeft:0,scrollTop:0},p={x:0,y:0};return(a||!a&&!n)&&(("body"!==H(e)||V(s))&&(c=(i=e)!==I(i)&&T(i)?{scrollLeft:(o=i).scrollLeft,scrollTop:o.scrollTop}:j(i)),T(e)?((p=X(e,!0)).x+=e.clientLeft,p.y+=e.clientTop):s&&(p.x=P(s))),{x:l.left+c.scrollLeft-p.x,y:l.top+c.scrollTop-p.y,width:l.width,height:l.height}}function U(t){var e=X(t),n=t.offsetWidth,i=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-i)<=1&&(i=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:i}}function Q(t){return"html"===H(t)?t:t.assignedSlot||t.parentNode||(R(t)?t.host:null)||q(t)}function $(t){return["html","body","#document"].indexOf(H(t))>=0?t.ownerDocument.body:T(t)&&V(t)?t:$(Q(t))}function _(t,e){var n;void 0===e&&(e=[]);var i=$(t),o=i===(null==(n=t.ownerDocument)?void 0:n.body),a=I(i),r=o?[a].concat(a.visualViewport||[],V(i)?i:[]):i,s=e.concat(r);return o?s:s.concat(_(Q(r)))}function G(t){return["table","td","th"].indexOf(H(t))>=0}function K(t){return T(t)&&"fixed"!==Y(t).position?t.offsetParent:null}function Z(t){for(var e=I(t),n=K(t);n&&G(n)&&"static"===Y(n).position;)n=K(n);return n&&("html"===H(n)||"body"===H(n)&&"static"===Y(n).position)?e:n||function(t){var e=/firefox/i.test(O());if(/Trident/i.test(O())&&T(t)&&"fixed"===Y(t).position)return null;var n=Q(t);for(R(n)&&(n=n.host);T(n)&&["html","body"].indexOf(H(n))<0;){var i=Y(n);if("none"!==i.transform||"none"!==i.perspective||"paint"===i.contain||-1!==["transform","perspective"].indexOf(i.willChange)||e&&"filter"===i.willChange||e&&i.filter&&"none"!==i.filter)return n;n=n.parentNode}return null}(t)||e}var tt="top",et="bottom",nt="right",it="left",ot="auto",at=[tt,et,nt,it],rt="start",st="end",lt="viewport",ct="popper",pt=at.reduce((function(t,e){return t.concat([e+"-"+rt,e+"-"+st])}),[]),mt=[].concat(at,[ot]).reduce((function(t,e){return t.concat([e,e+"-"+rt,e+"-"+st])}),[]),ft=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function dt(t){var e=new Map,n=new Set,i=[];function o(t){n.add(t.name),[].concat(t.requires||[],t.requiresIfExists||[]).forEach((function(t){if(!n.has(t)){var i=e.get(t);i&&o(i)}})),i.push(t)}return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){n.has(t.name)||o(t)})),i}var ut={placement:"bottom",modifiers:[],strategy:"absolute"};function xt(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function gt(t){void 0===t&&(t={});var e=t,n=e.defaultModifiers,i=void 0===n?[]:n,o=e.defaultOptions,a=void 0===o?ut:o;return function(t,e,n){void 0===n&&(n=a);var o,r,s={placement:"bottom",orderedModifiers:[],options:Object.assign({},ut,a),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},l=[],c=!1,p={state:s,setOptions:function(n){var o="function"==typeof n?n(s.options):n;m(),s.options=Object.assign({},a,s.options,o),s.scrollParents={reference:B(t)?_(t):t.contextElement?_(t.contextElement):[],popper:_(e)};var r,c,f=function(t){var e=dt(t);return ft.reduce((function(t,n){return t.concat(e.filter((function(t){return t.phase===n})))}),[])}((r=[].concat(i,s.options.modifiers),c=r.reduce((function(t,e){var n=t[e.name];return t[e.name]=n?Object.assign({},n,e,{options:Object.assign({},n.options,e.options),data:Object.assign({},n.data,e.data)}):e,t}),{}),Object.keys(c).map((function(t){return c[t]}))));return s.orderedModifiers=f.filter((function(t){return t.enabled})),s.orderedModifiers.forEach((function(t){var e=t.name,n=t.options,i=void 0===n?{}:n,o=t.effect;if("function"==typeof o){var a=o({state:s,name:e,instance:p,options:i});l.push(a||function(){})}})),p.update()},forceUpdate:function(){if(!c){var t=s.elements,e=t.reference,n=t.popper;if(xt(e,n)){s.rects={reference:J(e,Z(n),"fixed"===s.options.strategy),popper:U(n)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(t){return s.modifiersData[t.name]=Object.assign({},t.data)}));for(var i=0;i<s.orderedModifiers.length;i++)if(!0!==s.reset){var o=s.orderedModifiers[i],a=o.fn,r=o.options,l=void 0===r?{}:r,m=o.name;"function"==typeof a&&(s=a({state:s,options:l,name:m,instance:p})||s)}else s.reset=!1,i=-1}}},update:(o=function(){return new Promise((function(t){p.forceUpdate(),t(s)}))},function(){return r||(r=new Promise((function(t){Promise.resolve().then((function(){r=void 0,t(o())}))}))),r}),destroy:function(){m(),c=!0}};if(!xt(t,e))return p;function m(){l.forEach((function(t){return t()})),l=[]}return p.setOptions(n).then((function(t){!c&&n.onFirstUpdate&&n.onFirstUpdate(t)})),p}}var bt={passive:!0};const yt={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,n=t.instance,i=t.options,o=i.scroll,a=void 0===o||o,r=i.resize,s=void 0===r||r,l=I(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return a&&c.forEach((function(t){t.addEventListener("scroll",n.update,bt)})),s&&l.addEventListener("resize",n.update,bt),function(){a&&c.forEach((function(t){t.removeEventListener("scroll",n.update,bt)})),s&&l.removeEventListener("resize",n.update,bt)}},data:{}};function ht(t){return t.split("-")[0]}function vt(t){return t.split("-")[1]}function wt(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function kt(t){var e,n=t.reference,i=t.element,o=t.placement,a=o?ht(o):null,r=o?vt(o):null,s=n.x+n.width/2-i.width/2,l=n.y+n.height/2-i.height/2;switch(a){case tt:e={x:s,y:n.y-i.height};break;case et:e={x:s,y:n.y+n.height};break;case nt:e={x:n.x+n.width,y:l};break;case it:e={x:n.x-i.width,y:l};break;default:e={x:n.x,y:n.y}}var c=a?wt(a):null;if(null!=c){var p="y"===c?"height":"width";switch(r){case rt:e[c]=e[c]-(n[p]/2-i[p]/2);break;case st:e[c]=e[c]+(n[p]/2-i[p]/2)}}return e}var At={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Ct(t){var e,n=t.popper,i=t.popperRect,o=t.placement,a=t.variation,r=t.offsets,s=t.position,l=t.gpuAcceleration,c=t.adaptive,p=t.roundOffsets,m=t.isFixed,f=r.x,d=void 0===f?0:f,u=r.y,x=void 0===u?0:u,g="function"==typeof p?p({x:d,y:x}):{x:d,y:x};d=g.x,x=g.y;var b=r.hasOwnProperty("x"),y=r.hasOwnProperty("y"),h=it,v=tt,w=window;if(c){var k=Z(n),A="clientHeight",C="clientWidth";k===I(n)&&"static"!==Y(k=q(n)).position&&"absolute"===s&&(A="scrollHeight",C="scrollWidth"),(o===tt||(o===it||o===nt)&&a===st)&&(v=et,x-=(m&&k===w&&w.visualViewport?w.visualViewport.height:k[A])-i.height,x*=l?1:-1),o!==it&&(o!==tt&&o!==et||a!==st)||(h=nt,d-=(m&&k===w&&w.visualViewport?w.visualViewport.width:k[C])-i.width,d*=l?1:-1)}var N,E=Object.assign({position:s},c&&At),z=!0===p?function(t){var e=t.x,n=t.y,i=window.devicePixelRatio||1;return{x:F(e*i)/i||0,y:F(n*i)/i||0}}({x:d,y:x}):{x:d,y:x};return d=z.x,x=z.y,l?Object.assign({},E,((N={})[v]=y?"0":"",N[h]=b?"0":"",N.transform=(w.devicePixelRatio||1)<=1?"translate("+d+"px, "+x+"px)":"translate3d("+d+"px, "+x+"px, 0)",N)):Object.assign({},E,((e={})[v]=y?x+"px":"",e[h]=b?d+"px":"",e.transform="",e))}const Nt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,n=t.options,i=n.gpuAcceleration,o=void 0===i||i,a=n.adaptive,r=void 0===a||a,s=n.roundOffsets,l=void 0===s||s,c={placement:ht(e.placement),variation:vt(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:o,isFixed:"fixed"===e.options.strategy};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,Ct(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:r,roundOffsets:l})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,Ct(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}},Et={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var n=e.styles[t]||{},i=e.attributes[t]||{},o=e.elements[t];T(o)&&H(o)&&(Object.assign(o.style,n),Object.keys(i).forEach((function(t){var e=i[t];!1===e?o.removeAttribute(t):o.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach((function(t){var i=e.elements[t],o=e.attributes[t]||{},a=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:n[t]).reduce((function(t,e){return t[e]="",t}),{});T(i)&&H(i)&&(Object.assign(i.style,a),Object.keys(o).forEach((function(t){i.removeAttribute(t)})))}))}},requires:["computeStyles"]},zt={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var e=t.state,n=t.options,i=t.name,o=n.offset,a=void 0===o?[0,0]:o,r=mt.reduce((function(t,n){return t[n]=function(t,e,n){var i=ht(t),o=[it,tt].indexOf(i)>=0?-1:1,a="function"==typeof n?n(Object.assign({},e,{placement:t})):n,r=a[0],s=a[1];return r=r||0,s=(s||0)*o,[it,nt].indexOf(i)>=0?{x:s,y:r}:{x:r,y:s}}(n,e.rects,a),t}),{}),s=r[e.placement],l=s.x,c=s.y;null!=e.modifiersData.popperOffsets&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[i]=r}};var Lt={left:"right",right:"left",bottom:"top",top:"bottom"};function St(t){return t.replace(/left|right|bottom|top/g,(function(t){return Lt[t]}))}var It={start:"end",end:"start"};function Bt(t){return t.replace(/start|end/g,(function(t){return It[t]}))}function Tt(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&R(n)){var i=e;do{if(i&&t.isSameNode(i))return!0;i=i.parentNode||i.host}while(i)}return!1}function Rt(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Mt(t,e,n){return e===lt?Rt(function(t,e){var n=I(t),i=q(t),o=n.visualViewport,a=i.clientWidth,r=i.clientHeight,s=0,l=0;if(o){a=o.width,r=o.height;var c=D();(c||!c&&"fixed"===e)&&(s=o.offsetLeft,l=o.offsetTop)}return{width:a,height:r,x:s+P(t),y:l}}(t,n)):B(e)?function(t,e){var n=X(t,!1,"fixed"===e);return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}(e,n):Rt(function(t){var e,n=q(t),i=j(t),o=null==(e=t.ownerDocument)?void 0:e.body,a=M(n.scrollWidth,n.clientWidth,o?o.scrollWidth:0,o?o.clientWidth:0),r=M(n.scrollHeight,n.clientHeight,o?o.scrollHeight:0,o?o.clientHeight:0),s=-i.scrollLeft+P(t),l=-i.scrollTop;return"rtl"===Y(o||n).direction&&(s+=M(n.clientWidth,o?o.clientWidth:0)-a),{width:a,height:r,x:s,y:l}}(q(t)))}function Wt(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function Ft(t,e){return e.reduce((function(e,n){return e[n]=t,e}),{})}function Ot(t,e){void 0===e&&(e={});var n=e,i=n.placement,o=void 0===i?t.placement:i,a=n.strategy,r=void 0===a?t.strategy:a,s=n.boundary,l=void 0===s?"clippingParents":s,c=n.rootBoundary,p=void 0===c?lt:c,m=n.elementContext,f=void 0===m?ct:m,d=n.altBoundary,u=void 0!==d&&d,x=n.padding,g=void 0===x?0:x,b=Wt("number"!=typeof g?g:Ft(g,at)),y=f===ct?"reference":ct,h=t.rects.popper,v=t.elements[u?y:f],w=function(t,e,n,i){var o="clippingParents"===e?function(t){var e=_(Q(t)),n=["absolute","fixed"].indexOf(Y(t).position)>=0&&T(t)?Z(t):t;return B(n)?e.filter((function(t){return B(t)&&Tt(t,n)&&"body"!==H(t)})):[]}(t):[].concat(e),a=[].concat(o,[n]),r=a[0],s=a.reduce((function(e,n){var o=Mt(t,n,i);return e.top=M(o.top,e.top),e.right=W(o.right,e.right),e.bottom=W(o.bottom,e.bottom),e.left=M(o.left,e.left),e}),Mt(t,r,i));return s.width=s.right-s.left,s.height=s.bottom-s.top,s.x=s.left,s.y=s.top,s}(B(v)?v:v.contextElement||q(t.elements.popper),l,p,r),k=X(t.elements.reference),A=kt({reference:k,element:h,strategy:"absolute",placement:o}),C=Rt(Object.assign({},h,A)),N=f===ct?C:k,E={top:w.top-N.top+b.top,bottom:N.bottom-w.bottom+b.bottom,left:w.left-N.left+b.left,right:N.right-w.right+b.right},z=t.modifiersData.offset;if(f===ct&&z){var L=z[o];Object.keys(E).forEach((function(t){var e=[nt,et].indexOf(t)>=0?1:-1,n=[tt,et].indexOf(t)>=0?"y":"x";E[t]+=L[n]*e}))}return E}const Dt={name:"flip",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,i=t.name;if(!e.modifiersData[i]._skip){for(var o=n.mainAxis,a=void 0===o||o,r=n.altAxis,s=void 0===r||r,l=n.fallbackPlacements,c=n.padding,p=n.boundary,m=n.rootBoundary,f=n.altBoundary,d=n.flipVariations,u=void 0===d||d,x=n.allowedAutoPlacements,g=e.options.placement,b=ht(g),y=l||(b!==g&&u?function(t){if(ht(t)===ot)return[];var e=St(t);return[Bt(t),e,Bt(e)]}(g):[St(g)]),h=[g].concat(y).reduce((function(t,n){return t.concat(ht(n)===ot?function(t,e){void 0===e&&(e={});var n=e,i=n.placement,o=n.boundary,a=n.rootBoundary,r=n.padding,s=n.flipVariations,l=n.allowedAutoPlacements,c=void 0===l?mt:l,p=vt(i),m=p?s?pt:pt.filter((function(t){return vt(t)===p})):at,f=m.filter((function(t){return c.indexOf(t)>=0}));0===f.length&&(f=m);var d=f.reduce((function(e,n){return e[n]=Ot(t,{placement:n,boundary:o,rootBoundary:a,padding:r})[ht(n)],e}),{});return Object.keys(d).sort((function(t,e){return d[t]-d[e]}))}(e,{placement:n,boundary:p,rootBoundary:m,padding:c,flipVariations:u,allowedAutoPlacements:x}):n)}),[]),v=e.rects.reference,w=e.rects.popper,k=new Map,A=!0,C=h[0],N=0;N<h.length;N++){var E=h[N],z=ht(E),L=vt(E)===rt,S=[tt,et].indexOf(z)>=0,I=S?"width":"height",B=Ot(e,{placement:E,boundary:p,rootBoundary:m,altBoundary:f,padding:c}),T=S?L?nt:it:L?et:tt;v[I]>w[I]&&(T=St(T));var R=St(T),M=[];if(a&&M.push(B[z]<=0),s&&M.push(B[T]<=0,B[R]<=0),M.every((function(t){return t}))){C=E,A=!1;break}k.set(E,M)}if(A)for(var W=function(t){var e=h.find((function(e){var n=k.get(e);if(n)return n.slice(0,t).every((function(t){return t}))}));if(e)return C=e,"break"},F=u?3:1;F>0&&"break"!==W(F);F--);e.placement!==C&&(e.modifiersData[i]._skip=!0,e.placement=C,e.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function Xt(t,e,n){return M(t,W(e,n))}const jt={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,i=t.name,o=n.mainAxis,a=void 0===o||o,r=n.altAxis,s=void 0!==r&&r,l=n.boundary,c=n.rootBoundary,p=n.altBoundary,m=n.padding,f=n.tether,d=void 0===f||f,u=n.tetherOffset,x=void 0===u?0:u,g=Ot(e,{boundary:l,rootBoundary:c,padding:m,altBoundary:p}),b=ht(e.placement),y=vt(e.placement),h=!y,v=wt(b),w="x"===v?"y":"x",k=e.modifiersData.popperOffsets,A=e.rects.reference,C=e.rects.popper,N="function"==typeof x?x(Object.assign({},e.rects,{placement:e.placement})):x,E="number"==typeof N?{mainAxis:N,altAxis:N}:Object.assign({mainAxis:0,altAxis:0},N),z=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,L={x:0,y:0};if(k){if(a){var S,I="y"===v?tt:it,B="y"===v?et:nt,T="y"===v?"height":"width",R=k[v],F=R+g[I],O=R-g[B],D=d?-C[T]/2:0,X=y===rt?A[T]:C[T],j=y===rt?-C[T]:-A[T],H=e.elements.arrow,q=d&&H?U(H):{width:0,height:0},P=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Y=P[I],V=P[B],J=Xt(0,A[T],q[T]),Q=h?A[T]/2-D-J-Y-E.mainAxis:X-J-Y-E.mainAxis,$=h?-A[T]/2+D+J+V+E.mainAxis:j+J+V+E.mainAxis,_=e.elements.arrow&&Z(e.elements.arrow),G=_?"y"===v?_.clientTop||0:_.clientLeft||0:0,K=null!=(S=null==z?void 0:z[v])?S:0,ot=R+$-K,at=Xt(d?W(F,R+Q-K-G):F,R,d?M(O,ot):O);k[v]=at,L[v]=at-R}if(s){var st,lt="x"===v?tt:it,ct="x"===v?et:nt,pt=k[w],mt="y"===w?"height":"width",ft=pt+g[lt],dt=pt-g[ct],ut=-1!==[tt,it].indexOf(b),xt=null!=(st=null==z?void 0:z[w])?st:0,gt=ut?ft:pt-A[mt]-C[mt]-xt+E.altAxis,bt=ut?pt+A[mt]+C[mt]-xt-E.altAxis:dt,yt=d&&ut?function(t,e,n){var i=Xt(t,e,n);return i>n?n:i}(gt,pt,bt):Xt(d?gt:ft,pt,d?bt:dt);k[w]=yt,L[w]=yt-pt}e.modifiersData[i]=L}},requiresIfExists:["offset"]},Ht={name:"arrow",enabled:!0,phase:"main",fn:function(t){var e,n=t.state,i=t.name,o=t.options,a=n.elements.arrow,r=n.modifiersData.popperOffsets,s=ht(n.placement),l=wt(s),c=[it,nt].indexOf(s)>=0?"height":"width";if(a&&r){var p=function(t,e){return Wt("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:Ft(t,at))}(o.padding,n),m=U(a),f="y"===l?tt:it,d="y"===l?et:nt,u=n.rects.reference[c]+n.rects.reference[l]-r[l]-n.rects.popper[c],x=r[l]-n.rects.reference[l],g=Z(a),b=g?"y"===l?g.clientHeight||0:g.clientWidth||0:0,y=u/2-x/2,h=p[f],v=b-m[c]-p[d],w=b/2-m[c]/2+y,k=Xt(h,w,v),A=l;n.modifiersData[i]=((e={})[A]=k,e.centerOffset=k-w,e)}},effect:function(t){var e=t.state,n=t.options.element,i=void 0===n?"[data-popper-arrow]":n;null!=i&&("string"!=typeof i||(i=e.elements.popper.querySelector(i)))&&Tt(e.elements.popper,i)&&(e.elements.arrow=i)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function qt(t,e,n){return void 0===n&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function Pt(t){return[tt,nt,et,it].some((function(e){return t[e]>=0}))}var Yt=gt({defaultModifiers:[yt,{name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,n=t.name;e.modifiersData[n]=kt({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}},Nt,Et,zt,Dt,jt,Ht,{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,n=t.name,i=e.rects.reference,o=e.rects.popper,a=e.modifiersData.preventOverflow,r=Ot(e,{elementContext:"reference"}),s=Ot(e,{altBoundary:!0}),l=qt(r,i),c=qt(s,o,a),p=Pt(l),m=Pt(c);e.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:p,hasPopperEscaped:m},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":p,"data-popper-escaped":m})}}]}),Vt="tippy-content",Jt="tippy-arrow",Ut="tippy-svg-arrow",Qt={passive:!0,capture:!0},$t=function(){return document.body};function _t(t,e,n){if(Array.isArray(t)){var i=t[e];return null==i?Array.isArray(n)?n[e]:n:i}return t}function Gt(t,e){var n={}.toString.call(t);return 0===n.indexOf("[object")&&n.indexOf(e+"]")>-1}function Kt(t,e){return"function"==typeof t?t.apply(void 0,e):t}function Zt(t,e){return 0===e?t:function(i){clearTimeout(n),n=setTimeout((function(){t(i)}),e)};var n}function te(t){return[].concat(t)}function ee(t,e){-1===t.indexOf(e)&&t.push(e)}function ne(t){return[].slice.call(t)}function ie(t){return Object.keys(t).reduce((function(e,n){return void 0!==t[n]&&(e[n]=t[n]),e}),{})}function oe(){return document.createElement("div")}function ae(t){return["Element","Fragment"].some((function(e){return Gt(t,e)}))}function re(t,e){t.forEach((function(t){t&&(t.style.transitionDuration=e+"ms")}))}function se(t,e){t.forEach((function(t){t&&t.setAttribute("data-state",e)}))}function le(t,e,n){var i=e+"EventListener";["transitionend","webkitTransitionEnd"].forEach((function(e){t[i](e,n)}))}function ce(t,e){for(var n=e;n;){var i;if(t.contains(n))return!0;n=null==n.getRootNode||null==(i=n.getRootNode())?void 0:i.host}return!1}var pe={isTouch:!1},me=0;function fe(){pe.isTouch||(pe.isTouch=!0,window.performance&&document.addEventListener("mousemove",de))}function de(){var t=performance.now();t-me<20&&(pe.isTouch=!1,document.removeEventListener("mousemove",de)),me=t}function ue(){var t,e=document.activeElement;if((t=e)&&t._tippy&&t._tippy.reference===t){var n=e._tippy;e.blur&&!n.state.isVisible&&e.blur()}}var xe=!("undefined"==typeof window||"undefined"==typeof document||!window.msCrypto),ge=Object.assign({appendTo:$t,aria:{content:"auto",expanded:"auto"},delay:0,duration:[300,250],getReferenceClientRect:null,hideOnClick:!0,ignoreAttributes:!1,interactive:!1,interactiveBorder:2,interactiveDebounce:0,moveTransition:"",offset:[0,10],onAfterUpdate:function(){},onBeforeUpdate:function(){},onCreate:function(){},onDestroy:function(){},onHidden:function(){},onHide:function(){},onMount:function(){},onShow:function(){},onShown:function(){},onTrigger:function(){},onUntrigger:function(){},onClickOutside:function(){},placement:"top",plugins:[],popperOptions:{},render:null,showOnCreate:!1,touch:!0,trigger:"mouseenter focus",triggerTarget:null},{animateFill:!1,followCursor:!1,inlinePositioning:!1,sticky:!1},{allowHTML:!1,animation:"fade",arrow:!0,content:"",inertia:!1,maxWidth:350,role:"tooltip",theme:"",zIndex:9999}),be=Object.keys(ge);function ye(t){var e=(t.plugins||[]).reduce((function(e,n){var i,o=n.name,a=n.defaultValue;return o&&(e[o]=void 0!==t[o]?t[o]:null!=(i=ge[o])?i:a),e}),{});return Object.assign({},t,e)}function he(t,e){var n=Object.assign({},e,{content:Kt(e.content,[t])},e.ignoreAttributes?{}:function(t,e){return(e?Object.keys(ye(Object.assign({},ge,{plugins:e}))):be).reduce((function(e,n){var i=(t.getAttribute("data-tippy-"+n)||"").trim();if(!i)return e;if("content"===n)e[n]=i;else try{e[n]=JSON.parse(i)}catch(t){e[n]=i}return e}),{})}(t,e.plugins));return n.aria=Object.assign({},ge.aria,n.aria),n.aria={expanded:"auto"===n.aria.expanded?e.interactive:n.aria.expanded,content:"auto"===n.aria.content?e.interactive?null:"describedby":n.aria.content},n}function ve(t,e){t.innerHTML=e}function we(t){var e=oe();return!0===t?e.className=Jt:(e.className=Ut,ae(t)?e.appendChild(t):ve(e,t)),e}function ke(t,e){ae(e.content)?(ve(t,""),t.appendChild(e.content)):"function"!=typeof e.content&&(e.allowHTML?ve(t,e.content):t.textContent=e.content)}function Ae(t){var e=t.firstElementChild,n=ne(e.children);return{box:e,content:n.find((function(t){return t.classList.contains(Vt)})),arrow:n.find((function(t){return t.classList.contains(Jt)||t.classList.contains(Ut)})),backdrop:n.find((function(t){return t.classList.contains("tippy-backdrop")}))}}function Ce(t){var e=oe(),n=oe();n.className="tippy-box",n.setAttribute("data-state","hidden"),n.setAttribute("tabindex","-1");var i=oe();function o(n,i){var o=Ae(e),a=o.box,r=o.content,s=o.arrow;i.theme?a.setAttribute("data-theme",i.theme):a.removeAttribute("data-theme"),"string"==typeof i.animation?a.setAttribute("data-animation",i.animation):a.removeAttribute("data-animation"),i.inertia?a.setAttribute("data-inertia",""):a.removeAttribute("data-inertia"),a.style.maxWidth="number"==typeof i.maxWidth?i.maxWidth+"px":i.maxWidth,i.role?a.setAttribute("role",i.role):a.removeAttribute("role"),n.content===i.content&&n.allowHTML===i.allowHTML||ke(r,t.props),i.arrow?s?n.arrow!==i.arrow&&(a.removeChild(s),a.appendChild(we(i.arrow))):a.appendChild(we(i.arrow)):s&&a.removeChild(s)}return i.className=Vt,i.setAttribute("data-state","hidden"),ke(i,t.props),e.appendChild(n),n.appendChild(i),o(t.props,t.props),{popper:e,onUpdate:o}}Ce.$$tippy=!0;var Ne=1,Ee=[],ze=[];function Le(t,e){var n,i,o,a,r,s,l,c,p=he(t,Object.assign({},ge,ye(ie(e)))),m=!1,f=!1,d=!1,u=!1,x=[],g=Zt(U,p.interactiveDebounce),b=Ne++,y=(c=p.plugins).filter((function(t,e){return c.indexOf(t)===e})),h={id:b,reference:t,popper:oe(),popperInstance:null,props:p,state:{isEnabled:!0,isVisible:!1,isDestroyed:!1,isMounted:!1,isShown:!1},plugins:y,clearDelayTimeouts:function(){clearTimeout(n),clearTimeout(i),cancelAnimationFrame(o)},setProps:function(e){if(!h.state.isDestroyed){R("onBeforeUpdate",[h,e]),V();var n=h.props,i=he(t,Object.assign({},n,ie(e),{ignoreAttributes:!0}));h.props=i,Y(),n.interactiveDebounce!==i.interactiveDebounce&&(F(),g=Zt(U,i.interactiveDebounce)),n.triggerTarget&&!i.triggerTarget?te(n.triggerTarget).forEach((function(t){t.removeAttribute("aria-expanded")})):i.triggerTarget&&t.removeAttribute("aria-expanded"),W(),T(),k&&k(n,i),h.popperInstance&&(G(),Z().forEach((function(t){requestAnimationFrame(t._tippy.popperInstance.forceUpdate)}))),R("onAfterUpdate",[h,e])}},setContent:function(t){h.setProps({content:t})},show:function(){var t=h.state.isVisible,e=h.state.isDestroyed,n=!h.state.isEnabled,i=pe.isTouch&&!h.props.touch,o=_t(h.props.duration,0,ge.duration);if(!(t||e||n||i||L().hasAttribute("disabled")||(R("onShow",[h],!1),!1===h.props.onShow(h)))){if(h.state.isVisible=!0,z()&&(w.style.visibility="visible"),T(),j(),h.state.isMounted||(w.style.transition="none"),z()){var a=I();re([a.box,a.content],0)}var r,l,c;s=function(){var t;if(h.state.isVisible&&!u){if(u=!0,w.offsetHeight,w.style.transition=h.props.moveTransition,z()&&h.props.animation){var e=I(),n=e.box,i=e.content;re([n,i],o),se([n,i],"visible")}M(),W(),ee(ze,h),null==(t=h.popperInstance)||t.forceUpdate(),R("onMount",[h]),h.props.animation&&z()&&function(t,e){q(t,(function(){h.state.isShown=!0,R("onShown",[h])}))}(o)}},l=h.props.appendTo,c=L(),(r=h.props.interactive&&l===$t||"parent"===l?c.parentNode:Kt(l,[c])).contains(w)||r.appendChild(w),h.state.isMounted=!0,G()}},hide:function(){var t=!h.state.isVisible,e=h.state.isDestroyed,n=!h.state.isEnabled,i=_t(h.props.duration,1,ge.duration);if(!(t||e||n)&&(R("onHide",[h],!1),!1!==h.props.onHide(h))){if(h.state.isVisible=!1,h.state.isShown=!1,u=!1,m=!1,z()&&(w.style.visibility="hidden"),F(),H(),T(!0),z()){var o=I(),a=o.box,r=o.content;h.props.animation&&(re([a,r],i),se([a,r],"hidden"))}M(),W(),h.props.animation?z()&&function(t,e){q(t,(function(){!h.state.isVisible&&w.parentNode&&w.parentNode.contains(w)&&e()}))}(i,h.unmount):h.unmount()}},hideWithInteractivity:function(t){S().addEventListener("mousemove",g),ee(Ee,g),g(t)},enable:function(){h.state.isEnabled=!0},disable:function(){h.hide(),h.state.isEnabled=!1},unmount:function(){h.state.isVisible&&h.hide(),h.state.isMounted&&(K(),Z().forEach((function(t){t._tippy.unmount()})),w.parentNode&&w.parentNode.removeChild(w),ze=ze.filter((function(t){return t!==h})),h.state.isMounted=!1,R("onHidden",[h]))},destroy:function(){h.state.isDestroyed||(h.clearDelayTimeouts(),h.unmount(),V(),delete t._tippy,h.state.isDestroyed=!0,R("onDestroy",[h]))}};if(!p.render)return h;var v=p.render(h),w=v.popper,k=v.onUpdate;w.setAttribute("data-tippy-root",""),w.id="tippy-"+h.id,h.popper=w,t._tippy=h,w._tippy=h;var A=y.map((function(t){return t.fn(h)})),C=t.hasAttribute("aria-expanded");return Y(),W(),T(),R("onCreate",[h]),p.showOnCreate&&tt(),w.addEventListener("mouseenter",(function(){h.props.interactive&&h.state.isVisible&&h.clearDelayTimeouts()})),w.addEventListener("mouseleave",(function(){h.props.interactive&&h.props.trigger.indexOf("mouseenter")>=0&&S().addEventListener("mousemove",g)})),h;function N(){var t=h.props.touch;return Array.isArray(t)?t:[t,0]}function E(){return"hold"===N()[0]}function z(){var t;return!(null==(t=h.props.render)||!t.$$tippy)}function L(){return l||t}function S(){var t,e,n=L().parentNode;return n?null!=(e=te(n)[0])&&null!=(t=e.ownerDocument)&&t.body?e.ownerDocument:document:document}function I(){return Ae(w)}function B(t){return h.state.isMounted&&!h.state.isVisible||pe.isTouch||a&&"focus"===a.type?0:_t(h.props.delay,t?0:1,ge.delay)}function T(t){void 0===t&&(t=!1),w.style.pointerEvents=h.props.interactive&&!t?"":"none",w.style.zIndex=""+h.props.zIndex}function R(t,e,n){var i;void 0===n&&(n=!0),A.forEach((function(n){n[t]&&n[t].apply(n,e)})),n&&(i=h.props)[t].apply(i,e)}function M(){var e=h.props.aria;if(e.content){var n="aria-"+e.content,i=w.id;te(h.props.triggerTarget||t).forEach((function(t){var e=t.getAttribute(n);if(h.state.isVisible)t.setAttribute(n,e?e+" "+i:i);else{var o=e&&e.replace(i,"").trim();o?t.setAttribute(n,o):t.removeAttribute(n)}}))}}function W(){!C&&h.props.aria.expanded&&te(h.props.triggerTarget||t).forEach((function(t){h.props.interactive?t.setAttribute("aria-expanded",h.state.isVisible&&t===L()?"true":"false"):t.removeAttribute("aria-expanded")}))}function F(){S().removeEventListener("mousemove",g),Ee=Ee.filter((function(t){return t!==g}))}function O(e){if(!pe.isTouch||!d&&"mousedown"!==e.type){var n=e.composedPath&&e.composedPath()[0]||e.target;if(!h.props.interactive||!ce(w,n)){if(te(h.props.triggerTarget||t).some((function(t){return ce(t,n)}))){if(pe.isTouch)return;if(h.state.isVisible&&h.props.trigger.indexOf("click")>=0)return}else R("onClickOutside",[h,e]);!0===h.props.hideOnClick&&(h.clearDelayTimeouts(),h.hide(),f=!0,setTimeout((function(){f=!1})),h.state.isMounted||H())}}}function D(){d=!0}function X(){d=!1}function j(){var t=S();t.addEventListener("mousedown",O,!0),t.addEventListener("touchend",O,Qt),t.addEventListener("touchstart",X,Qt),t.addEventListener("touchmove",D,Qt)}function H(){var t=S();t.removeEventListener("mousedown",O,!0),t.removeEventListener("touchend",O,Qt),t.removeEventListener("touchstart",X,Qt),t.removeEventListener("touchmove",D,Qt)}function q(t,e){var n=I().box;function i(t){t.target===n&&(le(n,"remove",i),e())}if(0===t)return e();le(n,"remove",r),le(n,"add",i),r=i}function P(e,n,i){void 0===i&&(i=!1),te(h.props.triggerTarget||t).forEach((function(t){t.addEventListener(e,n,i),x.push({node:t,eventType:e,handler:n,options:i})}))}function Y(){var t;E()&&(P("touchstart",J,{passive:!0}),P("touchend",Q,{passive:!0})),(t=h.props.trigger,t.split(/\s+/).filter(Boolean)).forEach((function(t){if("manual"!==t)switch(P(t,J),t){case"mouseenter":P("mouseleave",Q);break;case"focus":P(xe?"focusout":"blur",$);break;case"focusin":P("focusout",$)}}))}function V(){x.forEach((function(t){var e=t.node,n=t.eventType,i=t.handler,o=t.options;e.removeEventListener(n,i,o)})),x=[]}function J(t){var e,n=!1;if(h.state.isEnabled&&!_(t)&&!f){var i="focus"===(null==(e=a)?void 0:e.type);a=t,l=t.currentTarget,W(),!h.state.isVisible&&Gt(t,"MouseEvent")&&Ee.forEach((function(e){return e(t)})),"click"===t.type&&(h.props.trigger.indexOf("mouseenter")<0||m)&&!1!==h.props.hideOnClick&&h.state.isVisible?n=!0:tt(t),"click"===t.type&&(m=!n),n&&!i&&et(t)}}function U(t){var e=t.target,n=L().contains(e)||w.contains(e);if("mousemove"!==t.type||!n){var i=Z().concat(w).map((function(t){var e,n=null==(e=t._tippy.popperInstance)?void 0:e.state;return n?{popperRect:t.getBoundingClientRect(),popperState:n,props:p}:null})).filter(Boolean);(function(t,e){var n=e.clientX,i=e.clientY;return t.every((function(t){var e=t.popperRect,o=t.popperState,a=t.props.interactiveBorder,r=o.placement.split("-")[0],s=o.modifiersData.offset;if(!s)return!0;var l="bottom"===r?s.top.y:0,c="top"===r?s.bottom.y:0,p="right"===r?s.left.x:0,m="left"===r?s.right.x:0,f=e.top-i+l>a,d=i-e.bottom-c>a,u=e.left-n+p>a,x=n-e.right-m>a;return f||d||u||x}))})(i,t)&&(F(),et(t))}}function Q(t){_(t)||h.props.trigger.indexOf("click")>=0&&m||(h.props.interactive?h.hideWithInteractivity(t):et(t))}function $(t){h.props.trigger.indexOf("focusin")<0&&t.target!==L()||h.props.interactive&&t.relatedTarget&&w.contains(t.relatedTarget)||et(t)}function _(t){return!!pe.isTouch&&E()!==t.type.indexOf("touch")>=0}function G(){K();var e=h.props,n=e.popperOptions,i=e.placement,o=e.offset,a=e.getReferenceClientRect,r=e.moveTransition,l=z()?Ae(w).arrow:null,c=a?{getBoundingClientRect:a,contextElement:a.contextElement||L()}:t,p=[{name:"offset",options:{offset:o}},{name:"preventOverflow",options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:"flip",options:{padding:5}},{name:"computeStyles",options:{adaptive:!r}},{name:"$$tippy",enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:function(t){var e=t.state;if(z()){var n=I().box;["placement","reference-hidden","escaped"].forEach((function(t){"placement"===t?n.setAttribute("data-placement",e.placement):e.attributes.popper["data-popper-"+t]?n.setAttribute("data-"+t,""):n.removeAttribute("data-"+t)})),e.attributes.popper={}}}}];z()&&l&&p.push({name:"arrow",options:{element:l,padding:3}}),p.push.apply(p,(null==n?void 0:n.modifiers)||[]),h.popperInstance=Yt(c,w,Object.assign({},n,{placement:i,onFirstUpdate:s,modifiers:p}))}function K(){h.popperInstance&&(h.popperInstance.destroy(),h.popperInstance=null)}function Z(){return ne(w.querySelectorAll("[data-tippy-root]"))}function tt(t){h.clearDelayTimeouts(),t&&R("onTrigger",[h,t]),j();var e=B(!0),i=N(),o=i[0],a=i[1];pe.isTouch&&"hold"===o&&a&&(e=a),e?n=setTimeout((function(){h.show()}),e):h.show()}function et(t){if(h.clearDelayTimeouts(),R("onUntrigger",[h,t]),h.state.isVisible){if(!(h.props.trigger.indexOf("mouseenter")>=0&&h.props.trigger.indexOf("click")>=0&&["mouseleave","mousemove"].indexOf(t.type)>=0&&m)){var e=B(!1);e?i=setTimeout((function(){h.state.isVisible&&h.hide()}),e):o=requestAnimationFrame((function(){h.hide()}))}}else H()}}function Se(t,e){void 0===e&&(e={});var n=ge.plugins.concat(e.plugins||[]);document.addEventListener("touchstart",fe,Qt),window.addEventListener("blur",ue);var i,o=Object.assign({},e,{plugins:n}),a=(i=t,ae(i)?[i]:function(t){return Gt(t,"NodeList")}(i)?ne(i):Array.isArray(i)?i:ne(document.querySelectorAll(i))).reduce((function(t,e){var n=e&&Le(e,o);return n&&t.push(n),t}),[]);return ae(t)?a[0]:a}Se.defaultProps=ge,Se.setDefaultProps=function(t){Object.keys(t).forEach((function(e){ge[e]=t[e]}))},Se.currentInput=pe,Object.assign({},Et,{effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow)}}),Se.setDefaultProps({render:Ce});const Ie=Se,Be={"easy-label":"Mostly well known countries and flags","normal-label":"Many smaller and lesser known countries are included, but there aren't any tiny island nations","expert-label":"Almost every country and territory is included, only for geography super nerds","endless-label":"Keep going forever and ever, no consequences","questions-label":"Ask an arbitrary number of questions before the game is over and you get a score","streak-label":"Keep playing and growing your streak until you get a question wrong","sp-flagsPercent":"Percentage of the world's flags that you've encountered while playing","replay-btn":"Start over using the same options"};for(let t in Be)Ie(document.getElementById(t),{content:Be[t],placement:"top",animation:"shift-away-subtle"});function Te(t,e,n){n.plainText?t.innerText=e:t.innerHTML=e}const Re=class{constructor(t){"content"in t||(t.content="Lorem ipsum dolor sit amet consectetur adipisicing elit."),"title"in t||(t.title=""),"plainText"in t||(t.plainText=!0),"clickBackdropToClose"in t||(t.clickBackdropToClose=!0),"closeKeys"in t||(t.closeKeys=["Escape"]);const e=document.createElement("div");e.className="popup-backdrop",document.body.appendChild(e);const n=document.createElement("div");n.className="popup-container",document.body.appendChild(n);const i=document.createElement("header");i.className="popup-header",n.appendChild(i);const o=document.createElement("span");o.className="popup-title",Te(o,t.title,t),i.appendChild(o);const a=document.createElement("button");a.innerHTML="X",a.className="popup-close",i.appendChild(a);const r=document.createElement("div");function s(e){(t.closeKeys.includes(e.key)||t.closeKeys.includes(e.keyCode))&&a.click()}r.className="popup-content",Te(r,t.content,t),n.appendChild(r),this.close=function(){t.callbackReplaceDefault||(n.remove(),e.remove()),"onClose"in t&&t.onClose(),document.removeEventListener("keydown",s)},document.addEventListener("keydown",s),a.addEventListener("click",this.close),t.clickBackdropToClose&&e.addEventListener("click",this.close)}};var Me=n(379),We=n.n(Me),Fe=n(795),Oe=n.n(Fe),De=n(569),Xe=n.n(De),je=n(565),He=n.n(je),qe=n(216),Pe=n.n(qe),Ye=n(589),Ve=n.n(Ye),Je=n(74),Ue={};Ue.styleTagTransform=Ve(),Ue.setAttributes=He(),Ue.insert=Xe().bind(null,"head"),Ue.domAPI=Oe(),Ue.insertStyleElement=Pe(),We()(Je.Z,Ue),Je.Z&&Je.Z.locals&&Je.Z.locals;const Qe={incorrectEndlessMessages:["Dust yourself off! The correct answer was %%","Oops! The correct answer was %%","Sorry! The actual answer was %%","You'll get it next time! The answer was %%.","I believe in you! The correct answer was %%","Don't sweat! The correct answer was %%","Nice try, the correct answer was %%"],streakCorrectMessages:["Awesome! Your streak is now %%!","Your streak is now %%!","Sick! Your new streak is %%!","Sweet! Streak: %%","Keep going! Streak: %%","GG! Streak: %%"],loseStreakMessages:["Aw man! Better luck next time. You got a streak of %% questions.","Better luck next time! Your streak was %% questions.","%% questions, not bad!","Maybe next time! You got a streak of %% questions."],questionsFail:["You finished with a score of %% out of %%. Better luck next time!","You got %%/%%. I bet you'll do better next time!","Keep trying! You finished with a score of %%/%%."],questionsFinish:["Awesome! Your score is %%/%%!","Nice job! You finished with a score of %% out of %%!","Super! Your score is %%/%%","Nice! You got %% out of %% correct!"]};document.getElementById("version").innerText="Version: 2.2.0";let $e,_e,Ge=4,Ke={},Ze=0,tn=10,en=0,nn=!0;const on=["AC","CP","DG","EA","IC","TA"];let an=0,rn={},sn=0,ln=!1;const cn=document.getElementById("progress-fill"),pn=document.getElementById("streak-num"),mn=document.getElementById("streak-container"),fn=document.getElementById("typing-form"),dn=document.getElementById("typing-input"),un=document.getElementById("correct-text");function xn(t,e){let n=[];return n.push(e.name.toLowerCase()),"alt"in e&&e.alt.forEach((t=>{n.push(t.toLowerCase())})),n.includes(t.toLowerCase().trim())}function gn(n){e.Loading.remove(),console.error(n),t.Report.failure("Error",n.toString()||"An unknown error occurred.","Ok",a)}function bn(){return Ke[Math.floor(Math.random()*Ke.length)]}function yn(){Array.from(document.getElementsByClassName("screen")).forEach((t=>{t.style.display="none"}))}function hn(){$e=null,_e=null,Ze=0,an=0,en=0,sn=0,ln=!1}function vn(){hn(),yn(),document.getElementById("welcome").style.display="unset"}function wn(t){return"us-states"==rn.set?"flags/state/"+t.code+".png":on.includes(t.code)?"https://cdn.jsdelivr.net/npm/country-flag-emoji-json@2.0.0/dist/images/"+t.image:"flags/"+t.code+".svg"}fn.addEventListener("submit",(t=>{t.preventDefault()}));const kn=document.getElementById("guess"),An=document.getElementById("flag-svg"),Cn=document.getElementById("guessType-multi"),Nn=[];function En(t){if(Ze++,an=100*Ze/tn,cn.style.width=an+"%",_e=t,N("totalQuestions"),z("totalQuestions"),Ze+1>tn&&"questions"==rn.mode)return ln=!1,L(rn.mode,sn,en,rn.questions);zn(bn())}function zn(e){let n=[];if($e=e,$e!=_e){if(An.src=wn(e),"multi"==rn.answerType){Array.from(document.getElementsByClassName("option")).forEach((t=>{t.remove()}));for(let t=0;t<Ge-1;t++)i();const s=Math.floor(Math.random()*(n.length+1));n.splice(s,0,e.name),n.forEach((n=>{let i=document.createElement("button");i.className="option",i.innerText=n,Cn.appendChild(i),i.addEventListener("click",(function(){i.getAttribute("clicked")||(xn(n,e)?(sn++,pn.innerText=sn,t.Report.success("Correct!","streak"==rn.mode?Qe.streakCorrectMessages[Math.floor(Math.random()*Qe.streakCorrectMessages.length)].replaceAll("%%",sn):"","Next Question",(()=>{nn&&(o(),N("totalCorrect"),z("totalCorrect"),"streak"==rn.mode&&A("streak")<sn&&C("streak",sn),en++,En(e))}),a)):"streak"==rn.mode?r():t.Report.failure("Incorrect",Qe.incorrectEndlessMessages[Math.floor(Math.random()*Qe.incorrectEndlessMessages.length)].replaceAll("%%","<b>"+e.name+"</b>"),"Next Question",(()=>{nn&&(o(),N("totalIncorrect"),z("totalIncorrect"),En(e),_e=e)}),a),i.setAttribute("clicked",!0))}))}))}else if("typing"==rn.answerType){const t=()=>{const n=dn.value;""!==n&&(dn.value="",dn.focus(),xn(n,e)?(dn.classList.add("correct"),sn++,pn.innerText=sn,N("totalCorrect"),z("totalCorrect"),"streak"==rn.mode&&A("streak")<sn&&C("streak",sn),en++,setTimeout((()=>{dn.classList.remove("correct"),En()}),600)):(dn.classList.add("incorrect"),un.style.visibility="visible",un.querySelector(".value").innerText=e.name,setTimeout((()=>{un.style.visibility="hidden",dn.classList.remove("incorrect"),"streak"==rn.mode?r():(N("totalIncorrect"),z("totalIncorrect"),En())}),600)),fn.removeEventListener("submit",t))};fn.addEventListener("submit",t)}try{if("us-states"!=rn.set&&!A("flagsSeen").includes(e.code)){let t=A("flagsSeen");t.push(e.code),C("flagsSeen",t)}}catch(t){console.error("Failed to update statistics!"),console.error(t)}}else zn(bn());function i(){const t=bn();if(n.includes(t.name)||t.name==e.name)return console.debug("Duplicate detected: "+t.name),void i();n.push(t.name)}function o(){nn=!1,setTimeout((()=>{nn=!0}),370)}function r(){if("streak"==rn.mode){if(!nn)return;return o(),N("totalQuestions"),z("totalQuestions"),N("totalIncorrect"),z("totalIncorrect"),A("streak")<sn&&C("streak",sn),ln=!1,L(rn.mode,sn,en,rn.questions,e.name)}}}function Ln(){rn=m,Ge=rn.options.split("opt-")[1],tn=rn.questions.split("q-")[1],console.log("Data url: "+d()),console.log("Option count: "+Ge),N("totalGames"),function(t){Nn.forEach((t=>{(t=document.getElementById("guessType-"+t)).style.display="none"}));let e=document.querySelector(`#guessType-${t}`);e&&e.setAttribute("style","")}(rn.answerType),ln=!0,"questions"!==rn.mode?cn.parentElement.style.display="none":cn.parentElement.setAttribute("style",""),"streak"!==rn.mode?mn.style.display="none":mn.style.display="block","autocomplete-on"==rn.autocomplete?dn.setAttribute("list","countries-auto"):dn.setAttribute("list",""),dn.value="",E("difficulty",rn.set),E("questions",rn.questions.split("q-")[1]),document.querySelector("#info-difficulty > span").innerText=rn.set.replace("-"," "),pn.innerText=sn,e.Loading.circle("Fetching data..."),fetch(d()).then((t=>{e.Loading.change("Parsing data..."),t.json().then((t=>{Ke=t;const n=document.getElementById("countries-auto");n.querySelectorAll("option").forEach((t=>{t.remove()})),Ke.forEach((t=>{let e=document.createElement("option");e.value=t.name,n.appendChild(e)})),"typing"==rn.answerType&&setTimeout((()=>{dn.focus()}),300),e.Loading.remove(),yn(),kn.style.display="unset",cn.style.width=an+"%",zn(bn())})).catch(gn)})).catch(gn)}document.querySelectorAll("input[name='answerType']").forEach((t=>{Nn.push(t.id)})),window.addEventListener("keydown",(t=>{"Enter"!=t.key&&" "!=t.key&&"Escape"!=t.key||document.getElementById("NXReportButton")&&document.getElementById("NXReportButton").click()})),window.addEventListener("beforeunload",(t=>{ln&&(t.returnValue=!0)})),setInterval((()=>{ln&&z("playtime")}),1e3),document.getElementById("close-btn").addEventListener("click",(()=>{o.Confirm.show("Are you sure?","Your statistics are already saved, but any current game progress will be lost.","Leave","Stay",vn,void 0,r)})),document.getElementById("replay-btn").addEventListener("click",(()=>{yn(),hn(),Ln()})),document.getElementById("view-flag-btn").addEventListener("click",(()=>{new Re({title:`Flag of ${$e.name}`,content:`<img src="${wn($e)}" class="view-flag-img">`,plainText:!1})})),document.getElementById("home-btn").addEventListener("click",vn),document.getElementById("play-btn").addEventListener("click",Ln),document.getElementById("about-btn").addEventListener("click",(function(){new Re({title:"About",plainText:!1,content:'\n<h3>What is this?</h3>\nFlag guesser is an <a href="https://github.com/pikapower9080/flag-guesser" target="_blank">open source</a> vanilla javascript game about guessing world flags.\n<h3>Difficulty</h3>\nIn an attempt to make the game fun for everyone, a difficulty option has been added. The three difficulties are described when you hover over their buttons. You might not agree with these presets, and if you have any feedback please open a <a href="https://github.com/pikapower9080/flag-guesser/issues" target="_blank">github issue</a>.\n<h3>Customization</h3>\nFlag guesser is extremely customizable! Below the play button you\'ll find a menu with many options. After the game ends, you can press the play again button to retry with the exact same options.\n<h3>Bugs / Feature Requests</h3>\nIf you\'ve found a bug or have an idea for a feature, please <a href="https://github.com/pikapower9080/flag-guesser/issues" target="_blank">open an issue</a> on github. You unfortunately will need to sign up for an account.\n<h3>Acknowledgements</h3>\n<ul>\n<li>Extra special thanks to <a href="https://github.com/risan/country-flag-emoji-json" target="_blank">country-flag-emoji-json</a>, this project would not be possible without it.</li>\n<li>Flag images courtesy of <a href="https://countryflagsapi.com/" target="_blank">countryflagsapi.com</a></li>\n<li>Radio button styles taken from <a href="https://markheath.net/post/customize-radio-button-css" target="_blank">here</a></li>\n<li>Icons by <a href="https://fontawesome.com/" target="_blank">FontAwesome</a></li>\n</ul>\n'})}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFTLEtBQzNELEVBQUFoQyxRQUFBLEtBQWEsZ0JBQWlCLGlGQUFrRixRQUFTLE9BQVFpaUMsUUFBY3puQyxFQUFXb1osRUFBYyxJQUU1S2hZLFNBQVMyRixlQUFlLGNBQWNTLGlCQUFpQixTQUFTLEtBQzVEZ1csS0FDQSxLQUNBLElBQU0sSUFFVnBjLFNBQVMyRixlQUFlLGlCQUFpQlMsaUJBQWlCLFNBQVMsS0FDL0QsSUFBSSxHQUFNLENBQ056QyxNQUFPLFdBQVdraEMsR0FBZTNxQixPQUNqQ2pjLFFBQVMsYUFBYXFvQyxHQUFXekIsOEJBQ2pDMWpDLFdBQVcsR0FDZCxJQUVMbkIsU0FBUzJGLGVBQWUsWUFBWVMsaUJBQWlCLFFBQVNpZ0MsSUFDOURybUMsU0FBUzJGLGVBQWUsWUFBWVMsaUJBQWlCLFFBQVMsSUFDOURwRyxTQUFTMkYsZUFBZSxhQUFhUyxpQkFBaUIsU0N2Vy9DLFdBQ0gsSUFBSSxHQUFNLENBQ056QyxNQUFPLFFBQ1B4QyxXQUFXLEVBQ1hsRCxRQXRCUSwraURBd0JoQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0eWxlcy9pbmRleC5sZXNzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL25vdGlmbGl4L2J1aWxkL25vdGlmbGl4LWNvbmZpcm0tYWlvLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9ub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1sb2FkaW5nLWFpby5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvbm90aWZsaXgvYnVpbGQvbm90aWZsaXgtcmVwb3J0LWFpby5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvbm90aWZsaXgvZGlzdC9ub3RpZmxpeC1haW8tMy4yLjUubWluLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3RoZW1lcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9zcmMvb3B0aW9ucy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9zcmMvc3RhdGlzdGljcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy91c2VyQWdlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNMYXlvdXRWaWV3cG9ydC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNTY3JvbGxQYXJlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlU2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldExheW91dFJlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0UGFyZW50Tm9kZS5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRTY3JvbGxQYXJlbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvbGlzdFNjcm9sbFBhcmVudHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNUYWJsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9vcmRlck1vZGlmaWVycy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RlYm91bmNlLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VCeU5hbWUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0VmFyaWF0aW9uLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZU9mZnNldHMuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcHBseVN0eWxlcy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9vZmZzZXQuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVBsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2NvbnRhaW5zLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDbGlwcGluZ1JlY3QuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Vmlld3BvcnRSZWN0LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50UmVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEZyZXNoU2lkZU9iamVjdC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2V4cGFuZFRvSGFzaE1hcC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2ZsaXAuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlQXV0b1BsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRBbHRBeGlzLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2Fycm93LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXIuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyIsIndlYnBhY2s6Ly9mbGFnLWd1ZXNzZXIvLi9ub2RlX21vZHVsZXMvdGlwcHkuanMvZGlzdC90aXBweS5lc20uanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3Rvb2x0aXBzLmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL25vZGVfbW9kdWxlcy9zdXBlci1zaW1wbGUtcG9wdXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0eWxlcy9pbmRleC5sZXNzP2UyNDciLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL3N0cmluZ3MuanMiLCJ3ZWJwYWNrOi8vZmxhZy1ndWVzc2VyLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2ZsYWctZ3Vlc3Nlci8uL3NyYy9hYm91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tb3B0aW9uLWJnOiAjZTllOWVkO1xcbiAgLS1vcHRpb24taG92ZXItYmc6ICNkNWQzZDM7XFxuICAtLW9wdGlvbi1ib3JkZXItY29sb3I6ICNjNGM0YzU7XFxuICAtLXByb2dyZXNzLWJhci1jb2xvcjogIzBkODBiZDtcXG4gIC0tcHJvZ3Jlc3MtYmFyLWJnOiAjYzZjNmM2O1xcbiAgLS10ZXh0LWNvbG9yOiAjMDAwMDAwO1xcbiAgLS1zZWNvbmRhcnktdGV4dC1jb2xvcjogIzYxNjE2MTtcXG4gIC0tbGluay1jb2xvcjogIzJlMmVmMTtcXG4gIC0tZ3JheS1idG4tY29sb3I6ICNkNGQ0ZDQ7XFxuICAtLWdyYXktYnRuLWhvdmVyOiAjYzVjNGM0O1xcbiAgLS10ZXh0LWlucHV0LWNvcnJlY3Qtb3V0bGluZTogIzFjZGExZjtcXG4gIC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZTogI2U1MDgwODtcXG59XFxuLnBvcHVwLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjUpO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuLnBvcHVwLWNvbnRhaW5lciB7XFxuICBtYXJnaW46IGF1dG87XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMzV2dztcXG4gIGhlaWdodDogMzIwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBtaW4td2lkdGg6IDMyMHB4O1xcbn1cXG4ucG9wdXAtY2xvc2Uge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICB0b3A6IDA7XFxuICB3aWR0aDogMThweDtcXG4gIGhlaWdodDogMThweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgbWFyZ2luOiA0cHg7XFxuICBwYWRkaW5nOiAwcHg7XFxuICBtaW4td2lkdGg6IDBweDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XFxufVxcbi5wb3B1cC10aXRsZSB7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBhZGRpbmctcmlnaHQ6IGNhbGMoMThweCArIDZweCk7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjY3Myk7XFxufVxcbi5wb3B1cC1oZWFkZXIge1xcbiAgaGVpZ2h0OiAyMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgei1pbmRleDogMjtcXG59XFxuLnBvcHVwLWNvbnRlbnQge1xcbiAgcGFkZGluZy1pbmxpbmU6IDZweDtcXG4gIG92ZXJmbG93LXk6IGF1dG87XFxuICBoZWlnaHQ6IGNhbGMoY2FsYygxMDAlIC0gMjBweCkgLSA5cHgpO1xcbiAgbWFyZ2luLXRvcDogOXB4O1xcbiAgei1pbmRleDogMTtcXG59XFxuLnBvcHVwLWNvbnRlbnQgPiB1bCA+IGxpOjptYXJrZXIge1xcbiAgY29udGVudDogJ+KYniAnO1xcbn1cXG4udmlldy1mbGFnLWltZyB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmJ0bi1ibHVlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2NDY0ZWY7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5idG4tYmx1ZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGU0ZWRjO1xcbn1cXG4uYnRuLWdyZWVuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwN2JiMDc7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbi5idG4tZ3JlZW46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFhYTgxYTtcXG59XFxuLnRoaW4ge1xcbiAgcGFkZGluZzogNHB4O1xcbiAgcGFkZGluZy1pbmxpbmU6IDdweDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuLmJ0bi1yZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2MDgwODtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuLmJ0bi1yZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NlMjAyMDtcXG59XFxuLmJ0bi15ZWxsb3cge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZWIzODtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuLmJ0bi15ZWxsb3c6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VhZTEzODtcXG59XFxuLmJ0bi1ncmF5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktYnRuLWNvbG9yKTtcXG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG59XFxuLmJ0bi1ncmF5OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktYnRuLWhvdmVyKTtcXG59XFxuLmJ0bi1wdXJwbGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2E4MWNkNztcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuLmJ0bi1wdXJwbGU6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzljMzRiZjtcXG59XFxuYm9keSB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xcbn1cXG5hIHtcXG4gIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuYTp2aXNpdGVkIHtcXG4gIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuLnNjcmVlbiB7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG4ucGxheSB7XFxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG4jZmxhZy1zdmcge1xcbiAgaGVpZ2h0OiAyMHZ3O1xcbiAgcGFkZGluZzogMjBweDtcXG59XFxuI2d1ZXNzVHlwZS1tdWx0aSB7XFxuICBjb2x1bW4tY291bnQ6IDI7XFxuICB3aWR0aDogMTAwdnc7XFxuICBsZWZ0OiAwO1xcbn1cXG4jY2xvc2UtYnRuIHtcXG4gIHdpZHRoOiA0M3B4O1xcbiAgaGVpZ2h0OiA0M3B4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW46IDVweDtcXG4gIG1hcmdpbi10b3A6IDBweDtcXG59XFxuLm9wdGlvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGlubGluZTtcXG4gIG1hcmdpbi1ib3R0b206IDVweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMzAwbXM7XFxuICBib3JkZXI6IHZhcigtLW9wdGlvbi1ib3JkZXItY29sb3IpIDFweCBzb2xpZDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW9wdGlvbi1iZyk7XFxuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxufVxcbi5vcHRpb246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3B0aW9uLWhvdmVyLWJnKTtcXG59XFxuI3Byb2dyZXNzLWNvbnRhaW5lciB7XFxuICB3aWR0aDogY2FsYygxMDAlIC0gODVweCk7XFxuICBoZWlnaHQ6IDE1cHg7XFxuICBtYXJnaW46IDEwcHg7XFxuICBtYXJnaW4taW5saW5lOiAyNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByb2dyZXNzLWJhci1iZyk7XFxufVxcbiNwcm9ncmVzcy1maWxsIHtcXG4gIHdpZHRoOiAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcm9ncmVzcy1iYXItY29sb3IpO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgbGVmdDogMDtcXG4gIHRvcDogMDtcXG4gIHRyYW5zaXRpb246IHdpZHRoIDIwMG1zO1xcbn1cXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgcGFkZGluZy1sZWZ0OiAyNXB4O1xcbn1cXG5AbWVkaWEgKG1heC13aWR0aDogNjEwcHgpIHtcXG4gICNndWVzc1R5cGUtbXVsdGkge1xcbiAgICBjb2x1bW4tY291bnQ6IDE7XFxuICB9XFxufVxcbiNzdHJlYWstY29udGFpbmVyLFxcbiNzdWItc3RyZWFrIHtcXG4gIGNvbG9yOiAjZmY4MDAwO1xcbn1cXG4jc3ViLXF1aXotc2NvcmUge1xcbiAgY29sb3I6ICMwZDgwYmQ7XFxufVxcbi5jYXBpdGFsaXplIHtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcbn1cXG4jZGlmZmljdWx0eS1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgcmlnaHQ6IDA7XFxuICBib3R0b206IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBwYWRkaW5nOiA2cHg7XFxufVxcbi5jb3JuZXItaXRlbSB7XFxuICBtYXJnaW46IDVweDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuI2dhbWUtaW5mbyB7XFxuICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbiAgYm90dG9tOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICBmb250LXNpemU6IDEycHg7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIG1hcmdpbjogNXB4O1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG4uc3BhY2VyIHtcXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcbiN2aWV3LWZsYWctYnRuIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMC44NSk7XFxufVxcbmZpZWxkc2V0LnN1YnNldCB7XFxuICBtYXJnaW4tdG9wOiA4cHg7XFxufVxcbiN0eXBpbmctaW5wdXQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBvdXRsaW5lOiBzb2xpZCAxcHggdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcik7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICBmb250LXNpemU6IDEuNXJlbTtcXG59XFxuI3R5cGluZy1pbnB1dDpmb2N1cyB7XFxuICBvdXRsaW5lOiB2YXIoLS1vcHRpb24tYm9yZGVyLWNvbG9yKSAycHggc29saWQ7XFxuICBib3JkZXI6IG5vbmU7XFxuICB0cmFuc2l0aW9uOiBvdXRsaW5lLWNvbG9yIDMwMG1zO1xcbn1cXG4jdHlwaW5nLWlucHV0LmNvcnJlY3Qge1xcbiAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1jb3JyZWN0LW91dGxpbmUpIDJweCBzb2xpZDtcXG59XFxuI3R5cGluZy1pbnB1dC5pbmNvcnJlY3Qge1xcbiAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZSkgMnB4IHNvbGlkO1xcbn1cXG4jY29ycmVjdC10ZXh0IHtcXG4gIGNvbG9yOiB2YXIoLS10ZXh0LWlucHV0LWluY29ycmVjdC1vdXRsaW5lKTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLXRvcDogNXB4O1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcbiNjb3JyZWN0LXRleHQgLnZhbHVlIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvaW5kZXgubGVzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlcy9wb3B1cC5sZXNzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2J1dHRvbnMubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQTtFQUVJLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSw4QkFBQTtFQUNBLDZCQUFBO0VBQ0EsMEJBQUE7RUFDQSxxQkFBQTtFQUNBLCtCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0EscUNBQUE7RUFDQSx1Q0FBQTtBQUhKO0FDYkE7RUFDSSxlQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxxQ0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FEZUo7QUNaQTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFBUSxPQUFBO0VBQVMsU0FBQTtFQUFXLFFBQUE7RUFDNUIsV0FBQTtFQUNBLGFBQUE7RUFDQSwyQkFBQTtFQUNBLGdCQUFBO0FEaUJKO0FDYkE7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQ0FBQTtBRGVKO0FDWEE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsK0JBQUE7RUFDQSxtREFBQTtBRGFKO0FDVkE7RUFDSSxZQUFBO0VBQ0EsMkJBQUE7RUFDQSxVQUFBO0FEWUo7QUNUQTtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQ0FBQTtFQUNBLGVBQUE7RUFDQSxVQUFBO0FEV0o7QUNSQTtFQUNJLGFBQUE7QURVSjtBQ1BBO0VBQ0ksV0FBQTtBRFNKO0FFakVBO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0FGbUVKO0FFbEVJO0VBQ0kseUJBQUE7QUZvRVI7QUVoRUE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUZrRUo7QUVqRUk7RUFDSSx5QkFBQTtBRm1FUjtBRS9EQTtFQUNJLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUZpRUo7QUU5REE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUZnRUo7QUUvREk7RUFDSSx5QkFBQTtBRmlFUjtBRTdEQTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtBRitESjtBRTlESTtFQUNJLHlCQUFBO0FGZ0VSO0FFNURBO0VBQ0ksdUNBQUE7RUFDQSx3QkFBQTtBRjhESjtBRTdESTtFQUNJLHVDQUFBO0FGK0RSO0FFM0RBO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0FGNkRKO0FFNURJO0VBQ0kseUJBQUE7QUY4RFI7QUFoR0E7RUFDSSxnQkFBQTtFQUNBLHdCQUFBO0FBa0dKO0FBL0ZBO0VBQ0ksd0JBQUE7QUFpR0o7QUEvRkE7RUFDSSx3QkFBQTtBQWlHSjtBQTlGQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLGtCQUFBO0FBZ0dKO0FBN0ZBO0VBQ0ksbUJBQUE7QUErRko7QUE1RkE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtBQThGSjtBQTNGQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsT0FBQTtBQTZGSjtBQTFGQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxNQUFBO0VBQ0EsUUFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBQTRGSjtBQXpGQTtFQUNJLFdBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsNEJBQUE7RUFDQSw0Q0FBQTtFQUNBLGtDQUFBO0VBQ0Esd0JBQUE7QUEyRko7QUExRkk7RUFDSSx3Q0FBQTtBQTRGUjtBQXhGQTtFQUNJLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0Esd0NBQUE7QUEwRko7QUF4RkE7RUFDSSxTQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsMkNBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsdUJBQUE7QUEwRko7QUF4RkE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0FBMEZKO0FBdkZBO0VBQ0c7SUFDQyxlQUFBO0VBeUZGO0FBQ0Y7QUF0RkE7O0VBQ0ksY0FBQTtBQXlGSjtBQXZGQTtFQUNJLGNBQUE7QUF5Rko7QUF2RkE7RUFDSSwwQkFBQTtBQXlGSjtBQXJGQTtFQUNJLGVBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLDJCQUFBO0VBQ0EsWUFBQTtBQXVGSjtBQXBGQTtFQUNJLFdBQUE7RUFDQSxlQUFBO0FBc0ZKO0FBbkZBO0VBQ0ksa0NBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBVkEsV0FBQTtFQUNBLGVBQUE7QUFnR0o7QUFuRkE7RUFDSSxtQkFBQTtBQXFGSjtBQWxGQTtFQUNJLGVBQUE7RUFDQSxzQkFBQTtBQW9GSjtBQWpGQTtFQUNJLGVBQUE7QUFtRko7QUFoRkE7RUFDSSw2QkFBQTtFQUNBLDZDQUFBO0VBQ0EsWUFBQTtFQUNBLHdCQUFBO0VBQ0EsaUJBQUE7QUFrRko7QUFoRkE7RUFDSSw2Q0FBQTtFQUNBLFlBQUE7RUFDQSwrQkFBQTtBQWtGSjtBQWhGQTtFQUNJLG9EQUFBO0FBa0ZKO0FBaEZBO0VBQ0ksc0RBQUE7QUFrRko7QUFoRkE7RUFDSSwwQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQWtGSjtBQXZGQTtFQU9RLG1CQUFBO0FBbUZSXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8vIFN0eWxlcyBhcmUgdXNlZCBvbmx5IGZvciBpbmRleC5odG1sLCBzZWUgZ2xvYmFsLmNzcyBmb3IgZ2xvYmFsIHN0eWxlcyBsaWtlIGJhY2tncm91bmQgY29sb3IgYW5kIGZvbnRzXFxuXFxuLy8gWWVzIEknbSB1c2luZyBsZXNzLmNzcyBhbmQgbGVzcy5jc3MgdmFyaWFibGVzIGFyZSBiZXR0ZXIsIGJ1dCB0aGVzZSBuZWVkIHRvIGJlIGNoYW5nZWQgd2l0aCBqYXZhc2NyaXB0XFxuOnJvb3Qge1xcbiAgICAvLyBiZyB2YXJpYWJsZSBpcyBhZGRlZCBpbiBnbG9iYWwuY3NzXFxuICAgIC0tb3B0aW9uLWJnOiAjZTllOWVkO1xcbiAgICAtLW9wdGlvbi1ob3Zlci1iZzogcmdiKDIxMywgMjExLCAyMTEpO1xcbiAgICAtLW9wdGlvbi1ib3JkZXItY29sb3I6ICNjNGM0YzU7XFxuICAgIC0tcHJvZ3Jlc3MtYmFyLWNvbG9yOiAjMGQ4MGJkO1xcbiAgICAtLXByb2dyZXNzLWJhci1iZzogI2M2YzZjNjtcXG4gICAgLS10ZXh0LWNvbG9yOiAjMDAwMDAwO1xcbiAgICAtLXNlY29uZGFyeS10ZXh0LWNvbG9yOiByZ2IoOTcsIDk3LCA5Nyk7XFxuICAgIC0tbGluay1jb2xvcjogIzJlMmVmMTtcXG4gICAgLS1ncmF5LWJ0bi1jb2xvcjogcmdiKDIxMiwgMjEyLCAyMTIpO1xcbiAgICAtLWdyYXktYnRuLWhvdmVyOiByZ2IoMTk3LCAxOTYsIDE5Nik7XFxuICAgIC0tdGV4dC1pbnB1dC1jb3JyZWN0LW91dGxpbmU6ICMxY2RhMWY7XFxuICAgIC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZTogI2U1MDgwODtcXG59XFxuXFxuQGltcG9ydCB1cmwoJ3BvcHVwLmxlc3MnKTtcXG5AaW1wb3J0IHVybCgnYnV0dG9ucy5sZXNzJyk7XFxuXFxuYm9keSB7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuYSB7XFxuICAgIGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTtcXG59XFxuYTp2aXNpdGVkIHtcXG4gICAgY29sb3I6IHZhcigtLWxpbmstY29sb3IpO1xcbn1cXG5cXG4uc2NyZWVuIHtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnBsYXkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG4jZmxhZy1zdmcge1xcbiAgICBoZWlnaHQ6IDIwdnc7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxufVxcblxcbiNndWVzc1R5cGUtbXVsdGkge1xcbiAgICBjb2x1bW4tY291bnQ6IDI7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgbGVmdDogMDtcXG59XFxuXFxuI2Nsb3NlLWJ0biB7XFxuICAgIHdpZHRoOiA0M3B4O1xcbiAgICBoZWlnaHQ6IDQzcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBtYXJnaW46IDVweDtcXG4gICAgbWFyZ2luLXRvcDogMHB4O1xcbn1cXG5cXG4ub3B0aW9uIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGRpc3BsYXk6IGlubGluZTtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbiAgICBoZWlnaHQ6IDUwcHg7XFxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMzAwbXM7XFxuICAgIGJvcmRlcjogdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcikgMXB4IHNvbGlkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1vcHRpb24tYmcpO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3B0aW9uLWhvdmVyLWJnKTtcXG4gICAgfVxcbn1cXG5cXG4jcHJvZ3Jlc3MtY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDg1cHgpO1xcbiAgICBoZWlnaHQ6IDE1cHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgbWFyZ2luLWlubGluZTogMjVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWJnKTtcXG59XFxuI3Byb2dyZXNzLWZpbGwge1xcbiAgICB3aWR0aDogMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWNvbG9yKTtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHRyYW5zaXRpb246IHdpZHRoIDIwMG1zO1xcbn1cXG51bCB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcXG59XFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDYxMHB4KSB7XFxuICAgI2d1ZXNzVHlwZS1tdWx0aSB7XFxuICAgIGNvbHVtbi1jb3VudDogMTtcXG4gICB9XFxufVxcblxcbiNzdHJlYWstY29udGFpbmVyLCAjc3ViLXN0cmVhayB7XFxuICAgIGNvbG9yOiByZ2IoMjU1LCAxMjgsIDApO1xcbn1cXG4jc3ViLXF1aXotc2NvcmUge1xcbiAgICBjb2xvcjogcmdiKDEzLCAxMjgsIDE4OSk7XFxufVxcbi5jYXBpdGFsaXplIHtcXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxufVxcblxcbi8vIERpZmZpY3VsdHkgZGlzcGxheVxcbiNkaWZmaWN1bHR5LWNvbnRhaW5lciB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgICBwYWRkaW5nOiA2cHg7XFxufVxcblxcbi5jb3JuZXItaXRlbSB7XFxuICAgIG1hcmdpbjogNXB4O1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxufVxcblxcbiNnYW1lLWluZm8ge1xcbiAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbiAgICBib3R0b206IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICAgIC5jb3JuZXItaXRlbSgpXFxufVxcblxcbi5zcGFjZXIge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG4jdmlldy1mbGFnLWJ0biB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjg1KTtcXG59XFxuXFxuZmllbGRzZXQuc3Vic2V0IHtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbn1cXG5cXG4jdHlwaW5nLWlucHV0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIG91dGxpbmU6IHNvbGlkIDFweCB2YXIoLS1vcHRpb24tYm9yZGVyLWNvbG9yKTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbn1cXG4jdHlwaW5nLWlucHV0OmZvY3VzIHtcXG4gICAgb3V0bGluZTogdmFyKC0tb3B0aW9uLWJvcmRlci1jb2xvcikgMnB4IHNvbGlkO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IG91dGxpbmUtY29sb3IgMzAwbXM7XFxufVxcbiN0eXBpbmctaW5wdXQuY29ycmVjdCB7XFxuICAgIG91dGxpbmU6IHZhcigtLXRleHQtaW5wdXQtY29ycmVjdC1vdXRsaW5lKSAycHggc29saWQ7XFxufVxcbiN0eXBpbmctaW5wdXQuaW5jb3JyZWN0IHtcXG4gICAgb3V0bGluZTogdmFyKC0tdGV4dC1pbnB1dC1pbmNvcnJlY3Qtb3V0bGluZSkgMnB4IHNvbGlkO1xcbn1cXG4jY29ycmVjdC10ZXh0IHtcXG4gICAgY29sb3I6IHZhcigtLXRleHQtaW5wdXQtaW5jb3JyZWN0LW91dGxpbmUpO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAudmFsdWUge1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG4gICAgfVxcbn1cIixcIi5wb3B1cC1iYWNrZHJvcCB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjUpO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbi5wb3B1cC1jb250YWluZXIge1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwOyBsZWZ0OiAwOyBib3R0b206IDA7IHJpZ2h0OiAwO1xcbiAgICB3aWR0aDogMzV2dztcXG4gICAgaGVpZ2h0OiAzMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmcpO1xcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xcbn1cXG5cXG5AeFNpemU6IDE4cHg7XFxuLnBvcHVwLWNsb3NlIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogQHhTaXplO1xcbiAgICBoZWlnaHQ6IEB4U2l6ZTtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICAgIG1hcmdpbjogNHB4O1xcbiAgICBwYWRkaW5nOiAwcHg7XFxuICAgIG1pbi13aWR0aDogMHB4O1xcbiAgICBmb250LXNpemU6IEB4U2l6ZTtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuQGhlYWRlci1oZWlnaHQ6IDIwcHg7XFxuLnBvcHVwLXRpdGxlIHtcXG4gICAgZm9udC1zaXplOiBAaGVhZGVyLWhlaWdodDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgcGFkZGluZy1yaWdodDogY2FsYyhAeFNpemUgKyA2cHgpO1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjY3Myk7XFxufVxcblxcbi5wb3B1cC1oZWFkZXIge1xcbiAgICBoZWlnaHQ6IEBoZWFkZXItaGVpZ2h0O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iZyk7XFxuICAgIHotaW5kZXg6IDI7XFxufVxcblxcbi5wb3B1cC1jb250ZW50IHtcXG4gICAgcGFkZGluZy1pbmxpbmU6IDZweDtcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXG4gICAgaGVpZ2h0OiBjYWxjKGNhbGMoMTAwJSAtIEBoZWFkZXItaGVpZ2h0KSAtIDlweCk7XFxuICAgIG1hcmdpbi10b3A6IDlweDtcXG4gICAgei1pbmRleDogMTtcXG59XFxuXFxuLnBvcHVwLWNvbnRlbnQgPiB1bD4gbGk6Om1hcmtlciB7XFxuICAgIGNvbnRlbnQ6ICfimJ4gJztcXG59XFxuXFxuLnZpZXctZmxhZy1pbWcge1xcbiAgICB3aWR0aDogMTAwJTtcXG59XCIsXCJAYmx1ZUJnOiByZ2IoMTAwLCAxMDAsIDIzOSk7XFxuQGdyZWVuQmc6IHJnYig3LCAxODcsIDcpO1xcbkByZWRCZzogcmdiKDIzMCwgOCwgOCk7XFxuQHllbGxvd0JnOiByZ2IoMjQ1LCAyMzUsIDU2KTtcXG5AcHVycGxlQmc6IHJnYigxNjgsIDI4LCAyMTUpO1xcblxcbi5idG4tYmx1ZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IEBibHVlQmc7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgJjpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNzgsIDc4LCAyMjApO1xcbiAgICB9XFxufVxcblxcbi5idG4tZ3JlZW4ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAZ3JlZW5CZztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICAmOmhvdmVyIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRlc2F0dXJhdGUoQGdyZWVuQmcsIDIwJSlcXG4gICAgfVxcbn1cXG5cXG4udGhpbiB7XFxuICAgIHBhZGRpbmc6IDRweDtcXG4gICAgcGFkZGluZy1pbmxpbmU6IDdweDtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4uYnRuLXJlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IEByZWRCZztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICAmOmhvdmVyIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRlc2F0dXJhdGUoQHJlZEJnLCAyMCUpO1xcbiAgICB9XFxufVxcblxcbi5idG4teWVsbG93IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHllbGxvd0JnO1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNCwgMjI1LCA1Nik7XFxuICAgIH1cXG59XFxuXFxuLmJ0bi1ncmF5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheS1idG4tY29sb3IpO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheS1idG4taG92ZXIpO1xcbiAgICB9XFxufVxcblxcbi5idG4tcHVycGxlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQHB1cnBsZUJnO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgICY6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGVzYXR1cmF0ZShAcHVycGxlQmcsIDIwJSk7XFxuICAgIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKlxuKiBOb3RpZmxpeCBDb25maXJtIEFJTyAoaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8pXG4qIERlc2NyaXB0aW9uOiBUaGlzIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBhdXRvbWF0aWNhbGx5IHRoYXQgdXNpbmcgXCJub3RpZmxpeC5qc1wiLCBhbmQgXCJub3RpZmxpeC5jc3NcIiBmaWxlcy5cbiogVmVyc2lvbjogMy4yLjVcbiogQXV0aG9yOiBGdXJrYW4gTVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9mdXJjYW4pXG4qIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKVxuKi9cblxuLyogZ2xvYmFsIGRlZmluZSAqL1xuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KHJvb3QpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnkocm9vdCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5Ob3RpZmxpeCA9IGZhY3Rvcnkocm9vdCk7XG4gIH1cbn0pKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiAod2luZG93KSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBiZWdpblxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBlbmRcblxuICAvLyBDT01NT046IFZhcmlhYmxlczogYmVnaW5cbiAgdmFyIG5vdGlmbGl4TmFtZXNwYWNlID0gJ05vdGlmbGl4JztcclxuICB2YXIgbm90aWZsaXhDb25zb2xlRG9jcyA9ICdcXG5cXG5WaXNpdCBkb2N1bWVudGF0aW9uIHBhZ2UgdG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8vZG9jdW1lbnRhdGlvbic7XHJcbiAgdmFyIGRlZmF1bHRGb250RmFtaWx5ID0gJy1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWYnO1xuICAvLyBDT01NT046IFZhcmlhYmxlczogZW5kXG5cbiAgLy8gQ09ORklSTTogRGVmYXVsdCBTZXR0aW5nczogYmVnaW5cbiAgdmFyIHR5cGVzQ29uZmlybSA9IHtcclxuICAgIFNob3c6ICdTaG93JyxcclxuICAgIEFzazogJ0FzaycsXHJcbiAgICBQcm9tcHQ6ICdQcm9tcHQnLFxyXG4gIH07XHJcbiAgdmFyIG5ld0NvbmZpcm1TZXR0aW5ncztcclxuICB2YXIgY29uZmlybVNldHRpbmdzID0ge1xyXG4gICAgSUQ6ICdOb3RpZmxpeENvbmZpcm1XcmFwJywgLy8gY2FuIG5vdCBjdXN0b21pemFibGVcclxuICAgIGNsYXNzTmFtZTogJ25vdGlmbGl4LWNvbmZpcm0nLFxyXG4gICAgd2lkdGg6ICczMDBweCcsXHJcbiAgICB6aW5kZXg6IDQwMDMsXHJcbiAgICBwb3NpdGlvbjogJ2NlbnRlcicsIC8vICdjZW50ZXInIC0gJ2NlbnRlci10b3AnIC0gJ2NlbnRlci1ib3R0b20nIC0gJ3JpZ2h0LXRvcCcgLSAncmlnaHQtY2VudGVyJyAtICdyaWdodC1ib3R0b20nIC0gJ2xlZnQtdG9wJyAtICdsZWZ0LWNlbnRlcicgLSAnbGVmdC1ib3R0b20nXHJcbiAgICBkaXN0YW5jZTogJzEwcHgnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2Y4ZjhmOCcsXHJcbiAgICBib3JkZXJSYWRpdXM6ICcyNXB4JyxcclxuICAgIGJhY2tPdmVybGF5OiB0cnVlLFxyXG4gICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMCwwLDAsMC41KScsXHJcbiAgICBydGw6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBjc3NBbmltYXRpb246IHRydWUsXHJcbiAgICBjc3NBbmltYXRpb25EdXJhdGlvbjogMzAwLFxyXG4gICAgY3NzQW5pbWF0aW9uU3R5bGU6ICdmYWRlJywgLy8gJ3pvb20nIC0gJ2ZhZGUnXHJcbiAgICBwbGFpblRleHQ6IHRydWUsXHJcblxuICAgIHRpdGxlQ29sb3I6ICcjMzJjNjgyJyxcclxuICAgIHRpdGxlRm9udFNpemU6ICcxNnB4JyxcclxuICAgIHRpdGxlTWF4TGVuZ3RoOiAzNCxcclxuXG4gICAgbWVzc2FnZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICBtZXNzYWdlRm9udFNpemU6ICcxNHB4JyxcclxuICAgIG1lc3NhZ2VNYXhMZW5ndGg6IDExMCxcclxuXG4gICAgYnV0dG9uc0ZvbnRTaXplOiAnMTVweCcsXHJcbiAgICBidXR0b25zTWF4TGVuZ3RoOiAzNCxcclxuICAgIG9rQnV0dG9uQ29sb3I6ICcjZjhmOGY4JyxcclxuICAgIG9rQnV0dG9uQmFja2dyb3VuZDogJyMzMmM2ODInLFxyXG4gICAgY2FuY2VsQnV0dG9uQ29sb3I6ICcjZjhmOGY4JyxcclxuICAgIGNhbmNlbEJ1dHRvbkJhY2tncm91bmQ6ICcjYTlhOWE5JyxcclxuICB9O1xuICAvLyBDT05GSVJNOiBEZWZhdWx0IFNldHRpbmdzOiBlbmRcblxuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGJlZ2luXG4gIHZhciBjb21tb25Db25zb2xlRXJyb3IgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJyVjICcgKyBub3RpZmxpeE5hbWVzcGFjZSArICcgRXJyb3IgJywgJ3BhZGRpbmc6MnB4O2JvcmRlci1yYWRpdXM6MjBweDtjb2xvcjojZmZmO2JhY2tncm91bmQ6I2ZmNTU0OScsICdcXG4nICsgbWVzc2FnZSArIG5vdGlmbGl4Q29uc29sZURvY3MpO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ29uc29sZSBFcnJvcjogZW5kXG5cbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGJlZ2luXG4gIHZhciBjb21tb25DaGVja0hlYWRPckJvZHkgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgaWYgKCFlbGVtZW50KSB7IGVsZW1lbnQgPSAnaGVhZCc7IH1cclxuICAgIGlmICh3aW5kb3cuZG9jdW1lbnRbZWxlbWVudF0gPT09IG51bGwpIHtcclxuICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQsIGJ1dCB5b3UgY2FsbGVkIGl0IGJlZm9yZSB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQgaGFzIGJlZW4gY3JlYXRlZC4nKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGVuZFxuXG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGNvbW1vblNldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoZ2V0SW50ZXJuYWxDU1NDb2Rlcywgc3R5bGVFbGVtZW50SWQpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBoZWFkXHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnaGVhZCcpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpbnRlcm5hbCBjc3NcclxuICAgIGlmIChnZXRJbnRlcm5hbENTU0NvZGVzKCkgIT09IG51bGwgJiYgIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdHlsZUVsZW1lbnRJZCkpIHtcclxuICAgICAgdmFyIGludGVybmFsQ1NTID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgIGludGVybmFsQ1NTLmlkID0gc3R5bGVFbGVtZW50SWQ7XHJcbiAgICAgIGludGVybmFsQ1NTLmlubmVySFRNTCA9IGdldEludGVybmFsQ1NTQ29kZXMoKTtcclxuICAgICAgd2luZG93LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoaW50ZXJuYWxDU1MpO1xyXG4gICAgfVxyXG4gIH07XG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09NTU9OOiBFeHRlbmQgT3B0aW9uczogYmVnaW5cbiAgdmFyIGNvbW1vbkV4dGVuZE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyB2YXJpYWJsZXNcclxuICAgIHZhciBleHRlbmRlZCA9IHt9O1xyXG4gICAgdmFyIGRlZXAgPSBmYWxzZTtcclxuICAgIHZhciBpID0gMDtcclxuICAgIC8vIGNoZWNrIGlmIGEgZGVlcCBtZXJnZVxyXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHNbMF0pID09PSAnW29iamVjdCBCb29sZWFuXScpIHtcclxuICAgICAgZGVlcCA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgaSsrO1xyXG4gICAgfVxyXG4gICAgLy8gbWVyZ2UgdGhlIG9iamVjdCBpbnRvIHRoZSBleHRlbmRlZCBvYmplY3RcclxuICAgIHZhciBtZXJnZSA9IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIHtcclxuICAgICAgICAgIC8vIGlmIHByb3BlcnR5IGlzIGFuIG9iamVjdCwgbWVyZ2UgcHJvcGVydGllc1xyXG4gICAgICAgICAgaWYgKGRlZXAgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9ialtwcm9wXSkgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gY29tbW9uRXh0ZW5kT3B0aW9ucyhleHRlbmRlZFtwcm9wXSwgb2JqW3Byb3BdKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gb2JqW3Byb3BdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIG9iamVjdCBhbmQgY29uZHVjdCBhIG1lcmdlXHJcbiAgICBmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBtZXJnZShhcmd1bWVudHNbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGV4dGVuZGVkO1xyXG4gIH07XG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGVuZFxuXG4gIC8vIENPTU1PTjogR2V0IFBsYWludGV4dDogYmVnaW5cbiAgdmFyIGNvbW1vbkdldFBsYWludGV4dCA9IGZ1bmN0aW9uIChodG1sKSB7XHJcbiAgICB2YXIgaHRtbFBvb2wgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBodG1sUG9vbC5pbm5lckhUTUwgPSBodG1sO1xyXG4gICAgcmV0dXJuIGh0bWxQb29sLnRleHRDb250ZW50IHx8IGh0bWxQb29sLmlubmVyVGV4dCB8fCAnJztcclxuICB9O1xuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGVuZFxuXG4gIC8vIENPTkZJUk06IEdldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGJlZ2luXG4gIHZhciBjb25maXJtR2V0SW50ZXJuYWxDU1NDb2RlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBjb25maXJtQ1NTID0gJ1tpZF49Tm90aWZsaXhDb25maXJtV3JhcF17cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo0MDAzO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO3BhZGRpbmc6MTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtmb250LWZhbWlseTpcIlF1aWNrc2FuZFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLHNhbnMtc2VyaWY7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWNlbnRlci10b3B7LXdlYmtpdC1ib3gtcGFjazpzdGFydDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1jZW50ZXItYm90dG9tey13ZWJraXQtYm94LXBhY2s6ZW5kOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtZW5kOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWxlZnQtdG9wey13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tbGVmdC1jZW50ZXJ7LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1sZWZ0LWJvdHRvbXstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1wYWNrOmVuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWVuZDstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1yaWdodC10b3B7LXdlYmtpdC1ib3gtYWxpZ246ZW5kOy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1lbmQ7LW1zLWZsZXgtYWxpZ246ZW5kO2FsaWduLWl0ZW1zOmZsZXgtZW5kOy13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tcmlnaHQtY2VudGVyey13ZWJraXQtYm94LWFsaWduOmVuZDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtZW5kOy1tcy1mbGV4LWFsaWduOmVuZDthbGlnbi1pdGVtczpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLXJpZ2h0LWJvdHRvbXstd2Via2l0LWJveC1hbGlnbjplbmQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LWVuZDstbXMtZmxleC1hbGlnbjplbmQ7YWxpZ24taXRlbXM6ZmxleC1lbmQ7LXdlYmtpdC1ib3gtcGFjazplbmQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0gKnstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl17d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC41KTtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjB9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1vdmVybGF5LWFuaW1hdGlvbiAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJde3dpZHRoOjMwMHB4O21heC13aWR0aDoxMDAlO21heC1oZWlnaHQ6OTZ2aDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG87Ym9yZGVyLXJhZGl1czoyNXB4O3BhZGRpbmc6MTBweDttYXJnaW46MDstd2Via2l0LWZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwwLDAsMC4wNSkpO2ZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwgMCwgMCwgLjA1KSk7YmFja2dyb3VuZDojZjhmOGY4O2NvbG9yOiMxZTFlMWU7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10aHVtYntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5oNXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjA7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtjb2xvcjojMzJjNjgyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDo1MDA7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXZ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7bWFyZ2luOjE1cHggMCAyMHB4O3BhZGRpbmc6MCAxMHB4O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoxLjQ7Zm9udC13ZWlnaHQ6bm9ybWFsO2NvbG9yOmluaGVyaXQ7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTttYXJnaW46MTVweCAwIDA7cGFkZGluZzowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2PmlucHV0e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtoZWlnaHQ6NDBweDttYXJnaW46MDtwYWRkaW5nOjAgMTVweDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6MjVweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MTstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RleHQtYWxpZ246bGVmdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1oZWFkXCJdPmRpdj5kaXY+aW5wdXR7dGV4dC1hbGlnbjpyaWdodH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWhlYWRcIl0+ZGl2PmRpdj5pbnB1dDpob3Zlcntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMSl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1oZWFkXCJdPmRpdj5kaXY+aW5wdXQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjMpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItaGVhZFwiXT5kaXY+ZGl2PmlucHV0Lm54LXZhbGlkYXRpb24tZmFpbHVyZXtib3JkZXItY29sb3I6I2ZmNTU0OX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWhlYWRcIl0+ZGl2PmRpdj5pbnB1dC5ueC12YWxpZGF0aW9uLXN1Y2Nlc3N7Ym9yZGVyLWNvbG9yOiMzMmM2ODJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtib3JkZXItcmFkaXVzOmluaGVyaXQ7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YXtjdXJzb3I6cG9pbnRlcjtmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O2Zsb2F0OmxlZnQ7d2lkdGg6NDglO3BhZGRpbmc6OXB4IDVweDtib3JkZXItcmFkaXVzOmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoxLjQ7Y29sb3I6I2Y4ZjhmODt0ZXh0LWFsaWduOmluaGVyaXR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmEubngtY29uZmlybS1idXR0b24tb2t7bWFyZ2luOjAgMiUgMCAwO2JhY2tncm91bmQ6IzMyYzY4Mn1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YS5ueC1jb25maXJtLWJ1dHRvbi1jYW5jZWx7bWFyZ2luOjAgMCAwIDIlO2JhY2tncm91bmQ6I2E5YTlhOX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXT5kaXZbY2xhc3MqPVwiLWJ1dHRvbnNcIl0+YS5ueC1mdWxse21hcmdpbjowO3dpZHRoOjEwMCV9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmE6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpO2JveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1ydGwtb24+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyo9XCItYnV0dG9uc1wiXSxbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzKj1cIi1idXR0b25zXCJdPmF7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyl9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRlPmRpdltjbGFzcyo9XCItY29udGVudFwiXXstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl17LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi16b29tezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNSk7dHJhbnNmb3JtOnNjYWxlKC41KX01MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZS5ueC1yZW1vdmU+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJde29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb20ubngtcmVtb3ZlPmRpdltjbGFzcyo9XCItY29udGVudFwiXXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmV7MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7b3BhY2l0eTouNTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19JztcclxuICAgIHJldHVybiBjb25maXJtQ1NTIHx8IG51bGw7XHJcbiAgfTtcbiAgLy8gQ09ORklSTTogR2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09ORklSTTogQ3JlYXRlOiBiZWdpblxuICB2YXIgY29uZmlybUNyZWF0ZSA9IGZ1bmN0aW9uIChjb25maXJtVHlwZSwgdGl0bGUsIG1lc3NhZ2VPclF1ZXN0aW9uLCBhbnN3ZXIsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBib2R5XHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnYm9keScpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpZiBub3QgaW5pdGlhbGl6ZWQgcHJldGVuZCBsaWtlIGluaXRcclxuICAgIGlmICghbmV3Q29uZmlybVNldHRpbmdzKSB7XHJcbiAgICAgIE5vdGlmbGl4LkNvbmZpcm0uaW5pdCh7fSk7XHJcbiAgICB9XHJcblxuICAgIC8vIGNyZWF0ZSBhIGJhY2t1cCBmb3IgbmV3IHNldHRpbmdzXHJcbiAgICB2YXIgbmV3Q29uZmlybVNldHRpbmdzQmFja3VwID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdDb25maXJtU2V0dGluZ3MsIHt9KTtcclxuXG4gICAgLy8gY2hlY2sgdGhlIFwib3B0aW9uc1wiOiBiZWdpblxyXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xyXG4gICAgICAvLyBleHRlbmQgbmV3IHNldHRpbmdzIHdpdGggdGhlIG5ldyBvcHRpb25zXHJcbiAgICAgIG5ld0NvbmZpcm1TZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3Q29uZmlybVNldHRpbmdzLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8vIGNoZWNrIHRoZSBcIm9wdGlvbnNcIjogZW5kXHJcblxuICAgIC8vIGNoZWNrIHRoZSBhcmd1bWVudHM6IGJlZ2luXHJcbiAgICBpZiAodHlwZW9mIHRpdGxlICE9PSAnc3RyaW5nJykgeyB0aXRsZSA9ICdOb3RpZmxpeCBDb25maXJtJzsgfVxyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlT3JRdWVzdGlvbiAhPT0gJ3N0cmluZycpIHsgbWVzc2FnZU9yUXVlc3Rpb24gPSAnRG8geW91IGFncmVlIHdpdGggbWU/JzsgfVxyXG4gICAgaWYgKHR5cGVvZiBva0J1dHRvblRleHQgIT09ICdzdHJpbmcnKSB7IG9rQnV0dG9uVGV4dCA9ICdZZXMnOyB9XHJcbiAgICBpZiAodHlwZW9mIGNhbmNlbEJ1dHRvblRleHQgIT09ICdzdHJpbmcnKSB7IGNhbmNlbEJ1dHRvblRleHQgPSAnTm8nOyB9XHJcbiAgICBpZiAodHlwZW9mIG9rQnV0dG9uQ2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHsgb2tCdXR0b25DYWxsYmFjayA9IHVuZGVmaW5lZDsgfVxyXG4gICAgaWYgKHR5cGVvZiBjYW5jZWxCdXR0b25DYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykgeyBjYW5jZWxCdXR0b25DYWxsYmFjayA9IHVuZGVmaW5lZDsgfVxyXG4gICAgLy8gY2hlY2sgdGhlIGFyZ3VtZW50czogZW5kXHJcblxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyB0cnVlID0+IEhUTUwgdGFncyBub3QgYWxsb3dlZDogYmVnaW5cclxuICAgIGlmIChuZXdDb25maXJtU2V0dGluZ3MucGxhaW5UZXh0KSB7XHJcbiAgICAgIHRpdGxlID0gY29tbW9uR2V0UGxhaW50ZXh0KHRpdGxlKTtcclxuICAgICAgbWVzc2FnZU9yUXVlc3Rpb24gPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZU9yUXVlc3Rpb24pO1xyXG4gICAgICBva0J1dHRvblRleHQgPSBjb21tb25HZXRQbGFpbnRleHQob2tCdXR0b25UZXh0KTtcclxuICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9IGNvbW1vbkdldFBsYWludGV4dChjYW5jZWxCdXR0b25UZXh0KTtcclxuICAgIH1cclxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyB0cnVlID0+IEhUTUwgdGFncyBub3QgYWxsb3dlZDogZW5kXHJcblxuICAgIC8vIGlmIHBsYWluVGV4dCBpcyBmYWxzZSBidXQgdGhlIGNvbnRlbnRzIGxlbmd0aCBtb3JlIHRoYW4gKioqTWF4TGVuZ3RoID0+IFBvc3NpYmxlIEhUTUwgdGFncyBlcnJvcjogYmVnaW5cclxuICAgIGlmICghbmV3Q29uZmlybVNldHRpbmdzLnBsYWluVGV4dCkge1xyXG4gICAgICBpZiAodGl0bGUubGVuZ3RoID4gbmV3Q29uZmlybVNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlT3JRdWVzdGlvbiA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgdGl0bGUgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFwidGl0bGVNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBva0J1dHRvblRleHQgPSAnT2theSc7XHJcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9ICcuLi4nO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChtZXNzYWdlT3JRdWVzdGlvbi5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MubWVzc2FnZU1heExlbmd0aCkge1xyXG4gICAgICAgIHRpdGxlID0gJ1Bvc3NpYmxlIEhUTUwgVGFncyBFcnJvcic7XHJcbiAgICAgICAgbWVzc2FnZU9yUXVlc3Rpb24gPSAnVGhlIFwicGxhaW5UZXh0XCIgb3B0aW9uIGlzIFwiZmFsc2VcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFwibWVzc2FnZU1heExlbmd0aFwiIG9wdGlvbi4nO1xyXG4gICAgICAgIG9rQnV0dG9uVGV4dCA9ICdPa2F5JztcclxuICAgICAgICBjYW5jZWxCdXR0b25UZXh0ID0gJy4uLic7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKChva0J1dHRvblRleHQubGVuZ3RoIHx8IGNhbmNlbEJ1dHRvblRleHQubGVuZ3RoKSA+IG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlT3JRdWVzdGlvbiA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgYnV0dG9ucyBjb250ZW50IGxlbmd0aCBpcyBtb3JlIHRoYW4gXCJidXR0b25zTWF4TGVuZ3RoXCIgb3B0aW9uLic7XHJcbiAgICAgICAgb2tCdXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICAgIGNhbmNlbEJ1dHRvblRleHQgPSAnLi4uJztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gaWYgcGxhaW5UZXh0IGlzIGZhbHNlIGJ1dCB0aGUgY29udGVudHMgbGVuZ3RoIG1vcmUgdGhhbiAqKipNYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBlbmRcclxuXG4gICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgIGlmICh0aXRsZS5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVNYXhMZW5ndGgpIHtcclxuICAgICAgdGl0bGUgPSB0aXRsZS5zdWJzdHJpbmcoMCwgbmV3Q29uZmlybVNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKG1lc3NhZ2VPclF1ZXN0aW9uLmxlbmd0aCA+IG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSB7XHJcbiAgICAgIG1lc3NhZ2VPclF1ZXN0aW9uID0gbWVzc2FnZU9yUXVlc3Rpb24uc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKG9rQnV0dG9uVGV4dC5sZW5ndGggPiBuZXdDb25maXJtU2V0dGluZ3MuYnV0dG9uc01heExlbmd0aCkge1xyXG4gICAgICBva0J1dHRvblRleHQgPSBva0J1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgaWYgKGNhbmNlbEJ1dHRvblRleHQubGVuZ3RoID4gbmV3Q29uZmlybVNldHRpbmdzLmJ1dHRvbnNNYXhMZW5ndGgpIHtcclxuICAgICAgY2FuY2VsQnV0dG9uVGV4dCA9IGNhbmNlbEJ1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld0NvbmZpcm1TZXR0aW5ncy5idXR0b25zTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgfVxyXG4gICAgLy8gbWF4IGxlbmd0aDogZW5kXHJcblxuICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBiZWdpblxyXG4gICAgaWYgKCFuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uKSB7XHJcbiAgICAgIG5ld0NvbmZpcm1TZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbiA9IDA7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBjc3NBbmltYWlvbiBpcyBmYWxzZSA9PiBkdXJhdGlvbjogZW5kXHJcblxuICAgIC8vIGNvbmZpcm0gd3JhcDogYmVnaW5cclxuICAgIHZhciBudGZseENvbmZpcm1XcmFwID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5pZCA9IGNvbmZpcm1TZXR0aW5ncy5JRDtcclxuICAgIG50Zmx4Q29uZmlybVdyYXAuY2xhc3NOYW1lID0gbmV3Q29uZmlybVNldHRpbmdzLmNsYXNzTmFtZSArIChuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbiBueC0nICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvblN0eWxlIDogJycpO1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS56SW5kZXggPSBuZXdDb25maXJtU2V0dGluZ3MuemluZGV4O1xyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS5wYWRkaW5nID0gbmV3Q29uZmlybVNldHRpbmdzLmRpc3RhbmNlO1xyXG5cbiAgICAvLyBydGw6IGJlZ2luXHJcbiAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzLnJ0bCkge1xyXG4gICAgICBudGZseENvbmZpcm1XcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICBudGZseENvbmZpcm1XcmFwLmNsYXNzTGlzdC5hZGQoJ254LXJ0bC1vbicpO1xyXG4gICAgfVxyXG4gICAgLy8gcnRsOiBlbmRcclxuXG4gICAgLy8gcG9zaXRpb246IGJlZ2luXHJcbiAgICB2YXIgY29uZmlybVBvc2l0aW9uID0gdHlwZW9mIG5ld0NvbmZpcm1TZXR0aW5ncy5wb3NpdGlvbiA9PT0gJ3N0cmluZycgPyBuZXdDb25maXJtU2V0dGluZ3MucG9zaXRpb24udHJpbSgpIDogJ2NlbnRlcic7XHJcbiAgICBudGZseENvbmZpcm1XcmFwLmNsYXNzTGlzdC5hZGQoJ254LXBvc2l0aW9uLScgKyBjb25maXJtUG9zaXRpb24pO1xyXG4gICAgLy8gcG9zaXRpb246IGVuZFxyXG5cbiAgICAvLyBmb250LWZhbWlseVxyXG4gICAgbnRmbHhDb25maXJtV3JhcC5zdHlsZS5mb250RmFtaWx5ID0gJ1wiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5mb250RmFtaWx5ICsgJ1wiLCAnICsgZGVmYXVsdEZvbnRGYW1pbHk7XHJcblxuICAgIC8vIGlmIGJhY2tncm91bmQgb3ZlcmxheSBpcyB0cnVlOiBiZWdpblxyXG4gICAgdmFyIGNvbmZpcm1PdmVybGF5ID0gJyc7XHJcbiAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzLmJhY2tPdmVybGF5KSB7XHJcbiAgICAgIGNvbmZpcm1PdmVybGF5ID0gJzxkaXYgY2xhc3M9XCInICsgbmV3Q29uZmlybVNldHRpbmdzLmNsYXNzTmFtZSArICctb3ZlcmxheScgKyAobmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbiA/ICcgbngtd2l0aC1hbmltYXRpb24nIDogJycpICsgJ1wiIHN0eWxlPVwiYmFja2dyb3VuZDonICsgbmV3Q29uZmlybVNldHRpbmdzLmJhY2tPdmVybGF5Q29sb3IgKyAnO2FuaW1hdGlvbi1kdXJhdGlvbjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBiYWNrZ3JvdW5kIG92ZXJsYXkgaXMgdHJ1ZTogZW5kXHJcblxuICAgIC8vIGlmIGhhdmUgYSBjYWxsYmFjayA9PiBhZGQgY2FuY2VsIGJ1dHRvbjogYmVnaW5cclxuICAgIHZhciBjYW5jZWxCdXR0b25IVE1MID0gJyc7XHJcbiAgICBpZiAodHlwZW9mIG9rQnV0dG9uQ2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgY2FuY2VsQnV0dG9uSFRNTCA9ICc8YSBpZD1cIk5YQ29uZmlybUJ1dHRvbkNhbmNlbFwiIGNsYXNzPVwibngtY29uZmlybS1idXR0b24tY2FuY2VsXCIgc3R5bGU9XCJjb2xvcjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNhbmNlbEJ1dHRvbkNvbG9yICsgJztiYWNrZ3JvdW5kOicgKyBuZXdDb25maXJtU2V0dGluZ3MuY2FuY2VsQnV0dG9uQmFja2dyb3VuZCArICc7Zm9udC1zaXplOicgKyBuZXdDb25maXJtU2V0dGluZ3MuYnV0dG9uc0ZvbnRTaXplICsgJztcIj4nICsgY2FuY2VsQnV0dG9uVGV4dCArICc8L2E+JztcclxuICAgIH1cclxuICAgIC8vIGlmIGhhdmUgYSBjYWxsYmFjayA9PiBhZGQgY2FuY2VsIGJ1dHRvbjogZW5kXHJcblxuICAgIC8vIGNoZWNrIHRoZSB2YWxpZGF0aW9uIG1vZHVsZTogYmVnaW5cclxuICAgIHZhciBzZXRWYWxpZGF0aW9uSW5wdXQgPSAnJztcclxuICAgIHZhciB0aGVFeHBlY3RlZEFuc3dlciA9IG51bGw7XHJcbiAgICB2YXIgdGhlQ2xpZW50QW5zd2VyID0gdW5kZWZpbmVkO1xyXG4gICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrIHx8IGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uUHJvbXB0KSB7XHJcbiAgICAgIHRoZUV4cGVjdGVkQW5zd2VyID0gYW5zd2VyIHx8ICcnO1xyXG4gICAgICB2YXIgaW5wdXRNYXhMZW5ndGggPSAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Bc2spID8gTWF0aC5jZWlsKHRoZUV4cGVjdGVkQW5zd2VyLmxlbmd0aCAqIDEuNSkgOiAodGhlRXhwZWN0ZWRBbnN3ZXIubGVuZ3RoID4gMjAwID8gTWF0aC5jZWlsKHRoZUV4cGVjdGVkQW5zd2VyLmxlbmd0aCAqIDEuNSkgOiAyNTApO1xyXG4gICAgICB2YXIgaW5wdXREZWZhdWx0VmFsdWVBdHRyID0gY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Qcm9tcHQgPyAoJ3ZhbHVlPVwiJyArIHRoZUV4cGVjdGVkQW5zd2VyICsgJ1wiJykgOiAnJztcclxuICAgICAgc2V0VmFsaWRhdGlvbklucHV0ID0gJzxkaXY+PGlucHV0IGlkPVwiTlhDb25maXJtVmFsaWRhdGlvbklucHV0XCIgdHlwZT1cInRleHRcIiAnICsgaW5wdXREZWZhdWx0VmFsdWVBdHRyICsgJyBtYXhsZW5ndGg9XCInICsgaW5wdXRNYXhMZW5ndGggKyAnXCIgc3R5bGU9XCJmb250LXNpemU6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlRm9udFNpemUgKyAnO2JvcmRlci1yYWRpdXM6ICcgKyBuZXdDb25maXJtU2V0dGluZ3MuYm9yZGVyUmFkaXVzICsgJztcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIiBhdXRvY2FwaXRhbGl6ZT1cIm5vbmVcIiAvPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBjaGVjayB0aGUgdmFsaWRhdGlvbiBtb2R1bGU6IGVuZFxyXG5cbiAgICAvLyBjb25maXJtIHdyYXAgY29udGVudDogYmVnaW5cclxuICAgIG50Zmx4Q29uZmlybVdyYXAuaW5uZXJIVE1MID0gY29uZmlybU92ZXJsYXkgK1xyXG4gICAgICAnPGRpdiBjbGFzcz1cIicgKyBuZXdDb25maXJtU2V0dGluZ3MuY2xhc3NOYW1lICsgJy1jb250ZW50XCIgc3R5bGU9XCJ3aWR0aDonICsgbmV3Q29uZmlybVNldHRpbmdzLndpZHRoICsgJzsgYmFja2dyb3VuZDonICsgbmV3Q29uZmlybVNldHRpbmdzLmJhY2tncm91bmRDb2xvciArICc7IGFuaW1hdGlvbi1kdXJhdGlvbjonICsgbmV3Q29uZmlybVNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zOyBib3JkZXItcmFkaXVzOiAnICsgbmV3Q29uZmlybVNldHRpbmdzLmJvcmRlclJhZGl1cyArICc7XCI+JyArXHJcbiAgICAgICc8ZGl2IGNsYXNzPVwiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5jbGFzc05hbWUgKyAnLWhlYWRcIj4nICtcclxuICAgICAgJzxoNSBzdHlsZT1cImNvbG9yOicgKyBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVDb2xvciArICc7Zm9udC1zaXplOicgKyBuZXdDb25maXJtU2V0dGluZ3MudGl0bGVGb250U2l6ZSArICc7XCI+JyArIHRpdGxlICsgJzwvaDU+JyArXHJcbiAgICAgICc8ZGl2IHN0eWxlPVwiY29sb3I6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5tZXNzYWdlQ29sb3IgKyAnO2ZvbnQtc2l6ZTonICsgbmV3Q29uZmlybVNldHRpbmdzLm1lc3NhZ2VGb250U2l6ZSArICc7XCI+JyArIG1lc3NhZ2VPclF1ZXN0aW9uICsgc2V0VmFsaWRhdGlvbklucHV0ICsgJzwvZGl2PicgK1xyXG4gICAgICAnPC9kaXY+JyArXHJcbiAgICAgICc8ZGl2IGNsYXNzPVwiJyArIG5ld0NvbmZpcm1TZXR0aW5ncy5jbGFzc05hbWUgKyAnLWJ1dHRvbnNcIj4nICtcclxuICAgICAgJzxhIGlkPVwiTlhDb25maXJtQnV0dG9uT2tcIiBjbGFzcz1cIm54LWNvbmZpcm0tYnV0dG9uLW9rJyArICh0eXBlb2Ygb2tCdXR0b25DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJyA/ICcnIDogJyBueC1mdWxsJykgKyAnXCIgc3R5bGU9XCJjb2xvcjonICsgbmV3Q29uZmlybVNldHRpbmdzLm9rQnV0dG9uQ29sb3IgKyAnO2JhY2tncm91bmQ6JyArIG5ld0NvbmZpcm1TZXR0aW5ncy5va0J1dHRvbkJhY2tncm91bmQgKyAnO2ZvbnQtc2l6ZTonICsgbmV3Q29uZmlybVNldHRpbmdzLmJ1dHRvbnNGb250U2l6ZSArICc7XCI+JyArIG9rQnV0dG9uVGV4dCArICc8L2E+JyArXHJcbiAgICAgIGNhbmNlbEJ1dHRvbkhUTUwgK1xyXG4gICAgICAnPC9kaXY+JyArXHJcbiAgICAgICc8L2Rpdj4nO1xyXG4gICAgLy8gY29uZmlybSB3cmFwIGNvbnRlbnQ6IGVuZFxyXG4gICAgLy8gY29uZmlybSB3cmFwOiBlbmRcclxuXG4gICAgLy8gaWYgdGhlcmUgaXMgbm8gY29uZmlybSBib3g6IGJlZ2luXHJcbiAgICBpZiAoIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseENvbmZpcm1XcmFwLmlkKSkge1xyXG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChudGZseENvbmZpcm1XcmFwKTtcclxuXG4gICAgICAvLyBidXR0b25zICYmIGlucHV0IGxpc3RlbmVyOiBiZWdpblxyXG4gICAgICB2YXIgY29uZmlybUNsb3NlV3JhcCA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseENvbmZpcm1XcmFwLmlkKTtcclxuICAgICAgdmFyIG9rQnV0dG9uID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdOWENvbmZpcm1CdXR0b25PaycpO1xyXG5cbiAgICAgIC8vIHZhbGlkYXRpb24gaW5wdXQgbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgIHZhciB2YWxpZGF0aW9uSW5wdXQgPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ05YQ29uZmlybVZhbGlkYXRpb25JbnB1dCcpO1xyXG4gICAgICBpZiAodmFsaWRhdGlvbklucHV0KSB7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LmZvY3VzKCk7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LnNldFNlbGVjdGlvblJhbmdlKDAsICh2YWxpZGF0aW9uSW5wdXQudmFsdWUgfHwgJycpLmxlbmd0aCk7XHJcbiAgICAgICAgdmFsaWRhdGlvbklucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICB2YXIgdGhpc1ZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Bc2spICYmXHJcbiAgICAgICAgICAgICh0aGlzVmFsdWUgIT09IHRoZUV4cGVjdGVkQW5zd2VyKVxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5jbGFzc0xpc3QuYWRkKCdueC12YWxpZGF0aW9uLWZhaWx1cmUnKTtcclxuICAgICAgICAgICAgdmFsaWRhdGlvbklucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ254LXZhbGlkYXRpb24tc3VjY2VzcycpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrKSB7XHJcbiAgICAgICAgICAgICAgdmFsaWRhdGlvbklucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ254LXZhbGlkYXRpb24tZmFpbHVyZScpO1xyXG4gICAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5jbGFzc0xpc3QuYWRkKCdueC12YWxpZGF0aW9uLXN1Y2Nlc3MnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgaXNFbnRlciA9IChldmVudC5rZXkgfHwgJycpLnRvTG9jYWxlTG93ZXJDYXNlKCdlbicpID09PSAnZW50ZXInIHx8IGV2ZW50LmtleUNvZGUgPT09IDEzO1xyXG4gICAgICAgICAgICBpZiAoaXNFbnRlcikge1xyXG4gICAgICAgICAgICAgIG9rQnV0dG9uLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjbGljaycpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIHZhbGlkYXRpb24gaW5wdXQgbGlzdGVuZXI6IGVuZFxyXG5cbiAgICAgIC8vIG9rIGJ1dHRvbiBsaXN0ZW5lcjogYmVnaW5cclxuICAgICAgb2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAvLyBjaGVjayB0aGUgYW5zd2VyIGlmIHRoZSB0eXBlIGlzIFwiQXNrXCI6IGJlZ2luXHJcbiAgICAgICAgaWYgKGNvbmZpcm1UeXBlID09PSB0eXBlc0NvbmZpcm0uQXNrICYmIHRoZUV4cGVjdGVkQW5zd2VyICYmIHZhbGlkYXRpb25JbnB1dCkge1xyXG4gICAgICAgICAgdmFyIGlucHV0VmFsdWUgPSAodmFsaWRhdGlvbklucHV0LnZhbHVlIHx8ICcnKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgaWYgKGlucHV0VmFsdWUgIT09IHRoZUV4cGVjdGVkQW5zd2VyKSB7XHJcbiAgICAgICAgICAgIHZhbGlkYXRpb25JbnB1dC5mb2N1cygpO1xyXG4gICAgICAgICAgICB2YWxpZGF0aW9uSW5wdXQuY2xhc3NMaXN0LmFkZCgnbngtdmFsaWRhdGlvbi1mYWlsdXJlJyk7XHJcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBldmVudC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YWxpZGF0aW9uSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnbngtdmFsaWRhdGlvbi1mYWlsdXJlJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNoZWNrIHRoZSBhbnN3ZXIgaWYgdGhlIHR5cGUgaXMgXCJBc2tcIjogZW5kXHJcblxuICAgICAgICAvLyBpZiBvayBjYWxsYmFjayAmJiBpZiBvayBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uXHJcbiAgICAgICAgaWYgKHR5cGVvZiBva0J1dHRvbkNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICBpZiAoY29uZmlybVR5cGUgPT09IHR5cGVzQ29uZmlybS5Qcm9tcHQgJiYgdmFsaWRhdGlvbklucHV0KSB7XHJcbiAgICAgICAgICAgIHRoZUNsaWVudEFuc3dlciA9IHZhbGlkYXRpb25JbnB1dC52YWx1ZSB8fCAnJztcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIG9rQnV0dG9uQ2FsbGJhY2sodGhlQ2xpZW50QW5zd2VyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uZmlybUNsb3NlV3JhcC5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuXG4gICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpZiAoY29uZmlybUNsb3NlV3JhcC5wYXJlbnROb2RlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbmZpcm1DbG9zZVdyYXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjb25maXJtQ2xvc2VXcmFwKTtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sIG5ld0NvbmZpcm1TZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgIH0pO1xyXG4gICAgICAvLyBvayBidXR0b24gbGlzdGVuZXI6IGVuZFxyXG5cbiAgICAgIC8vIGlmIG9rIGNhbGxiYWNrICYmIGlmIG9rIGNhbGxiYWNrIGEgZnVuY3Rpb24gPT4gYWRkIENhbmNlbCBCdXR0b24gbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgIGlmICh0eXBlb2Ygb2tCdXR0b25DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgIC8vIGNhbmNlbCBidXR0b24gbGlzdGVuZXI6IGJlZ2luXHJcbiAgICAgICAgdmFyIGNhbmNlbEJ1dHRvbiA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnTlhDb25maXJtQnV0dG9uQ2FuY2VsJyk7XHJcbiAgICAgICAgY2FuY2VsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgLy8gaWYgY2FuY2VsIGNhbGxiYWNrICYmIGlmIGNhbmNlbCBjYWxsYmFjayBhIGZ1bmN0aW9uXHJcbiAgICAgICAgICBpZiAodHlwZW9mIGNhbmNlbEJ1dHRvbkNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIGlmIChjb25maXJtVHlwZSA9PT0gdHlwZXNDb25maXJtLlByb21wdCAmJiB2YWxpZGF0aW9uSW5wdXQpIHtcclxuICAgICAgICAgICAgICB0aGVDbGllbnRBbnN3ZXIgPSB2YWxpZGF0aW9uSW5wdXQudmFsdWUgfHwgJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FuY2VsQnV0dG9uQ2FsbGJhY2sodGhlQ2xpZW50QW5zd2VyKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbmZpcm1DbG9zZVdyYXAuY2xhc3NMaXN0LmFkZCgnbngtcmVtb3ZlJyk7XHJcblxuICAgICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChjb25maXJtQ2xvc2VXcmFwLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICBjb25maXJtQ2xvc2VXcmFwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY29uZmlybUNsb3NlV3JhcCk7XHJcbiAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LCBuZXdDb25maXJtU2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIGNhbmNlbCBidXR0b24gbGlzdGVuZXI6IGVuZFxyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIG9rIGNhbGxiYWNrICYmIGlmIG9rIGNhbGxiYWNrIGEgZnVuY3Rpb24gPT4gYWRkIENhbmNlbCBCdXR0b24gbGlzdGVuZXI6IGVuZFxyXG4gICAgICAvLyBidXR0b25zICYmIGlucHV0IGxpc3RlbmVyOiBlbmRcclxuICAgIH1cclxuICAgIC8vIGlmIHRoZXJlIGlzIG5vIGNvbmZpcm0gYm94OiBlbmRcclxuXG4gICAgLy8gZXh0ZW5kIG5ldyBzZXR0aW5ncyB3aXRoIHRoZSBiYWNrdXAgc2V0dGluZ3NcclxuICAgIG5ld0NvbmZpcm1TZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3Q29uZmlybVNldHRpbmdzLCBuZXdDb25maXJtU2V0dGluZ3NCYWNrdXApO1xyXG4gIH07XG4gIC8vIENPTkZJUk06IENyZWF0ZTogZW5kXG5cbiAgdmFyIE5vdGlmbGl4ID0ge1xuICAgIENvbmZpcm06IHtcclxuICAgICAgLy8gSW5pdFxyXG4gICAgICBpbml0OiBmdW5jdGlvbiAodXNlckNvbmZpcm1PcHRpb25zKSB7XHJcbiAgICAgICAgLy8gZXh0ZW5kIG9wdGlvbnNcclxuICAgICAgICBuZXdDb25maXJtU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIGNvbmZpcm1TZXR0aW5ncywgdXNlckNvbmZpcm1PcHRpb25zKTtcclxuICAgICAgICAvLyBpbnRlcm5hbCBjc3MgaWYgZXhpc3RcclxuICAgICAgICBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzKGNvbmZpcm1HZXRJbnRlcm5hbENTU0NvZGVzLCAnTm90aWZsaXhDb25maXJtSW50ZXJuYWxDU1MnKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gTWVyZ2UgRmlyc3QgSW5pdFxyXG4gICAgICBtZXJnZTogZnVuY3Rpb24gKHVzZXJDb25maXJtRXh0ZW5kT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGlmIGluaXRpYWxpemVkIGFscmVhZHlcclxuICAgICAgICBpZiAobmV3Q29uZmlybVNldHRpbmdzKSB7XHJcbiAgICAgICAgICBuZXdDb25maXJtU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0NvbmZpcm1TZXR0aW5ncywgdXNlckNvbmZpcm1FeHRlbmRPcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaW5pdGlhbGl6ZSBmaXJzdFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdZb3UgaGF2ZSB0byBpbml0aWFsaXplIHRoZSBDb25maXJtIG1vZHVsZSBiZWZvcmUgY2FsbCBNZXJnZSBmdW5jdGlvbi4nKTtcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIFNob3dcclxuICAgICAgc2hvdzogZnVuY3Rpb24gKHRpdGxlLCBtZXNzYWdlLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKSB7XHJcbiAgICAgICAgY29uZmlybUNyZWF0ZSh0eXBlc0NvbmZpcm0uU2hvdywgdGl0bGUsIG1lc3NhZ2UsIG51bGwsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpO1xyXG4gICAgICB9LFxyXG4gICAgICAvLyBBc2tcclxuICAgICAgYXNrOiBmdW5jdGlvbiAodGl0bGUsIHF1ZXN0aW9uLCBhbnN3ZXIsIG9rQnV0dG9uVGV4dCwgY2FuY2VsQnV0dG9uVGV4dCwgb2tCdXR0b25DYWxsYmFjaywgY2FuY2VsQnV0dG9uQ2FsbGJhY2ssIG9wdGlvbnMpIHtcclxuICAgICAgICBjb25maXJtQ3JlYXRlKHR5cGVzQ29uZmlybS5Bc2ssIHRpdGxlLCBxdWVzdGlvbiwgYW5zd2VyLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gUHJvbXB0XHJcbiAgICAgIHByb21wdDogZnVuY3Rpb24gKHRpdGxlLCBxdWVzdGlvbiwgZGVmYXVsdEFuc3dlciwgb2tCdXR0b25UZXh0LCBjYW5jZWxCdXR0b25UZXh0LCBva0J1dHRvbkNhbGxiYWNrLCBjYW5jZWxCdXR0b25DYWxsYmFjaywgb3B0aW9ucykge1xyXG4gICAgICAgIGNvbmZpcm1DcmVhdGUodHlwZXNDb25maXJtLlByb21wdCwgdGl0bGUsIHF1ZXN0aW9uLCBkZWZhdWx0QW5zd2VyLCBva0J1dHRvblRleHQsIGNhbmNlbEJ1dHRvblRleHQsIG9rQnV0dG9uQ2FsbGJhY2ssIGNhbmNlbEJ1dHRvbkNhbGxiYWNrLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgIH0sXG4gIH07XG5cbiAgaWYgKHR5cGVvZiB3aW5kb3cuTm90aWZsaXggPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgd2luZG93Lk5vdGlmbGl4LCB7IENvbmZpcm06IE5vdGlmbGl4LkNvbmZpcm0gfSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgQ29uZmlybTogTm90aWZsaXguQ29uZmlybSB9O1xuICB9XG5cbn0pOyIsIi8qXG4qIE5vdGlmbGl4IExvYWRpbmcgQUlPIChodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pbylcbiogRGVzY3JpcHRpb246IFRoaXMgZmlsZSBoYXMgYmVlbiBjcmVhdGVkIGF1dG9tYXRpY2FsbHkgdGhhdCB1c2luZyBcIm5vdGlmbGl4LmpzXCIsIGFuZCBcIm5vdGlmbGl4LmNzc1wiIGZpbGVzLlxuKiBWZXJzaW9uOiAzLjIuNVxuKiBBdXRob3I6IEZ1cmthbiBNVCAoaHR0cHM6Ly9naXRodWIuY29tL2Z1cmNhbilcbiogQ29weXJpZ2h0IDIwMTkgLSAyMDIyIE5vdGlmbGl4LCBNSVQgTGljZW5jZSAoaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQpXG4qL1xuXG4vKiBnbG9iYWwgZGVmaW5lICovXG4oZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXSwgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZhY3Rvcnkocm9vdCk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyb290KTtcbiAgfSBlbHNlIHtcbiAgICByb290Lk5vdGlmbGl4ID0gZmFjdG9yeShyb290KTtcbiAgfVxufSkodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uICh3aW5kb3cpIHtcblxuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gQ09NTU9OOiBTU1IgY2hlY2s6IGJlZ2luXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cbiAgLy8gQ09NTU9OOiBTU1IgY2hlY2s6IGVuZFxuXG4gIC8vIENPTU1PTjogVmFyaWFibGVzOiBiZWdpblxuICB2YXIgbm90aWZsaXhOYW1lc3BhY2UgPSAnTm90aWZsaXgnO1xyXG4gIHZhciBub3RpZmxpeENvbnNvbGVEb2NzID0gJ1xcblxcblZpc2l0IGRvY3VtZW50YXRpb24gcGFnZSB0byBsZWFybiBtb3JlOiBodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pby9kb2N1bWVudGF0aW9uJztcclxuICB2YXIgZGVmYXVsdEZvbnRGYW1pbHkgPSAnLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgXCJOb3RvIFNhbnNcIiwgc2Fucy1zZXJpZic7XG4gIC8vIENPTU1PTjogVmFyaWFibGVzOiBlbmRcblxuICAvLyBMT0FESU5HOiBEZWZhdWx0IFNldHRpbmdzOiBiZWdpblxuICB2YXIgdHlwZXNMb2FkaW5nID0ge1xyXG4gICAgU3RhbmRhcmQ6ICdTdGFuZGFyZCcsXHJcbiAgICBIb3VyZ2xhc3M6ICdIb3VyZ2xhc3MnLFxyXG4gICAgQ2lyY2xlOiAnQ2lyY2xlJyxcclxuICAgIEFycm93czogJ0Fycm93cycsXHJcbiAgICBEb3RzOiAnRG90cycsXHJcbiAgICBQdWxzZTogJ1B1bHNlJyxcclxuICAgIEN1c3RvbTogJ0N1c3RvbScsXHJcbiAgICBOb3RpZmxpeDogJ05vdGlmbGl4JyxcclxuICB9O1xyXG4gIHZhciBuZXdMb2FkaW5nU2V0dGluZ3M7XHJcbiAgdmFyIGxvYWRpbmdTZXR0aW5ncyA9IHtcclxuICAgIElEOiAnTm90aWZsaXhMb2FkaW5nV3JhcCcsIC8vIGNhbiBub3QgY3VzdG9taXphYmxlXHJcbiAgICBjbGFzc05hbWU6ICdub3RpZmxpeC1sb2FkaW5nJyxcclxuICAgIHppbmRleDogNDAwMCxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMC44KScsXHJcbiAgICBydGw6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBjc3NBbmltYXRpb246IHRydWUsXHJcbiAgICBjc3NBbmltYXRpb25EdXJhdGlvbjogNDAwLFxyXG4gICAgY2xpY2tUb0Nsb3NlOiBmYWxzZSxcclxuICAgIGN1c3RvbVN2Z1VybDogbnVsbCxcclxuICAgIGN1c3RvbVN2Z0NvZGU6IG51bGwsXHJcbiAgICBzdmdTaXplOiAnODBweCcsXHJcbiAgICBzdmdDb2xvcjogJyMzMmM2ODInLFxyXG4gICAgbWVzc2FnZUlEOiAnTm90aWZsaXhMb2FkaW5nTWVzc2FnZScsXHJcbiAgICBtZXNzYWdlRm9udFNpemU6ICcxNXB4JyxcclxuICAgIG1lc3NhZ2VNYXhMZW5ndGg6IDM0LFxyXG4gICAgbWVzc2FnZUNvbG9yOiAnI2RjZGNkYycsXHJcbiAgfTtcbiAgLy8gTE9BRElORzogRGVmYXVsdCBTZXR0aW5nczogZW5kXG5cbiAgLy8gQ09NTU9OOiBDb25zb2xlIEVycm9yOiBiZWdpblxuICB2YXIgY29tbW9uQ29uc29sZUVycm9yID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcclxuICAgIHJldHVybiBjb25zb2xlLmVycm9yKCclYyAnICsgbm90aWZsaXhOYW1lc3BhY2UgKyAnIEVycm9yICcsICdwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjIwcHg7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiNmZjU1NDknLCAnXFxuJyArIG1lc3NhZ2UgKyBub3RpZmxpeENvbnNvbGVEb2NzKTtcclxuICB9O1xuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGVuZFxuXG4gIC8vIENPTU1PTjogQ2hlY2sgSGVhZCBvciBCb2R5OiBiZWdpblxuICB2YXIgY29tbW9uQ2hlY2tIZWFkT3JCb2R5ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgIGlmICghZWxlbWVudCkgeyBlbGVtZW50ID0gJ2hlYWQnOyB9XHJcbiAgICBpZiAod2luZG93LmRvY3VtZW50W2VsZW1lbnRdID09PSBudWxsKSB7XHJcbiAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignXFxuTm90aWZsaXggbmVlZHMgdG8gYmUgYXBwZW5kZWQgdG8gdGhlIFwiPCcgKyBlbGVtZW50ICsgJz5cIiBlbGVtZW50LCBidXQgeW91IGNhbGxlZCBpdCBiZWZvcmUgdGhlIFwiPCcgKyBlbGVtZW50ICsgJz5cIiBlbGVtZW50IGhhcyBiZWVuIGNyZWF0ZWQuJyk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ2hlY2sgSGVhZCBvciBCb2R5OiBlbmRcblxuICAvLyBDT01NT046IFNldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGJlZ2luXG4gIHZhciBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzID0gZnVuY3Rpb24gKGdldEludGVybmFsQ1NTQ29kZXMsIHN0eWxlRWxlbWVudElkKSB7XHJcbiAgICAvLyBjaGVjayBkb2MgaGVhZFxyXG4gICAgaWYgKCFjb21tb25DaGVja0hlYWRPckJvZHkoJ2hlYWQnKSkgeyByZXR1cm4gZmFsc2U7IH1cclxuXG4gICAgLy8gaW50ZXJuYWwgY3NzXHJcbiAgICBpZiAoZ2V0SW50ZXJuYWxDU1NDb2RlcygpICE9PSBudWxsICYmICF3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc3R5bGVFbGVtZW50SWQpKSB7XHJcbiAgICAgIHZhciBpbnRlcm5hbENTUyA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICBpbnRlcm5hbENTUy5pZCA9IHN0eWxlRWxlbWVudElkO1xyXG4gICAgICBpbnRlcm5hbENTUy5pbm5lckhUTUwgPSBnZXRJbnRlcm5hbENTU0NvZGVzKCk7XHJcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGludGVybmFsQ1NTKTtcclxuICAgIH1cclxuICB9O1xuICAvLyBDT01NT046IFNldCBJbnRlcm5hbCBDU1MgQ29kZXM6IGVuZFxuXG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGJlZ2luXG4gIHZhciBjb21tb25FeHRlbmRPcHRpb25zID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gdmFyaWFibGVzXHJcbiAgICB2YXIgZXh0ZW5kZWQgPSB7fTtcclxuICAgIHZhciBkZWVwID0gZmFsc2U7XHJcbiAgICB2YXIgaSA9IDA7XHJcbiAgICAvLyBjaGVjayBpZiBhIGRlZXAgbWVyZ2VcclxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzWzBdKSA9PT0gJ1tvYmplY3QgQm9vbGVhbl0nKSB7XHJcbiAgICAgIGRlZXAgPSBhcmd1bWVudHNbMF07XHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuICAgIC8vIG1lcmdlIHRoZSBvYmplY3QgaW50byB0aGUgZXh0ZW5kZWQgb2JqZWN0XHJcbiAgICB2YXIgbWVyZ2UgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgICAgIGZvciAodmFyIHByb3AgaW4gb2JqKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSB7XHJcbiAgICAgICAgICAvLyBpZiBwcm9wZXJ0eSBpcyBhbiBvYmplY3QsIG1lcmdlIHByb3BlcnRpZXNcclxuICAgICAgICAgIGlmIChkZWVwICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmpbcHJvcF0pID09PSAnW29iamVjdCBPYmplY3RdJykge1xyXG4gICAgICAgICAgICBleHRlbmRlZFtwcm9wXSA9IGNvbW1vbkV4dGVuZE9wdGlvbnMoZXh0ZW5kZWRbcHJvcF0sIG9ialtwcm9wXSk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBleHRlbmRlZFtwcm9wXSA9IG9ialtwcm9wXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBsb29wIHRocm91Z2ggZWFjaCBvYmplY3QgYW5kIGNvbmR1Y3QgYSBtZXJnZVxyXG4gICAgZm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbWVyZ2UoYXJndW1lbnRzW2ldKTtcclxuICAgIH1cclxuICAgIHJldHVybiBleHRlbmRlZDtcclxuICB9O1xuICAvLyBDT01NT046IEV4dGVuZCBPcHRpb25zOiBlbmRcblxuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGJlZ2luXG4gIHZhciBjb21tb25HZXRQbGFpbnRleHQgPSBmdW5jdGlvbiAoaHRtbCkge1xyXG4gICAgdmFyIGh0bWxQb29sID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgaHRtbFBvb2wuaW5uZXJIVE1MID0gaHRtbDtcclxuICAgIHJldHVybiBodG1sUG9vbC50ZXh0Q29udGVudCB8fCBodG1sUG9vbC5pbm5lclRleHQgfHwgJyc7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBHZXQgUGxhaW50ZXh0OiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBTdGFuZGFyZDogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25TdGFuZGFyZCA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBzdGFuZGFyZCA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBzdHJva2U9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHRyYW5zZm9ybT1cInNjYWxlKC44KVwiIHZpZXdCb3g9XCIwIDAgMzggMzhcIj48ZyBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBzdHJva2Utd2lkdGg9XCIyXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDEgMSlcIj48Y2lyY2xlIGN4PVwiMThcIiBjeT1cIjE4XCIgcj1cIjE4XCIgc3Ryb2tlLW9wYWNpdHk9XCIuMjVcIi8+PHBhdGggZD1cIk0zNiAxOGMwLTkuOTQtOC4wNi0xOC0xOC0xOFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBkdXI9XCIxc1wiIGZyb209XCIwIDE4IDE4XCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdG89XCIzNjAgMTggMThcIiB0eXBlPVwicm90YXRlXCIvPjwvcGF0aD48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiBzdGFuZGFyZDtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBTdGFuZGFyZDogZW5kXG5cbiAgLy8gTE9BRElORyAmJiBCTE9DSzogU1ZHIEljb24gSG91cmdsYXNzOiBiZWdpblxuICB2YXIgbG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkhvdXJnbGFzcyA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBob3VyZ2xhc3MgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWExvYWRpbmdIb3VyZ2xhc3NcIiBmaWxsPVwiJyArIGNvbG9yICsgJ1wiIHdpZHRoPVwiJyArIHdpZHRoICsgJ1wiIGhlaWdodD1cIicgKyB3aWR0aCArICdcIiB2aWV3Qm94PVwiMCAwIDIwMCAyMDBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzNS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX0xNi42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuOCk7dHJhbnNmb3JtOnNjYWxlKDEsLjgpfTMzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguODgsLjYpO3RyYW5zZm9ybTpzY2FsZSguODgsLjYpfTM3LjUley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpO3RyYW5zZm9ybTpzY2FsZSguODUsLjU1KX00MS42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjgsLjUpO3RyYW5zZm9ybTpzY2FsZSguOCwuNSl9NDUuODMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpO3RyYW5zZm9ybTpzY2FsZSguNzUsLjQ1KX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjcsLjQpO3RyYW5zZm9ybTpzY2FsZSguNywuNCl9NTQuMTcley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC42LC4zNSk7dHJhbnNmb3JtOnNjYWxlKC42LC4zNSl9NTguMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41LC4zKTt0cmFuc2Zvcm06c2NhbGUoLjUsLjMpfTgzLjMzJSx0b3std2Via2l0LXRyYW5zZm9ybTpzY2FsZSguMiwwKTt0cmFuc2Zvcm06c2NhbGUoLjIsMCl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3M1LWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLDEpO3RyYW5zZm9ybTpzY2FsZSgxLDEpfTE2LjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC44KTt0cmFuc2Zvcm06c2NhbGUoMSwuOCl9MzMuMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44OCwuNik7dHJhbnNmb3JtOnNjYWxlKC44OCwuNil9MzcuNSV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjg1LC41NSk7dHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpfTQxLjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguOCwuNSk7dHJhbnNmb3JtOnNjYWxlKC44LC41KX00NS44MyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjc1LC40NSk7dHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNywuNCk7dHJhbnNmb3JtOnNjYWxlKC43LC40KX01NC4xNyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjYsLjM1KTt0cmFuc2Zvcm06c2NhbGUoLjYsLjM1KX01OC4zMyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUsLjMpO3RyYW5zZm9ybTpzY2FsZSguNSwuMyl9ODMuMzMlLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC4yLDApO3RyYW5zZm9ybTpzY2FsZSguMiwwKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuMDIpO3RyYW5zZm9ybTpzY2FsZSgxLC4wMil9NzkuMTclLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEsMSk7dHJhbnNmb3JtOnNjYWxlKDEsMSl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3MzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC4wMik7dHJhbnNmb3JtOnNjYWxlKDEsLjAyKX03OS4xNyUsdG97LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMS1hbmltYXRpb257MCUsODMuMzMley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKX19QGtleWZyYW1lcyBOWGhvdXJnbGFzczEtYW5pbWF0aW9uezAlLDgzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX10b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9fSNOWExvYWRpbmdIb3VyZ2xhc3MgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjFcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3MxLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczEtYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgNTAlO3RyYW5zZm9ybS1vcmlnaW46NTAlIDUwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XCI+PGcgaWQ9XCJOWGhvdXJnbGFzczJcIiBmaWxsPVwiaW5oZXJpdFwiPjxnIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSAxMDAlO3RyYW5zZm9ybS1ib3g6ZmlsbC1ib3hcIiBvcGFjaXR5PVwiLjRcIj48cGF0aCBpZD1cIk5YaG91cmdsYXNzNFwiIGQ9XCJNMTAwIDEwMGwtMzQuMzggMzIuMDh2MzEuMTRoNjguNzZ2LTMxLjE0elwiLz48L2c+PGcgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzNS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3M1LWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDEwMCU7dHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XCIgb3BhY2l0eT1cIi40XCI+PHBhdGggaWQ9XCJOWGhvdXJnbGFzczZcIiBkPVwiTTEwMCAxMDBMNjUuNjIgNjcuOTJWMzYuNzhoNjguNzZ2MzEuMTR6XCIvPjwvZz48cGF0aCBkPVwiTTUxLjE0IDM4Ljg5aDguMzN2MTQuOTNjMCAxNS4xIDguMjkgMjguOTkgMjMuMzQgMzkuMSAxLjg4IDEuMjUgMy4wNCAzLjk3IDMuMDQgNy4wOHMtMS4xNiA1LjgzLTMuMDQgNy4wOWMtMTUuMDUgMTAuMS0yMy4zNCAyMy45OS0yMy4zNCAzOS4wOXYxNC45M2gtOC4zM2E0Ljg1OSA0Ljg1OSAwIDEgMCAwIDkuNzJoOTcuNzJhNC44NTkgNC44NTkgMCAxIDAgMC05LjcyaC04LjMzdi0xNC45M2MwLTE1LjEtOC4yOS0yOC45OS0yMy4zNC0zOS4wOS0xLjg4LTEuMjYtMy4wNC0zLjk4LTMuMDQtNy4wOXMxLjE2LTUuODMgMy4wNC03LjA4YzE1LjA1LTEwLjExIDIzLjM0LTI0IDIzLjM0LTM5LjFWMzguODloOC4zM2E0Ljg1OSA0Ljg1OSAwIDEgMCAwLTkuNzJINTEuMTRhNC44NTkgNC44NTkgMCAxIDAgMCA5Ljcyem03OS42NyAxNC45M2MwIDE1Ljg3LTExLjkzIDI2LjI1LTE5LjA0IDMxLjAzLTQuNiAzLjA4LTcuMzQgOC43NS03LjM0IDE1LjE1IDAgNi40MSAyLjc0IDEyLjA3IDcuMzQgMTUuMTUgNy4xMSA0Ljc4IDE5LjA0IDE1LjE2IDE5LjA0IDMxLjAzdjE0LjkzSDY5LjE5di0xNC45M2MwLTE1Ljg3IDExLjkzLTI2LjI1IDE5LjA0LTMxLjAyIDQuNi0zLjA5IDcuMzQtOC43NSA3LjM0LTE1LjE2IDAtNi40LTIuNzQtMTIuMDctNy4zNC0xNS4xNS03LjExLTQuNzgtMTkuMDQtMTUuMTYtMTkuMDQtMzEuMDNWMzguODloNjEuNjJ2MTQuOTN6XCIvPjwvZz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiBob3VyZ2xhc3M7XHJcbiAgfTtcbiAgLy8gTE9BRElORyAmJiBCTE9DSzogU1ZHIEljb24gSG91cmdsYXNzOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBDaXJjbGU6IGJlZ2luXG4gIHZhciBsb2FkaW5nQW5kQmxvY2tTdmdJY29uQ2lyY2xlID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICc2MHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjMzJjNjgyJzsgfVxyXG4gICAgdmFyIGNpcmNsZSA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgdmlld0JveD1cIjI1IDI1IDUwIDUwXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbjpyb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO2FuaW1hdGlvbjpyb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO2hlaWdodDonICsgd2lkdGggKyAnOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyOy1tcy10cmFuc2Zvcm0tb3JpZ2luOmNlbnRlciBjZW50ZXI7dHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyO3dpZHRoOicgKyB3aWR0aCArICc7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO21hcmdpbjphdXRvXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGV7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHJvdGF0ZXt0b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fUAtd2Via2l0LWtleWZyYW1lcyBkYXNoezAle3N0cm9rZS1kYXNoYXJyYXk6MSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6MH01MCV7c3Ryb2tlLWRhc2hhcnJheTo4OSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6LTM1fXRve3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0xMjR9fUBrZXlmcmFtZXMgZGFzaHswJXtzdHJva2UtZGFzaGFycmF5OjEsMjAwO3N0cm9rZS1kYXNob2Zmc2V0OjB9NTAle3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0zNX10b3tzdHJva2UtZGFzaGFycmF5Ojg5LDIwMDtzdHJva2UtZGFzaG9mZnNldDotMTI0fX08L3N0eWxlPjxjaXJjbGUgY3g9XCI1MFwiIGN5PVwiNTBcIiByPVwiMjBcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cIicgKyBjb2xvciArICdcIiBzdHJva2Utd2lkdGg9XCIyXCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbjpkYXNoIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGUsY29sb3IgMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZTthbmltYXRpb246ZGFzaCAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlLGNvbG9yIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGVcIiBzdHJva2UtZGFzaGFycmF5PVwiMTUwIDIwMFwiIHN0cm9rZS1kYXNob2Zmc2V0PVwiLTEwXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiLz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIGNpcmNsZTtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBDaXJjbGU6IGVuZFxuXG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIEFycm93czogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25BcnJvd3MgPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzYwcHgnOyB9XHJcbiAgICBpZiAoIWNvbG9yKSB7IGNvbG9yID0gJyMzMmM2ODInOyB9XHJcbiAgICB2YXIgYXJyb3dzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgMTI4IDEyOFwiPjxnPjxwYXRoIGZpbGw9XCJpbmhlcml0XCIgZD1cIk0xMDkuMjUgNTUuNWgtMzZsMTItMTJhMjkuNTQgMjkuNTQgMCAwIDAtNDkuNTMgMTJIMTguNzVBNDYuMDQgNDYuMDQgMCAwIDEgOTYuOSAzMS44NGwxMi4zNS0xMi4zNHYzNnptLTkwLjUgMTdoMzZsLTEyIDEyYTI5LjU0IDI5LjU0IDAgMCAwIDQ5LjUzLTEyaDE2Ljk3QTQ2LjA0IDQ2LjA0IDAgMCAxIDMxLjEgOTYuMTZMMTguNzQgMTA4LjV2LTM2elwiLz48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCIgZHVyPVwiMS41c1wiIGZyb209XCIwIDY0IDY0XCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdG89XCIzNjAgNjQgNjRcIiB0eXBlPVwicm90YXRlXCIvPjwvZz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIGFycm93cztcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBBcnJvd3M6IGVuZFxuXG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIERvdHM6IGJlZ2luXG4gIHZhciBsb2FkaW5nQW5kQmxvY2tTdmdJY29uRG90cyA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBkb3RzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPjxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgyNSA1MClcIj48Y2lyY2xlIHI9XCI5XCIgZmlsbD1cImluaGVyaXRcIiB0cmFuc2Zvcm09XCJzY2FsZSguMjM5KVwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBiZWdpbj1cIi0wLjI2NnNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjAuOHNcIiBrZXlTcGxpbmVzPVwiMC4zIDAgMC43IDE7MC4zIDAgMC43IDFcIiBrZXlUaW1lcz1cIjA7MC41OzFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB0eXBlPVwic2NhbGVcIiB2YWx1ZXM9XCIwOzE7MFwiLz48L2NpcmNsZT48L2c+PGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDUwIDUwKVwiPjxjaXJjbGUgcj1cIjlcIiBmaWxsPVwiaW5oZXJpdFwiIHRyYW5zZm9ybT1cInNjYWxlKC4wMDE1MilcIj48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCIgYmVnaW49XCItMC4xMzNzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIwLjhzXCIga2V5U3BsaW5lcz1cIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXCIga2V5VGltZXM9XCIwOzAuNTsxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdHlwZT1cInNjYWxlXCIgdmFsdWVzPVwiMDsxOzBcIi8+PC9jaXJjbGU+PC9nPjxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg3NSA1MClcIj48Y2lyY2xlIHI9XCI5XCIgZmlsbD1cImluaGVyaXRcIiB0cmFuc2Zvcm09XCJzY2FsZSguMjk5KVwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XCJ0cmFuc2Zvcm1cIiBiZWdpbj1cIjBzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIwLjhzXCIga2V5U3BsaW5lcz1cIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXCIga2V5VGltZXM9XCIwOzAuNTsxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdHlwZT1cInNjYWxlXCIgdmFsdWVzPVwiMDsxOzBcIi8+PC9jaXJjbGU+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gZG90cztcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBEb3RzOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBQdWxzZTogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25QdWxzZSA9IGZ1bmN0aW9uICh3aWR0aCwgY29sb3IpIHtcclxuICAgIGlmICghd2lkdGgpIHsgd2lkdGggPSAnNjBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciBwdWxzZSA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBzdHJva2U9XCInICsgY29sb3IgKyAnXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIHZpZXdCb3g9XCIwIDAgNDQgNDRcIj48ZyBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBzdHJva2Utd2lkdGg9XCIyXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyMlwiIHI9XCIxXCI+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cInJcIiBiZWdpbj1cIjBzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIxLjhzXCIga2V5U3BsaW5lcz1cIjAuMTY1LCAwLjg0LCAwLjQ0LCAxXCIga2V5VGltZXM9XCIwOyAxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdmFsdWVzPVwiMTsgMjBcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cInN0cm9rZS1vcGFjaXR5XCIgYmVnaW49XCIwc1wiIGNhbGNNb2RlPVwic3BsaW5lXCIgZHVyPVwiMS44c1wiIGtleVNwbGluZXM9XCIwLjMsIDAuNjEsIDAuMzU1LCAxXCIga2V5VGltZXM9XCIwOyAxXCIgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCIgdmFsdWVzPVwiMTsgMFwiLz48L2NpcmNsZT48Y2lyY2xlIGN4PVwiMjJcIiBjeT1cIjIyXCIgcj1cIjFcIj48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwiclwiIGJlZ2luPVwiLTAuOXNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjEuOHNcIiBrZXlTcGxpbmVzPVwiMC4xNjUsIDAuODQsIDAuNDQsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAyMFwiLz48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwic3Ryb2tlLW9wYWNpdHlcIiBiZWdpbj1cIi0wLjlzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIxLjhzXCIga2V5U3BsaW5lcz1cIjAuMywgMC42MSwgMC4zNTUsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAwXCIvPjwvY2lyY2xlPjwvZz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIHB1bHNlO1xyXG4gIH07XG4gIC8vIExPQURJTkcgJiYgQkxPQ0s6IFNWRyBJY29uIFB1bHNlOiBlbmRcblxuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBOb3RpZmxpeDogYmVnaW5cbiAgdmFyIGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Ob3RpZmxpeCA9IGZ1bmN0aW9uICh3aWR0aCwgd2hpdGUsIGdyZWVuKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzYwcHgnOyB9XHJcbiAgICBpZiAoIXdoaXRlKSB7IHdoaXRlID0gJyNmOGY4ZjgnOyB9XHJcbiAgICBpZiAoIWdyZWVuKSB7IGdyZWVuID0gJyMzMmM2ODInOyB9XHJcbiAgICB2YXIgbm90aWZsaXhJY29uID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhMb2FkaW5nTm90aWZsaXhMaWJcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgdmlld0JveD1cIjAgMCAyMDAgMjAwXCI+PGRlZnM+PHN0eWxlPkBrZXlmcmFtZXMgbm90aWZsaXgtbnswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgteHswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgtZG90ezAlLHRve3N0cm9rZS13aWR0aDowfTUwJXtzdHJva2Utd2lkdGg6MTJ9fS5ueC1pY29uLWxpbmV7c3Ryb2tlOicgKyB3aGl0ZSArICc7c3Ryb2tlLXdpZHRoOjEyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoyMjtmaWxsOm5vbmV9PC9zdHlsZT48L2RlZnM+PHBhdGggZD1cIk00Ny45NyAxMzUuMDVhNi41IDYuNSAwIDEgMSAwIDEzIDYuNSA2LjUgMCAwIDEgMC0xM3pcIiBzdHlsZT1cImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LWRvdDthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2UtaW4tb3V0O2FuaW1hdGlvbi1kdXJhdGlvbjoxLjI1czthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXCIgZmlsbD1cIicgKyBncmVlbiArICdcIiBzdHJva2U9XCInICsgZ3JlZW4gKyAnXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlLW1pdGVybGltaXQ9XCIyMlwiIHN0cm9rZS13aWR0aD1cIjEyXCIvPjxwYXRoIGNsYXNzPVwibngtaWNvbi1saW5lXCIgZD1cIk0xMC4xNCAxNDQuNzZWODcuNTVjMC01LjY4LTQuNTQtNDEuMzYgMzcuODMtNDEuMzYgNDIuMzYgMCAzNy44MiAzNS42OCAzNy44MiA0MS4zNnY1Ny4yMVwiIHN0eWxlPVwiYW5pbWF0aW9uLW5hbWU6bm90aWZsaXgtbjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tZHVyYXRpb246Mi41czthbmltYXRpb24tZGVsYXk6MHM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFwiIHN0cm9rZS1kYXNoYXJyYXk9XCI1MDBcIi8+PHBhdGggY2xhc3M9XCJueC1pY29uLWxpbmVcIiBkPVwiTTExNS4wNiAxNDQuNDljMjQuOTgtMzIuNjggNDkuOTYtNjUuMzUgNzQuOTQtOTguMDNNMTE0Ljg5IDQ2LjZjMjUuMDkgMzIuNTggNTAuMTkgNjUuMTcgNzUuMjkgOTcuNzVcIiBzdHlsZT1cImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LXg7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7YW5pbWF0aW9uLWR1cmF0aW9uOjIuNXM7YW5pbWF0aW9uLWRlbGF5Oi4yczthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXCIgc3Ryb2tlLWRhc2hhcnJheT1cIjUwMFwiLz48L3N2Zz4nO1xyXG4gICAgcmV0dXJuIG5vdGlmbGl4SWNvbjtcclxuICB9O1xuICAvLyBMT0FESU5HICYmIEJMT0NLOiBTVkcgSWNvbiBOb3RpZmxpeDogZW5kXG5cbiAgLy8gTE9BRElORzogR2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGxvYWRpbmdHZXRJbnRlcm5hbENTU0NvZGVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGxvYWRpbmdDU1MgPSAnW2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXXstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo0MDAwO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC44KTtmb250LWZhbWlseTpcIlF1aWNrc2FuZFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLHNhbnMtc2VyaWZ9W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXSAqey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LWxvYWRpbmctY2xpY2stdG8tY2xvc2V7Y3Vyc29yOnBvaW50ZXJ9W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVwiLWljb25cIl17d2lkdGg6NjBweDtoZWlnaHQ6NjBweDtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LXRyYW5zaXRpb246dG9wIC4ycyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOnRvcCAuMnMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0b3AgLjJzIGVhc2UtaW4tb3V0O21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVwiLWljb25cIl0gaW1nLFtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+ZGl2W2NsYXNzKj1cIi1pY29uXCJdIHN2Z3ttYXgtd2lkdGg6dW5zZXQ7bWF4LWhlaWdodDp1bnNldDt3aWR0aDoxMDAlO2hlaWdodDphdXRvO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MH1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPnB7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjEwcHggYXV0byAwO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoxLjQ7cGFkZGluZzowIDEwcHg7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uey13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1yZW1vdmV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBsb2FkaW5nLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+cC5ueC1sb2FkaW5nLW1lc3NhZ2UtbmV3ey13ZWJraXQtYW5pbWF0aW9uOmxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZGluZy1uZXctbWVzc2FnZS1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX0nO1xyXG4gICAgcmV0dXJuIGxvYWRpbmdDU1MgfHwgbnVsbDtcclxuICB9O1xuICAvLyBMT0FESU5HOiBHZXQgSW50ZXJuYWwgQ1NTIENvZGVzOiBlbmRcblxuICAvLyBMT0FESU5HOiBDcmVhdGU6IGJlZ2luXG4gIHZhciBsb2FkaW5nQ3JlYXRlID0gZnVuY3Rpb24gKGxvYWRpbmdUeXBlLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCBkaXNwbGF5LCBkZWxheSkge1xyXG4gICAgLy8gY2hlY2sgZG9jIGJvZHlcclxuICAgIGlmICghY29tbW9uQ2hlY2tIZWFkT3JCb2R5KCdib2R5JykpIHsgcmV0dXJuIGZhbHNlOyB9XHJcblxuICAgIC8vIGlmIG5vdCBpbml0aWFsaXplZCBwcmV0ZW5kIGxpa2UgaW5pdFxyXG4gICAgaWYgKCFuZXdMb2FkaW5nU2V0dGluZ3MpIHtcclxuICAgICAgTm90aWZsaXguTG9hZGluZy5pbml0KHt9KTtcclxuICAgIH1cclxuXG4gICAgLy8gY3JlYXRlIGEgYmFja3VwIGZvciBuZXcgc2V0dGluZ3NcclxuICAgIHZhciBuZXdMb2FkaW5nU2V0dGluZ3NCYWNrdXAgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywge30pO1xyXG5cbiAgICAvLyBjaGVjayBcIm1lc3NhZ2VPck9wdGlvbnNcIiBhbmQgXCJvcHRpb25zXCI6IGJlZ2luXHJcbiAgICBpZiAoKHR5cGVvZiBtZXNzYWdlT3JPcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShtZXNzYWdlT3JPcHRpb25zKSkgfHwgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvcHRpb25zKSkpIHtcclxuICAgICAgLy8gbmV3IG9wdGlvbnNcclxuICAgICAgdmFyIG5ld09wdGlvbnMgPSB7fTtcclxuICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlT3JPcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBtZXNzYWdlT3JPcHRpb25zO1xyXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBvcHRpb25zO1xyXG4gICAgICB9XHJcblxuICAgICAgLy8gZXh0ZW5kIG5ldyBzZXR0aW5ncyB3aXRoIHRoZSBuZXcgb3B0aW9uc1xyXG4gICAgICBuZXdMb2FkaW5nU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywgbmV3T3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgICAvLyBjaGVjayBcIm1lc3NhZ2VPck9wdGlvbnNcIiBhbmQgXCJvcHRpb25zXCI6IGVuZFxyXG5cbiAgICAvLyBjaGVjayB0aGUgbWVzc2FnZVxyXG4gICAgdmFyIG1lc3NhZ2UgPSAnJztcclxuICAgIGlmICh0eXBlb2YgbWVzc2FnZU9yT3B0aW9ucyA9PT0gJ3N0cmluZycgJiYgbWVzc2FnZU9yT3B0aW9ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlT3JPcHRpb25zO1xyXG4gICAgfVxyXG5cbiAgICAvLyBzaG93IGxvYWRpbmdcclxuICAgIGlmIChkaXNwbGF5KSB7XHJcblxuICAgICAgLy8gaWYgbWVzc2FnZSBzZXR0aW5nczogYmVnaW5cclxuICAgICAgaWYgKG1lc3NhZ2UubGVuZ3RoID4gbmV3TG9hZGluZ1NldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgICBtZXNzYWdlID0gY29tbW9uR2V0UGxhaW50ZXh0KG1lc3NhZ2UpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlTWF4TGVuZ3RoKSArICcuLi4nO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG1lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZSkudG9TdHJpbmcoKTtcclxuICAgICAgfVxyXG4gICAgICB2YXIgbWVzc2FnZUhUTUwgPSAnJztcclxuICAgICAgaWYgKG1lc3NhZ2UubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIG1lc3NhZ2VIVE1MID0gJzxwIGlkPVwiJyArIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlSUQgKyAnXCIgY2xhc3M9XCJueC1sb2FkaW5nLW1lc3NhZ2VcIiBzdHlsZT1cImNvbG9yOicgKyBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUNvbG9yICsgJztmb250LXNpemU6JyArIG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlRm9udFNpemUgKyAnO1wiPicgKyBtZXNzYWdlICsgJzwvcD4nO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIG1lc3NhZ2Ugc2V0dGluZ3M6IGVuZFxyXG5cbiAgICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBiZWdpblxyXG4gICAgICBpZiAoIW5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb24pIHtcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24gPSAwO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBlbmRcclxuXG4gICAgICAvLyBzdmdJY29uOiBiZWdpblxyXG4gICAgICB2YXIgc3ZnSWNvbiA9ICcnO1xyXG4gICAgICBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5TdGFuZGFyZCkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBsb2FkaW5nQW5kQmxvY2tTdmdJY29uU3RhbmRhcmQobmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUsIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdDb2xvcik7XHJcbiAgICAgIH0gZWxzZSBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5Ib3VyZ2xhc3MpIHtcclxuICAgICAgICBzdmdJY29uID0gbG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkhvdXJnbGFzcyhuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSwgbmV3TG9hZGluZ1NldHRpbmdzLnN2Z0NvbG9yKTtcclxuICAgICAgfSBlbHNlIGlmIChsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkNpcmNsZSkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBsb2FkaW5nQW5kQmxvY2tTdmdJY29uQ2lyY2xlKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuQXJyb3dzKSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25BcnJvd3MobmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUsIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdDb2xvcik7XHJcbiAgICAgIH0gZWxzZSBpZiAobG9hZGluZ1R5cGUgPT09IHR5cGVzTG9hZGluZy5Eb3RzKSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Eb3RzKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuUHVsc2UpIHtcclxuICAgICAgICBzdmdJY29uID0gbG9hZGluZ0FuZEJsb2NrU3ZnSWNvblB1bHNlKG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplLCBuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnQ29sb3IpO1xyXG4gICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgIGxvYWRpbmdUeXBlID09PSB0eXBlc0xvYWRpbmcuQ3VzdG9tICYmXHJcbiAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzLmN1c3RvbVN2Z0NvZGUgIT09IG51bGwgJiZcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsID09PSBudWxsXHJcbiAgICAgICkge1xyXG4gICAgICAgIHN2Z0ljb24gPSBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnQ29kZSB8fCAnJztcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkN1c3RvbSAmJlxyXG4gICAgICAgIG5ld0xvYWRpbmdTZXR0aW5ncy5jdXN0b21TdmdVcmwgIT09IG51bGwgJiZcclxuICAgICAgICBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnQ29kZSA9PT0gbnVsbFxyXG4gICAgICApIHtcclxuICAgICAgICBzdmdJY29uID0gJzxpbWcgY2xhc3M9XCJueC1jdXN0b20tbG9hZGluZy1pY29uXCIgd2lkdGg9XCInICsgbmV3TG9hZGluZ1NldHRpbmdzLnN2Z1NpemUgKyAnXCIgaGVpZ2h0PVwiJyArIG5ld0xvYWRpbmdTZXR0aW5ncy5zdmdTaXplICsgJ1wiIHNyYz1cIicgKyBuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsICsgJ1wiIGFsdD1cIk5vdGlmbGl4XCI+JztcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBsb2FkaW5nVHlwZSA9PT0gdHlwZXNMb2FkaW5nLkN1c3RvbSAmJlxyXG4gICAgICAgIChuZXdMb2FkaW5nU2V0dGluZ3MuY3VzdG9tU3ZnVXJsID09PSBudWxsIHx8IG5ld0xvYWRpbmdTZXR0aW5ncy5jdXN0b21TdmdDb2RlID09PSBudWxsKVxyXG4gICAgICApIHtcclxuICAgICAgICBjb21tb25Db25zb2xlRXJyb3IoJ1lvdSBoYXZlIHRvIHNldCBhIHN0YXRpYyBTVkcgdXJsIHRvIFwiY3VzdG9tU3ZnVXJsXCIgb3B0aW9uIHRvIHVzZSBMb2FkaW5nIEN1c3RvbS4nKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc3ZnSWNvbiA9IGxvYWRpbmdBbmRCbG9ja1N2Z0ljb25Ob3RpZmxpeChuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSwgJyNmOGY4ZjgnLCAnIzMyYzY4MicpO1xyXG4gICAgICB9XHJcbiAgICAgIHZhciBzdmdTaXplQXNEaWdpdCA9IHBhcnNlSW50KChuZXdMb2FkaW5nU2V0dGluZ3Muc3ZnU2l6ZSB8fCAnJykucmVwbGFjZSgvW14wLTldL2csICcnKSk7XHJcbiAgICAgIHZhciB3aW5XaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gICAgICB2YXIgbWF4U3ZnV2lkdGhQeCA9IHN2Z1NpemVBc0RpZ2l0ID49IHdpbldpZHRoID8gKHdpbldpZHRoIC0gNDApICsgJ3B4JyA6IHN2Z1NpemVBc0RpZ2l0ICsgJ3B4JztcclxuICAgICAgdmFyIHN2Z0ljb25IVE1MID0gJzxkaXYgc3R5bGU9XCJ3aWR0aDonICsgbWF4U3ZnV2lkdGhQeCArICc7IGhlaWdodDonICsgbWF4U3ZnV2lkdGhQeCArICc7XCIgY2xhc3M9XCInICsgbmV3TG9hZGluZ1NldHRpbmdzLmNsYXNzTmFtZSArICctaWNvbicgKyAobWVzc2FnZS5sZW5ndGggPiAwID8gJyBueC13aXRoLW1lc3NhZ2UnIDogJycpICsgJ1wiPicgKyBzdmdJY29uICsgJzwvZGl2Pic7XHJcbiAgICAgIC8vIHN2Z0ljb246IGVuZFxyXG5cbiAgICAgIC8vIGxvYWRpbmcgd3JhcDogYmVnaW5cclxuICAgICAgdmFyIG50Zmx4TG9hZGluZ1dyYXAgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuaWQgPSBsb2FkaW5nU2V0dGluZ3MuSUQ7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuY2xhc3NOYW1lID0gbmV3TG9hZGluZ1NldHRpbmdzLmNsYXNzTmFtZSArIChuZXdMb2FkaW5nU2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbicgOiAnJykgKyAobmV3TG9hZGluZ1NldHRpbmdzLmNsaWNrVG9DbG9zZSA/ICcgbngtbG9hZGluZy1jbGljay10by1jbG9zZScgOiAnJyk7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuekluZGV4ID0gbmV3TG9hZGluZ1NldHRpbmdzLnppbmRleDtcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5iYWNrZ3JvdW5kID0gbmV3TG9hZGluZ1NldHRpbmdzLmJhY2tncm91bmRDb2xvcjtcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbiA9IG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbiArICdtcyc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZm9udEZhbWlseSA9ICdcIicgKyBuZXdMb2FkaW5nU2V0dGluZ3MuZm9udEZhbWlseSArICdcIiwgJyArIGRlZmF1bHRGb250RmFtaWx5O1xyXG4gICAgICBudGZseExvYWRpbmdXcmFwLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZmxleFdyYXAgPSAnd3JhcCc7XHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuc3R5bGUuZmxleERpcmVjdGlvbiA9ICdjb2x1bW4nO1xyXG4gICAgICBudGZseExvYWRpbmdXcmFwLnN0eWxlLmFsaWduSXRlbXMgPSAnY2VudGVyJztcclxuICAgICAgbnRmbHhMb2FkaW5nV3JhcC5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdjZW50ZXInO1xyXG5cbiAgICAgIC8vIHJ0bDogYmVnaW5cclxuICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncy5ydGwpIHtcclxuICAgICAgICBudGZseExvYWRpbmdXcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICAgIG50Zmx4TG9hZGluZ1dyYXAuY2xhc3NMaXN0LmFkZCgnbngtcnRsLW9uJyk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gcnRsOiBlbmRcclxuXG4gICAgICAvLyBhcHBlbmQ6IGJlZ2luXHJcbiAgICAgIG50Zmx4TG9hZGluZ1dyYXAuaW5uZXJIVE1MID0gc3ZnSWNvbkhUTUwgKyBtZXNzYWdlSFRNTDtcclxuXG4gICAgICAvLyBpZiB0aGVyZSBpcyBubyBsb2FkaW5nIGVsZW1lbnRcclxuICAgICAgaWYgKCF3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobnRmbHhMb2FkaW5nV3JhcC5pZCkpIHtcclxuICAgICAgICAvLyBhcHBlbmRcclxuICAgICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChudGZseExvYWRpbmdXcmFwKTtcclxuXG4gICAgICAgIC8vIGlmIGNsaWNrIHRvIGNsb3NlXHJcbiAgICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncy5jbGlja1RvQ2xvc2UpIHtcclxuICAgICAgICAgIHZhciBsb2FkaW5nV3JhcEVsbSA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChudGZseExvYWRpbmdXcmFwLmlkKTtcclxuICAgICAgICAgIGxvYWRpbmdXcmFwRWxtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBudGZseExvYWRpbmdXcmFwLmNsYXNzTGlzdC5hZGQoJ254LXJlbW92ZScpO1xyXG4gICAgICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGlmIChudGZseExvYWRpbmdXcmFwLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIG50Zmx4TG9hZGluZ1dyYXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChudGZseExvYWRpbmdXcmFwKTtcclxuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sIG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLy8gYXBwZW5kOiBlbmRcclxuICAgIH1cclxuICAgIC8vIHJlbW92ZSBsb2FkaW5nXHJcbiAgICBlbHNlIHtcclxuICAgICAgLy8gaWYgdGhlcmUgaXMgYSBsb2FkaW5nIGVsZW1lbnRcclxuICAgICAgaWYgKHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nU2V0dGluZ3MuSUQpKSB7XHJcbiAgICAgICAgdmFyIGxvYWRpbmdFbG0gPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobG9hZGluZ1NldHRpbmdzLklEKTtcclxuICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgbG9hZGluZ0VsbS5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuICAgICAgICAgIHZhciB0aW1lb3V0MiA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAobG9hZGluZ0VsbS5wYXJlbnROb2RlICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgbG9hZGluZ0VsbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGxvYWRpbmdFbG0pO1xyXG4gICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0Mik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0sIG5ld0xvYWRpbmdTZXR0aW5ncy5jc3NBbmltYXRpb25EdXJhdGlvbik7XHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgfSwgZGVsYXkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxuICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgYmFja3VwIHNldHRpbmdzXHJcbiAgICBuZXdMb2FkaW5nU2V0dGluZ3MgPSBjb21tb25FeHRlbmRPcHRpb25zKHRydWUsIG5ld0xvYWRpbmdTZXR0aW5ncywgbmV3TG9hZGluZ1NldHRpbmdzQmFja3VwKTtcclxuICB9O1xuICAvLyBMT0FESU5HOiBDcmVhdGU6IGVuZFxuXG4gIC8vIExPQURJTkc6IENoYW5nZSBNZXNzYWdlOiBiZWdpblxuICB2YXIgbG9hZGluZ0NoYW5nZU1lc3NhZ2UgPSBmdW5jdGlvbiAobmV3TWVzc2FnZSkge1xyXG4gICAgLy8gY2hlY2sgdGhlIG5ldyBtZXNzYWdlXHJcbiAgICBpZiAodHlwZW9mIG5ld01lc3NhZ2UgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIG5ld01lc3NhZ2UgPSAnJztcclxuICAgIH1cclxuICAgIC8vIGlmIGhhcyBhbnkgbG9hZGluZ1xyXG4gICAgdmFyIG1lc3NhZ2VXcmFwID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxvYWRpbmdTZXR0aW5ncy5JRCk7XHJcbiAgICBpZiAobWVzc2FnZVdyYXApIHtcclxuICAgICAgLy8gaWYgdGhlcmUgaXMgYSBuZXcgbWVzc2FnZVxyXG4gICAgICBpZiAobmV3TWVzc2FnZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgICAgICBpZiAobmV3TWVzc2FnZS5sZW5ndGggPiBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZU1heExlbmd0aCkge1xyXG4gICAgICAgICAgbmV3TWVzc2FnZSA9IGNvbW1vbkdldFBsYWludGV4dChuZXdNZXNzYWdlKS5zdWJzdHJpbmcoMCwgbmV3TG9hZGluZ1NldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpICsgJy4uLic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIG5ld01lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobmV3TWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIG1heCBsZW5ndGg6IGVuZFxyXG5cbiAgICAgICAgLy8gdGhlcmUgaXMgYSBtZXNzYWdlIGVsZW1lbnRcclxuICAgICAgICB2YXIgb2xkTWVzc2FnZUVsbSA9IG1lc3NhZ2VXcmFwLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdwJylbMF07XHJcbiAgICAgICAgaWYgKG9sZE1lc3NhZ2VFbG0pIHtcclxuICAgICAgICAgIG9sZE1lc3NhZ2VFbG0uaW5uZXJIVE1MID0gbmV3TWVzc2FnZTsgLy8gY2hhbmdlIHRoZSBtZXNzYWdlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHRoZXJlIGlzIG5vIG1lc3NhZ2UgZWxlbWVudFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgLy8gY3JlYXRlIGEgbmV3IG1lc3NhZ2UgZWxlbWVudDogYmVnaW5cclxuICAgICAgICAgIHZhciBuZXdNZXNzYWdlSFRNTCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgICBuZXdNZXNzYWdlSFRNTC5pZCA9IG5ld0xvYWRpbmdTZXR0aW5ncy5tZXNzYWdlSUQ7XHJcbiAgICAgICAgICBuZXdNZXNzYWdlSFRNTC5jbGFzc05hbWUgPSAnbngtbG9hZGluZy1tZXNzYWdlIG54LWxvYWRpbmctbWVzc2FnZS1uZXcnO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuc3R5bGUuY29sb3IgPSBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUNvbG9yO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuc3R5bGUuZm9udFNpemUgPSBuZXdMb2FkaW5nU2V0dGluZ3MubWVzc2FnZUZvbnRTaXplO1xyXG4gICAgICAgICAgbmV3TWVzc2FnZUhUTUwuaW5uZXJIVE1MID0gbmV3TWVzc2FnZTtcclxuICAgICAgICAgIG1lc3NhZ2VXcmFwLmFwcGVuZENoaWxkKG5ld01lc3NhZ2VIVE1MKTtcclxuICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBtZXNzYWdlIGVsZW1lbnQ6IGVuZFxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvLyBpZiBubyBtZXNzYWdlXHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignV2hlcmUgaXMgdGhlIG5ldyBtZXNzYWdlPycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcbiAgLy8gTE9BRElORzogQ2hhbmdlIE1lc3NhZ2U6IGVuZFxuXG4gIHZhciBOb3RpZmxpeCA9IHtcbiAgICBMb2FkaW5nOiB7XHJcbiAgICAgIC8vIEluaXRcclxuICAgICAgaW5pdDogZnVuY3Rpb24gKHVzZXJMb2FkaW5nT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGV4dGVuZCBvcHRpb25zXHJcbiAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBsb2FkaW5nU2V0dGluZ3MsIHVzZXJMb2FkaW5nT3B0aW9ucyk7XHJcbiAgICAgICAgLy8gaW50ZXJuYWwgY3NzIGlmIGV4aXN0XHJcbiAgICAgICAgY29tbW9uU2V0SW50ZXJuYWxDU1NDb2Rlcyhsb2FkaW5nR2V0SW50ZXJuYWxDU1NDb2RlcywgJ05vdGlmbGl4TG9hZGluZ0ludGVybmFsQ1NTJyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE1lcmdlIEZpcnN0IEluaXRcclxuICAgICAgbWVyZ2U6IGZ1bmN0aW9uICh1c2VyTG9hZGluZ0V4dGVuZE9wdGlvbnMpIHtcclxuICAgICAgICAvLyBpZiBpbml0aWFsaXplZCBhbHJlYWR5XHJcbiAgICAgICAgaWYgKG5ld0xvYWRpbmdTZXR0aW5ncykge1xyXG4gICAgICAgICAgbmV3TG9hZGluZ1NldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdMb2FkaW5nU2V0dGluZ3MsIHVzZXJMb2FkaW5nRXh0ZW5kT3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGluaXRpYWxpemUgZmlyc3RcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgIGNvbW1vbkNvbnNvbGVFcnJvcignWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgTG9hZGluZyBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uJyk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBTdGFuZGFyZFxyXG4gICAgICBzdGFuZGFyZDogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5TdGFuZGFyZCwgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIEhvdXJnbGFzc1xyXG4gICAgICBob3VyZ2xhc3M6IGZ1bmN0aW9uIChtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZSh0eXBlc0xvYWRpbmcuSG91cmdsYXNzLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gQ2lyY2xlXHJcbiAgICAgIGNpcmNsZTogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5DaXJjbGUsIG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMsIHRydWUsIDApOyAvLyB0cnVlID0+IHNob3cgJiYgMCA9PiBkZWxheVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBBcnJvd3NcclxuICAgICAgYXJyb3dzOiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLkFycm93cywgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIERvdHNcclxuICAgICAgZG90czogZnVuY3Rpb24gKG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICBsb2FkaW5nQ3JlYXRlKHR5cGVzTG9hZGluZy5Eb3RzLCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gUHVsc2VcclxuICAgICAgcHVsc2U6IGZ1bmN0aW9uIChtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZSh0eXBlc0xvYWRpbmcuUHVsc2UsIG1lc3NhZ2VPck9wdGlvbnMsIG9wdGlvbnMsIHRydWUsIDApOyAvLyB0cnVlID0+IHNob3cgJiYgMCA9PiBkZWxheVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBDdXN0b21cclxuICAgICAgY3VzdG9tOiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLkN1c3RvbSwgbWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucywgdHJ1ZSwgMCk7IC8vIHRydWUgPT4gc2hvdyAmJiAwID0+IGRlbGF5XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE5vdGlmbGl4XHJcbiAgICAgIG5vdGlmbGl4OiBmdW5jdGlvbiAobWVzc2FnZU9yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIGxvYWRpbmdDcmVhdGUodHlwZXNMb2FkaW5nLk5vdGlmbGl4LCBtZXNzYWdlT3JPcHRpb25zLCBvcHRpb25zLCB0cnVlLCAwKTsgLy8gdHJ1ZSA9PiBzaG93ICYmIDAgPT4gZGVsYXlcclxuICAgICAgfSxcclxuICAgICAgLy8gUmVtb3ZlXHJcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gKGRlbGF5KSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBkZWxheSAhPT0gJ251bWJlcicpIHsgZGVsYXkgPSAwOyB9XHJcbiAgICAgICAgbG9hZGluZ0NyZWF0ZShudWxsLCBudWxsLCBudWxsLCBmYWxzZSwgZGVsYXkpOyAvLyBmYWxzZSA9PiBoaWRlL3JlbW92ZVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBDaGFuZ2UgVGhlIE1lc3NhZ2VcclxuICAgICAgY2hhbmdlOiBmdW5jdGlvbiAobmV3TWVzc2FnZSkge1xyXG4gICAgICAgIGxvYWRpbmdDaGFuZ2VNZXNzYWdlKG5ld01lc3NhZ2UpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcbiAgfTtcblxuICBpZiAodHlwZW9mIHdpbmRvdy5Ob3RpZmxpeCA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCB3aW5kb3cuTm90aWZsaXgsIHsgTG9hZGluZzogTm90aWZsaXguTG9hZGluZyB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geyBMb2FkaW5nOiBOb3RpZmxpeC5Mb2FkaW5nIH07XG4gIH1cblxufSk7IiwiLypcbiogTm90aWZsaXggUmVwb3J0IEFJTyAoaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8pXG4qIERlc2NyaXB0aW9uOiBUaGlzIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBhdXRvbWF0aWNhbGx5IHRoYXQgdXNpbmcgXCJub3RpZmxpeC5qc1wiLCBhbmQgXCJub3RpZmxpeC5jc3NcIiBmaWxlcy5cbiogVmVyc2lvbjogMy4yLjVcbiogQXV0aG9yOiBGdXJrYW4gTVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9mdXJjYW4pXG4qIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKVxuKi9cblxuLyogZ2xvYmFsIGRlZmluZSAqL1xuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KHJvb3QpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnkocm9vdCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5Ob3RpZmxpeCA9IGZhY3Rvcnkocm9vdCk7XG4gIH1cbn0pKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiAod2luZG93KSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBiZWdpblxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XG4gIC8vIENPTU1PTjogU1NSIGNoZWNrOiBlbmRcblxuICAvLyBDT01NT046IFZhcmlhYmxlczogYmVnaW5cbiAgdmFyIG5vdGlmbGl4TmFtZXNwYWNlID0gJ05vdGlmbGl4JztcclxuICB2YXIgbm90aWZsaXhDb25zb2xlRG9jcyA9ICdcXG5cXG5WaXNpdCBkb2N1bWVudGF0aW9uIHBhZ2UgdG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9ub3RpZmxpeC5naXRodWIuaW8vZG9jdW1lbnRhdGlvbic7XHJcbiAgdmFyIGRlZmF1bHRGb250RmFtaWx5ID0gJy1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWYnO1xuICAvLyBDT01NT046IFZhcmlhYmxlczogZW5kXG5cbiAgLy8gUkVQT1JUOiBEZWZhdWx0IFNldHRpbmdzOiBiZWdpblxuICB2YXIgdHlwZXNSZXBvcnQgPSB7XHJcbiAgICBTdWNjZXNzOiAnU3VjY2VzcycsXHJcbiAgICBGYWlsdXJlOiAnRmFpbHVyZScsXHJcbiAgICBXYXJuaW5nOiAnV2FybmluZycsXHJcbiAgICBJbmZvOiAnSW5mbycsXHJcbiAgfTtcclxuICB2YXIgbmV3UmVwb3J0U2V0dGluZ3M7XHJcbiAgdmFyIHJlcG9ydFNldHRpbmdzID0ge1xyXG4gICAgSUQ6ICdOb3RpZmxpeFJlcG9ydFdyYXAnLCAvLyBjYW4gbm90IGN1c3RvbWl6YWJsZVxyXG4gICAgY2xhc3NOYW1lOiAnbm90aWZsaXgtcmVwb3J0JyxcclxuICAgIHdpZHRoOiAnMzIwcHgnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2Y4ZjhmOCcsXHJcbiAgICBib3JkZXJSYWRpdXM6ICcyNXB4JyxcclxuICAgIHJ0bDogZmFsc2UsXHJcbiAgICB6aW5kZXg6IDQwMDIsXHJcbiAgICBiYWNrT3ZlcmxheTogdHJ1ZSxcclxuICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDAsMCwwLDAuNSknLFxyXG4gICAgYmFja092ZXJsYXlDbGlja1RvQ2xvc2U6IGZhbHNlLFxyXG4gICAgZm9udEZhbWlseTogJ1F1aWNrc2FuZCcsXHJcbiAgICBzdmdTaXplOiAnMTEwcHgnLFxyXG4gICAgcGxhaW5UZXh0OiB0cnVlLFxyXG4gICAgdGl0bGVGb250U2l6ZTogJzE2cHgnLFxyXG4gICAgdGl0bGVNYXhMZW5ndGg6IDM0LFxyXG4gICAgbWVzc2FnZUZvbnRTaXplOiAnMTNweCcsXHJcbiAgICBtZXNzYWdlTWF4TGVuZ3RoOiA0MDAsXHJcbiAgICBidXR0b25Gb250U2l6ZTogJzE0cHgnLFxyXG4gICAgYnV0dG9uTWF4TGVuZ3RoOiAzNCxcclxuICAgIGNzc0FuaW1hdGlvbjogdHJ1ZSxcclxuICAgIGNzc0FuaW1hdGlvbkR1cmF0aW9uOiAzNjAsXHJcbiAgICBjc3NBbmltYXRpb25TdHlsZTogJ2ZhZGUnLCAvLyAnZmFkZScgLSAnem9vbSdcclxuXG4gICAgc3VjY2Vzczoge1xyXG4gICAgICBzdmdDb2xvcjogJyMzMmM2ODInLFxyXG4gICAgICB0aXRsZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICAgIG1lc3NhZ2VDb2xvcjogJyMyNDI0MjQnLFxyXG4gICAgICBidXR0b25CYWNrZ3JvdW5kOiAnIzMyYzY4MicsXHJcbiAgICAgIGJ1dHRvbkNvbG9yOiAnI2ZmZicsXHJcbiAgICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDUwLDE5OCwxMzAsMC4yKScsXHJcbiAgICB9LFxyXG5cbiAgICBmYWlsdXJlOiB7XHJcbiAgICAgIHN2Z0NvbG9yOiAnI2ZmNTU0OScsXHJcbiAgICAgIHRpdGxlQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgbWVzc2FnZUNvbG9yOiAnIzI0MjQyNCcsXHJcbiAgICAgIGJ1dHRvbkJhY2tncm91bmQ6ICcjZmY1NTQ5JyxcclxuICAgICAgYnV0dG9uQ29sb3I6ICcjZmZmJyxcclxuICAgICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMjU1LDg1LDczLDAuMiknLFxyXG4gICAgfSxcclxuXG4gICAgd2FybmluZzoge1xyXG4gICAgICBzdmdDb2xvcjogJyNlZWJmMzEnLFxyXG4gICAgICB0aXRsZUNvbG9yOiAnIzFlMWUxZScsXHJcbiAgICAgIG1lc3NhZ2VDb2xvcjogJyMyNDI0MjQnLFxyXG4gICAgICBidXR0b25CYWNrZ3JvdW5kOiAnI2VlYmYzMScsXHJcbiAgICAgIGJ1dHRvbkNvbG9yOiAnI2ZmZicsXHJcbiAgICAgIGJhY2tPdmVybGF5Q29sb3I6ICdyZ2JhKDIzOCwxOTEsNDksMC4yKScsXHJcbiAgICB9LFxyXG5cbiAgICBpbmZvOiB7XHJcbiAgICAgIHN2Z0NvbG9yOiAnIzI2YzBkMycsXHJcbiAgICAgIHRpdGxlQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgbWVzc2FnZUNvbG9yOiAnIzI0MjQyNCcsXHJcbiAgICAgIGJ1dHRvbkJhY2tncm91bmQ6ICcjMjZjMGQzJyxcclxuICAgICAgYnV0dG9uQ29sb3I6ICcjZmZmJyxcclxuICAgICAgYmFja092ZXJsYXlDb2xvcjogJ3JnYmEoMzgsMTkyLDIxMSwwLjIpJyxcclxuICAgIH0sXHJcbiAgfTtcbiAgLy8gUkVQT1JUOiBEZWZhdWx0IFNldHRpbmdzOiBlbmRcblxuICAvLyBDT01NT046IENvbnNvbGUgRXJyb3I6IGJlZ2luXG4gIHZhciBjb21tb25Db25zb2xlRXJyb3IgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJyVjICcgKyBub3RpZmxpeE5hbWVzcGFjZSArICcgRXJyb3IgJywgJ3BhZGRpbmc6MnB4O2JvcmRlci1yYWRpdXM6MjBweDtjb2xvcjojZmZmO2JhY2tncm91bmQ6I2ZmNTU0OScsICdcXG4nICsgbWVzc2FnZSArIG5vdGlmbGl4Q29uc29sZURvY3MpO1xyXG4gIH07XG4gIC8vIENPTU1PTjogQ29uc29sZSBFcnJvcjogZW5kXG5cbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGJlZ2luXG4gIHZhciBjb21tb25DaGVja0hlYWRPckJvZHkgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgaWYgKCFlbGVtZW50KSB7IGVsZW1lbnQgPSAnaGVhZCc7IH1cclxuICAgIGlmICh3aW5kb3cuZG9jdW1lbnRbZWxlbWVudF0gPT09IG51bGwpIHtcclxuICAgICAgY29tbW9uQ29uc29sZUVycm9yKCdcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQsIGJ1dCB5b3UgY2FsbGVkIGl0IGJlZm9yZSB0aGUgXCI8JyArIGVsZW1lbnQgKyAnPlwiIGVsZW1lbnQgaGFzIGJlZW4gY3JlYXRlZC4nKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfTtcbiAgLy8gQ09NTU9OOiBDaGVjayBIZWFkIG9yIEJvZHk6IGVuZFxuXG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIGNvbW1vblNldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoZ2V0SW50ZXJuYWxDU1NDb2Rlcywgc3R5bGVFbGVtZW50SWQpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBoZWFkXHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnaGVhZCcpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpbnRlcm5hbCBjc3NcclxuICAgIGlmIChnZXRJbnRlcm5hbENTU0NvZGVzKCkgIT09IG51bGwgJiYgIXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdHlsZUVsZW1lbnRJZCkpIHtcclxuICAgICAgdmFyIGludGVybmFsQ1NTID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgIGludGVybmFsQ1NTLmlkID0gc3R5bGVFbGVtZW50SWQ7XHJcbiAgICAgIGludGVybmFsQ1NTLmlubmVySFRNTCA9IGdldEludGVybmFsQ1NTQ29kZXMoKTtcclxuICAgICAgd2luZG93LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoaW50ZXJuYWxDU1MpO1xyXG4gICAgfVxyXG4gIH07XG4gIC8vIENPTU1PTjogU2V0IEludGVybmFsIENTUyBDb2RlczogZW5kXG5cbiAgLy8gQ09NTU9OOiBFeHRlbmQgT3B0aW9uczogYmVnaW5cbiAgdmFyIGNvbW1vbkV4dGVuZE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyB2YXJpYWJsZXNcclxuICAgIHZhciBleHRlbmRlZCA9IHt9O1xyXG4gICAgdmFyIGRlZXAgPSBmYWxzZTtcclxuICAgIHZhciBpID0gMDtcclxuICAgIC8vIGNoZWNrIGlmIGEgZGVlcCBtZXJnZVxyXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHNbMF0pID09PSAnW29iamVjdCBCb29sZWFuXScpIHtcclxuICAgICAgZGVlcCA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgaSsrO1xyXG4gICAgfVxyXG4gICAgLy8gbWVyZ2UgdGhlIG9iamVjdCBpbnRvIHRoZSBleHRlbmRlZCBvYmplY3RcclxuICAgIHZhciBtZXJnZSA9IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIHtcclxuICAgICAgICAgIC8vIGlmIHByb3BlcnR5IGlzIGFuIG9iamVjdCwgbWVyZ2UgcHJvcGVydGllc1xyXG4gICAgICAgICAgaWYgKGRlZXAgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9ialtwcm9wXSkgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gY29tbW9uRXh0ZW5kT3B0aW9ucyhleHRlbmRlZFtwcm9wXSwgb2JqW3Byb3BdKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGV4dGVuZGVkW3Byb3BdID0gb2JqW3Byb3BdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIG9iamVjdCBhbmQgY29uZHVjdCBhIG1lcmdlXHJcbiAgICBmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBtZXJnZShhcmd1bWVudHNbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGV4dGVuZGVkO1xyXG4gIH07XG4gIC8vIENPTU1PTjogRXh0ZW5kIE9wdGlvbnM6IGVuZFxuXG4gIC8vIENPTU1PTjogR2V0IFBsYWludGV4dDogYmVnaW5cbiAgdmFyIGNvbW1vbkdldFBsYWludGV4dCA9IGZ1bmN0aW9uIChodG1sKSB7XHJcbiAgICB2YXIgaHRtbFBvb2wgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBodG1sUG9vbC5pbm5lckhUTUwgPSBodG1sO1xyXG4gICAgcmV0dXJuIGh0bWxQb29sLnRleHRDb250ZW50IHx8IGh0bWxQb29sLmlubmVyVGV4dCB8fCAnJztcclxuICB9O1xuICAvLyBDT01NT046IEdldCBQbGFpbnRleHQ6IGVuZFxuXG4gIC8vIFJFUE9SVDogU1ZHIEljb24gU3VjY2VzczogYmVnaW5cbiAgdmFyIHJlcG9ydFN2Z0ljb25TdWNjZXNzID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICcxMTBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnIzMyYzY4Mic7IH1cclxuICAgIHZhciByZXBvcnRTdmdTdWNjZXNzID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhSZXBvcnRTdWNjZXNzXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMi1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MyLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX0jTlhSZXBvcnRTdWNjZXNzICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIj48cGF0aCBkPVwiTTYwIDExNS4zOEMyOS40NiAxMTUuMzggNC42MiA5MC41NCA0LjYyIDYwIDQuNjIgMjkuNDYgMjkuNDYgNC42MiA2MCA0LjYyYzMwLjU0IDAgNTUuMzggMjQuODQgNTUuMzggNTUuMzggMCAzMC41NC0yNC44NCA1NS4zOC01NS4zOCA1NS4zOHpNNjAgMEMyNi45MiAwIDAgMjYuOTIgMCA2MHMyNi45MiA2MCA2MCA2MCA2MC0yNi45MiA2MC02MFM5My4wOCAwIDYwIDB6XCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczMtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVwiIGZpbGw9XCJpbmhlcml0XCIgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIvPjwvZz48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIj48cGF0aCBkPVwiTTg4LjI3IDM1LjM5TDUyLjggNzUuMjkgMzEuNDMgNTguMmMtLjk4LS44MS0yLjQ0LS42My0zLjI0LjM2LS43OS45OS0uNjMgMi40NC4zNiAzLjI0bDIzLjA4IDE4LjQ2Yy40My4zNC45My41MSAxLjQ0LjUxLjY0IDAgMS4yNy0uMjYgMS43NC0uNzhsMzYuOTEtNDEuNTNhMi4zIDIuMyAwIDAgMC0uMTktMy4yNmMtLjk1LS44Ni0yLjQxLS43Ny0zLjI2LjE5elwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFN1Y2Nlc3M0LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiByZXBvcnRTdmdTdWNjZXNzO1xyXG4gIH07XG4gIC8vIFJFUE9SVDogU1ZHIEljb24gU3VjY2VzczogZW5kXG5cbiAgLy8gUkVQT1JUOiBTVkcgSWNvbiBGYWlsdXJlOiBiZWdpblxuICB2YXIgcmVwb3J0U3ZnSWNvbkZhaWx1cmUgPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzExMHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjZmY1NTQ5JzsgfVxyXG4gICAgdmFyIHJlcG9ydFN2Z0ZhaWx1cmUgPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWFJlcG9ydEZhaWx1cmVcIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgZmlsbD1cIicgKyBjb2xvciArICdcIiB2aWV3Qm94PVwiMCAwIDEyMCAxMjBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fSNOWFJlcG9ydEZhaWx1cmUgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVwiPjxwYXRoIGQ9XCJNNC4zNSAzNC45NWMwLTE2LjgyIDEzLjc4LTMwLjYgMzAuNi0zMC42aDUwLjFjMTYuODIgMCAzMC42IDEzLjc4IDMwLjYgMzAuNnY1MC4xYzAgMTYuODItMTMuNzggMzAuNi0zMC42IDMwLjZoLTUwLjFjLTE2LjgyIDAtMzAuNi0xMy43OC0zMC42LTMwLjZ2LTUwLjF6TTM0Ljk1IDEyMGg1MC4xYzE5LjIyIDAgMzQuOTUtMTUuNzMgMzQuOTUtMzQuOTV2LTUwLjFDMTIwIDE1LjczIDEwNC4yNyAwIDg1LjA1IDBoLTUwLjFDMTUuNzMgMCAwIDE1LjczIDAgMzQuOTV2NTAuMUMwIDEwNC4yNyAxNS43MyAxMjAgMzQuOTUgMTIwelwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcIj48cGF0aCBkPVwiTTgyLjQgMzcuNmMtLjktLjktMi4zNy0uOS0zLjI3IDBMNjAgNTYuNzMgNDAuODYgMzcuNmEyLjMwNiAyLjMwNiAwIDAgMC0zLjI2IDMuMjZMNTYuNzMgNjAgMzcuNiA3OS4xM2MtLjkuOS0uOSAyLjM3IDAgMy4yNy40NS40NSAxLjA0LjY4IDEuNjMuNjguNTkgMCAxLjE4LS4yMyAxLjYzLS42OEw2MCA2My4yNiA3OS4xMyA4Mi40Yy40NS40NSAxLjA1LjY4IDEuNjQuNjguNTggMCAxLjE4LS4yMyAxLjYzLS42OC45LS45LjktMi4zNyAwLTMuMjdMNjMuMjYgNjAgODIuNCA0MC44NmMuOS0uOTEuOS0yLjM2IDAtMy4yNnpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gcmVwb3J0U3ZnRmFpbHVyZTtcclxuICB9O1xuICAvLyBSRVBPUlQ6IFNWRyBJY29uIEZhaWx1cmU6IGVuZFxuXG4gIC8vIFJFUE9SVDogU1ZHIEljb24gV2FybmluZzogYmVnaW5cbiAgdmFyIHJlcG9ydFN2Z0ljb25XYXJuaW5nID0gZnVuY3Rpb24gKHdpZHRoLCBjb2xvcikge1xyXG4gICAgaWYgKCF3aWR0aCkgeyB3aWR0aCA9ICcxMTBweCc7IH1cclxuICAgIGlmICghY29sb3IpIHsgY29sb3IgPSAnI2VlYmYzMSc7IH1cclxuICAgIHZhciByZXBvcnRTdmdXYXJuaW5nID0gJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGlkPVwiTlhSZXBvcnRXYXJuaW5nXCIgd2lkdGg9XCInICsgd2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHdpZHRoICsgJ1wiIGZpbGw9XCInICsgY29sb3IgKyAnXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX0jTlhSZXBvcnRXYXJuaW5nICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcIj48cGF0aCBkPVwiTTExNS40NiAxMDYuMTVsLTU0LjA0LTkzLjhjLS42MS0xLjA2LTIuMjMtMS4wNi0yLjg0IDBsLTU0LjA0IDkzLjhjLS42MiAxLjA3LjIxIDIuMjkgMS40MiAyLjI5aDEwOC4wOGMxLjIxIDAgMi4wNC0xLjIyIDEuNDItMi4yOXpNNjUuMTcgMTAuMmw1NC4wNCA5My44YzIuMjggMy45Ni0uNjUgOC43OC01LjE3IDguNzhINS45NmMtNC41MiAwLTcuNDUtNC44Mi01LjE3LTguNzhsNTQuMDQtOTMuOGMyLjI4LTMuOTUgOC4wMy00IDEwLjM0IDB6XCIgc3R5bGU9XCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0V2FybmluZzItYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVwiIGZpbGw9XCJpbmhlcml0XCIgZGF0YS1hbmltYXRvci1ncm91cD1cInRydWVcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XCIyXCIvPjwvZz48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweClcIj48cGF0aCBkPVwiTTU3LjgzIDk0LjAxYzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN3YtMy4yYzAtMS4yLS45Ny0yLjE3LTIuMTctMi4xN3MtMi4xNy45Ny0yLjE3IDIuMTd2My4yem0wLTE0LjE1YzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN1YzOS4yMWMwLTEuMi0uOTctMi4xNy0yLjE3LTIuMTdzLTIuMTcuOTctMi4xNyAyLjE3djQwLjY1elwiIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmc0LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmc0LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcIiBmaWxsPVwiaW5oZXJpdFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XCJ0cnVlXCIgZGF0YS1hbmltYXRvci10eXBlPVwiMlwiLz48L2c+PC9zdmc+JztcclxuICAgIHJldHVybiByZXBvcnRTdmdXYXJuaW5nO1xyXG4gIH07XG4gIC8vIFJFUE9SVDogU1ZHIEljb24gV2FybmluZzogZW5kXG5cbiAgLy8gUkVQT1JUOiBTVkcgSWNvbiBJbmZvOiBiZWdpblxuICB2YXIgcmVwb3J0U3ZnSWNvbkluZm8gPSBmdW5jdGlvbiAod2lkdGgsIGNvbG9yKSB7XHJcbiAgICBpZiAoIXdpZHRoKSB7IHdpZHRoID0gJzExMHB4JzsgfVxyXG4gICAgaWYgKCFjb2xvcikgeyBjb2xvciA9ICcjMjZjMGQzJzsgfVxyXG4gICAgdmFyIHJlcG9ydFN2Z0luZm8gPSAnPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaWQ9XCJOWFJlcG9ydEluZm9cIiB3aWR0aD1cIicgKyB3aWR0aCArICdcIiBoZWlnaHQ9XCInICsgd2lkdGggKyAnXCIgZmlsbD1cIicgKyBjb2xvciArICdcIiB2aWV3Qm94PVwiMCAwIDEyMCAxMjBcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm8zLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRJbmZvMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEluZm8xLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fSNOWFJlcG9ydEluZm8gKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVwiPjxwYXRoIGQ9XCJNNjAgMTE1LjM4QzI5LjQ2IDExNS4zOCA0LjYyIDkwLjU0IDQuNjIgNjAgNC42MiAyOS40NiAyOS40NiA0LjYyIDYwIDQuNjJjMzAuNTQgMCA1NS4zOCAyNC44NCA1NS4zOCA1NS4zOCAwIDMwLjU0LTI0Ljg0IDU1LjM4LTU1LjM4IDU1LjM4ek02MCAwQzI2LjkyIDAgMCAyNi45MiAwIDYwczI2LjkyIDYwIDYwIDYwIDYwLTI2LjkyIDYwLTYwUzkzLjA4IDAgNjAgMHpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMi1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMi1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjxnIHN0eWxlPVwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXCI+PHBhdGggZD1cIk01Ny43NSA0My44NWMwLTEuMjQgMS4wMS0yLjI1IDIuMjUtMi4yNXMyLjI1IDEuMDEgMi4yNSAyLjI1djQ4LjE4YzAgMS4yNC0xLjAxIDIuMjUtMi4yNSAyLjI1cy0yLjI1LTEuMDEtMi4yNS0yLjI1VjQzLjg1em0wLTE1Ljg4YzAtMS4yNCAxLjAxLTIuMjUgMi4yNS0yLjI1czIuMjUgMS4wMSAyLjI1IDIuMjV2My4zMmMwIDEuMjUtMS4wMSAyLjI1LTIuMjUgMi4yNXMtMi4yNS0xLTIuMjUtMi4yNXYtMy4zMnpcIiBzdHlsZT1cIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXCIgZmlsbD1cImluaGVyaXRcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVwidHJ1ZVwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cIjJcIi8+PC9nPjwvc3ZnPic7XHJcbiAgICByZXR1cm4gcmVwb3J0U3ZnSW5mbztcclxuICB9O1xuICAvLyBSRVBPUlQ6IFNWRyBJY29uIEluZm86IGVuZFxuXG4gIC8vIFJFUE9SVDogR2V0IEludGVybmFsIENTUyBDb2RlczogYmVnaW5cbiAgdmFyIHJlcG9ydEdldEludGVybmFsQ1NTQ29kZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcmVwb3J0Q1NTID0gJ1tpZF49Tm90aWZsaXhSZXBvcnRXcmFwXXtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjQwMDI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Zm9udC1mYW1pbHk6XCJRdWlja3NhbmRcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcIlNlZ29lIFVJXCIsUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixBcmlhbCxzYW5zLXNlcmlmO2xlZnQ6MDt0b3A6MDtwYWRkaW5nOjEwcHg7Y29sb3I6IzFlMWUxZTtib3JkZXItcmFkaXVzOjI1cHg7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXSAqey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1vdmVybGF5XCJde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuNSk7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDowfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXYubngtcmVwb3J0LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl17d2lkdGg6MzIwcHg7bWF4LXdpZHRoOjEwMCU7bWF4LWhlaWdodDo5NnZoO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bztib3JkZXItcmFkaXVzOmluaGVyaXQ7cGFkZGluZzoxMHB4Oy13ZWJraXQtZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLDAsMCwwLjA1KSk7ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLCAwLCAwLCAuMDUpKTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjAzKTtiYWNrZ3JvdW5kOiNmOGY4Zjg7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl06Oi13ZWJraXQtc2Nyb2xsYmFye3dpZHRoOjA7aGVpZ2h0OjB9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0+ZGl2W2NsYXNzJD1cIi1pY29uXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt3aWR0aDoxMTBweDtoZWlnaHQ6MTEwcHg7ZGlzcGxheTpibG9jazttYXJnaW46NnB4IGF1dG8gMTJweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdPmRpdltjbGFzcyQ9XCItaWNvblwiXSBzdmd7bWluLXdpZHRoOjEwMCU7bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG99W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPio+aDV7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OjUwMDtsaW5lLWhlaWdodDoxLjQ7bWFyZ2luOjAgMCAxMHB4O3BhZGRpbmc6MCAwIDEwcHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMSk7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT4qPnB7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDpub3JtYWw7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3BhZGRpbmc6MCAxMHB4O21hcmdpbjowIDAgMTBweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0gYSNOWFJlcG9ydEJ1dHRvbnt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50Oy13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6cmlnaHQ7cGFkZGluZzo3cHggMTdweDtiYWNrZ3JvdW5kOiMzMmM2ODI7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40O2ZvbnQtd2VpZ2h0OjUwMDtib3JkZXItcmFkaXVzOmluaGVyaXQhaW1wb3J0YW50O2NvbG9yOiNmZmZ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdIGEjTlhSZXBvcnRCdXR0b246aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpO2JveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSl9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJ0bC1vbiBhI05YUmVwb3J0QnV0dG9ue2Zsb2F0OmxlZnR9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItb3ZlcmxheVwiXS5ueC13aXRoLWFuaW1hdGlvbnstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtb3ZlcmxheS1hbmltYXRpb24gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XCItY29udGVudFwiXS5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRley13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cIi1jb250ZW50XCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb217LXdlYmtpdC1hbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb217MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41KTt0cmFuc2Zvcm06c2NhbGUoLjUpfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLW92ZXJsYXlcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVwiLWNvbnRlbnRcIl0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcmVtb3ZlPmRpdltjbGFzcyo9XCItY29udGVudFwiXS5ueC13aXRoLWFuaW1hdGlvbi5ueC16b29te29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZXswJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfTUwJXtvcGFjaXR5Oi41Oy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9fUBrZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZXswJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfTUwJXtvcGFjaXR5Oi41Oy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9fSc7XHJcbiAgICByZXR1cm4gcmVwb3J0Q1NTIHx8IG51bGw7XHJcbiAgfTtcbiAgLy8gUkVQT1JUOiBHZXQgSW50ZXJuYWwgQ1NTIENvZGVzOiBlbmRcblxuICAvLyBSRVBPUlQ6IENyZWF0ZTogYmVnaW5cbiAgdmFyIHJlcG9ydENyZWF0ZSA9IGZ1bmN0aW9uIChyZXBvcnRUeXBlLCB0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgIC8vIGNoZWNrIGRvYyBib2R5XHJcbiAgICBpZiAoIWNvbW1vbkNoZWNrSGVhZE9yQm9keSgnYm9keScpKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cbiAgICAvLyBpZiBub3QgaW5pdGlhbGl6ZWQgcHJldGVuZCBsaWtlIGluaXRcclxuICAgIGlmICghbmV3UmVwb3J0U2V0dGluZ3MpIHtcclxuICAgICAgTm90aWZsaXguUmVwb3J0LmluaXQoe30pO1xyXG4gICAgfVxyXG5cbiAgICAvLyBjcmVhdGUgYSBiYWNrdXAgZm9yIHNldHRpbmdzXHJcbiAgICB2YXIgbmV3UmVwb3J0U2V0dGluZ3NCYWNrdXAgPSB7fTtcclxuXG4gICAgLy8gY2hlY2sgY2FsbGJhY2tPck9wdGlvbnMgYW5kIG9wdGlvbnM6IGJlZ2luXHJcbiAgICBpZiAoKHR5cGVvZiBjYWxsYmFja09yT3B0aW9ucyA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoY2FsbGJhY2tPck9wdGlvbnMpKSB8fCAodHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KG9wdGlvbnMpKSkge1xyXG4gICAgICAvLyBuZXcgb3B0aW9uc1xyXG4gICAgICB2YXIgbmV3T3B0aW9ucyA9IHt9O1xyXG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrT3JPcHRpb25zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG5ld09wdGlvbnMgPSBjYWxsYmFja09yT3B0aW9ucztcclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICBuZXdPcHRpb25zID0gb3B0aW9ucztcclxuICAgICAgfVxyXG5cbiAgICAgIC8vIGV4dGVuZCB0aGUgYmFja3VwIHNldHRpbmdzIHdpdGggbmV3IHNldHRpbmdzXHJcbiAgICAgIG5ld1JlcG9ydFNldHRpbmdzQmFja3VwID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdSZXBvcnRTZXR0aW5ncywge30pO1xyXG5cbiAgICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgb3B0aW9uc1xyXG4gICAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3UmVwb3J0U2V0dGluZ3MsIG5ld09wdGlvbnMpO1xyXG4gICAgfVxyXG4gICAgLy8gY2hlY2sgY2FsbGJhY2tPck9wdGlvbnMgYW5kIGNhbGxiYWNrOiBlbmRcclxuXG4gICAgLy8gcmVwb3J0IHR5cGVcclxuICAgIHZhciB0aGVUeXBlID0gbmV3UmVwb3J0U2V0dGluZ3NbcmVwb3J0VHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgnZW4nKV07XHJcblxuICAgIC8vIGNoZWNrIHRoZSBhcmd1bWVudHM6IGJlZ2luXHJcbiAgICBpZiAodHlwZW9mIHRpdGxlICE9PSAnc3RyaW5nJykgeyB0aXRsZSA9ICdOb3RpZmxpeCAnICsgcmVwb3J0VHlwZTsgfVxyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSAnc3RyaW5nJykge1xyXG4gICAgICBpZiAocmVwb3J0VHlwZSA9PT0gdHlwZXNSZXBvcnQuU3VjY2Vzcykge1xyXG4gICAgICAgIG1lc3NhZ2UgPSAnXCJEbyBub3QgdHJ5IHRvIGJlY29tZSBhIHBlcnNvbiBvZiBzdWNjZXNzIGJ1dCB0cnkgdG8gYmVjb21lIGEgcGVyc29uIG9mIHZhbHVlLlwiIDxicj48YnI+LSBBbGJlcnQgRWluc3RlaW4nO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkZhaWx1cmUpIHtcclxuICAgICAgICBtZXNzYWdlID0gJ1wiRmFpbHVyZSBpcyBzaW1wbHkgdGhlIG9wcG9ydHVuaXR5IHRvIGJlZ2luIGFnYWluLCB0aGlzIHRpbWUgbW9yZSBpbnRlbGxpZ2VudGx5LlwiIDxicj48YnI+LSBIZW5yeSBGb3JkJztcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmIChyZXBvcnRUeXBlID09PSB0eXBlc1JlcG9ydC5XYXJuaW5nKSB7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdcIlRoZSBwZW9wbGVzIHdobyB3YW50IHRvIGxpdmUgY29tZm9ydGFibHkgd2l0aG91dCBwcm9kdWNpbmcgYW5kIGZhdGlndWU7IHRoZXkgYXJlIGRvb21lZCB0byBsb3NlIHRoZWlyIGRpZ25pdHksIHRoZW4gbGliZXJ0eSwgYW5kIHRoZW4gaW5kZXBlbmRlbmNlIGFuZCBkZXN0aW55LlwiIDxicj48YnI+LSBNdXN0YWZhIEtlbWFsIEF0YXR1cmsnO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkluZm8pIHtcclxuICAgICAgICBtZXNzYWdlID0gJ1wiS25vd2xlZGdlIHJlc3RzIG5vdCB1cG9uIHRydXRoIGFsb25lLCBidXQgdXBvbiBlcnJvciBhbHNvLlwiIDxicj48YnI+LSBDYXJsIEd1c3RhdiBKdW5nJztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBidXR0b25UZXh0ICE9PSAnc3RyaW5nJykgeyBidXR0b25UZXh0ID0gJ09rYXknOyB9XHJcbiAgICAvLyBjaGVjayB0aGUgYXJndW1lbnRzOiBlbmRcclxuXG4gICAgLy8gaWYgcGxhaW5UZXh0IGlzIHRydWUgPT4gSFRNTCB0YWdzIG5vdCBhbGxvd2VkOiBiZWdpblxyXG4gICAgaWYgKG5ld1JlcG9ydFNldHRpbmdzLnBsYWluVGV4dCkge1xyXG4gICAgICB0aXRsZSA9IGNvbW1vbkdldFBsYWludGV4dCh0aXRsZSk7XHJcbiAgICAgIG1lc3NhZ2UgPSBjb21tb25HZXRQbGFpbnRleHQobWVzc2FnZSk7XHJcbiAgICAgIGJ1dHRvblRleHQgPSBjb21tb25HZXRQbGFpbnRleHQoYnV0dG9uVGV4dCk7XHJcbiAgICB9XHJcbiAgICAvLyBpZiBwbGFpblRleHQgaXMgdHJ1ZSA9PiBIVE1MIHRhZ3Mgbm90IGFsbG93ZWQ6IGVuZFxyXG5cbiAgICAvLyBpZiBwbGFpblRleHQgaXMgZmFsc2UgYnV0IHRoZSBjb250ZW50cyBsZW5ndGggbW9yZSB0aGFuICR7dGl0bGUgfCBtZXNzYWdlIHwgYnV0dG9uVGV4dH1NYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBiZWdpblxyXG4gICAgaWYgKCFuZXdSZXBvcnRTZXR0aW5ncy5wbGFpblRleHQpIHtcclxuICAgICAgaWYgKHRpdGxlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLnRpdGxlTWF4TGVuZ3RoKSB7XHJcbiAgICAgICAgdGl0bGUgPSAnUG9zc2libGUgSFRNTCBUYWdzIEVycm9yJztcclxuICAgICAgICBtZXNzYWdlID0gJ1RoZSBcInBsYWluVGV4dFwiIG9wdGlvbiBpcyBcImZhbHNlXCIgYW5kIHRoZSB0aXRsZSBjb250ZW50IGxlbmd0aCBpcyBtb3JlIHRoYW4gdGhlIFwidGl0bGVNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChtZXNzYWdlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgICB0aXRsZSA9ICdQb3NzaWJsZSBIVE1MIFRhZ3MgRXJyb3InO1xyXG4gICAgICAgIG1lc3NhZ2UgPSAnVGhlIFwicGxhaW5UZXh0XCIgb3B0aW9uIGlzIFwiZmFsc2VcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcIm1lc3NhZ2VNYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChidXR0b25UZXh0Lmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLmJ1dHRvbk1heExlbmd0aCkge1xyXG4gICAgICAgIHRpdGxlID0gJ1Bvc3NpYmxlIEhUTUwgVGFncyBFcnJvcic7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdUaGUgXCJwbGFpblRleHRcIiBvcHRpb24gaXMgXCJmYWxzZVwiIGFuZCB0aGUgYnV0dG9uIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiB0aGUgXCJidXR0b25NYXhMZW5ndGhcIiBvcHRpb24uJztcclxuICAgICAgICBidXR0b25UZXh0ID0gJ09rYXknO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBpZiBwbGFpblRleHQgaXMgZmFsc2UgYnV0IHRoZSBjb250ZW50cyBsZW5ndGggbW9yZSB0aGFuICR7dGl0bGUgfCBtZXNzYWdlIHwgYnV0dG9uVGV4dH1NYXhMZW5ndGggPT4gUG9zc2libGUgSFRNTCB0YWdzIGVycm9yOiBlbmRcclxuXG4gICAgLy8gbWF4IGxlbmd0aDogYmVnaW5cclxuICAgIGlmICh0aXRsZS5sZW5ndGggPiBuZXdSZXBvcnRTZXR0aW5ncy50aXRsZU1heExlbmd0aCkge1xyXG4gICAgICB0aXRsZSA9IHRpdGxlLnN1YnN0cmluZygwLCBuZXdSZXBvcnRTZXR0aW5ncy50aXRsZU1heExlbmd0aCkgKyAnLi4uJztcclxuICAgIH1cclxuICAgIGlmIChtZXNzYWdlLmxlbmd0aCA+IG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpIHtcclxuICAgICAgbWVzc2FnZSA9IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VNYXhMZW5ndGgpICsgJy4uLic7XHJcbiAgICB9XHJcbiAgICBpZiAoYnV0dG9uVGV4dC5sZW5ndGggPiBuZXdSZXBvcnRTZXR0aW5ncy5idXR0b25NYXhMZW5ndGgpIHtcclxuICAgICAgYnV0dG9uVGV4dCA9IGJ1dHRvblRleHQuc3Vic3RyaW5nKDAsIG5ld1JlcG9ydFNldHRpbmdzLmJ1dHRvbk1heExlbmd0aCkgKyAnLi4uJztcclxuICAgIH1cclxuICAgIC8vIG1heCBsZW5ndGg6IGVuZFxyXG5cbiAgICAvLyBpZiBjc3NBbmltYWlvbiBpcyBmYWxzZSA9PiBkdXJhdGlvbjogYmVnaW5cclxuICAgIGlmICghbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uKSB7XHJcbiAgICAgIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uID0gMDtcclxuICAgIH1cclxuICAgIC8vIGlmIGNzc0FuaW1haW9uIGlzIGZhbHNlID0+IGR1cmF0aW9uOiBlbmRcclxuXG4gICAgLy8gcmVwb3J0IHdyYXA6IGJlZ2luXHJcbiAgICB2YXIgbnRmbHhSZXBvcnRXcmFwID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLmlkID0gcmVwb3J0U2V0dGluZ3MuSUQ7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuY2xhc3NOYW1lID0gbmV3UmVwb3J0U2V0dGluZ3MuY2xhc3NOYW1lO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLnpJbmRleCA9IG5ld1JlcG9ydFNldHRpbmdzLnppbmRleDtcclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBuZXdSZXBvcnRTZXR0aW5ncy5ib3JkZXJSYWRpdXM7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuc3R5bGUuZm9udEZhbWlseSA9ICdcIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5mb250RmFtaWx5ICsgJ1wiLCAnICsgZGVmYXVsdEZvbnRGYW1pbHk7XHJcblxuICAgIC8vIHJ0bDogYmVnaW5cclxuICAgIGlmIChuZXdSZXBvcnRTZXR0aW5ncy5ydGwpIHtcclxuICAgICAgbnRmbHhSZXBvcnRXcmFwLnNldEF0dHJpYnV0ZSgnZGlyJywgJ3J0bCcpO1xyXG4gICAgICBudGZseFJlcG9ydFdyYXAuY2xhc3NMaXN0LmFkZCgnbngtcnRsLW9uJyk7XHJcbiAgICB9XHJcbiAgICAvLyBydGw6IGVuZFxyXG5cbiAgICAvLyBwb3NpdGlvbjogYmVnaW5cclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLmZsZXhXcmFwID0gJ3dyYXAnO1xyXG4gICAgbnRmbHhSZXBvcnRXcmFwLnN0eWxlLmZsZXhEaXJlY3Rpb24gPSAnY29sdW1uJztcclxuICAgIG50Zmx4UmVwb3J0V3JhcC5zdHlsZS5hbGlnbkl0ZW1zID0gJ2NlbnRlcic7XHJcbiAgICBudGZseFJlcG9ydFdyYXAuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnY2VudGVyJztcclxuICAgIC8vIHBvc2l0aW9uOiBlbmRcclxuXG4gICAgLy8gb3ZlcmxheTogYmVnaW5cclxuICAgIHZhciByZXBvcnRPdmVybGF5ID0gJyc7XHJcbiAgICB2YXIgcmVwb3J0T3ZlcmxheUNsaWNrVG9DbG9zZSA9IG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5Q2xpY2tUb0Nsb3NlID09PSB0cnVlO1xyXG4gICAgaWYgKG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5KSB7XHJcbiAgICAgIHJlcG9ydE92ZXJsYXkgPSAnPGRpdiBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLW92ZXJsYXknICsgKG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbiA/ICcgbngtd2l0aC1hbmltYXRpb24nIDogJycpICsgKHJlcG9ydE92ZXJsYXlDbGlja1RvQ2xvc2UgPyAnIG54LXJlcG9ydC1jbGljay10by1jbG9zZScgOiAnJykgKyAnXCIgc3R5bGU9XCJiYWNrZ3JvdW5kOicgKyAodGhlVHlwZS5iYWNrT3ZlcmxheUNvbG9yIHx8IG5ld1JlcG9ydFNldHRpbmdzLmJhY2tPdmVybGF5Q29sb3IpICsgJzthbmltYXRpb24tZHVyYXRpb246JyArIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPjwvZGl2Pic7XHJcbiAgICB9XHJcbiAgICAvLyBvdmVybGF5OiBlbmRcclxuXG4gICAgLy8gc3ZnIGljb246IGJlZ2luXHJcbiAgICB2YXIgc3ZnSWNvbiA9ICcnO1xyXG4gICAgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LlN1Y2Nlc3MpIHtcclxuICAgICAgc3ZnSWNvbiA9IHJlcG9ydFN2Z0ljb25TdWNjZXNzKG5ld1JlcG9ydFNldHRpbmdzLnN2Z1NpemUsIHRoZVR5cGUuc3ZnQ29sb3IpO1xyXG4gICAgfSBlbHNlIGlmIChyZXBvcnRUeXBlID09PSB0eXBlc1JlcG9ydC5GYWlsdXJlKSB7XHJcbiAgICAgIHN2Z0ljb24gPSByZXBvcnRTdmdJY29uRmFpbHVyZShuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplLCB0aGVUeXBlLnN2Z0NvbG9yKTtcclxuICAgIH0gZWxzZSBpZiAocmVwb3J0VHlwZSA9PT0gdHlwZXNSZXBvcnQuV2FybmluZykge1xyXG4gICAgICBzdmdJY29uID0gcmVwb3J0U3ZnSWNvbldhcm5pbmcobmV3UmVwb3J0U2V0dGluZ3Muc3ZnU2l6ZSwgdGhlVHlwZS5zdmdDb2xvcik7XHJcbiAgICB9IGVsc2UgaWYgKHJlcG9ydFR5cGUgPT09IHR5cGVzUmVwb3J0LkluZm8pIHtcclxuICAgICAgc3ZnSWNvbiA9IHJlcG9ydFN2Z0ljb25JbmZvKG5ld1JlcG9ydFNldHRpbmdzLnN2Z1NpemUsIHRoZVR5cGUuc3ZnQ29sb3IpO1xyXG4gICAgfVxyXG4gICAgLy8gc3ZnIGljb246IGVuZFxyXG5cbiAgICBudGZseFJlcG9ydFdyYXAuaW5uZXJIVE1MID0gcmVwb3J0T3ZlcmxheSArICc8ZGl2IGNsYXNzPVwiJyArIG5ld1JlcG9ydFNldHRpbmdzLmNsYXNzTmFtZSArICctY29udGVudCcgKyAobmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uID8gJyBueC13aXRoLWFuaW1hdGlvbiAnIDogJycpICsgJyBueC0nICsgbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uU3R5bGUgKyAnXCIgc3R5bGU9XCJ3aWR0aDonICsgbmV3UmVwb3J0U2V0dGluZ3Mud2lkdGggKyAnOyBiYWNrZ3JvdW5kOicgKyBuZXdSZXBvcnRTZXR0aW5ncy5iYWNrZ3JvdW5kQ29sb3IgKyAnOyBhbmltYXRpb24tZHVyYXRpb246JyArIG5ld1JlcG9ydFNldHRpbmdzLmNzc0FuaW1hdGlvbkR1cmF0aW9uICsgJ21zO1wiPicgK1xyXG4gICAgICAnPGRpdiBzdHlsZT1cIndpZHRoOicgKyBuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplICsgJzsgaGVpZ2h0OicgKyBuZXdSZXBvcnRTZXR0aW5ncy5zdmdTaXplICsgJztcIiBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLWljb25cIj4nICsgc3ZnSWNvbiArICc8L2Rpdj4nICtcclxuICAgICAgJzxoNSBjbGFzcz1cIicgKyBuZXdSZXBvcnRTZXR0aW5ncy5jbGFzc05hbWUgKyAnLXRpdGxlXCIgc3R5bGU9XCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTonICsgbmV3UmVwb3J0U2V0dGluZ3MudGl0bGVGb250U2l6ZSArICc7IGNvbG9yOicgKyB0aGVUeXBlLnRpdGxlQ29sb3IgKyAnO1wiPicgKyB0aXRsZSArICc8L2g1PicgK1xyXG4gICAgICAnPHAgY2xhc3M9XCInICsgbmV3UmVwb3J0U2V0dGluZ3MuY2xhc3NOYW1lICsgJy1tZXNzYWdlXCIgc3R5bGU9XCJmb250LXNpemU6JyArIG5ld1JlcG9ydFNldHRpbmdzLm1lc3NhZ2VGb250U2l6ZSArICc7IGNvbG9yOicgKyB0aGVUeXBlLm1lc3NhZ2VDb2xvciArICc7XCI+JyArIG1lc3NhZ2UgKyAnPC9wPicgK1xyXG4gICAgICAnPGEgaWQ9XCJOWFJlcG9ydEJ1dHRvblwiIGNsYXNzPVwiJyArIG5ld1JlcG9ydFNldHRpbmdzLmNsYXNzTmFtZSArICctYnV0dG9uXCIgc3R5bGU9XCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTonICsgbmV3UmVwb3J0U2V0dGluZ3MuYnV0dG9uRm9udFNpemUgKyAnOyBiYWNrZ3JvdW5kOicgKyB0aGVUeXBlLmJ1dHRvbkJhY2tncm91bmQgKyAnOyBjb2xvcjonICsgdGhlVHlwZS5idXR0b25Db2xvciArICc7XCI+JyArIGJ1dHRvblRleHQgKyAnPC9hPicgK1xyXG4gICAgICAnPC9kaXY+JztcclxuXG4gICAgLy8gaWYgdGhlcmUgaXMgbm8gcmVwb3J0IGVsZW1lbnRcclxuICAgIGlmICghd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG50Zmx4UmVwb3J0V3JhcC5pZCkpIHtcclxuICAgICAgLy8gYXBwZW5kXHJcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG50Zmx4UmVwb3J0V3JhcCk7XHJcblxuICAgICAgLy8gcmVwb3J0IHJlbW92ZTogYmVnaW5cclxuICAgICAgdmFyIHJlcG9ydFJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZWxlbWVudFdyYXBwZXIgPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobnRmbHhSZXBvcnRXcmFwLmlkKTtcclxuICAgICAgICBlbGVtZW50V3JhcHBlci5jbGFzc0xpc3QuYWRkKCdueC1yZW1vdmUnKTtcclxuICAgICAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKGVsZW1lbnRXcmFwcGVyLnBhcmVudE5vZGUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgZWxlbWVudFdyYXBwZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50V3JhcHBlcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgfSwgbmV3UmVwb3J0U2V0dGluZ3MuY3NzQW5pbWF0aW9uRHVyYXRpb24pO1xyXG4gICAgICB9O1xyXG4gICAgICAvLyByZXBvcnQgcmVtb3ZlOiBlbmRcclxuXG4gICAgICAvLyBjYWxsYmFjazogYmVnaW5cclxuICAgICAgdmFyIGVsZW1lbnRCdXR0b24gPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ05YUmVwb3J0QnV0dG9uJyk7XHJcbiAgICAgIGVsZW1lbnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gaWYgY2FsbGJhY2s6IGJlZ2luXHJcbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFja09yT3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgY2FsbGJhY2tPck9wdGlvbnMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaWYgY2FsbGJhY2s6IGVuZFxyXG5cbiAgICAgICAgLy8gcmVtb3ZlIHJlcG9ydFxyXG4gICAgICAgIHJlcG9ydFJlbW92ZSgpO1xyXG4gICAgICB9KTtcclxuICAgICAgLy8gY2FsbGJhY2s6IGVuZFxyXG5cbiAgICAgIC8vIG92ZXJsYXkgY2xpY2sgdG8gY2xvc2U6IGJlZ2luXHJcbiAgICAgIGlmIChyZXBvcnRPdmVybGF5ICYmIHJlcG9ydE92ZXJsYXlDbGlja1RvQ2xvc2UpIHtcclxuICAgICAgICB2YXIgZWxlbWVudE92ZXJsYXkgPSB3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm54LXJlcG9ydC1jbGljay10by1jbG9zZScpO1xyXG4gICAgICAgIGVsZW1lbnRPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgcmVwb3J0UmVtb3ZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gb3ZlcmxheSBjbGljayB0byBjbG9zZTogZW5kXHJcbiAgICB9XHJcbiAgICAvLyByZXBvcnQgd3JhcDogZW5kXHJcblxuICAgIC8vIGV4dGVuZCBuZXcgc2V0dGluZ3Mgd2l0aCB0aGUgYmFja3VwIHNldHRpbmdzXHJcbiAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgbmV3UmVwb3J0U2V0dGluZ3MsIG5ld1JlcG9ydFNldHRpbmdzQmFja3VwKTtcclxuXG4gIH07XG4gIC8vIFJFUE9SVDogQ3JlYXRlOiBlbmRcblxuICB2YXIgTm90aWZsaXggPSB7XG4gICAgUmVwb3J0OiB7XHJcbiAgICAgIC8vIEluaXRcclxuICAgICAgaW5pdDogZnVuY3Rpb24gKHVzZXJSZXBvcnRPcHRpb25zKSB7XHJcbiAgICAgICAgLy8gZXh0ZW5kIG9wdGlvbnNcclxuICAgICAgICBuZXdSZXBvcnRTZXR0aW5ncyA9IGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgcmVwb3J0U2V0dGluZ3MsIHVzZXJSZXBvcnRPcHRpb25zKTtcclxuICAgICAgICAvLyBpbnRlcm5hbCBjc3MgaWYgZXhpc3RcclxuICAgICAgICBjb21tb25TZXRJbnRlcm5hbENTU0NvZGVzKHJlcG9ydEdldEludGVybmFsQ1NTQ29kZXMsICdOb3RpZmxpeFJlcG9ydEludGVybmFsQ1NTJyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIE1lcmdlIEZpcnN0IEluaXRcclxuICAgICAgbWVyZ2U6IGZ1bmN0aW9uICh1c2VyUmVwb3J0RXh0ZW5kT3B0aW9ucykge1xyXG4gICAgICAgIC8vIGlmIGluaXRpYWxpemVkIGFscmVhZHlcclxuICAgICAgICBpZiAobmV3UmVwb3J0U2V0dGluZ3MpIHtcclxuICAgICAgICAgIG5ld1JlcG9ydFNldHRpbmdzID0gY29tbW9uRXh0ZW5kT3B0aW9ucyh0cnVlLCBuZXdSZXBvcnRTZXR0aW5ncywgdXNlclJlcG9ydEV4dGVuZE9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpbml0aWFsaXplIGZpcnN0XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICBjb21tb25Db25zb2xlRXJyb3IoJ1lvdSBoYXZlIHRvIGluaXRpYWxpemUgdGhlIFJlcG9ydCBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uJyk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICAvLyBTdWNjZXNzXHJcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXBvcnRDcmVhdGUodHlwZXNSZXBvcnQuU3VjY2VzcywgdGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgICAgLy8gRmFpbHVyZVxyXG4gICAgICBmYWlsdXJlOiBmdW5jdGlvbiAodGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKSB7XHJcbiAgICAgICAgcmVwb3J0Q3JlYXRlKHR5cGVzUmVwb3J0LkZhaWx1cmUsIHRpdGxlLCBtZXNzYWdlLCBidXR0b25UZXh0LCBjYWxsYmFja09yT3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICAgIH0sXHJcbiAgICAgIC8vIFdhcm5pbmdcclxuICAgICAgd2FybmluZzogZnVuY3Rpb24gKHRpdGxlLCBtZXNzYWdlLCBidXR0b25UZXh0LCBjYWxsYmFja09yT3B0aW9ucywgb3B0aW9ucykge1xyXG4gICAgICAgIHJlcG9ydENyZWF0ZSh0eXBlc1JlcG9ydC5XYXJuaW5nLCB0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpO1xyXG4gICAgICB9LFxyXG4gICAgICAvLyBJbmZvXHJcbiAgICAgIGluZm86IGZ1bmN0aW9uICh0aXRsZSwgbWVzc2FnZSwgYnV0dG9uVGV4dCwgY2FsbGJhY2tPck9wdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXBvcnRDcmVhdGUodHlwZXNSZXBvcnQuSW5mbywgdGl0bGUsIG1lc3NhZ2UsIGJ1dHRvblRleHQsIGNhbGxiYWNrT3JPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgfSxcclxuICAgIH0sXG4gIH07XG5cbiAgaWYgKHR5cGVvZiB3aW5kb3cuTm90aWZsaXggPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGNvbW1vbkV4dGVuZE9wdGlvbnModHJ1ZSwgd2luZG93Lk5vdGlmbGl4LCB7IFJlcG9ydDogTm90aWZsaXguUmVwb3J0IH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IFJlcG9ydDogTm90aWZsaXguUmVwb3J0IH07XG4gIH1cblxufSk7IiwiLyogTm90aWZsaXggQUlPIChodHRwczovL25vdGlmbGl4LmdpdGh1Yi5pbykgLSBWZXJzaW9uOiAzLjIuNSAtIEF1dGhvcjogRnVya2FuIE1UIChodHRwczovL2dpdGh1Yi5jb20vZnVyY2FuKSAtIENvcHlyaWdodCAyMDE5IC0gMjAyMiBOb3RpZmxpeCwgTUlUIExpY2VuY2UgKGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKSAqL1xuXG4oZnVuY3Rpb24odCxlKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGUodCl9KTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSh0KTp0Lk5vdGlmbGl4PWUodCl9KShcInVuZGVmaW5lZFwiPT10eXBlb2YgZ2xvYmFsP1widW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/dGhpczp3aW5kb3c6Z2xvYmFsLGZ1bmN0aW9uKHQpeyd1c2Ugc3RyaWN0JztpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgdCYmXCJ1bmRlZmluZWRcIj09dHlwZW9mIHQuZG9jdW1lbnQpcmV0dXJuITE7dmFyIGUsaSxhLG4sbyxyPVwiXFxuXFxuVmlzaXQgZG9jdW1lbnRhdGlvbiBwYWdlIHRvIGxlYXJuIG1vcmU6IGh0dHBzOi8vbm90aWZsaXguZ2l0aHViLmlvL2RvY3VtZW50YXRpb25cIixzPVwiLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZlwiLGw9e1N1Y2Nlc3M6XCJTdWNjZXNzXCIsRmFpbHVyZTpcIkZhaWx1cmVcIixXYXJuaW5nOlwiV2FybmluZ1wiLEluZm86XCJJbmZvXCJ9LG09e3dyYXBJRDpcIk5vdGlmbGl4Tm90aWZ5V3JhcFwiLG92ZXJsYXlJRDpcIk5vdGlmbGl4Tm90aWZ5T3ZlcmxheVwiLHdpZHRoOlwiMjgwcHhcIixwb3NpdGlvbjpcInJpZ2h0LXRvcFwiLGRpc3RhbmNlOlwiMTBweFwiLG9wYWNpdHk6MSxib3JkZXJSYWRpdXM6XCI1cHhcIixydGw6ITEsdGltZW91dDozZTMsbWVzc2FnZU1heExlbmd0aDoxMTAsYmFja092ZXJsYXk6ITEsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMCwwLDAsMC41KVwiLHBsYWluVGV4dDohMCxzaG93T25seVRoZUxhc3RPbmU6ITEsY2xpY2tUb0Nsb3NlOiExLHBhdXNlT25Ib3ZlcjohMCxJRDpcIk5vdGlmbGl4Tm90aWZ5XCIsY2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5XCIsemluZGV4OjQwMDEsZm9udEZhbWlseTpcIlF1aWNrc2FuZFwiLGZvbnRTaXplOlwiMTNweFwiLGNzc0FuaW1hdGlvbjohMCxjc3NBbmltYXRpb25EdXJhdGlvbjo0MDAsY3NzQW5pbWF0aW9uU3R5bGU6XCJmYWRlXCIsY2xvc2VCdXR0b246ITEsdXNlSWNvbjohMCx1c2VGb250QXdlc29tZTohMSxmb250QXdlc29tZUljb25TdHlsZTpcImJhc2ljXCIsZm9udEF3ZXNvbWVJY29uU2l6ZTpcIjM0cHhcIixzdWNjZXNzOntiYWNrZ3JvdW5kOlwiIzMyYzY4MlwiLHRleHRDb2xvcjpcIiNmZmZcIixjaGlsZENsYXNzTmFtZTpcIm5vdGlmbGl4LW5vdGlmeS1zdWNjZXNzXCIsbm90aWZsaXhJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixmb250QXdlc29tZUNsYXNzTmFtZTpcImZhcyBmYS1jaGVjay1jaXJjbGVcIixmb250QXdlc29tZUljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDUwLDE5OCwxMzAsMC4yKVwifSxmYWlsdXJlOntiYWNrZ3JvdW5kOlwiI2ZmNTU0OVwiLHRleHRDb2xvcjpcIiNmZmZcIixjaGlsZENsYXNzTmFtZTpcIm5vdGlmbGl4LW5vdGlmeS1mYWlsdXJlXCIsbm90aWZsaXhJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixmb250QXdlc29tZUNsYXNzTmFtZTpcImZhcyBmYS10aW1lcy1jaXJjbGVcIixmb250QXdlc29tZUljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDI1NSw4NSw3MywwLjIpXCJ9LHdhcm5pbmc6e2JhY2tncm91bmQ6XCIjZWViZjMxXCIsdGV4dENvbG9yOlwiI2ZmZlwiLGNoaWxkQ2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5LXdhcm5pbmdcIixub3RpZmxpeEljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGZvbnRBd2Vzb21lQ2xhc3NOYW1lOlwiZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZVwiLGZvbnRBd2Vzb21lSWNvbkNvbG9yOlwicmdiYSgwLDAsMCwwLjIpXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMjM4LDE5MSw0OSwwLjIpXCJ9LGluZm86e2JhY2tncm91bmQ6XCIjMjZjMGQzXCIsdGV4dENvbG9yOlwiI2ZmZlwiLGNoaWxkQ2xhc3NOYW1lOlwibm90aWZsaXgtbm90aWZ5LWluZm9cIixub3RpZmxpeEljb25Db2xvcjpcInJnYmEoMCwwLDAsMC4yKVwiLGZvbnRBd2Vzb21lQ2xhc3NOYW1lOlwiZmFzIGZhLWluZm8tY2lyY2xlXCIsZm9udEF3ZXNvbWVJY29uQ29sb3I6XCJyZ2JhKDAsMCwwLDAuMilcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgzOCwxOTIsMjExLDAuMilcIn19LGM9e1N1Y2Nlc3M6XCJTdWNjZXNzXCIsRmFpbHVyZTpcIkZhaWx1cmVcIixXYXJuaW5nOlwiV2FybmluZ1wiLEluZm86XCJJbmZvXCJ9LHA9e0lEOlwiTm90aWZsaXhSZXBvcnRXcmFwXCIsY2xhc3NOYW1lOlwibm90aWZsaXgtcmVwb3J0XCIsd2lkdGg6XCIzMjBweFwiLGJhY2tncm91bmRDb2xvcjpcIiNmOGY4ZjhcIixib3JkZXJSYWRpdXM6XCIyNXB4XCIscnRsOiExLHppbmRleDo0MDAyLGJhY2tPdmVybGF5OiEwLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDAsMCwwLDAuNSlcIixiYWNrT3ZlcmxheUNsaWNrVG9DbG9zZTohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsc3ZnU2l6ZTpcIjExMHB4XCIscGxhaW5UZXh0OiEwLHRpdGxlRm9udFNpemU6XCIxNnB4XCIsdGl0bGVNYXhMZW5ndGg6MzQsbWVzc2FnZUZvbnRTaXplOlwiMTNweFwiLG1lc3NhZ2VNYXhMZW5ndGg6NDAwLGJ1dHRvbkZvbnRTaXplOlwiMTRweFwiLGJ1dHRvbk1heExlbmd0aDozNCxjc3NBbmltYXRpb246ITAsY3NzQW5pbWF0aW9uRHVyYXRpb246MzYwLGNzc0FuaW1hdGlvblN0eWxlOlwiZmFkZVwiLHN1Y2Nlc3M6e3N2Z0NvbG9yOlwiIzMyYzY4MlwiLHRpdGxlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUNvbG9yOlwiIzI0MjQyNFwiLGJ1dHRvbkJhY2tncm91bmQ6XCIjMzJjNjgyXCIsYnV0dG9uQ29sb3I6XCIjZmZmXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoNTAsMTk4LDEzMCwwLjIpXCJ9LGZhaWx1cmU6e3N2Z0NvbG9yOlwiI2ZmNTU0OVwiLHRpdGxlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUNvbG9yOlwiIzI0MjQyNFwiLGJ1dHRvbkJhY2tncm91bmQ6XCIjZmY1NTQ5XCIsYnV0dG9uQ29sb3I6XCIjZmZmXCIsYmFja092ZXJsYXlDb2xvcjpcInJnYmEoMjU1LDg1LDczLDAuMilcIn0sd2FybmluZzp7c3ZnQ29sb3I6XCIjZWViZjMxXCIsdGl0bGVDb2xvcjpcIiMxZTFlMWVcIixtZXNzYWdlQ29sb3I6XCIjMjQyNDI0XCIsYnV0dG9uQmFja2dyb3VuZDpcIiNlZWJmMzFcIixidXR0b25Db2xvcjpcIiNmZmZcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgyMzgsMTkxLDQ5LDAuMilcIn0saW5mbzp7c3ZnQ29sb3I6XCIjMjZjMGQzXCIsdGl0bGVDb2xvcjpcIiMxZTFlMWVcIixtZXNzYWdlQ29sb3I6XCIjMjQyNDI0XCIsYnV0dG9uQmFja2dyb3VuZDpcIiMyNmMwZDNcIixidXR0b25Db2xvcjpcIiNmZmZcIixiYWNrT3ZlcmxheUNvbG9yOlwicmdiYSgzOCwxOTIsMjExLDAuMilcIn19LGY9e1Nob3c6XCJTaG93XCIsQXNrOlwiQXNrXCIsUHJvbXB0OlwiUHJvbXB0XCJ9LGQ9e0lEOlwiTm90aWZsaXhDb25maXJtV3JhcFwiLGNsYXNzTmFtZTpcIm5vdGlmbGl4LWNvbmZpcm1cIix3aWR0aDpcIjMwMHB4XCIsemluZGV4OjQwMDMscG9zaXRpb246XCJjZW50ZXJcIixkaXN0YW5jZTpcIjEwcHhcIixiYWNrZ3JvdW5kQ29sb3I6XCIjZjhmOGY4XCIsYm9yZGVyUmFkaXVzOlwiMjVweFwiLGJhY2tPdmVybGF5OiEwLGJhY2tPdmVybGF5Q29sb3I6XCJyZ2JhKDAsMCwwLDAuNSlcIixydGw6ITEsZm9udEZhbWlseTpcIlF1aWNrc2FuZFwiLGNzc0FuaW1hdGlvbjohMCxjc3NBbmltYXRpb25EdXJhdGlvbjozMDAsY3NzQW5pbWF0aW9uU3R5bGU6XCJmYWRlXCIscGxhaW5UZXh0OiEwLHRpdGxlQ29sb3I6XCIjMzJjNjgyXCIsdGl0bGVGb250U2l6ZTpcIjE2cHhcIix0aXRsZU1heExlbmd0aDozNCxtZXNzYWdlQ29sb3I6XCIjMWUxZTFlXCIsbWVzc2FnZUZvbnRTaXplOlwiMTRweFwiLG1lc3NhZ2VNYXhMZW5ndGg6MTEwLGJ1dHRvbnNGb250U2l6ZTpcIjE1cHhcIixidXR0b25zTWF4TGVuZ3RoOjM0LG9rQnV0dG9uQ29sb3I6XCIjZjhmOGY4XCIsb2tCdXR0b25CYWNrZ3JvdW5kOlwiIzMyYzY4MlwiLGNhbmNlbEJ1dHRvbkNvbG9yOlwiI2Y4ZjhmOFwiLGNhbmNlbEJ1dHRvbkJhY2tncm91bmQ6XCIjYTlhOWE5XCJ9LHg9e1N0YW5kYXJkOlwiU3RhbmRhcmRcIixIb3VyZ2xhc3M6XCJIb3VyZ2xhc3NcIixDaXJjbGU6XCJDaXJjbGVcIixBcnJvd3M6XCJBcnJvd3NcIixEb3RzOlwiRG90c1wiLFB1bHNlOlwiUHVsc2VcIixDdXN0b206XCJDdXN0b21cIixOb3RpZmxpeDpcIk5vdGlmbGl4XCJ9LGc9e0lEOlwiTm90aWZsaXhMb2FkaW5nV3JhcFwiLGNsYXNzTmFtZTpcIm5vdGlmbGl4LWxvYWRpbmdcIix6aW5kZXg6NGUzLGJhY2tncm91bmRDb2xvcjpcInJnYmEoMCwwLDAsMC44KVwiLHJ0bDohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsY3NzQW5pbWF0aW9uOiEwLGNzc0FuaW1hdGlvbkR1cmF0aW9uOjQwMCxjbGlja1RvQ2xvc2U6ITEsY3VzdG9tU3ZnVXJsOm51bGwsY3VzdG9tU3ZnQ29kZTpudWxsLHN2Z1NpemU6XCI4MHB4XCIsc3ZnQ29sb3I6XCIjMzJjNjgyXCIsbWVzc2FnZUlEOlwiTm90aWZsaXhMb2FkaW5nTWVzc2FnZVwiLG1lc3NhZ2VGb250U2l6ZTpcIjE1cHhcIixtZXNzYWdlTWF4TGVuZ3RoOjM0LG1lc3NhZ2VDb2xvcjpcIiNkY2RjZGNcIn0sYj17U3RhbmRhcmQ6XCJTdGFuZGFyZFwiLEhvdXJnbGFzczpcIkhvdXJnbGFzc1wiLENpcmNsZTpcIkNpcmNsZVwiLEFycm93czpcIkFycm93c1wiLERvdHM6XCJEb3RzXCIsUHVsc2U6XCJQdWxzZVwifSx1PXtJRDpcIk5vdGlmbGl4QmxvY2tXcmFwXCIscXVlcnlTZWxlY3RvckxpbWl0OjIwMCxjbGFzc05hbWU6XCJub3RpZmxpeC1ibG9ja1wiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIix6aW5kZXg6MWUzLGJhY2tncm91bmRDb2xvcjpcInJnYmEoMjU1LDI1NSwyNTUsMC45KVwiLHJ0bDohMSxmb250RmFtaWx5OlwiUXVpY2tzYW5kXCIsY3NzQW5pbWF0aW9uOiEwLGNzc0FuaW1hdGlvbkR1cmF0aW9uOjMwMCxzdmdTaXplOlwiNDVweFwiLHN2Z0NvbG9yOlwiIzM4MzgzOFwiLG1lc3NhZ2VGb250U2l6ZTpcIjE0cHhcIixtZXNzYWdlTWF4TGVuZ3RoOjM0LG1lc3NhZ2VDb2xvcjpcIiMzODM4MzhcIn0seT1mdW5jdGlvbih0KXtyZXR1cm4gY29uc29sZS5lcnJvcihcIiVjIE5vdGlmbGl4IEVycm9yIFwiLFwicGFkZGluZzoycHg7Ym9yZGVyLXJhZGl1czoyMHB4O2NvbG9yOiNmZmY7YmFja2dyb3VuZDojZmY1NTQ5XCIsXCJcXG5cIit0K3IpfSxrPWZ1bmN0aW9uKHQpe3JldHVybiBjb25zb2xlLmxvZyhcIiVjIE5vdGlmbGl4IEluZm8gXCIsXCJwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjIwcHg7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiMyNmMwZDNcIixcIlxcblwiK3Qrcil9LHc9ZnVuY3Rpb24oZSl7cmV0dXJuIGV8fChlPVwiaGVhZFwiKSxudWxsIT09dC5kb2N1bWVudFtlXXx8KHkoXCJcXG5Ob3RpZmxpeCBuZWVkcyB0byBiZSBhcHBlbmRlZCB0byB0aGUgXFxcIjxcIitlK1wiPlxcXCIgZWxlbWVudCwgYnV0IHlvdSBjYWxsZWQgaXQgYmVmb3JlIHRoZSBcXFwiPFwiK2UrXCI+XFxcIiBlbGVtZW50IGhhcyBiZWVuIGNyZWF0ZWQuXCIpLCExKX0saD1mdW5jdGlvbihlLGkpe2lmKCF3KFwiaGVhZFwiKSlyZXR1cm4hMTtpZihudWxsIT09ZSgpJiYhdC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpKSl7dmFyIGE9dC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7YS5pZD1pLGEuaW5uZXJIVE1MPWUoKSx0LmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYSl9fSx2PWZ1bmN0aW9uKCl7dmFyIHQ9e30sZT0hMSxhPTA7XCJbb2JqZWN0IEJvb2xlYW5dXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnRzWzBdKSYmKGU9YXJndW1lbnRzWzBdLGErKyk7Zm9yKHZhciBuPWZ1bmN0aW9uKGkpe2Zvcih2YXIgYSBpbiBpKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChpLGEpJiYodFthXT1lJiZcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlbYV0pP3YodFthXSxpW2FdKTppW2FdKX07YTxhcmd1bWVudHMubGVuZ3RoO2ErKyluKGFyZ3VtZW50c1thXSk7cmV0dXJuIHR9LE49ZnVuY3Rpb24oZSl7dmFyIGk9dC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiBpLmlubmVySFRNTD1lLGkudGV4dENvbnRlbnR8fGkuaW5uZXJUZXh0fHxcIlwifSxDPWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCIxMTBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YUmVwb3J0U3VjY2Vzc1xcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEyMCAxMjBcXFwiPjxzdHlsZT5ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw1Ny43cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTU3LjdweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDU3LjdweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC01Ny43cHgpfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzNC1hbmltYXRpb257MCV7b3BhY2l0eTowfTUwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MzLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFN1Y2Nlc3MzLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRTdWNjZXNzMi1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19I05YUmVwb3J0U3VjY2VzcyAqey13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7YW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKX08L3N0eWxlPjxnIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczItYW5pbWF0aW9uOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiPjxwYXRoIGQ9XFxcIk02MCAxMTUuMzhDMjkuNDYgMTE1LjM4IDQuNjIgOTAuNTQgNC42MiA2MCA0LjYyIDI5LjQ2IDI5LjQ2IDQuNjIgNjAgNC42MmMzMC41NCAwIDU1LjM4IDI0Ljg0IDU1LjM4IDU1LjM4IDAgMzAuNTQtMjQuODQgNTUuMzgtNTUuMzggNTUuMzh6TTYwIDBDMjYuOTIgMCAwIDI2LjkyIDAgNjBzMjYuOTIgNjAgNjAgNjAgNjAtMjYuOTIgNjAtNjBTOTMuMDggMCA2MCAwelxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMy1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRTdWNjZXNzMS1hbmltYXRpb247LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNTcuN3B4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNTcuN3B4KTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiPjxwYXRoIGQ9XFxcIk04OC4yNyAzNS4zOUw1Mi44IDc1LjI5IDMxLjQzIDU4LjJjLS45OC0uODEtMi40NC0uNjMtMy4yNC4zNi0uNzkuOTktLjYzIDIuNDQuMzYgMy4yNGwyMy4wOCAxOC40NmMuNDMuMzQuOTMuNTEgMS40NC41MS42NCAwIDEuMjctLjI2IDEuNzQtLjc4bDM2LjkxLTQxLjUzYTIuMyAyLjMgMCAwIDAtLjE5LTMuMjZjLS45NS0uODYtMi40MS0uNzctMy4yNi4xOXpcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczQtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0U3VjY2VzczQtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKVxcXCIgZmlsbD1cXFwiaW5oZXJpdFxcXCIgZGF0YS1hbmltYXRvci1ncm91cD1cXFwidHJ1ZVxcXCIgZGF0YS1hbmltYXRvci10eXBlPVxcXCIyXFxcIi8+PC9nPjwvc3ZnPlwiO3JldHVybiBpfSx6PWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCIxMTBweFwiKSxlfHwoZT1cIiNmZjU1NDlcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YUmVwb3J0RmFpbHVyZVxcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEyMCAxMjBcXFwiPjxzdHlsZT5ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUBrZXlmcmFtZXMgTlhSZXBvcnRGYWlsdXJlMi1hbmltYXRpb257MCV7b3BhY2l0eTowfTQwJSx0b3tvcGFjaXR5OjF9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUxLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0RmFpbHVyZTMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmU0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydEZhaWx1cmU0LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19I05YUmVwb3J0RmFpbHVyZSAqey13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7YW5pbWF0aW9uLWR1cmF0aW9uOjEuMnM7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLDAsMSwxKX08L3N0eWxlPjxnIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YUmVwb3J0RmFpbHVyZTEtYW5pbWF0aW9uOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweClcXFwiPjxwYXRoIGQ9XFxcIk00LjM1IDM0Ljk1YzAtMTYuODIgMTMuNzgtMzAuNiAzMC42LTMwLjZoNTAuMWMxNi44MiAwIDMwLjYgMTMuNzggMzAuNiAzMC42djUwLjFjMCAxNi44Mi0xMy43OCAzMC42LTMwLjYgMzAuNmgtNTAuMWMtMTYuODIgMC0zMC42LTEzLjc4LTMwLjYtMzAuNnYtNTAuMXpNMzQuOTUgMTIwaDUwLjFjMTkuMjIgMCAzNC45NS0xNS43MyAzNC45NS0zNC45NXYtNTAuMUMxMjAgMTUuNzMgMTA0LjI3IDAgODUuMDUgMGgtNTAuMUMxNS43MyAwIDAgMTUuNzMgMCAzNC45NXY1MC4xQzAgMTA0LjI3IDE1LjczIDEyMCAzNC45NSAxMjB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEZhaWx1cmUzLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXFxcIj48cGF0aCBkPVxcXCJNODIuNCAzNy42Yy0uOS0uOS0yLjM3LS45LTMuMjcgMEw2MCA1Ni43MyA0MC44NiAzNy42YTIuMzA2IDIuMzA2IDAgMCAwLTMuMjYgMy4yNkw1Ni43MyA2MCAzNy42IDc5LjEzYy0uOS45LS45IDIuMzcgMCAzLjI3LjQ1LjQ1IDEuMDQuNjggMS42My42OC41OSAwIDEuMTgtLjIzIDEuNjMtLjY4TDYwIDYzLjI2IDc5LjEzIDgyLjRjLjQ1LjQ1IDEuMDUuNjggMS42NC42OC41OCAwIDEuMTgtLjIzIDEuNjMtLjY4LjktLjkuOS0yLjM3IDAtMy4yN0w2My4yNiA2MCA4Mi40IDQwLjg2Yy45LS45MS45LTIuMzYgMC0zLjI2elxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRGYWlsdXJlNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LFM9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjExMHB4XCIpLGV8fChlPVwiI2VlYmYzMVwiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBpZD1cXFwiTlhSZXBvcnRXYXJuaW5nXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiBmaWxsPVxcXCJcIitlK1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMTIwIDEyMFxcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NDAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzEtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX00MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRXYXJuaW5nMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NTAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTY2LjZweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDY2LjZweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02Ni42cHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2Ni42cHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0V2FybmluZzQtYW5pbWF0aW9uezAle29wYWNpdHk6MH01MCUsdG97b3BhY2l0eToxfX0jTlhSZXBvcnRXYXJuaW5nICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVxcXCI+PHBhdGggZD1cXFwiTTExNS40NiAxMDYuMTVsLTU0LjA0LTkzLjhjLS42MS0xLjA2LTIuMjMtMS4wNi0yLjg0IDBsLTU0LjA0IDkzLjhjLS42MiAxLjA3LjIxIDIuMjkgMS40MiAyLjI5aDEwOC4wOGMxLjIxIDAgMi4wNC0xLjIyIDEuNDItMi4yOXpNNjUuMTcgMTAuMmw1NC4wNCA5My44YzIuMjggMy45Ni0uNjUgOC43OC01LjE3IDguNzhINS45NmMtNC41MiAwLTcuNDUtNC44Mi01LjE3LTguNzhsNTQuMDQtOTMuOGMyLjI4LTMuOTUgOC4wMy00IDEwLjM0IDB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmcyLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmczLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydFdhcm5pbmczLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjYuNnB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjYuNnB4KVxcXCI+PHBhdGggZD1cXFwiTTU3LjgzIDk0LjAxYzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN3YtMy4yYzAtMS4yLS45Ny0yLjE3LTIuMTctMi4xN3MtMi4xNy45Ny0yLjE3IDIuMTd2My4yem0wLTE0LjE1YzAgMS4yLjk3IDIuMTcgMi4xNyAyLjE3czIuMTctLjk3IDIuMTctMi4xN1YzOS4yMWMwLTEuMi0uOTctMi4xNy0yLjE3LTIuMTdzLTIuMTcuOTctMi4xNyAyLjE3djQwLjY1elxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nNC1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRXYXJuaW5nNC1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpXFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiLz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LEw9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjExMHB4XCIpLGV8fChlPVwiIzI2YzBkM1wiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBpZD1cXFwiTlhSZXBvcnRJbmZvXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiBmaWxsPVxcXCJcIitlK1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMTIwIDEyMFxcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyBOWFJlcG9ydEluZm80LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm80LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9NTAlLHRve29wYWNpdHk6MX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzMtYW5pbWF0aW9uezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX01MCUsdG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NjAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC45NSwuOTUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9fUBrZXlmcmFtZXMgTlhSZXBvcnRJbmZvMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTUwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QC13ZWJraXQta2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIE5YUmVwb3J0SW5mbzItYW5pbWF0aW9uezAle29wYWNpdHk6MH00MCUsdG97b3BhY2l0eToxfX1ALXdlYmtpdC1rZXlmcmFtZXMgTlhSZXBvcnRJbmZvMS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKC41LC41KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTQwJSx0b3std2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSgxLDEpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX02MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjk1LC45NSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KX19QGtleWZyYW1lcyBOWFJlcG9ydEluZm8xLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguNSwuNSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoLjUsLjUpIHRyYW5zbGF0ZSgtNjBweCwtNjBweCl9NDAlLHRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfTYwJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoNjBweCw2MHB4KSBzY2FsZSguOTUsLjk1KSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpfX0jTlhSZXBvcnRJbmZvICp7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MS4yczthbmltYXRpb24tZHVyYXRpb246MS4yczstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAsMCwxLDEpfTwvc3R5bGU+PGcgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6TlhSZXBvcnRJbmZvMS1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSg2MHB4LDYwcHgpIHNjYWxlKDEsMSkgdHJhbnNsYXRlKC02MHB4LC02MHB4KVxcXCI+PHBhdGggZD1cXFwiTTYwIDExNS4zOEMyOS40NiAxMTUuMzggNC42MiA5MC41NCA0LjYyIDYwIDQuNjIgMjkuNDYgMjkuNDYgNC42MiA2MCA0LjYyYzMwLjU0IDAgNTUuMzggMjQuODQgNTUuMzggNTUuMzggMCAzMC41NC0yNC44NCA1NS4zOC01NS4zOCA1NS4zOHpNNjAgMEMyNi45MiAwIDAgMjYuOTIgMCA2MHMyNi45MiA2MCA2MCA2MCA2MC0yNi45MiA2MC02MFM5My4wOCAwIDYwIDB6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8yLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8yLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48ZyBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm8zLWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKDYwcHgsNjBweCkgc2NhbGUoMSwxKSB0cmFuc2xhdGUoLTYwcHgsLTYwcHgpXFxcIj48cGF0aCBkPVxcXCJNNTcuNzUgNDMuODVjMC0xLjI0IDEuMDEtMi4yNSAyLjI1LTIuMjVzMi4yNSAxLjAxIDIuMjUgMi4yNXY0OC4xOGMwIDEuMjQtMS4wMSAyLjI1LTIuMjUgMi4yNXMtMi4yNS0xLjAxLTIuMjUtMi4yNVY0My44NXptMC0xNS44OGMwLTEuMjQgMS4wMS0yLjI1IDIuMjUtMi4yNXMyLjI1IDEuMDEgMi4yNSAyLjI1djMuMzJjMCAxLjI1LTEuMDEgMi4yNS0yLjI1IDIuMjVzLTIuMjUtMS0yLjI1LTIuMjV2LTMuMzJ6XFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm80LWFuaW1hdGlvbjthbmltYXRpb24tbmFtZTpOWFJlcG9ydEluZm80LWFuaW1hdGlvbjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLC41OCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIGRhdGEtYW5pbWF0b3ItZ3JvdXA9XFxcInRydWVcXFwiIGRhdGEtYW5pbWF0b3ItdHlwZT1cXFwiMlxcXCIvPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sVz1mdW5jdGlvbih0LGUpe3R8fCh0PVwiNjBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgc3Ryb2tlPVxcXCJcIitlK1wiXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC44KVxcXCIgdmlld0JveD1cXFwiMCAwIDM4IDM4XFxcIj48ZyBmaWxsPVxcXCJub25lXFxcIiBmaWxsLXJ1bGU9XFxcImV2ZW5vZGRcXFwiIHN0cm9rZS13aWR0aD1cXFwiMlxcXCIgdHJhbnNmb3JtPVxcXCJ0cmFuc2xhdGUoMSAxKVxcXCI+PGNpcmNsZSBjeD1cXFwiMThcXFwiIGN5PVxcXCIxOFxcXCIgcj1cXFwiMThcXFwiIHN0cm9rZS1vcGFjaXR5PVxcXCIuMjVcXFwiLz48cGF0aCBkPVxcXCJNMzYgMThjMC05Ljk0LTguMDYtMTgtMTgtMThcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgZHVyPVxcXCIxc1xcXCIgZnJvbT1cXFwiMCAxOCAxOFxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHRvPVxcXCIzNjAgMTggMThcXFwiIHR5cGU9XFxcInJvdGF0ZVxcXCIvPjwvcGF0aD48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LEk9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGlkPVxcXCJOWExvYWRpbmdIb3VyZ2xhc3NcXFwiIGZpbGw9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMDAgMjAwXFxcIj48c3R5bGU+QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzNS1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX0xNi42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuOCk7dHJhbnNmb3JtOnNjYWxlKDEsLjgpfTMzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguODgsLjYpO3RyYW5zZm9ybTpzY2FsZSguODgsLjYpfTM3LjUley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpO3RyYW5zZm9ybTpzY2FsZSguODUsLjU1KX00MS42NyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjgsLjUpO3RyYW5zZm9ybTpzY2FsZSguOCwuNSl9NDUuODMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpO3RyYW5zZm9ybTpzY2FsZSguNzUsLjQ1KX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjcsLjQpO3RyYW5zZm9ybTpzY2FsZSguNywuNCl9NTQuMTcley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC42LC4zNSk7dHJhbnNmb3JtOnNjYWxlKC42LC4zNSl9NTguMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC41LC4zKTt0cmFuc2Zvcm06c2NhbGUoLjUsLjMpfTgzLjMzJSx0b3std2Via2l0LXRyYW5zZm9ybTpzY2FsZSguMiwwKTt0cmFuc2Zvcm06c2NhbGUoLjIsMCl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3M1LWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLDEpO3RyYW5zZm9ybTpzY2FsZSgxLDEpfTE2LjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC44KTt0cmFuc2Zvcm06c2NhbGUoMSwuOCl9MzMuMzMley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC44OCwuNik7dHJhbnNmb3JtOnNjYWxlKC44OCwuNil9MzcuNSV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjg1LC41NSk7dHJhbnNmb3JtOnNjYWxlKC44NSwuNTUpfTQxLjY3JXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguOCwuNSk7dHJhbnNmb3JtOnNjYWxlKC44LC41KX00NS44MyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjc1LC40NSk7dHJhbnNmb3JtOnNjYWxlKC43NSwuNDUpfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNywuNCk7dHJhbnNmb3JtOnNjYWxlKC43LC40KX01NC4xNyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjYsLjM1KTt0cmFuc2Zvcm06c2NhbGUoLjYsLjM1KX01OC4zMyV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUsLjMpO3RyYW5zZm9ybTpzY2FsZSguNSwuMyl9ODMuMzMlLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKC4yLDApO3RyYW5zZm9ybTpzY2FsZSguMiwwKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMy1hbmltYXRpb257MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwuMDIpO3RyYW5zZm9ybTpzY2FsZSgxLC4wMil9NzkuMTclLHRvey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEsMSk7dHJhbnNmb3JtOnNjYWxlKDEsMSl9fUBrZXlmcmFtZXMgTlhob3VyZ2xhc3MzLWFuaW1hdGlvbnswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLC4wMik7dHJhbnNmb3JtOnNjYWxlKDEsLjAyKX03OS4xNyUsdG97LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSwxKTt0cmFuc2Zvcm06c2NhbGUoMSwxKX19QC13ZWJraXQta2V5ZnJhbWVzIE5YaG91cmdsYXNzMS1hbmltYXRpb257MCUsODMuMzMley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKX19QGtleWZyYW1lcyBOWGhvdXJnbGFzczEtYW5pbWF0aW9uezAlLDgzLjMzJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX10b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9fSNOWExvYWRpbmdIb3VyZ2xhc3MgKnstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoxLjJzO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjJzOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMCwwLDEsMSl9PC9zdHlsZT48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjFcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3MxLWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDUwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSA1MCU7dHJhbnNmb3JtLWJveDpmaWxsLWJveFxcXCI+PGcgaWQ9XFxcIk5YaG91cmdsYXNzMlxcXCIgZmlsbD1cXFwiaW5oZXJpdFxcXCI+PGcgZGF0YS1hbmltYXRvci1ncm91cD1cXFwidHJ1ZVxcXCIgZGF0YS1hbmltYXRvci10eXBlPVxcXCIyXFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb24tbmFtZTpOWGhvdXJnbGFzczMtYW5pbWF0aW9uO2FuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzMy1hbmltYXRpb247LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwuNTgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsLjU4LDEpOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tb3JpZ2luOjUwJSAxMDAlO3RyYW5zZm9ybS1ib3g6ZmlsbC1ib3hcXFwiIG9wYWNpdHk9XFxcIi40XFxcIj48cGF0aCBpZD1cXFwiTlhob3VyZ2xhc3M0XFxcIiBkPVxcXCJNMTAwIDEwMGwtMzQuMzggMzIuMDh2MzEuMTRoNjguNzZ2LTMxLjE0elxcXCIvPjwvZz48ZyBkYXRhLWFuaW1hdG9yLWdyb3VwPVxcXCJ0cnVlXFxcIiBkYXRhLWFuaW1hdG9yLXR5cGU9XFxcIjJcXFwiIHN0eWxlPVxcXCItd2Via2l0LWFuaW1hdGlvbi1uYW1lOk5YaG91cmdsYXNzNS1hbmltYXRpb247YW5pbWF0aW9uLW5hbWU6Tlhob3VyZ2xhc3M1LWFuaW1hdGlvbjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46NTAlIDEwMCU7dHJhbnNmb3JtLW9yaWdpbjo1MCUgMTAwJTt0cmFuc2Zvcm0tYm94OmZpbGwtYm94XFxcIiBvcGFjaXR5PVxcXCIuNFxcXCI+PHBhdGggaWQ9XFxcIk5YaG91cmdsYXNzNlxcXCIgZD1cXFwiTTEwMCAxMDBMNjUuNjIgNjcuOTJWMzYuNzhoNjguNzZ2MzEuMTR6XFxcIi8+PC9nPjxwYXRoIGQ9XFxcIk01MS4xNCAzOC44OWg4LjMzdjE0LjkzYzAgMTUuMSA4LjI5IDI4Ljk5IDIzLjM0IDM5LjEgMS44OCAxLjI1IDMuMDQgMy45NyAzLjA0IDcuMDhzLTEuMTYgNS44My0zLjA0IDcuMDljLTE1LjA1IDEwLjEtMjMuMzQgMjMuOTktMjMuMzQgMzkuMDl2MTQuOTNoLTguMzNhNC44NTkgNC44NTkgMCAxIDAgMCA5LjcyaDk3LjcyYTQuODU5IDQuODU5IDAgMSAwIDAtOS43MmgtOC4zM3YtMTQuOTNjMC0xNS4xLTguMjktMjguOTktMjMuMzQtMzkuMDktMS44OC0xLjI2LTMuMDQtMy45OC0zLjA0LTcuMDlzMS4xNi01LjgzIDMuMDQtNy4wOGMxNS4wNS0xMC4xMSAyMy4zNC0yNCAyMy4zNC0zOS4xVjM4Ljg5aDguMzNhNC44NTkgNC44NTkgMCAxIDAgMC05LjcySDUxLjE0YTQuODU5IDQuODU5IDAgMSAwIDAgOS43MnptNzkuNjcgMTQuOTNjMCAxNS44Ny0xMS45MyAyNi4yNS0xOS4wNCAzMS4wMy00LjYgMy4wOC03LjM0IDguNzUtNy4zNCAxNS4xNSAwIDYuNDEgMi43NCAxMi4wNyA3LjM0IDE1LjE1IDcuMTEgNC43OCAxOS4wNCAxNS4xNiAxOS4wNCAzMS4wM3YxNC45M0g2OS4xOXYtMTQuOTNjMC0xNS44NyAxMS45My0yNi4yNSAxOS4wNC0zMS4wMiA0LjYtMy4wOSA3LjM0LTguNzUgNy4zNC0xNS4xNiAwLTYuNC0yLjc0LTEyLjA3LTcuMzQtMTUuMTUtNy4xMS00Ljc4LTE5LjA0LTE1LjE2LTE5LjA0LTMxLjAzVjM4Ljg5aDYxLjYydjE0LjkzelxcXCIvPjwvZz48L2c+PC9zdmc+XCI7cmV0dXJuIGl9LFI9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjI1IDI1IDUwIDUwXFxcIiBzdHlsZT1cXFwiLXdlYmtpdC1hbmltYXRpb246cm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246cm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtoZWlnaHQ6XCIrdCtcIjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46Y2VudGVyIGNlbnRlcjstbXMtdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgY2VudGVyO3RyYW5zZm9ybS1vcmlnaW46Y2VudGVyIGNlbnRlcjt3aWR0aDpcIit0K1wiO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDttYXJnaW46YXV0b1xcXCI+PHN0eWxlPkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGV7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHJvdGF0ZXt0b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fUAtd2Via2l0LWtleWZyYW1lcyBkYXNoezAle3N0cm9rZS1kYXNoYXJyYXk6MSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6MH01MCV7c3Ryb2tlLWRhc2hhcnJheTo4OSwyMDA7c3Ryb2tlLWRhc2hvZmZzZXQ6LTM1fXRve3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0xMjR9fUBrZXlmcmFtZXMgZGFzaHswJXtzdHJva2UtZGFzaGFycmF5OjEsMjAwO3N0cm9rZS1kYXNob2Zmc2V0OjB9NTAle3N0cm9rZS1kYXNoYXJyYXk6ODksMjAwO3N0cm9rZS1kYXNob2Zmc2V0Oi0zNX10b3tzdHJva2UtZGFzaGFycmF5Ojg5LDIwMDtzdHJva2UtZGFzaG9mZnNldDotMTI0fX08L3N0eWxlPjxjaXJjbGUgY3g9XFxcIjUwXFxcIiBjeT1cXFwiNTBcXFwiIHI9XFxcIjIwXFxcIiBmaWxsPVxcXCJub25lXFxcIiBzdHJva2U9XFxcIlwiK2UrXCJcXFwiIHN0cm9rZS13aWR0aD1cXFwiMlxcXCIgc3R5bGU9XFxcIi13ZWJraXQtYW5pbWF0aW9uOmRhc2ggMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZSxjb2xvciAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO2FuaW1hdGlvbjpkYXNoIDEuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGUsY29sb3IgMS41cyBlYXNlLWluLW91dCBpbmZpbml0ZVxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiMTUwIDIwMFxcXCIgc3Ryb2tlLWRhc2hvZmZzZXQ9XFxcIi0xMFxcXCIgc3Ryb2tlLWxpbmVjYXA9XFxcInJvdW5kXFxcIi8+PC9zdmc+XCI7cmV0dXJuIGl9LEE9ZnVuY3Rpb24odCxlKXt0fHwodD1cIjYwcHhcIiksZXx8KGU9XCIjMzJjNjgyXCIpO3ZhciBpPVwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCAxMjggMTI4XFxcIj48Zz48cGF0aCBmaWxsPVxcXCJpbmhlcml0XFxcIiBkPVxcXCJNMTA5LjI1IDU1LjVoLTM2bDEyLTEyYTI5LjU0IDI5LjU0IDAgMCAwLTQ5LjUzIDEySDE4Ljc1QTQ2LjA0IDQ2LjA0IDAgMCAxIDk2LjkgMzEuODRsMTIuMzUtMTIuMzR2MzZ6bS05MC41IDE3aDM2bC0xMiAxMmEyOS41NCAyOS41NCAwIDAgMCA0OS41My0xMmgxNi45N0E0Ni4wNCA0Ni4wNCAwIDAgMSAzMS4xIDk2LjE2TDE4Ljc0IDEwOC41di0zNnpcXFwiLz48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVxcXCJ0cmFuc2Zvcm1cXFwiIGR1cj1cXFwiMS41c1xcXCIgZnJvbT1cXFwiMCA2NCA2NFxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHRvPVxcXCIzNjAgNjQgNjRcXFwiIHR5cGU9XFxcInJvdGF0ZVxcXCIvPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sTT1mdW5jdGlvbih0LGUpe3R8fCh0PVwiNjBweFwiKSxlfHwoZT1cIiMzMmM2ODJcIik7dmFyIGk9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiXCIrZStcIlxcXCIgd2lkdGg9XFxcIlwiK3QrXCJcXFwiIGhlaWdodD1cXFwiXCIrdCtcIlxcXCIgdmlld0JveD1cXFwiMCAwIDEwMCAxMDBcXFwiPjxnIHRyYW5zZm9ybT1cXFwidHJhbnNsYXRlKDI1IDUwKVxcXCI+PGNpcmNsZSByPVxcXCI5XFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC4yMzkpXFxcIj48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVxcXCJ0cmFuc2Zvcm1cXFwiIGJlZ2luPVxcXCItMC4yNjZzXFxcIiBjYWxjTW9kZT1cXFwic3BsaW5lXFxcIiBkdXI9XFxcIjAuOHNcXFwiIGtleVNwbGluZXM9XFxcIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXFxcIiBrZXlUaW1lcz1cXFwiMDswLjU7MVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHR5cGU9XFxcInNjYWxlXFxcIiB2YWx1ZXM9XFxcIjA7MTswXFxcIi8+PC9jaXJjbGU+PC9nPjxnIHRyYW5zZm9ybT1cXFwidHJhbnNsYXRlKDUwIDUwKVxcXCI+PGNpcmNsZSByPVxcXCI5XFxcIiBmaWxsPVxcXCJpbmhlcml0XFxcIiB0cmFuc2Zvcm09XFxcInNjYWxlKC4wMDE1MilcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgYmVnaW49XFxcIi0wLjEzM3NcXFwiIGNhbGNNb2RlPVxcXCJzcGxpbmVcXFwiIGR1cj1cXFwiMC44c1xcXCIga2V5U3BsaW5lcz1cXFwiMC4zIDAgMC43IDE7MC4zIDAgMC43IDFcXFwiIGtleVRpbWVzPVxcXCIwOzAuNTsxXFxcIiByZXBlYXRDb3VudD1cXFwiaW5kZWZpbml0ZVxcXCIgdHlwZT1cXFwic2NhbGVcXFwiIHZhbHVlcz1cXFwiMDsxOzBcXFwiLz48L2NpcmNsZT48L2c+PGcgdHJhbnNmb3JtPVxcXCJ0cmFuc2xhdGUoNzUgNTApXFxcIj48Y2lyY2xlIHI9XFxcIjlcXFwiIGZpbGw9XFxcImluaGVyaXRcXFwiIHRyYW5zZm9ybT1cXFwic2NhbGUoLjI5OSlcXFwiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9XFxcInRyYW5zZm9ybVxcXCIgYmVnaW49XFxcIjBzXFxcIiBjYWxjTW9kZT1cXFwic3BsaW5lXFxcIiBkdXI9XFxcIjAuOHNcXFwiIGtleVNwbGluZXM9XFxcIjAuMyAwIDAuNyAxOzAuMyAwIDAuNyAxXFxcIiBrZXlUaW1lcz1cXFwiMDswLjU7MVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHR5cGU9XFxcInNjYWxlXFxcIiB2YWx1ZXM9XFxcIjA7MTswXFxcIi8+PC9jaXJjbGU+PC9nPjwvc3ZnPlwiO3JldHVybiBpfSxCPWZ1bmN0aW9uKHQsZSl7dHx8KHQ9XCI2MHB4XCIpLGV8fChlPVwiIzMyYzY4MlwiKTt2YXIgaT1cIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBzdHJva2U9XFxcIlwiK2UrXCJcXFwiIHdpZHRoPVxcXCJcIit0K1wiXFxcIiBoZWlnaHQ9XFxcIlwiK3QrXCJcXFwiIHZpZXdCb3g9XFxcIjAgMCA0NCA0NFxcXCI+PGcgZmlsbD1cXFwibm9uZVxcXCIgZmlsbC1ydWxlPVxcXCJldmVub2RkXFxcIiBzdHJva2Utd2lkdGg9XFxcIjJcXFwiPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjJcXFwiIHI9XFxcIjFcXFwiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XFxcInJcXFwiIGJlZ2luPVxcXCIwc1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjE2NSwgMC44NCwgMC40NCwgMVxcXCIga2V5VGltZXM9XFxcIjA7IDFcXFwiIHJlcGVhdENvdW50PVxcXCJpbmRlZmluaXRlXFxcIiB2YWx1ZXM9XFxcIjE7IDIwXFxcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cXFwic3Ryb2tlLW9wYWNpdHlcXFwiIGJlZ2luPVxcXCIwc1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjMsIDAuNjEsIDAuMzU1LCAxXFxcIiBrZXlUaW1lcz1cXFwiMDsgMVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHZhbHVlcz1cXFwiMTsgMFxcXCIvPjwvY2lyY2xlPjxjaXJjbGUgY3g9XFxcIjIyXFxcIiBjeT1cXFwiMjJcXFwiIHI9XFxcIjFcXFwiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XFxcInJcXFwiIGJlZ2luPVxcXCItMC45c1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjE2NSwgMC44NCwgMC40NCwgMVxcXCIga2V5VGltZXM9XFxcIjA7IDFcXFwiIHJlcGVhdENvdW50PVxcXCJpbmRlZmluaXRlXFxcIiB2YWx1ZXM9XFxcIjE7IDIwXFxcIi8+PGFuaW1hdGUgYXR0cmlidXRlTmFtZT1cXFwic3Ryb2tlLW9wYWNpdHlcXFwiIGJlZ2luPVxcXCItMC45c1xcXCIgY2FsY01vZGU9XFxcInNwbGluZVxcXCIgZHVyPVxcXCIxLjhzXFxcIiBrZXlTcGxpbmVzPVxcXCIwLjMsIDAuNjEsIDAuMzU1LCAxXFxcIiBrZXlUaW1lcz1cXFwiMDsgMVxcXCIgcmVwZWF0Q291bnQ9XFxcImluZGVmaW5pdGVcXFwiIHZhbHVlcz1cXFwiMTsgMFxcXCIvPjwvY2lyY2xlPjwvZz48L3N2Zz5cIjtyZXR1cm4gaX0sWD1mdW5jdGlvbih0LGUsaSl7dHx8KHQ9XCI2MHB4XCIpLGV8fChlPVwiI2Y4ZjhmOFwiKSxpfHwoaT1cIiMzMmM2ODJcIik7dmFyIGE9XCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaWQ9XFxcIk5YTG9hZGluZ05vdGlmbGl4TGliXFxcIiB3aWR0aD1cXFwiXCIrdCtcIlxcXCIgaGVpZ2h0PVxcXCJcIit0K1wiXFxcIiB2aWV3Qm94PVxcXCIwIDAgMjAwIDIwMFxcXCI+PGRlZnM+PHN0eWxlPkBrZXlmcmFtZXMgbm90aWZsaXgtbnswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgteHswJXtzdHJva2UtZGFzaG9mZnNldDoxMDAwfXRve3N0cm9rZS1kYXNob2Zmc2V0OjB9fUBrZXlmcmFtZXMgbm90aWZsaXgtZG90ezAlLHRve3N0cm9rZS13aWR0aDowfTUwJXtzdHJva2Utd2lkdGg6MTJ9fS5ueC1pY29uLWxpbmV7c3Ryb2tlOlwiK2UrXCI7c3Ryb2tlLXdpZHRoOjEyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDoyMjtmaWxsOm5vbmV9PC9zdHlsZT48L2RlZnM+PHBhdGggZD1cXFwiTTQ3Ljk3IDEzNS4wNWE2LjUgNi41IDAgMSAxIDAgMTMgNi41IDYuNSAwIDAgMSAwLTEzelxcXCIgc3R5bGU9XFxcImFuaW1hdGlvbi1uYW1lOm5vdGlmbGl4LWRvdDthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2UtaW4tb3V0O2FuaW1hdGlvbi1kdXJhdGlvbjoxLjI1czthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlO2FuaW1hdGlvbi1kaXJlY3Rpb246bm9ybWFsXFxcIiBmaWxsPVxcXCJcIitpK1wiXFxcIiBzdHJva2U9XFxcIlwiK2krXCJcXFwiIHN0cm9rZS1saW5lY2FwPVxcXCJyb3VuZFxcXCIgc3Ryb2tlLWxpbmVqb2luPVxcXCJyb3VuZFxcXCIgc3Ryb2tlLW1pdGVybGltaXQ9XFxcIjIyXFxcIiBzdHJva2Utd2lkdGg9XFxcIjEyXFxcIi8+PHBhdGggY2xhc3M9XFxcIm54LWljb24tbGluZVxcXCIgZD1cXFwiTTEwLjE0IDE0NC43NlY4Ny41NWMwLTUuNjgtNC41NC00MS4zNiAzNy44My00MS4zNiA0Mi4zNiAwIDM3LjgyIDM1LjY4IDM3LjgyIDQxLjM2djU3LjIxXFxcIiBzdHlsZT1cXFwiYW5pbWF0aW9uLW5hbWU6bm90aWZsaXgtbjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tZHVyYXRpb246Mi41czthbmltYXRpb24tZGVsYXk6MHM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiNTAwXFxcIi8+PHBhdGggY2xhc3M9XFxcIm54LWljb24tbGluZVxcXCIgZD1cXFwiTTExNS4wNiAxNDQuNDljMjQuOTgtMzIuNjggNDkuOTYtNjUuMzUgNzQuOTQtOTguMDNNMTE0Ljg5IDQ2LjZjMjUuMDkgMzIuNTggNTAuMTkgNjUuMTcgNzUuMjkgOTcuNzVcXFwiIHN0eWxlPVxcXCJhbmltYXRpb24tbmFtZTpub3RpZmxpeC14O2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO2FuaW1hdGlvbi1kdXJhdGlvbjoyLjVzO2FuaW1hdGlvbi1kZWxheTouMnM7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24tZGlyZWN0aW9uOm5vcm1hbFxcXCIgc3Ryb2tlLWRhc2hhcnJheT1cXFwiNTAwXFxcIi8+PC9zdmc+XCI7cmV0dXJuIGF9LEQ9ZnVuY3Rpb24oKXtyZXR1cm5cIltpZF49Tm90aWZsaXhOb3RpZnlXcmFwXXtwb2ludGVyLWV2ZW50czpub25lO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMTtvcGFjaXR5OjE7cmlnaHQ6MTBweDt0b3A6MTBweDt3aWR0aDoyODBweDttYXgtd2lkdGg6OTYlOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXS5ueC1mbGV4LWNlbnRlci1jZW50ZXJ7bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gMjBweCk7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTphdXRvO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luOmF1dG99W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XXstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZCAuM3MgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjpiYWNrZ3JvdW5kIC4zcyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQgLjNzIGVhc2UtaW4tb3V0fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXZ7cG9pbnRlci1ldmVudHM6YWxsOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtmb250LWZhbWlseTpcXFwiUXVpY2tzYW5kXFxcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcXFwiU2Vnb2UgVUlcXFwiLFJvYm90byxcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLEFyaWFsLHNhbnMtc2VyaWY7d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWZsZXg7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MCAwIDEwcHg7Ym9yZGVyLXJhZGl1czo1cHg7YmFja2dyb3VuZDojMWUxZTFlO2NvbG9yOiNmZmY7cGFkZGluZzoxMHB4IDEycHg7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY6bGFzdC1jaGlsZHttYXJnaW46MH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtY2FsbGJhY2t7Y3Vyc29yOnBvaW50ZXJ9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWljb257cGFkZGluZzo4cHg7bWluLWhlaWdodDo1NnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtcGF1c2Vke2N1cnNvcjphdXRvfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtbm90aWZ5LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1jbG9zZS1idXR0b257cGFkZGluZzoxMHB4IDM2cHggMTBweCAxMnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1pY29uLm54LXdpdGgtY2xvc2UtYnV0dG9ue3BhZGRpbmc6NnB4IDM2cHggNnB4IDZweH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2PnNwYW4ubngtbWVzc2FnZXtjdXJzb3I6aW5oZXJpdDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7d29yZC1icmVhazpicmVhay1hbGw7d29yZC1icmVhazpicmVhay13b3JkfVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+c3Bhbi5ueC1jbG9zZS1idXR0b257Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMnMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjJzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4ycyBlYXNlLWluLW91dDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDo4cHg7dG9wOjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87Y29sb3I6aW5oZXJpdDt3aWR0aDoyMHB4O2hlaWdodDoyMHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+c3Bhbi5ueC1jbG9zZS1idXR0b246aG92ZXJ7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDkwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDkwZGVnKX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2PnNwYW4ubngtY2xvc2UtYnV0dG9uPnN2Z3twb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxNnB4O2hlaWdodDoxNnB4O3JpZ2h0OjJweDt0b3A6MnB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+Lm54LW1lc3NhZ2UtaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo0MHB4O2hlaWdodDo0MHB4O2ZvbnQtc2l6ZTozMHB4O2xpbmUtaGVpZ2h0OjQwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bGVmdDo4cHg7dG9wOjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87Ym9yZGVyLXJhZGl1czppbmhlcml0fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXY+Lm54LW1lc3NhZ2UtaWNvbi1mYS5ueC1tZXNzYWdlLWljb24tZmEtc2hhZG93e2NvbG9yOmluaGVyaXQ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4xNSk7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgMCAzNHB4IHJnYmEoMCwwLDAsLjIpO2JveC1zaGFkb3c6aW5zZXQgMCAwIDM0cHggcmdiYSgwLDAsMCwuMik7dGV4dC1zaGFkb3c6MCAwIDEwcHggcmdiYSgwLDAsMCwuMyl9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdj5zcGFuLm54LXdpdGgtaWNvbntwb3NpdGlvbjpyZWxhdGl2ZTtmbG9hdDpsZWZ0O3dpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO21hcmdpbjowIDAgMCA0MHB4O3BhZGRpbmc6MCAwIDAgMTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC1ydGwtb24+Lm54LW1lc3NhZ2UtaWNvbntsZWZ0OmF1dG87cmlnaHQ6OHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtcnRsLW9uPnNwYW4ubngtd2l0aC1pY29ue3BhZGRpbmc6MCAxMHB4IDAgMDttYXJnaW46MCA0MHB4IDAgMH1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXJ0bC1vbj5zcGFuLm54LWNsb3NlLWJ1dHRvbntyaWdodDphdXRvO2xlZnQ6OHB4fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1pY29uLm54LXdpdGgtY2xvc2UtYnV0dG9uLm54LXJ0bC1vbntwYWRkaW5nOjZweCA2cHggNnB4IDM2cHh9W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWNsb3NlLWJ1dHRvbi5ueC1ydGwtb257cGFkZGluZzoxMHB4IDEycHggMTBweCAzNnB4fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XS5ueC13aXRoLWFuaW1hdGlvbixbaWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGV7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtem9vbXstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tem9vbXswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9NTAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX19QGtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLXpvb217MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfTUwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtZnJvbS1yaWdodHstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLWZyb20tcmlnaHQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLXJpZ2h0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1yaWdodHswJXtyaWdodDotMzAwcHg7b3BhY2l0eTowfTUwJXtyaWdodDo4cHg7b3BhY2l0eToxfTEwMCV7cmlnaHQ6MDtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLXJpZ2h0ezAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9NTAle3JpZ2h0OjhweDtvcGFjaXR5OjF9MTAwJXtyaWdodDowO29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLWxlZnR7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLWxlZnR7MCV7bGVmdDotMzAwcHg7b3BhY2l0eTowfTUwJXtsZWZ0OjhweDtvcGFjaXR5OjF9MTAwJXtsZWZ0OjA7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1sZWZ0ezAle2xlZnQ6LTMwMHB4O29wYWNpdHk6MH01MCV7bGVmdDo4cHg7b3BhY2l0eToxfTEwMCV7bGVmdDowO29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLXRvcHstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktYW5pbWF0aW9uLWZyb20tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZnJvbS10b3AgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LWFuaW1hdGlvbi1mcm9tLXRvcHswJXt0b3A6LTUwcHg7b3BhY2l0eTowfTUwJXt0b3A6OHB4O29wYWNpdHk6MX0xMDAle3RvcDowO29wYWNpdHk6MX19QGtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZyb20tdG9wezAle3RvcDotNTBweDtvcGFjaXR5OjB9NTAle3RvcDo4cHg7b3BhY2l0eToxfTEwMCV7dG9wOjA7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZyb20tYm90dG9tey13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1hbmltYXRpb24tZnJvbS1ib3R0b20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LWFuaW1hdGlvbi1mcm9tLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktYW5pbWF0aW9uLWZyb20tYm90dG9tezAle2JvdHRvbTotNTBweDtvcGFjaXR5OjB9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOjA7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIG5vdGlmeS1hbmltYXRpb24tZnJvbS1ib3R0b217MCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH01MCV7Ym90dG9tOjhweDtvcGFjaXR5OjF9MTAwJXtib3R0b206MDtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhOb3RpZnlPdmVybGF5XS5ueC13aXRoLWFuaW1hdGlvbi5ueC1yZW1vdmUsW2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mYWRlLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246bm90aWZ5LXJlbW92ZS1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktcmVtb3ZlLWZhZGV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtZmFkZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtem9vbS5ueC1yZW1vdmV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApOy13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS16b29tezAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtem9vbXswJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLXRvcC5ueC1yZW1vdmV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tdG9wIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tdG9wezAle3RvcDowO29wYWNpdHk6MX01MCV7dG9wOjhweDtvcGFjaXR5OjF9MTAwJXt0b3A6LTUwcHg7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tdG9wezAle3RvcDowO29wYWNpdHk6MX01MCV7dG9wOjhweDtvcGFjaXR5OjF9MTAwJXt0b3A6LTUwcHg7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Tm90aWZ5V3JhcF0+ZGl2Lm54LXdpdGgtYW5pbWF0aW9uLm54LWZyb20tcmlnaHQubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLXJpZ2h0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOm5vdGlmeS1yZW1vdmUtdG8tcmlnaHQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1yaWdodHswJXtyaWdodDowO29wYWNpdHk6MX01MCV7cmlnaHQ6OHB4O29wYWNpdHk6MX0xMDAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1yaWdodHswJXtyaWdodDowO29wYWNpdHk6MX01MCV7cmlnaHQ6OHB4O29wYWNpdHk6MX0xMDAle3JpZ2h0Oi0zMDBweDtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhOb3RpZnlXcmFwXT5kaXYubngtd2l0aC1hbmltYXRpb24ubngtZnJvbS1ib3R0b20ubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWJvdHRvbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBub3RpZnktcmVtb3ZlLXRvLWJvdHRvbXswJXtib3R0b206MDtvcGFjaXR5OjF9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH19QGtleWZyYW1lcyBub3RpZnktcmVtb3ZlLXRvLWJvdHRvbXswJXtib3R0b206MDtvcGFjaXR5OjF9NTAle2JvdHRvbTo4cHg7b3BhY2l0eToxfTEwMCV7Ym90dG9tOi01MHB4O29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeE5vdGlmeVdyYXBdPmRpdi5ueC13aXRoLWFuaW1hdGlvbi5ueC1mcm9tLWxlZnQubngtcmVtb3Zle29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpub3RpZnktcmVtb3ZlLXRvLWxlZnQgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bm90aWZ5LXJlbW92ZS10by1sZWZ0IC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIG5vdGlmeS1yZW1vdmUtdG8tbGVmdHswJXtsZWZ0OjA7b3BhY2l0eToxfTUwJXtsZWZ0OjhweDtvcGFjaXR5OjF9MTAwJXtsZWZ0Oi0zMDBweDtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgbm90aWZ5LXJlbW92ZS10by1sZWZ0ezAle2xlZnQ6MDtvcGFjaXR5OjF9NTAle2xlZnQ6OHB4O29wYWNpdHk6MX0xMDAle2xlZnQ6LTMwMHB4O29wYWNpdHk6MH19XCJ9LFQ9MCxGPWZ1bmN0aW9uKGEsbixvLHIpe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTtlfHxHLk5vdGlmeS5pbml0KHt9KTt2YXIgYz12KCEwLGUse30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBvJiYhQXJyYXkuaXNBcnJheShvKXx8XCJvYmplY3RcIj09dHlwZW9mIHImJiFBcnJheS5pc0FycmF5KHIpKXt2YXIgcD17fTtcIm9iamVjdFwiPT10eXBlb2Ygbz9wPW86XCJvYmplY3RcIj09dHlwZW9mIHImJihwPXIpLGU9dighMCxlLHApfXZhciBmPWVbYS50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpXTtUKyssXCJzdHJpbmdcIiE9dHlwZW9mIG4mJihuPVwiTm90aWZsaXggXCIrYSksZS5wbGFpblRleHQmJihuPU4obikpLCFlLnBsYWluVGV4dCYmbi5sZW5ndGg+ZS5tZXNzYWdlTWF4TGVuZ3RoJiYoZT12KCEwLGUse2Nsb3NlQnV0dG9uOiEwLG1lc3NhZ2VNYXhMZW5ndGg6MTUwfSksbj1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvcjogVGhlIFxcXCJwbGFpblRleHRcXFwiIG9wdGlvbiBpcyBcXFwiZmFsc2VcXFwiIGFuZCB0aGUgbm90aWZpY2F0aW9uIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiB0aGUgXFxcIm1lc3NhZ2VNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIiksbi5sZW5ndGg+ZS5tZXNzYWdlTWF4TGVuZ3RoJiYobj1uLnN1YnN0cmluZygwLGUubWVzc2FnZU1heExlbmd0aCkrXCIuLi5cIiksXCJzaGFkb3dcIj09PWUuZm9udEF3ZXNvbWVJY29uU3R5bGUmJihmLmZvbnRBd2Vzb21lSWNvbkNvbG9yPWYuYmFja2dyb3VuZCksZS5jc3NBbmltYXRpb258fChlLmNzc0FuaW1hdGlvbkR1cmF0aW9uPTApO3ZhciBkPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpfHx0LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWYoZC5pZD1tLndyYXBJRCxkLnN0eWxlLndpZHRoPWUud2lkdGgsZC5zdHlsZS56SW5kZXg9ZS56aW5kZXgsZC5zdHlsZS5vcGFjaXR5PWUub3BhY2l0eSxcImNlbnRlci1jZW50ZXJcIj09PWUucG9zaXRpb24/KGQuc3R5bGUubGVmdD1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPWUuZGlzdGFuY2UsZC5zdHlsZS5yaWdodD1lLmRpc3RhbmNlLGQuc3R5bGUuYm90dG9tPWUuZGlzdGFuY2UsZC5zdHlsZS5tYXJnaW49XCJhdXRvXCIsZC5jbGFzc0xpc3QuYWRkKFwibngtZmxleC1jZW50ZXItY2VudGVyXCIpLGQuc3R5bGUubWF4SGVpZ2h0PVwiY2FsYygoMTAwdmggLSBcIitlLmRpc3RhbmNlK1wiKSAtIFwiK2UuZGlzdGFuY2UrXCIpXCIsZC5zdHlsZS5kaXNwbGF5PVwiZmxleFwiLGQuc3R5bGUuZmxleFdyYXA9XCJ3cmFwXCIsZC5zdHlsZS5mbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIsZC5zdHlsZS5qdXN0aWZ5Q29udGVudD1cImNlbnRlclwiLGQuc3R5bGUuYWxpZ25JdGVtcz1cImNlbnRlclwiLGQuc3R5bGUucG9pbnRlckV2ZW50cz1cIm5vbmVcIik6XCJjZW50ZXItdG9wXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1cImF1dG9cIixkLnN0eWxlLm1hcmdpbj1cImF1dG9cIik6XCJjZW50ZXItYm90dG9tXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS5ib3R0b209ZS5kaXN0YW5jZSxkLnN0eWxlLnRvcD1cImF1dG9cIixkLnN0eWxlLm1hcmdpbj1cImF1dG9cIik6XCJyaWdodC1ib3R0b21cIj09PWUucG9zaXRpb24/KGQuc3R5bGUucmlnaHQ9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPVwiYXV0b1wiLGQuc3R5bGUubGVmdD1cImF1dG9cIik6XCJsZWZ0LXRvcFwiPT09ZS5wb3NpdGlvbj8oZC5zdHlsZS5sZWZ0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLnJpZ2h0PVwiYXV0b1wiLGQuc3R5bGUuYm90dG9tPVwiYXV0b1wiKTpcImxlZnQtYm90dG9tXCI9PT1lLnBvc2l0aW9uPyhkLnN0eWxlLmxlZnQ9ZS5kaXN0YW5jZSxkLnN0eWxlLmJvdHRvbT1lLmRpc3RhbmNlLGQuc3R5bGUudG9wPVwiYXV0b1wiLGQuc3R5bGUucmlnaHQ9XCJhdXRvXCIpOihkLnN0eWxlLnJpZ2h0PWUuZGlzdGFuY2UsZC5zdHlsZS50b3A9ZS5kaXN0YW5jZSxkLnN0eWxlLmxlZnQ9XCJhdXRvXCIsZC5zdHlsZS5ib3R0b209XCJhdXRvXCIpLGUuYmFja092ZXJsYXkpe3ZhciB4PXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpfHx0LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7eC5pZD1tLm92ZXJsYXlJRCx4LnN0eWxlLndpZHRoPVwiMTAwJVwiLHguc3R5bGUuaGVpZ2h0PVwiMTAwJVwiLHguc3R5bGUucG9zaXRpb249XCJmaXhlZFwiLHguc3R5bGUuekluZGV4PWUuemluZGV4LTEseC5zdHlsZS5sZWZ0PTAseC5zdHlsZS50b3A9MCx4LnN0eWxlLnJpZ2h0PTAseC5zdHlsZS5ib3R0b209MCx4LnN0eWxlLmJhY2tncm91bmQ9Zi5iYWNrT3ZlcmxheUNvbG9yfHxlLmJhY2tPdmVybGF5Q29sb3IseC5jbGFzc05hbWU9ZS5jc3NBbmltYXRpb24/XCJueC13aXRoLWFuaW1hdGlvblwiOlwiXCIseC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1lLmNzc0FuaW1hdGlvbj9lLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIjpcIlwiLHQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpfHx0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoeCl9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChtLndyYXBJRCl8fHQuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkKTt2YXIgZz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Zy5pZD1lLklEK1wiLVwiK1QsZy5jbGFzc05hbWU9ZS5jbGFzc05hbWUrXCIgXCIrZi5jaGlsZENsYXNzTmFtZStcIiBcIisoZS5jc3NBbmltYXRpb24/XCJueC13aXRoLWFuaW1hdGlvblwiOlwiXCIpK1wiIFwiKyhlLnVzZUljb24/XCJueC13aXRoLWljb25cIjpcIlwiKStcIiBueC1cIitlLmNzc0FuaW1hdGlvblN0eWxlK1wiIFwiKyhlLmNsb3NlQnV0dG9uJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvP1wibngtd2l0aC1jbG9zZS1idXR0b25cIjpcIlwiKStcIiBcIisoXCJmdW5jdGlvblwiPT10eXBlb2Ygbz9cIm54LXdpdGgtY2FsbGJhY2tcIjpcIlwiKStcIiBcIisoZS5jbGlja1RvQ2xvc2U/XCJueC1ub3RpZnktY2xpY2stdG8tY2xvc2VcIjpcIlwiKSxnLnN0eWxlLmZvbnRTaXplPWUuZm9udFNpemUsZy5zdHlsZS5jb2xvcj1mLnRleHRDb2xvcixnLnN0eWxlLmJhY2tncm91bmQ9Zi5iYWNrZ3JvdW5kLGcuc3R5bGUuYm9yZGVyUmFkaXVzPWUuYm9yZGVyUmFkaXVzLGcuc3R5bGUucG9pbnRlckV2ZW50cz1cImFsbFwiLGUucnRsJiYoZy5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxnLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLGcuc3R5bGUuZm9udEZhbWlseT1cIlxcXCJcIitlLmZvbnRGYW1pbHkrXCJcXFwiLCBcIitzLGUuY3NzQW5pbWF0aW9uJiYoZy5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1lLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIik7dmFyIGI9XCJcIjtpZihlLmNsb3NlQnV0dG9uJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBvJiYoYj1cIjxzcGFuIGNsYXNzPVxcXCJueC1jbG9zZS1idXR0b25cXFwiPjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAyMCAyMFxcXCI+PGc+PHBhdGggZmlsbD1cXFwiXCIrZi5ub3RpZmxpeEljb25Db2xvcitcIlxcXCIgZD1cXFwiTTAuMzggMi4xOWw3LjggNy44MSAtNy44IDcuODFjLTAuNTEsMC41IC0wLjUxLDEuMzEgLTAuMDEsMS44MSAwLjI1LDAuMjUgMC41NywwLjM4IDAuOTEsMC4zOCAwLjM0LDAgMC42NywtMC4xNCAwLjkxLC0wLjM4bDcuODEgLTcuODEgNy44MSA3LjgxYzAuMjQsMC4yNCAwLjU3LDAuMzggMC45MSwwLjM4IDAuMzQsMCAwLjY2LC0wLjE0IDAuOSwtMC4zOCAwLjUxLC0wLjUgMC41MSwtMS4zMSAwLC0xLjgxbC03LjgxIC03LjgxIDcuODEgLTcuODFjMC41MSwtMC41IDAuNTEsLTEuMzEgMCwtMS44MiAtMC41LC0wLjUgLTEuMzEsLTAuNSAtMS44MSwwbC03LjgxIDcuODEgLTcuODEgLTcuODFjLTAuNSwtMC41IC0xLjMxLC0wLjUgLTEuODEsMCAtMC41MSwwLjUxIC0wLjUxLDEuMzIgMCwxLjgyelxcXCIvPjwvZz48L3N2Zz48L3NwYW4+XCIpLCFlLnVzZUljb24pZy5pbm5lckhUTUw9XCI8c3BhbiBjbGFzcz1cXFwibngtbWVzc2FnZVxcXCI+XCIrbitcIjwvc3Bhbj5cIisoZS5jbG9zZUJ1dHRvbj9iOlwiXCIpO2Vsc2UgaWYoZS51c2VGb250QXdlc29tZSlnLmlubmVySFRNTD1cIjxpIHN0eWxlPVxcXCJjb2xvcjpcIitmLmZvbnRBd2Vzb21lSWNvbkNvbG9yK1wiOyBmb250LXNpemU6XCIrZS5mb250QXdlc29tZUljb25TaXplK1wiO1xcXCIgY2xhc3M9XFxcIm54LW1lc3NhZ2UtaWNvbiBueC1tZXNzYWdlLWljb24tZmEgXCIrZi5mb250QXdlc29tZUNsYXNzTmFtZStcIiBcIisoXCJzaGFkb3dcIj09PWUuZm9udEF3ZXNvbWVJY29uU3R5bGU/XCJueC1tZXNzYWdlLWljb24tZmEtc2hhZG93XCI6XCJueC1tZXNzYWdlLWljb24tZmEtYmFzaWNcIikrXCJcXFwiPjwvaT48c3BhbiBjbGFzcz1cXFwibngtbWVzc2FnZSBueC13aXRoLWljb25cXFwiPlwiK24rXCI8L3NwYW4+XCIrKGUuY2xvc2VCdXR0b24/YjpcIlwiKTtlbHNle3ZhciB1PVwiXCI7YT09PWwuU3VjY2Vzcz91PVwiPHN2ZyBjbGFzcz1cXFwibngtbWVzc2FnZS1pY29uXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCI0MFxcXCIgaGVpZ2h0PVxcXCI0MFxcXCIgdmlld0JveD1cXFwiMCAwIDQwIDQwXFxcIj48Zz48cGF0aCBmaWxsPVxcXCJcIitmLm5vdGlmbGl4SWNvbkNvbG9yK1wiXFxcIiBkPVxcXCJNMjAgMGMxMS4wMywwIDIwLDguOTcgMjAsMjAgMCwxMS4wMyAtOC45NywyMCAtMjAsMjAgLTExLjAzLDAgLTIwLC04Ljk3IC0yMCwtMjAgMCwtMTEuMDMgOC45NywtMjAgMjAsLTIwem0wIDM3Ljk4YzkuOTIsMCAxNy45OCwtOC4wNiAxNy45OCwtMTcuOTggMCwtOS45MiAtOC4wNiwtMTcuOTggLTE3Ljk4LC0xNy45OCAtOS45MiwwIC0xNy45OCw4LjA2IC0xNy45OCwxNy45OCAwLDkuOTIgOC4wNiwxNy45OCAxNy45OCwxNy45OHptLTIuNCAtMTMuMjlsMTEuNTIgLTEyLjk2YzAuMzcsLTAuNDEgMS4wMSwtMC40NSAxLjQyLC0wLjA4IDAuNDIsMC4zNyAwLjQ2LDEgMC4wOSwxLjQybC0xMi4xNiAxMy42N2MtMC4xOSwwLjIyIC0wLjQ2LDAuMzQgLTAuNzUsMC4zNCAtMC4yMywwIC0wLjQ1LC0wLjA3IC0wLjYzLC0wLjIybC03LjYgLTYuMDdjLTAuNDMsLTAuMzUgLTAuNSwtMC45OSAtMC4xNiwtMS40MiAwLjM1LC0wLjQzIDAuOTksLTAuNSAxLjQyLC0wLjE2bDYuODUgNS40OHpcXFwiLz48L2c+PC9zdmc+XCI6YT09PWwuRmFpbHVyZT91PVwiPHN2ZyBjbGFzcz1cXFwibngtbWVzc2FnZS1pY29uXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHdpZHRoPVxcXCI0MFxcXCIgaGVpZ2h0PVxcXCI0MFxcXCIgdmlld0JveD1cXFwiMCAwIDQwIDQwXFxcIj48Zz48cGF0aCBmaWxsPVxcXCJcIitmLm5vdGlmbGl4SWNvbkNvbG9yK1wiXFxcIiBkPVxcXCJNMjAgMGMxMS4wMywwIDIwLDguOTcgMjAsMjAgMCwxMS4wMyAtOC45NywyMCAtMjAsMjAgLTExLjAzLDAgLTIwLC04Ljk3IC0yMCwtMjAgMCwtMTEuMDMgOC45NywtMjAgMjAsLTIwem0wIDM3Ljk4YzkuOTIsMCAxNy45OCwtOC4wNiAxNy45OCwtMTcuOTggMCwtOS45MiAtOC4wNiwtMTcuOTggLTE3Ljk4LC0xNy45OCAtOS45MiwwIC0xNy45OCw4LjA2IC0xNy45OCwxNy45OCAwLDkuOTIgOC4wNiwxNy45OCAxNy45OCwxNy45OHptMS40MiAtMTcuOThsNi4xMyA2LjEyYzAuMzksMC40IDAuMzksMS4wNCAwLDEuNDMgLTAuMTksMC4xOSAtMC40NSwwLjI5IC0wLjcxLDAuMjkgLTAuMjcsMCAtMC41MywtMC4xIC0wLjcyLC0wLjI5bC02LjEyIC02LjEzIC02LjEzIDYuMTNjLTAuMTksMC4xOSAtMC40NCwwLjI5IC0wLjcxLDAuMjkgLTAuMjcsMCAtMC41MiwtMC4xIC0wLjcxLC0wLjI5IC0wLjM5LC0wLjM5IC0wLjM5LC0xLjAzIDAsLTEuNDNsNi4xMyAtNi4xMiAtNi4xMyAtNi4xM2MtMC4zOSwtMC4zOSAtMC4zOSwtMS4wMyAwLC0xLjQyIDAuMzksLTAuMzkgMS4wMywtMC4zOSAxLjQyLDBsNi4xMyA2LjEyIDYuMTIgLTYuMTJjMC40LC0wLjM5IDEuMDQsLTAuMzkgMS40MywwIDAuMzksMC4zOSAwLjM5LDEuMDMgMCwxLjQybC02LjEzIDYuMTN6XFxcIi8+PC9nPjwvc3ZnPlwiOmE9PT1sLldhcm5pbmc/dT1cIjxzdmcgY2xhc3M9XFxcIm54LW1lc3NhZ2UtaWNvblxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB3aWR0aD1cXFwiNDBcXFwiIGhlaWdodD1cXFwiNDBcXFwiIHZpZXdCb3g9XFxcIjAgMCA0MCA0MFxcXCI+PGc+PHBhdGggZmlsbD1cXFwiXCIrZi5ub3RpZmxpeEljb25Db2xvcitcIlxcXCIgZD1cXFwiTTIxLjkxIDMuNDhsMTcuOCAzMC44OWMwLjg0LDEuNDYgLTAuMjMsMy4yNSAtMS45MSwzLjI1bC0zNS42IDBjLTEuNjgsMCAtMi43NSwtMS43OSAtMS45MSwtMy4yNWwxNy44IC0zMC44OWMwLjg1LC0xLjQ3IDIuOTcsLTEuNDcgMy44Miwwem0xNi4xNSAzMS44NGwtMTcuOCAtMzAuODljLTAuMTEsLTAuMiAtMC40MSwtMC4yIC0wLjUyLDBsLTE3LjggMzAuODljLTAuMTIsMC4yIDAuMDUsMC40IDAuMjYsMC40bDM1LjYgMGMwLjIxLDAgMC4zOCwtMC4yIDAuMjYsLTAuNHptLTE5LjAxIC00LjEybDAgLTEuMDVjMCwtMC41MyAwLjQyLC0wLjk1IDAuOTUsLTAuOTUgMC41MywwIDAuOTUsMC40MiAwLjk1LDAuOTVsMCAxLjA1YzAsMC41MyAtMC40MiwwLjk1IC0wLjk1LDAuOTUgLTAuNTMsMCAtMC45NSwtMC40MiAtMC45NSwtMC45NXptMCAtNC42NmwwIC0xMy4zOWMwLC0wLjUyIDAuNDIsLTAuOTUgMC45NSwtMC45NSAwLjUzLDAgMC45NSwwLjQzIDAuOTUsMC45NWwwIDEzLjM5YzAsMC41MyAtMC40MiwwLjk2IC0wLjk1LDAuOTYgLTAuNTMsMCAtMC45NSwtMC40MyAtMC45NSwtMC45NnpcXFwiLz48L2c+PC9zdmc+XCI6YT09PWwuSW5mbyYmKHU9XCI8c3ZnIGNsYXNzPVxcXCJueC1tZXNzYWdlLWljb25cXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgd2lkdGg9XFxcIjQwXFxcIiBoZWlnaHQ9XFxcIjQwXFxcIiB2aWV3Qm94PVxcXCIwIDAgNDAgNDBcXFwiPjxnPjxwYXRoIGZpbGw9XFxcIlwiK2Yubm90aWZsaXhJY29uQ29sb3IrXCJcXFwiIGQ9XFxcIk0yMCAwYzExLjAzLDAgMjAsOC45NyAyMCwyMCAwLDExLjAzIC04Ljk3LDIwIC0yMCwyMCAtMTEuMDMsMCAtMjAsLTguOTcgLTIwLC0yMCAwLC0xMS4wMyA4Ljk3LC0yMCAyMCwtMjB6bTAgMzcuOThjOS45MiwwIDE3Ljk4LC04LjA2IDE3Ljk4LC0xNy45OCAwLC05LjkyIC04LjA2LC0xNy45OCAtMTcuOTgsLTE3Ljk4IC05LjkyLDAgLTE3Ljk4LDguMDYgLTE3Ljk4LDE3Ljk4IDAsOS45MiA4LjA2LDE3Ljk4IDE3Ljk4LDE3Ljk4em0tMC45OSAtMjMuM2MwLC0wLjU0IDAuNDQsLTAuOTggMC45OSwtMC45OCAwLjU1LDAgMC45OSwwLjQ0IDAuOTksMC45OGwwIDE1Ljg2YzAsMC41NSAtMC40NCwwLjk5IC0wLjk5LDAuOTkgLTAuNTUsMCAtMC45OSwtMC40NCAtMC45OSwtMC45OWwwIC0xNS44NnptMCAtNS4yMmMwLC0wLjU1IDAuNDQsLTAuOTkgMC45OSwtMC45OSAwLjU1LDAgMC45OSwwLjQ0IDAuOTksMC45OWwwIDEuMDljMCwwLjU0IC0wLjQ0LDAuOTkgLTAuOTksMC45OSAtMC41NSwwIC0wLjk5LC0wLjQ1IC0wLjk5LC0wLjk5bDAgLTEuMDl6XFxcIi8+PC9nPjwvc3ZnPlwiKSxnLmlubmVySFRNTD11K1wiPHNwYW4gY2xhc3M9XFxcIm54LW1lc3NhZ2Ugbngtd2l0aC1pY29uXFxcIj5cIituK1wiPC9zcGFuPlwiKyhlLmNsb3NlQnV0dG9uP2I6XCJcIil9aWYoXCJsZWZ0LWJvdHRvbVwiPT09ZS5wb3NpdGlvbnx8XCJyaWdodC1ib3R0b21cIj09PWUucG9zaXRpb24pe3ZhciB5PXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpO3kuaW5zZXJ0QmVmb3JlKGcseS5maXJzdENoaWxkKX1lbHNlIHQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS53cmFwSUQpLmFwcGVuZENoaWxkKGcpO3ZhciBrPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZy5pZCk7aWYoayl7dmFyIGgsQyx6PWZ1bmN0aW9uKCl7ay5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciBlPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpO2UmJjA+PWQuY2hpbGRFbGVtZW50Q291bnQmJmUuY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKSxjbGVhclRpbWVvdXQoaCl9LFM9ZnVuY3Rpb24oKXtpZihrJiZudWxsIT09ay5wYXJlbnROb2RlJiZrLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayksMD49ZC5jaGlsZEVsZW1lbnRDb3VudCYmbnVsbCE9PWQucGFyZW50Tm9kZSl7ZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpO3ZhciBlPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobS5vdmVybGF5SUQpO2UmJm51bGwhPT1lLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX1jbGVhclRpbWVvdXQoQyl9O2lmKGUuY2xvc2VCdXR0b24mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8pe3ZhciBMPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZy5pZCkucXVlcnlTZWxlY3RvcihcInNwYW4ubngtY2xvc2UtYnV0dG9uXCIpO0wuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oKXt6KCk7dmFyIHQ9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKSxjbGVhclRpbWVvdXQodCl9LGUuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9aWYoKFwiZnVuY3Rpb25cIj09dHlwZW9mIG98fGUuY2xpY2tUb0Nsb3NlKSYmay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixmdW5jdGlvbigpe1wiZnVuY3Rpb25cIj09dHlwZW9mIG8mJm8oKSx6KCk7dmFyIHQ9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKSxjbGVhclRpbWVvdXQodCl9LGUuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSksIWUuY2xvc2VCdXR0b24mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8pe3ZhciBXPWZ1bmN0aW9uKCl7aD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eigpfSxlLnRpbWVvdXQpLEM9c2V0VGltZW91dChmdW5jdGlvbigpe1MoKX0sZS50aW1lb3V0K2UuY3NzQW5pbWF0aW9uRHVyYXRpb24pfTtXKCksZS5wYXVzZU9uSG92ZXImJihrLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsZnVuY3Rpb24oKXtrLmNsYXNzTGlzdC5hZGQoXCJueC1wYXVzZWRcIiksY2xlYXJUaW1lb3V0KGgpLGNsZWFyVGltZW91dChDKX0pLGsuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixmdW5jdGlvbigpe2suY2xhc3NMaXN0LnJlbW92ZShcIm54LXBhdXNlZFwiKSxXKCl9KSl9fWlmKGUuc2hvd09ubHlUaGVMYXN0T25lJiYwPFQpZm9yKHZhciBJLFI9dC5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXj1cIitlLklEK1wiLV06bm90KFtpZD1cIitlLklEK1wiLVwiK1QrXCJdKVwiKSxBPTA7QTxSLmxlbmd0aDtBKyspST1SW0FdLG51bGwhPT1JLnBhcmVudE5vZGUmJkkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChJKTtlPXYoITAsZSxjKX0sRT1mdW5jdGlvbigpe3JldHVyblwiW2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBde3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LWZhbWlseTpcXFwiUXVpY2tzYW5kXFxcIiwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcXFwiU2Vnb2UgVUlcXFwiLFJvYm90byxcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLEFyaWFsLHNhbnMtc2VyaWY7bGVmdDowO3RvcDowO3BhZGRpbmc6MTBweDtjb2xvcjojMWUxZTFlO2JvcmRlci1yYWRpdXM6MjVweDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVxcXCItb3ZlcmxheVxcXCJde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuNSk7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDowfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXYubngtcmVwb3J0LWNsaWNrLXRvLWNsb3Nle2N1cnNvcjpwb2ludGVyfVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJde3dpZHRoOjMyMHB4O21heC13aWR0aDoxMDAlO21heC1oZWlnaHQ6OTZ2aDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG87Ym9yZGVyLXJhZGl1czppbmhlcml0O3BhZGRpbmc6MTBweDstd2Via2l0LWZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwwLDAsMC4wNSkpO2ZpbHRlcjpkcm9wLXNoYWRvdygwIDAgNXB4IHJnYmEoMCwgMCwgMCwgLjA1KSk7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4wMyk7YmFja2dyb3VuZDojZjhmOGY4O3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXJ7d2lkdGg6MDtoZWlnaHQ6MH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2t7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MkPVxcXCItaWNvblxcXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt3aWR0aDoxMTBweDtoZWlnaHQ6MTEwcHg7ZGlzcGxheTpibG9jazttYXJnaW46NnB4IGF1dG8gMTJweH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MkPVxcXCItaWNvblxcXCJdIHN2Z3ttaW4td2lkdGg6MTAwJTttYXgtd2lkdGg6MTAwJTtoZWlnaHQ6YXV0b31baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+Kj5oNXt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6NTAwO2xpbmUtaGVpZ2h0OjEuNDttYXJnaW46MCAwIDEwcHg7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpjZW50ZXJ9W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPio+cHt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC1zaXplOjEzcHg7bGluZS1oZWlnaHQ6MS40O2ZvbnQtd2VpZ2h0Om5vcm1hbDtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7cGFkZGluZzowIDEwcHg7bWFyZ2luOjAgMCAxMHB4fVtpZF49Tm90aWZsaXhSZXBvcnRXcmFwXSBhI05YUmVwb3J0QnV0dG9ue3dvcmQtYnJlYWs6YnJlYWstYWxsO3dvcmQtYnJlYWs6YnJlYWstd29yZDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0Oy1vLXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDtjdXJzb3I6cG9pbnRlcjtmbG9hdDpyaWdodDtwYWRkaW5nOjdweCAxN3B4O2JhY2tncm91bmQ6IzMyYzY4Mjtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoxLjQ7Zm9udC13ZWlnaHQ6NTAwO2JvcmRlci1yYWRpdXM6aW5oZXJpdCFpbXBvcnRhbnQ7Y29sb3I6I2ZmZn1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0gYSNOWFJlcG9ydEJ1dHRvbjpob3Zlcnstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAtNjBweCA1cHggLTVweCByZ2JhKDAsMCwwLC4yNSk7Ym94LXNoYWRvdzppbnNldCAwIC02MHB4IDVweCAtNXB4IHJnYmEoMCwwLDAsLjI1KX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcnRsLW9uIGEjTlhSZXBvcnRCdXR0b257ZmxvYXQ6bGVmdH1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0+ZGl2W2NsYXNzKj1cXFwiLW92ZXJsYXlcXFwiXS5ueC13aXRoLWFuaW1hdGlvbnstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtb3ZlcmxheS1hbmltYXRpb24gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbnswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0ubngtd2l0aC1hbmltYXRpb24ubngtZmFkZXstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgcmVwb3J0LWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbXstd2Via2l0LWFuaW1hdGlvbjpyZXBvcnQtYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1Aa2V5ZnJhbWVzIHJlcG9ydC1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1baWRePU5vdGlmbGl4UmVwb3J0V3JhcF0ubngtcmVtb3ZlPmRpdltjbGFzcyo9XFxcIi1vdmVybGF5XFxcIl0ubngtd2l0aC1hbmltYXRpb257b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtb3ZlcmxheS1hbmltYXRpb24tcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGV7b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeFJlcG9ydFdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdLm54LXdpdGgtYW5pbWF0aW9uLm54LXpvb217b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOnJlcG9ydC1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246cmVwb3J0LWFuaW1hdGlvbi16b29tLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19QGtleWZyYW1lcyByZXBvcnQtYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19XCJ9LGo9ZnVuY3Rpb24oZSxhLG4sbyxyLGwpe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTtpfHxHLlJlcG9ydC5pbml0KHt9KTt2YXIgbT17fTtpZihcIm9iamVjdFwiPT10eXBlb2YgciYmIUFycmF5LmlzQXJyYXkocil8fFwib2JqZWN0XCI9PXR5cGVvZiBsJiYhQXJyYXkuaXNBcnJheShsKSl7dmFyIGY9e307XCJvYmplY3RcIj09dHlwZW9mIHI/Zj1yOlwib2JqZWN0XCI9PXR5cGVvZiBsJiYoZj1sKSxtPXYoITAsaSx7fSksaT12KCEwLGksZil9dmFyIGQ9aVtlLnRvTG9jYWxlTG93ZXJDYXNlKFwiZW5cIildO1wic3RyaW5nXCIhPXR5cGVvZiBhJiYoYT1cIk5vdGlmbGl4IFwiK2UpLFwic3RyaW5nXCIhPXR5cGVvZiBuJiYoZT09PWMuU3VjY2Vzcz9uPVwiXFxcIkRvIG5vdCB0cnkgdG8gYmVjb21lIGEgcGVyc29uIG9mIHN1Y2Nlc3MgYnV0IHRyeSB0byBiZWNvbWUgYSBwZXJzb24gb2YgdmFsdWUuXFxcIiA8YnI+PGJyPi0gQWxiZXJ0IEVpbnN0ZWluXCI6ZT09PWMuRmFpbHVyZT9uPVwiXFxcIkZhaWx1cmUgaXMgc2ltcGx5IHRoZSBvcHBvcnR1bml0eSB0byBiZWdpbiBhZ2FpbiwgdGhpcyB0aW1lIG1vcmUgaW50ZWxsaWdlbnRseS5cXFwiIDxicj48YnI+LSBIZW5yeSBGb3JkXCI6ZT09PWMuV2FybmluZz9uPVwiXFxcIlRoZSBwZW9wbGVzIHdobyB3YW50IHRvIGxpdmUgY29tZm9ydGFibHkgd2l0aG91dCBwcm9kdWNpbmcgYW5kIGZhdGlndWU7IHRoZXkgYXJlIGRvb21lZCB0byBsb3NlIHRoZWlyIGRpZ25pdHksIHRoZW4gbGliZXJ0eSwgYW5kIHRoZW4gaW5kZXBlbmRlbmNlIGFuZCBkZXN0aW55LlxcXCIgPGJyPjxicj4tIE11c3RhZmEgS2VtYWwgQXRhdHVya1wiOmU9PT1jLkluZm8mJihuPVwiXFxcIktub3dsZWRnZSByZXN0cyBub3QgdXBvbiB0cnV0aCBhbG9uZSwgYnV0IHVwb24gZXJyb3IgYWxzby5cXFwiIDxicj48YnI+LSBDYXJsIEd1c3RhdiBKdW5nXCIpKSxcInN0cmluZ1wiIT10eXBlb2YgbyYmKG89XCJPa2F5XCIpLGkucGxhaW5UZXh0JiYoYT1OKGEpLG49TihuKSxvPU4obykpLGkucGxhaW5UZXh0fHwoYS5sZW5ndGg+aS50aXRsZU1heExlbmd0aCYmKGE9XCJQb3NzaWJsZSBIVE1MIFRhZ3MgRXJyb3JcIixuPVwiVGhlIFxcXCJwbGFpblRleHRcXFwiIG9wdGlvbiBpcyBcXFwiZmFsc2VcXFwiIGFuZCB0aGUgdGl0bGUgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwidGl0bGVNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIixvPVwiT2theVwiKSxuLmxlbmd0aD5pLm1lc3NhZ2VNYXhMZW5ndGgmJihhPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIG1lc3NhZ2UgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwibWVzc2FnZU1heExlbmd0aFxcXCIgb3B0aW9uLlwiLG89XCJPa2F5XCIpLG8ubGVuZ3RoPmkuYnV0dG9uTWF4TGVuZ3RoJiYoYT1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvclwiLG49XCJUaGUgXFxcInBsYWluVGV4dFxcXCIgb3B0aW9uIGlzIFxcXCJmYWxzZVxcXCIgYW5kIHRoZSBidXR0b24gY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIHRoZSBcXFwiYnV0dG9uTWF4TGVuZ3RoXFxcIiBvcHRpb24uXCIsbz1cIk9rYXlcIikpLGEubGVuZ3RoPmkudGl0bGVNYXhMZW5ndGgmJihhPWEuc3Vic3RyaW5nKDAsaS50aXRsZU1heExlbmd0aCkrXCIuLi5cIiksbi5sZW5ndGg+aS5tZXNzYWdlTWF4TGVuZ3RoJiYobj1uLnN1YnN0cmluZygwLGkubWVzc2FnZU1heExlbmd0aCkrXCIuLi5cIiksby5sZW5ndGg+aS5idXR0b25NYXhMZW5ndGgmJihvPW8uc3Vic3RyaW5nKDAsaS5idXR0b25NYXhMZW5ndGgpK1wiLi4uXCIpLGkuY3NzQW5pbWF0aW9ufHwoaS5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgeD10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7eC5pZD1wLklELHguY2xhc3NOYW1lPWkuY2xhc3NOYW1lLHguc3R5bGUuekluZGV4PWkuemluZGV4LHguc3R5bGUuYm9yZGVyUmFkaXVzPWkuYm9yZGVyUmFkaXVzLHguc3R5bGUuZm9udEZhbWlseT1cIlxcXCJcIitpLmZvbnRGYW1pbHkrXCJcXFwiLCBcIitzLGkucnRsJiYoeC5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSx4LmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLHguc3R5bGUuZGlzcGxheT1cImZsZXhcIix4LnN0eWxlLmZsZXhXcmFwPVwid3JhcFwiLHguc3R5bGUuZmxleERpcmVjdGlvbj1cImNvbHVtblwiLHguc3R5bGUuYWxpZ25JdGVtcz1cImNlbnRlclwiLHguc3R5bGUuanVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIjt2YXIgZz1cIlwiLGI9ITA9PT1pLmJhY2tPdmVybGF5Q2xpY2tUb0Nsb3NlO2kuYmFja092ZXJsYXkmJihnPVwiPGRpdiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItb3ZlcmxheVwiKyhpLmNzc0FuaW1hdGlvbj9cIiBueC13aXRoLWFuaW1hdGlvblwiOlwiXCIpKyhiP1wiIG54LXJlcG9ydC1jbGljay10by1jbG9zZVwiOlwiXCIpK1wiXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZDpcIisoZC5iYWNrT3ZlcmxheUNvbG9yfHxpLmJhY2tPdmVybGF5Q29sb3IpK1wiO2FuaW1hdGlvbi1kdXJhdGlvbjpcIitpLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48L2Rpdj5cIik7dmFyIHU9XCJcIjtpZihlPT09Yy5TdWNjZXNzP3U9QyhpLnN2Z1NpemUsZC5zdmdDb2xvcik6ZT09PWMuRmFpbHVyZT91PXooaS5zdmdTaXplLGQuc3ZnQ29sb3IpOmU9PT1jLldhcm5pbmc/dT1TKGkuc3ZnU2l6ZSxkLnN2Z0NvbG9yKTplPT09Yy5JbmZvJiYodT1MKGkuc3ZnU2l6ZSxkLnN2Z0NvbG9yKSkseC5pbm5lckhUTUw9ZytcIjxkaXYgY2xhc3M9XFxcIlwiK2kuY2xhc3NOYW1lK1wiLWNvbnRlbnRcIisoaS5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb24gXCI6XCJcIikrXCIgbngtXCIraS5jc3NBbmltYXRpb25TdHlsZStcIlxcXCIgc3R5bGU9XFxcIndpZHRoOlwiK2kud2lkdGgrXCI7IGJhY2tncm91bmQ6XCIraS5iYWNrZ3JvdW5kQ29sb3IrXCI7IGFuaW1hdGlvbi1kdXJhdGlvbjpcIitpLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48ZGl2IHN0eWxlPVxcXCJ3aWR0aDpcIitpLnN2Z1NpemUrXCI7IGhlaWdodDpcIitpLnN2Z1NpemUrXCI7XFxcIiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItaWNvblxcXCI+XCIrdStcIjwvZGl2PjxoNSBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItdGl0bGVcXFwiIHN0eWxlPVxcXCJmb250LXdlaWdodDo1MDA7IGZvbnQtc2l6ZTpcIitpLnRpdGxlRm9udFNpemUrXCI7IGNvbG9yOlwiK2QudGl0bGVDb2xvcitcIjtcXFwiPlwiK2ErXCI8L2g1PjxwIGNsYXNzPVxcXCJcIitpLmNsYXNzTmFtZStcIi1tZXNzYWdlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOlwiK2kubWVzc2FnZUZvbnRTaXplK1wiOyBjb2xvcjpcIitkLm1lc3NhZ2VDb2xvcitcIjtcXFwiPlwiK24rXCI8L3A+PGEgaWQ9XFxcIk5YUmVwb3J0QnV0dG9uXFxcIiBjbGFzcz1cXFwiXCIraS5jbGFzc05hbWUrXCItYnV0dG9uXFxcIiBzdHlsZT1cXFwiZm9udC13ZWlnaHQ6NTAwOyBmb250LXNpemU6XCIraS5idXR0b25Gb250U2l6ZStcIjsgYmFja2dyb3VuZDpcIitkLmJ1dHRvbkJhY2tncm91bmQrXCI7IGNvbG9yOlwiK2QuYnV0dG9uQ29sb3IrXCI7XFxcIj5cIitvK1wiPC9hPjwvZGl2PlwiLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHguaWQpKXt0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoeCk7dmFyIHk9ZnVuY3Rpb24oKXt2YXIgZT10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHguaWQpO2UuY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKTt2YXIgYT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bnVsbCE9PWUucGFyZW50Tm9kZSYmZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpLGNsZWFyVGltZW91dChhKX0saS5jc3NBbmltYXRpb25EdXJhdGlvbil9LGs9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk5YUmVwb3J0QnV0dG9uXCIpO2lmKGsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZyKCkseSgpfSksZyYmYil7dmFyIGg9dC5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm54LXJlcG9ydC1jbGljay10by1jbG9zZVwiKTtoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7eSgpfSl9fWk9dighMCxpLG0pfSxPPWZ1bmN0aW9uKCl7cmV0dXJuXCJbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBde3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6NDAwMzt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2xlZnQ6MDt0b3A6MDtwYWRkaW5nOjEwcHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Zm9udC1mYW1pbHk6XFxcIlF1aWNrc2FuZFxcXCIsLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sXFxcIkhlbHZldGljYSBOZXVlXFxcIixBcmlhbCxzYW5zLXNlcmlmO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1jZW50ZXItdG9wey13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tY2VudGVyLWJvdHRvbXstd2Via2l0LWJveC1wYWNrOmVuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWVuZDstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1sZWZ0LXRvcHstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstd2Via2l0LWJveC1wYWNrOnN0YXJ0Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLWxlZnQtY2VudGVyey13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tbGVmdC1ib3R0b217LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LXdlYmtpdC1ib3gtcGFjazplbmQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcG9zaXRpb24tcmlnaHQtdG9wey13ZWJraXQtYm94LWFsaWduOmVuZDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtZW5kOy1tcy1mbGV4LWFsaWduOmVuZDthbGlnbi1pdGVtczpmbGV4LWVuZDstd2Via2l0LWJveC1wYWNrOnN0YXJ0Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXBvc2l0aW9uLXJpZ2h0LWNlbnRlcnstd2Via2l0LWJveC1hbGlnbjplbmQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LWVuZDstbXMtZmxleC1hbGlnbjplbmQ7YWxpZ24taXRlbXM6ZmxleC1lbmR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXS5ueC1wb3NpdGlvbi1yaWdodC1ib3R0b217LXdlYmtpdC1ib3gtYWxpZ246ZW5kOy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1lbmQ7LW1zLWZsZXgtYWxpZ246ZW5kO2FsaWduLWl0ZW1zOmZsZXgtZW5kOy13ZWJraXQtYm94LXBhY2s6ZW5kOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtZW5kOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLW92ZXJsYXlcXFwiXXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2xlZnQ6MDt0b3A6MDtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjUpO3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1vdmVybGF5XFxcIl0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1vdmVybGF5LWFuaW1hdGlvbiAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tb3ZlcmxheS1hbmltYXRpb257MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJlbW92ZT5kaXZbY2xhc3MqPVxcXCItb3ZlcmxheVxcXCJdLm54LXdpdGgtYW5pbWF0aW9ue29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLW92ZXJsYXktYW5pbWF0aW9uLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fUBrZXlmcmFtZXMgY29uZmlybS1vdmVybGF5LWFuaW1hdGlvbi1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl17d2lkdGg6MzAwcHg7bWF4LXdpZHRoOjEwMCU7bWF4LWhlaWdodDo5NnZoO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bztib3JkZXItcmFkaXVzOjI1cHg7cGFkZGluZzoxMHB4O21hcmdpbjowOy13ZWJraXQtZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLDAsMCwwLjA1KSk7ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggcmdiYSgwLCAwLCAwLCAuMDUpKTtiYWNrZ3JvdW5kOiNmOGY4Zjg7Y29sb3I6IzFlMWUxZTtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjE7dGV4dC1hbGlnbjpjZW50ZXJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDowO2hlaWdodDowfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl17ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWhlYWRcXFwiXT5oNXtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjA7cGFkZGluZzowIDAgMTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xKTtjb2xvcjojMzJjNjgyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDo1MDA7dGV4dC1hbGlnbjppbmhlcml0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdntmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDttYXJnaW46MTVweCAwIDIwcHg7cGFkZGluZzowIDEwcHg7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuNDtmb250LXdlaWdodDpub3JtYWw7Y29sb3I6aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXR9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl0+ZGl2PmRpdntmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDtmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7bWFyZ2luOjE1cHggMCAwO3BhZGRpbmc6MH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWhlYWRcXFwiXT5kaXY+ZGl2PmlucHV0e2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50O2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTtoZWlnaHQ6NDBweDttYXJnaW46MDtwYWRkaW5nOjAgMTVweDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6MjVweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MTstd2Via2l0LXRyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RleHQtYWxpZ246bGVmdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1oZWFkXFxcIl0+ZGl2PmRpdj5pbnB1dHt0ZXh0LWFsaWduOnJpZ2h0fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQ6aG92ZXJ7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjMpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQubngtdmFsaWRhdGlvbi1mYWlsdXJle2JvcmRlci1jb2xvcjojZmY1NTQ5fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItaGVhZFxcXCJdPmRpdj5kaXY+aW5wdXQubngtdmFsaWRhdGlvbi1zdWNjZXNze2JvcmRlci1jb2xvcjojMzJjNjgyfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXT5kaXZbY2xhc3MqPVxcXCItYnV0dG9uc1xcXCJdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtib3JkZXItcmFkaXVzOmluaGVyaXQ7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5he2N1cnNvcjpwb2ludGVyO2ZvbnQtZmFtaWx5OmluaGVyaXQhaW1wb3J0YW50Oy13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbi1vdXQ7ZmxvYXQ6bGVmdDt3aWR0aDo0OCU7cGFkZGluZzo5cHggNXB4O2JvcmRlci1yYWRpdXM6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZToxNXB4O2xpbmUtaGVpZ2h0OjEuNDtjb2xvcjojZjhmOGY4O3RleHQtYWxpZ246aW5oZXJpdH1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hLm54LWNvbmZpcm0tYnV0dG9uLW9re21hcmdpbjowIDIlIDAgMDtiYWNrZ3JvdW5kOiMzMmM2ODJ9W2lkXj1Ob3RpZmxpeENvbmZpcm1XcmFwXT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1idXR0b25zXFxcIl0+YS5ueC1jb25maXJtLWJ1dHRvbi1jYW5jZWx7bWFyZ2luOjAgMCAwIDIlO2JhY2tncm91bmQ6I2E5YTlhOX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hLm54LWZ1bGx7bWFyZ2luOjA7d2lkdGg6MTAwJX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXT5hOmhvdmVyey13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIC02MHB4IDVweCAtNXB4IHJnYmEoMCwwLDAsLjI1KTtib3gtc2hhZG93Omluc2V0IDAgLTYwcHggNXB4IC01cHggcmdiYSgwLDAsMCwuMjUpfVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtcnRsLW9uPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl0+ZGl2W2NsYXNzKj1cXFwiLWJ1dHRvbnNcXFwiXSxbaWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXJ0bC1vbj5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdPmRpdltjbGFzcyo9XFxcIi1idXR0b25zXFxcIl0+YXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZVkoMTgwZGVnKX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGU+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXXstd2Via2l0LWFuaW1hdGlvbjpjb25maXJtLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbT5kaXZbY2xhc3MqPVxcXCItY29udGVudFxcXCJdey13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLXpvb20gLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi16b29tezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNSk7dHJhbnNmb3JtOnNjYWxlKC41KX01MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KX0xMDAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9fUBrZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbXswJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjUpO3RyYW5zZm9ybTpzY2FsZSguNSl9NTAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfX1baWRePU5vdGlmbGl4Q29uZmlybVdyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LWZhZGUubngtcmVtb3ZlPmRpdltjbGFzcyo9XFxcIi1jb250ZW50XFxcIl17b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19QGtleWZyYW1lcyBjb25maXJtLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVtpZF49Tm90aWZsaXhDb25maXJtV3JhcF0ubngtd2l0aC1hbmltYXRpb24ubngtem9vbS5ueC1yZW1vdmU+ZGl2W2NsYXNzKj1cXFwiLWNvbnRlbnRcXFwiXXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246Y29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgY29uZmlybS1hbmltYXRpb24tem9vbS1yZW1vdmV7MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEpO3RyYW5zZm9ybTpzY2FsZSgxKX01MCV7b3BhY2l0eTouNTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTt0cmFuc2Zvcm06c2NhbGUoMS4wNSl9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfX1Aa2V5ZnJhbWVzIGNvbmZpcm0tYW5pbWF0aW9uLXpvb20tcmVtb3ZlezAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9NTAle29wYWNpdHk6LjU7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4wNSk7dHJhbnNmb3JtOnNjYWxlKDEuMDUpfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX19XCJ9LEg9ZnVuY3Rpb24oZSxpLG4sbyxyLGwsbSxjLHApe2lmKCF3KFwiYm9keVwiKSlyZXR1cm4hMTthfHxHLkNvbmZpcm0uaW5pdCh7fSk7dmFyIHg9dighMCxhLHt9KTtcIm9iamVjdFwiIT10eXBlb2YgcHx8QXJyYXkuaXNBcnJheShwKXx8KGE9dighMCxhLHApKSxcInN0cmluZ1wiIT10eXBlb2YgaSYmKGk9XCJOb3RpZmxpeCBDb25maXJtXCIpLFwic3RyaW5nXCIhPXR5cGVvZiBuJiYobj1cIkRvIHlvdSBhZ3JlZSB3aXRoIG1lP1wiKSxcInN0cmluZ1wiIT10eXBlb2YgciYmKHI9XCJZZXNcIiksXCJzdHJpbmdcIiE9dHlwZW9mIGwmJihsPVwiTm9cIiksXCJmdW5jdGlvblwiIT10eXBlb2YgbSYmKG09dm9pZCAwKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBjJiYoYz12b2lkIDApLGEucGxhaW5UZXh0JiYoaT1OKGkpLG49TihuKSxyPU4ociksbD1OKGwpKSxhLnBsYWluVGV4dHx8KGkubGVuZ3RoPmEudGl0bGVNYXhMZW5ndGgmJihpPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIHRpdGxlIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiBcXFwidGl0bGVNYXhMZW5ndGhcXFwiIG9wdGlvbi5cIixyPVwiT2theVwiLGw9XCIuLi5cIiksbi5sZW5ndGg+YS5tZXNzYWdlTWF4TGVuZ3RoJiYoaT1cIlBvc3NpYmxlIEhUTUwgVGFncyBFcnJvclwiLG49XCJUaGUgXFxcInBsYWluVGV4dFxcXCIgb3B0aW9uIGlzIFxcXCJmYWxzZVxcXCIgYW5kIHRoZSBtZXNzYWdlIGNvbnRlbnQgbGVuZ3RoIGlzIG1vcmUgdGhhbiBcXFwibWVzc2FnZU1heExlbmd0aFxcXCIgb3B0aW9uLlwiLHI9XCJPa2F5XCIsbD1cIi4uLlwiKSwoci5sZW5ndGh8fGwubGVuZ3RoKT5hLmJ1dHRvbnNNYXhMZW5ndGgmJihpPVwiUG9zc2libGUgSFRNTCBUYWdzIEVycm9yXCIsbj1cIlRoZSBcXFwicGxhaW5UZXh0XFxcIiBvcHRpb24gaXMgXFxcImZhbHNlXFxcIiBhbmQgdGhlIGJ1dHRvbnMgY29udGVudCBsZW5ndGggaXMgbW9yZSB0aGFuIFxcXCJidXR0b25zTWF4TGVuZ3RoXFxcIiBvcHRpb24uXCIscj1cIk9rYXlcIixsPVwiLi4uXCIpKSxpLmxlbmd0aD5hLnRpdGxlTWF4TGVuZ3RoJiYoaT1pLnN1YnN0cmluZygwLGEudGl0bGVNYXhMZW5ndGgpK1wiLi4uXCIpLG4ubGVuZ3RoPmEubWVzc2FnZU1heExlbmd0aCYmKG49bi5zdWJzdHJpbmcoMCxhLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCIpLHIubGVuZ3RoPmEuYnV0dG9uc01heExlbmd0aCYmKHI9ci5zdWJzdHJpbmcoMCxhLmJ1dHRvbnNNYXhMZW5ndGgpK1wiLi4uXCIpLGwubGVuZ3RoPmEuYnV0dG9uc01heExlbmd0aCYmKGw9bC5zdWJzdHJpbmcoMCxhLmJ1dHRvbnNNYXhMZW5ndGgpK1wiLi4uXCIpLGEuY3NzQW5pbWF0aW9ufHwoYS5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgZz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Zy5pZD1kLklELGcuY2xhc3NOYW1lPWEuY2xhc3NOYW1lKyhhLmNzc0FuaW1hdGlvbj9cIiBueC13aXRoLWFuaW1hdGlvbiBueC1cIithLmNzc0FuaW1hdGlvblN0eWxlOlwiXCIpLGcuc3R5bGUuekluZGV4PWEuemluZGV4LGcuc3R5bGUucGFkZGluZz1hLmRpc3RhbmNlLGEucnRsJiYoZy5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxnLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpO3ZhciBiPVwic3RyaW5nXCI9PXR5cGVvZiBhLnBvc2l0aW9uP2EucG9zaXRpb24udHJpbSgpOlwiY2VudGVyXCI7Zy5jbGFzc0xpc3QuYWRkKFwibngtcG9zaXRpb24tXCIrYiksZy5zdHlsZS5mb250RmFtaWx5PVwiXFxcIlwiK2EuZm9udEZhbWlseStcIlxcXCIsIFwiK3M7dmFyIHU9XCJcIjthLmJhY2tPdmVybGF5JiYodT1cIjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLW92ZXJsYXlcIisoYS5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb25cIjpcIlwiKStcIlxcXCIgc3R5bGU9XFxcImJhY2tncm91bmQ6XCIrYS5iYWNrT3ZlcmxheUNvbG9yK1wiO2FuaW1hdGlvbi1kdXJhdGlvbjpcIithLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXM7XFxcIj48L2Rpdj5cIik7dmFyIHk9XCJcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBtJiYoeT1cIjxhIGlkPVxcXCJOWENvbmZpcm1CdXR0b25DYW5jZWxcXFwiIGNsYXNzPVxcXCJueC1jb25maXJtLWJ1dHRvbi1jYW5jZWxcXFwiIHN0eWxlPVxcXCJjb2xvcjpcIithLmNhbmNlbEJ1dHRvbkNvbG9yK1wiO2JhY2tncm91bmQ6XCIrYS5jYW5jZWxCdXR0b25CYWNrZ3JvdW5kK1wiO2ZvbnQtc2l6ZTpcIithLmJ1dHRvbnNGb250U2l6ZStcIjtcXFwiPlwiK2wrXCI8L2E+XCIpO3ZhciBrPVwiXCIsaD1udWxsLEM9dm9pZCAwO2lmKGU9PT1mLkFza3x8ZT09PWYuUHJvbXB0KXtoPW98fFwiXCI7dmFyIHo9ZT09PWYuQXNrP01hdGguY2VpbCgxLjUqaC5sZW5ndGgpOjIwMDxoLmxlbmd0aD9NYXRoLmNlaWwoMS41KmgubGVuZ3RoKToyNTAsUz1lPT09Zi5Qcm9tcHQ/XCJ2YWx1ZT1cXFwiXCIraCtcIlxcXCJcIjpcIlwiO2s9XCI8ZGl2PjxpbnB1dCBpZD1cXFwiTlhDb25maXJtVmFsaWRhdGlvbklucHV0XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBcIitTK1wiIG1heGxlbmd0aD1cXFwiXCIreitcIlxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTpcIithLm1lc3NhZ2VGb250U2l6ZStcIjtib3JkZXItcmFkaXVzOiBcIithLmJvcmRlclJhZGl1cytcIjtcXFwiIGF1dG9jb21wbGV0ZT1cXFwib2ZmXFxcIiBzcGVsbGNoZWNrPVxcXCJmYWxzZVxcXCIgYXV0b2NhcGl0YWxpemU9XFxcIm5vbmVcXFwiIC8+PC9kaXY+XCJ9aWYoZy5pbm5lckhUTUw9dStcIjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLWNvbnRlbnRcXFwiIHN0eWxlPVxcXCJ3aWR0aDpcIithLndpZHRoK1wiOyBiYWNrZ3JvdW5kOlwiK2EuYmFja2dyb3VuZENvbG9yK1wiOyBhbmltYXRpb24tZHVyYXRpb246XCIrYS5jc3NBbmltYXRpb25EdXJhdGlvbitcIm1zOyBib3JkZXItcmFkaXVzOiBcIithLmJvcmRlclJhZGl1cytcIjtcXFwiPjxkaXYgY2xhc3M9XFxcIlwiK2EuY2xhc3NOYW1lK1wiLWhlYWRcXFwiPjxoNSBzdHlsZT1cXFwiY29sb3I6XCIrYS50aXRsZUNvbG9yK1wiO2ZvbnQtc2l6ZTpcIithLnRpdGxlRm9udFNpemUrXCI7XFxcIj5cIitpK1wiPC9oNT48ZGl2IHN0eWxlPVxcXCJjb2xvcjpcIithLm1lc3NhZ2VDb2xvcitcIjtmb250LXNpemU6XCIrYS5tZXNzYWdlRm9udFNpemUrXCI7XFxcIj5cIituK2srXCI8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVxcXCJcIithLmNsYXNzTmFtZStcIi1idXR0b25zXFxcIj48YSBpZD1cXFwiTlhDb25maXJtQnV0dG9uT2tcXFwiIGNsYXNzPVxcXCJueC1jb25maXJtLWJ1dHRvbi1va1wiKyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBtP1wiXCI6XCIgbngtZnVsbFwiKStcIlxcXCIgc3R5bGU9XFxcImNvbG9yOlwiK2Eub2tCdXR0b25Db2xvcitcIjtiYWNrZ3JvdW5kOlwiK2Eub2tCdXR0b25CYWNrZ3JvdW5kK1wiO2ZvbnQtc2l6ZTpcIithLmJ1dHRvbnNGb250U2l6ZStcIjtcXFwiPlwiK3IrXCI8L2E+XCIreStcIjwvZGl2PjwvZGl2PlwiLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuaWQpKXt0LmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZyk7dmFyIEw9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChnLmlkKSxXPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWENvbmZpcm1CdXR0b25Pa1wiKSxJPXQuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOWENvbmZpcm1WYWxpZGF0aW9uSW5wdXRcIik7aWYoSSYmKEkuZm9jdXMoKSxJLnNldFNlbGVjdGlvblJhbmdlKDAsKEkudmFsdWV8fFwiXCIpLmxlbmd0aCksSS5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIixmdW5jdGlvbih0KXt2YXIgaT10LnRhcmdldC52YWx1ZTtpZihlPT09Zi5Bc2smJmkhPT1oKXQucHJldmVudERlZmF1bHQoKSxJLmNsYXNzTGlzdC5hZGQoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIiksSS5jbGFzc0xpc3QucmVtb3ZlKFwibngtdmFsaWRhdGlvbi1zdWNjZXNzXCIpO2Vsc2V7ZT09PWYuQXNrJiYoSS5jbGFzc0xpc3QucmVtb3ZlKFwibngtdmFsaWRhdGlvbi1mYWlsdXJlXCIpLEkuY2xhc3NMaXN0LmFkZChcIm54LXZhbGlkYXRpb24tc3VjY2Vzc1wiKSk7dmFyIGE9XCJlbnRlclwiPT09KHQua2V5fHxcIlwiKS50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpfHwxMz09PXQua2V5Q29kZTthJiZXLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwiY2xpY2tcIikpfX0pKSxXLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKHQpe2lmKGU9PT1mLkFzayYmaCYmSSl7dmFyIGk9KEkudmFsdWV8fFwiXCIpLnRvU3RyaW5nKCk7aWYoaSE9PWgpcmV0dXJuIEkuZm9jdXMoKSxJLmNsYXNzTGlzdC5hZGQoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIiksdC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksdC5yZXR1cm5WYWx1ZT0hMSx0LmNhbmNlbEJ1YmJsZT0hMCwhMTtJLmNsYXNzTGlzdC5yZW1vdmUoXCJueC12YWxpZGF0aW9uLWZhaWx1cmVcIil9XCJmdW5jdGlvblwiPT10eXBlb2YgbSYmKGU9PT1mLlByb21wdCYmSSYmKEM9SS52YWx1ZXx8XCJcIiksbShDKSksTC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciBuPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09TC5wYXJlbnROb2RlJiYoTC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKEwpLGNsZWFyVGltZW91dChuKSl9LGEuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSksXCJmdW5jdGlvblwiPT10eXBlb2YgbSl7dmFyIFI9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk5YQ29uZmlybUJ1dHRvbkNhbmNlbFwiKTtSLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT10eXBlb2YgYyYmKGU9PT1mLlByb21wdCYmSSYmKEM9SS52YWx1ZXx8XCJcIiksYyhDKSksTC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciB0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09TC5wYXJlbnROb2RlJiYoTC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKEwpLGNsZWFyVGltZW91dCh0KSl9LGEuY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9fWE9dighMCxhLHgpfSxQPWZ1bmN0aW9uKCl7cmV0dXJuXCJbaWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjQwMDA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDttYXJnaW46YXV0bztkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjgpO2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsc2Fucy1zZXJpZn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdICp7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0ubngtbG9hZGluZy1jbGljay10by1jbG9zZXtjdXJzb3I6cG9pbnRlcn1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPmRpdltjbGFzcyo9XFxcIi1pY29uXFxcIl17d2lkdGg6NjBweDtoZWlnaHQ6NjBweDtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LXRyYW5zaXRpb246dG9wIC4ycyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOnRvcCAuMnMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0b3AgLjJzIGVhc2UtaW4tb3V0O21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5kaXZbY2xhc3MqPVxcXCItaWNvblxcXCJdIGltZyxbaWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdPmRpdltjbGFzcyo9XFxcIi1pY29uXFxcIl0gc3Zne21heC13aWR0aDp1bnNldDttYXgtaGVpZ2h0OnVuc2V0O3dpZHRoOjEwMCU7aGVpZ2h0OmF1dG87cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowfVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0+cHtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MTBweCBhdXRvIDA7Zm9udC1mYW1pbHk6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNXB4O2xpbmUtaGVpZ2h0OjEuNDtwYWRkaW5nOjAgMTBweDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfVtpZF49Tm90aWZsaXhMb2FkaW5nV3JhcF0ubngtd2l0aC1hbmltYXRpb257LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsO2FuaW1hdGlvbjpsb2FkaW5nLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1baWRePU5vdGlmbGl4TG9hZGluZ1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbDthbmltYXRpb246bG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmUgLjNzIGVhc2UtaW4tb3V0IDBzIG5vcm1hbH1ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZGluZy1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIGxvYWRpbmctYW5pbWF0aW9uLWZhZGUtcmVtb3ZlezAle29wYWNpdHk6MX0xMDAle29wYWNpdHk6MH19W2lkXj1Ob3RpZmxpeExvYWRpbmdXcmFwXT5wLm54LWxvYWRpbmctbWVzc2FnZS1uZXd7LXdlYmtpdC1hbmltYXRpb246bG9hZGluZy1uZXctbWVzc2FnZS1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLW5ldy1tZXNzYWdlLWZhZGV7MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGxvYWRpbmctbmV3LW1lc3NhZ2UtZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVwifSxVPWZ1bmN0aW9uKGUsaSxhLG8scil7aWYoIXcoXCJib2R5XCIpKXJldHVybiExO258fEcuTG9hZGluZy5pbml0KHt9KTt2YXIgbD12KCEwLG4se30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiYhQXJyYXkuaXNBcnJheShpKXx8XCJvYmplY3RcIj09dHlwZW9mIGEmJiFBcnJheS5pc0FycmF5KGEpKXt2YXIgbT17fTtcIm9iamVjdFwiPT10eXBlb2YgaT9tPWk6XCJvYmplY3RcIj09dHlwZW9mIGEmJihtPWEpLG49dighMCxuLG0pfXZhciBjPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGkmJjA8aS5sZW5ndGgmJihjPWkpLG8pe2M9Yy5sZW5ndGg+bi5tZXNzYWdlTWF4TGVuZ3RoP04oYykudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCxuLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6TihjKS50b1N0cmluZygpO3ZhciBwPVwiXCI7MDxjLmxlbmd0aCYmKHA9XCI8cCBpZD1cXFwiXCIrbi5tZXNzYWdlSUQrXCJcXFwiIGNsYXNzPVxcXCJueC1sb2FkaW5nLW1lc3NhZ2VcXFwiIHN0eWxlPVxcXCJjb2xvcjpcIituLm1lc3NhZ2VDb2xvcitcIjtmb250LXNpemU6XCIrbi5tZXNzYWdlRm9udFNpemUrXCI7XFxcIj5cIitjK1wiPC9wPlwiKSxuLmNzc0FuaW1hdGlvbnx8KG4uY3NzQW5pbWF0aW9uRHVyYXRpb249MCk7dmFyIGY9XCJcIjtpZihlPT09eC5TdGFuZGFyZClmPVcobi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguSG91cmdsYXNzKWY9SShuLnN2Z1NpemUsbi5zdmdDb2xvcik7ZWxzZSBpZihlPT09eC5DaXJjbGUpZj1SKG4uc3ZnU2l6ZSxuLnN2Z0NvbG9yKTtlbHNlIGlmKGU9PT14LkFycm93cylmPUEobi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguRG90cylmPU0obi5zdmdTaXplLG4uc3ZnQ29sb3IpO2Vsc2UgaWYoZT09PXguUHVsc2UpZj1CKG4uc3ZnU2l6ZSxuLnN2Z0NvbG9yKTtlbHNlIGlmKGU9PT14LkN1c3RvbSYmbnVsbCE9PW4uY3VzdG9tU3ZnQ29kZSYmbnVsbD09PW4uY3VzdG9tU3ZnVXJsKWY9bi5jdXN0b21TdmdDb2RlfHxcIlwiO2Vsc2UgaWYoZT09PXguQ3VzdG9tJiZudWxsIT09bi5jdXN0b21TdmdVcmwmJm51bGw9PT1uLmN1c3RvbVN2Z0NvZGUpZj1cIjxpbWcgY2xhc3M9XFxcIm54LWN1c3RvbS1sb2FkaW5nLWljb25cXFwiIHdpZHRoPVxcXCJcIituLnN2Z1NpemUrXCJcXFwiIGhlaWdodD1cXFwiXCIrbi5zdmdTaXplK1wiXFxcIiBzcmM9XFxcIlwiK24uY3VzdG9tU3ZnVXJsK1wiXFxcIiBhbHQ9XFxcIk5vdGlmbGl4XFxcIj5cIjtlbHNle2lmKGU9PT14LkN1c3RvbSYmKG51bGw9PT1uLmN1c3RvbVN2Z1VybHx8bnVsbD09PW4uY3VzdG9tU3ZnQ29kZSkpcmV0dXJuIHkoXCJZb3UgaGF2ZSB0byBzZXQgYSBzdGF0aWMgU1ZHIHVybCB0byBcXFwiY3VzdG9tU3ZnVXJsXFxcIiBvcHRpb24gdG8gdXNlIExvYWRpbmcgQ3VzdG9tLlwiKSwhMTtmPVgobi5zdmdTaXplLFwiI2Y4ZjhmOFwiLFwiIzMyYzY4MlwiKX12YXIgZD1wYXJzZUludCgobi5zdmdTaXplfHxcIlwiKS5yZXBsYWNlKC9bXjAtOV0vZyxcIlwiKSksYj10LmlubmVyV2lkdGgsdT1kPj1iP2ItNDArXCJweFwiOmQrXCJweFwiLGs9XCI8ZGl2IHN0eWxlPVxcXCJ3aWR0aDpcIit1K1wiOyBoZWlnaHQ6XCIrdStcIjtcXFwiIGNsYXNzPVxcXCJcIituLmNsYXNzTmFtZStcIi1pY29uXCIrKDA8Yy5sZW5ndGg/XCIgbngtd2l0aC1tZXNzYWdlXCI6XCJcIikrXCJcXFwiPlwiK2YrXCI8L2Rpdj5cIixoPXQuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZihoLmlkPWcuSUQsaC5jbGFzc05hbWU9bi5jbGFzc05hbWUrKG4uY3NzQW5pbWF0aW9uP1wiIG54LXdpdGgtYW5pbWF0aW9uXCI6XCJcIikrKG4uY2xpY2tUb0Nsb3NlP1wiIG54LWxvYWRpbmctY2xpY2stdG8tY2xvc2VcIjpcIlwiKSxoLnN0eWxlLnpJbmRleD1uLnppbmRleCxoLnN0eWxlLmJhY2tncm91bmQ9bi5iYWNrZ3JvdW5kQ29sb3IsaC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbj1uLmNzc0FuaW1hdGlvbkR1cmF0aW9uK1wibXNcIixoLnN0eWxlLmZvbnRGYW1pbHk9XCJcXFwiXCIrbi5mb250RmFtaWx5K1wiXFxcIiwgXCIrcyxoLnN0eWxlLmRpc3BsYXk9XCJmbGV4XCIsaC5zdHlsZS5mbGV4V3JhcD1cIndyYXBcIixoLnN0eWxlLmZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIixoLnN0eWxlLmFsaWduSXRlbXM9XCJjZW50ZXJcIixoLnN0eWxlLmp1c3RpZnlDb250ZW50PVwiY2VudGVyXCIsbi5ydGwmJihoLnNldEF0dHJpYnV0ZShcImRpclwiLFwicnRsXCIpLGguY2xhc3NMaXN0LmFkZChcIm54LXJ0bC1vblwiKSksaC5pbm5lckhUTUw9aytwLCF0LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGguaWQpJiYodC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGgpLG4uY2xpY2tUb0Nsb3NlKSl7dmFyIEM9dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChoLmlkKTtDLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7aC5jbGFzc0xpc3QuYWRkKFwibngtcmVtb3ZlXCIpO3ZhciB0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtudWxsIT09aC5wYXJlbnROb2RlJiYoaC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpLGNsZWFyVGltZW91dCh0KSl9LG4uY3NzQW5pbWF0aW9uRHVyYXRpb24pfSl9fWVsc2UgaWYodC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChnLklEKSl2YXIgej10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuSUQpLFM9c2V0VGltZW91dChmdW5jdGlvbigpe3ouY2xhc3NMaXN0LmFkZChcIm54LXJlbW92ZVwiKTt2YXIgdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bnVsbCE9PXoucGFyZW50Tm9kZSYmKHoucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh6KSxjbGVhclRpbWVvdXQodCkpfSxuLmNzc0FuaW1hdGlvbkR1cmF0aW9uKTtjbGVhclRpbWVvdXQoUyl9LHIpO249dighMCxuLGwpfSxWPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZT1cIlwiKTt2YXIgaT10LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGcuSUQpO2lmKGkpaWYoMDxlLmxlbmd0aCl7ZT1lLmxlbmd0aD5uLm1lc3NhZ2VNYXhMZW5ndGg/TihlKS5zdWJzdHJpbmcoMCxuLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6TihlKTt2YXIgYT1pLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicFwiKVswXTtpZihhKWEuaW5uZXJIVE1MPWU7ZWxzZXt2YXIgbz10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO28uaWQ9bi5tZXNzYWdlSUQsby5jbGFzc05hbWU9XCJueC1sb2FkaW5nLW1lc3NhZ2UgbngtbG9hZGluZy1tZXNzYWdlLW5ld1wiLG8uc3R5bGUuY29sb3I9bi5tZXNzYWdlQ29sb3Isby5zdHlsZS5mb250U2l6ZT1uLm1lc3NhZ2VGb250U2l6ZSxvLmlubmVySFRNTD1lLGkuYXBwZW5kQ2hpbGQobyl9fWVsc2UgeShcIldoZXJlIGlzIHRoZSBuZXcgbWVzc2FnZT9cIil9LHE9ZnVuY3Rpb24oKXtyZXR1cm5cIltpZF49Tm90aWZsaXhCbG9ja1dyYXBdey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxMDAwO2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsc2Fucy1zZXJpZjtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjkpO3RleHQtYWxpZ246Y2VudGVyO2FuaW1hdGlvbi1kdXJhdGlvbjouNHM7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7Ym9yZGVyLXJhZGl1czppbmhlcml0O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0gKnstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1pY29uXFxcIl17ZGlzcGxheTpibG9jazt3aWR0aDo0NXB4O2hlaWdodDo0NXB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjowIGF1dG99W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1pY29uXFxcIl0gc3Zne3dpZHRoOmluaGVyaXQ7aGVpZ2h0OmluaGVyaXR9W2lkXj1Ob3RpZmxpeEJsb2NrV3JhcF0+c3BhbltjbGFzcyo9XFxcIi1tZXNzYWdlXFxcIl17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21hcmdpbjoxMHB4IGF1dG8gMDtwYWRkaW5nOjAgMTBweDtmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS40fVtpZF49Tm90aWZsaXhCbG9ja1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uey13ZWJraXQtYW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWx9QC13ZWJraXQta2V5ZnJhbWVzIGJsb2NrLWFuaW1hdGlvbi1mYWRlezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBibG9jay1hbmltYXRpb24tZmFkZXswJXtvcGFjaXR5OjB9MTAwJXtvcGFjaXR5OjF9fVtpZF49Tm90aWZsaXhCbG9ja1dyYXBdLm54LXdpdGgtYW5pbWF0aW9uLm54LXJlbW92ZXtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246YmxvY2stYW5pbWF0aW9uLWZhZGUtcmVtb3ZlIC4zcyBlYXNlLWluLW91dCAwcyBub3JtYWw7YW5pbWF0aW9uOmJsb2NrLWFuaW1hdGlvbi1mYWRlLXJlbW92ZSAuM3MgZWFzZS1pbi1vdXQgMHMgbm9ybWFsfUAtd2Via2l0LWtleWZyYW1lcyBibG9jay1hbmltYXRpb24tZmFkZS1yZW1vdmV7MCV7b3BhY2l0eToxfTEwMCV7b3BhY2l0eTowfX1Aa2V5ZnJhbWVzIGJsb2NrLWFuaW1hdGlvbi1mYWRlLXJlbW92ZXswJXtvcGFjaXR5OjF9MTAwJXtvcGFjaXR5OjB9fVwifSxRPTAsWT1mdW5jdGlvbihlLGksYSxuLHIsbCl7dmFyIG07aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoMT5hLmxlbmd0aClyZXR1cm4geShcIkFycmF5IG9mIEhUTUxFbGVtZW50cyBzaG91bGQgY29udGFpbnMgYXQgbGVhc3Qgb25lIEhUTUxFbGVtZW50LlwiKSwhMTttPWF9ZWxzZSBpZihPYmplY3QucHJvdG90eXBlLmlzUHJvdG90eXBlT2YuY2FsbChOb2RlTGlzdC5wcm90b3R5cGUsYSkpe2lmKDE+YS5sZW5ndGgpcmV0dXJuIHkoXCJOb2RlTGlzdE9mPEhUTUxFbGVtZW50PiBzaG91bGQgY29udGFpbnMgYXQgbGVhc3Qgb25lIEhUTUxFbGVtZW50LlwiKSwhMTttPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpfWVsc2V7dmFyIGM9XCJzdHJpbmdcIiE9dHlwZW9mIGF8fDE+KGF8fFwiXCIpLmxlbmd0aHx8MT09PShhfHxcIlwiKS5sZW5ndGgmJihcIiNcIj09PShhfHxcIlwiKVswXXx8XCIuXCI9PT0oYXx8XCJcIilbMF0pO2lmKGMpcmV0dXJuIHkoXCJUaGUgc2VsZWN0b3IgcGFyYW1ldGVyIG11c3QgYmUgYSBzdHJpbmcgYW5kIG1hdGNoZXMgYSBzcGVjaWZpZWQgQ1NTIHNlbGVjdG9yKHMpLlwiKSwhMTt2YXIgcD10LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYSk7aWYoMT5wLmxlbmd0aClyZXR1cm4geShcIllvdSBjYWxsZWQgdGhlIFxcXCJOb3RpZmxpeC5CbG9jay4uLlxcXCIgZnVuY3Rpb24gd2l0aCBcXFwiXCIrYStcIlxcXCIgc2VsZWN0b3IsIGJ1dCB0aGVyZSBpcyBubyBzdWNoIGVsZW1lbnQocykgaW4gdGhlIGRvY3VtZW50LlwiKSwhMTttPXB9b3x8Ry5CbG9jay5pbml0KHt9KTt2YXIgZj12KCEwLG8se30pO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBuJiYhQXJyYXkuaXNBcnJheShuKXx8XCJvYmplY3RcIj09dHlwZW9mIHImJiFBcnJheS5pc0FycmF5KHIpKXt2YXIgZD17fTtcIm9iamVjdFwiPT10eXBlb2Ygbj9kPW46XCJvYmplY3RcIj09dHlwZW9mIHImJihkPXIpLG89dighMCxvLGQpfXZhciB4PVwiXCI7XCJzdHJpbmdcIj09dHlwZW9mIG4mJjA8bi5sZW5ndGgmJih4PW4pLG8uY3NzQW5pbWF0aW9ufHwoby5jc3NBbmltYXRpb25EdXJhdGlvbj0wKTt2YXIgZz11LmNsYXNzTmFtZTtcInN0cmluZ1wiPT10eXBlb2Ygby5jbGFzc05hbWUmJihnPW8uY2xhc3NOYW1lLnRyaW0oKSk7dmFyIGg9XCJudW1iZXJcIj09dHlwZW9mIG8ucXVlcnlTZWxlY3RvckxpbWl0P28ucXVlcnlTZWxlY3RvckxpbWl0OjIwMCxDPShtfHxbXSkubGVuZ3RoPj1oP2g6bS5sZW5ndGgsej1cIm54LWJsb2NrLXRlbXBvcmFyeS1wb3NpdGlvblwiO2lmKGUpe2Zvcih2YXIgUyxMPVtcImFyZWFcIixcImJhc2VcIixcImJyXCIsXCJjb2xcIixcImNvbW1hbmRcIixcImVtYmVkXCIsXCJoclwiLFwiaW1nXCIsXCJpbnB1dFwiLFwia2V5Z2VuXCIsXCJsaW5rXCIsXCJtZXRhXCIsXCJwYXJhbVwiLFwic291cmNlXCIsXCJ0cmFja1wiLFwid2JyXCIsXCJodG1sXCIsXCJoZWFkXCIsXCJ0aXRsZVwiLFwic2NyaXB0XCIsXCJzdHlsZVwiLFwiaWZyYW1lXCJdLFg9MDtYPEM7WCsrKWlmKFM9bVtYXSxTKXtpZigtMTxMLmluZGV4T2YoUy50YWdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKFwiZW5cIikpKWJyZWFrO3ZhciBEPVMucXVlcnlTZWxlY3RvckFsbChcIltpZF49XCIrdS5JRCtcIl1cIik7aWYoMT5ELmxlbmd0aCl7dmFyIFQ9XCJcIjtpJiYoaT09PWIuSG91cmdsYXNzP1Q9SShvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuQ2lyY2xlP1Q9UihvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuQXJyb3dzP1Q9QShvLnN2Z1NpemUsby5zdmdDb2xvcik6aT09PWIuRG90cz9UPU0oby5zdmdTaXplLG8uc3ZnQ29sb3IpOmk9PT1iLlB1bHNlP1Q9QihvLnN2Z1NpemUsby5zdmdDb2xvcik6VD1XKG8uc3ZnU2l6ZSxvLnN2Z0NvbG9yKSk7dmFyIEY9XCI8c3BhbiBjbGFzcz1cXFwiXCIrZytcIi1pY29uXFxcIiBzdHlsZT1cXFwid2lkdGg6XCIrby5zdmdTaXplK1wiO2hlaWdodDpcIitvLnN2Z1NpemUrXCI7XFxcIj5cIitUK1wiPC9zcGFuPlwiLEU9XCJcIjswPHgubGVuZ3RoJiYoeD14Lmxlbmd0aD5vLm1lc3NhZ2VNYXhMZW5ndGg/Tih4KS5zdWJzdHJpbmcoMCxvLm1lc3NhZ2VNYXhMZW5ndGgpK1wiLi4uXCI6Tih4KSxFPVwiPHNwYW4gc3R5bGU9XFxcImZvbnQtc2l6ZTpcIitvLm1lc3NhZ2VGb250U2l6ZStcIjtjb2xvcjpcIitvLm1lc3NhZ2VDb2xvcitcIjtcXFwiIGNsYXNzPVxcXCJcIitnK1wiLW1lc3NhZ2VcXFwiPlwiK3grXCI8L3NwYW4+XCIpLFErKzt2YXIgaj10LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ai5pZD11LklEK1wiLVwiK1Esai5jbGFzc05hbWU9Zysoby5jc3NBbmltYXRpb24/XCIgbngtd2l0aC1hbmltYXRpb25cIjpcIlwiKSxqLnN0eWxlLnBvc2l0aW9uPW8ucG9zaXRpb24sai5zdHlsZS56SW5kZXg9by56aW5kZXgsai5zdHlsZS5iYWNrZ3JvdW5kPW8uYmFja2dyb3VuZENvbG9yLGouc3R5bGUuYW5pbWF0aW9uRHVyYXRpb249by5jc3NBbmltYXRpb25EdXJhdGlvbitcIm1zXCIsai5zdHlsZS5mb250RmFtaWx5PVwiXFxcIlwiK28uZm9udEZhbWlseStcIlxcXCIsIFwiK3Msai5zdHlsZS5kaXNwbGF5PVwiZmxleFwiLGouc3R5bGUuZmxleFdyYXA9XCJ3cmFwXCIsai5zdHlsZS5mbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIsai5zdHlsZS5hbGlnbkl0ZW1zPVwiY2VudGVyXCIsai5zdHlsZS5qdXN0aWZ5Q29udGVudD1cImNlbnRlclwiLG8ucnRsJiYoai5zZXRBdHRyaWJ1dGUoXCJkaXJcIixcInJ0bFwiKSxqLmNsYXNzTGlzdC5hZGQoXCJueC1ydGwtb25cIikpLGouaW5uZXJIVE1MPUYrRTt2YXIgTz10LmdldENvbXB1dGVkU3R5bGUoUykuZ2V0UHJvcGVydHlWYWx1ZShcInBvc2l0aW9uXCIpLEg9XCJzdHJpbmdcIj09dHlwZW9mIE8/Ty50b0xvY2FsZUxvd2VyQ2FzZShcImVuXCIpOlwicmVsYXRpdmVcIixQPU1hdGgucm91bmQoMS4yNSpwYXJzZUludChvLnN2Z1NpemUpKSs0MCxVPVMub2Zmc2V0SGVpZ2h0fHwwLFY9XCJcIjtQPlUmJihWPVwibWluLWhlaWdodDpcIitQK1wicHg7XCIpO3ZhciBxPVwiXCI7cT1TLmdldEF0dHJpYnV0ZShcImlkXCIpP1wiI1wiK1MuZ2V0QXR0cmlidXRlKFwiaWRcIik6Uy5jbGFzc0xpc3RbMF0/XCIuXCIrUy5jbGFzc0xpc3RbMF06KFMudGFnTmFtZXx8XCJcIikudG9Mb2NhbGVMb3dlckNhc2UoXCJlblwiKTt2YXIgWT1cIlwiLEs9LTE+PVtcImFic29sdXRlXCIsXCJyZWxhdGl2ZVwiLFwiZml4ZWRcIixcInN0aWNreVwiXS5pbmRleE9mKEgpO2lmKEt8fDA8Vi5sZW5ndGgpe2lmKCF3KFwiaGVhZFwiKSlyZXR1cm4hMTtLJiYoWT1cInBvc2l0aW9uOnJlbGF0aXZlIWltcG9ydGFudDtcIik7dmFyICQ9XCI8c3R5bGUgaWQ9XFxcIlN0eWxlLVwiK3UuSUQrXCItXCIrUStcIlxcXCI+XCIrcStcIi5cIit6K1wie1wiK1krVitcIn08L3N0eWxlPlwiLEo9dC5kb2N1bWVudC5jcmVhdGVSYW5nZSgpO0ouc2VsZWN0Tm9kZSh0LmRvY3VtZW50LmhlYWQpO3ZhciBaPUouY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KCQpO3QuZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChaKSxTLmNsYXNzTGlzdC5hZGQoeil9Uy5hcHBlbmRDaGlsZChqKX19fWVsc2UgdmFyIF89ZnVuY3Rpb24oZSl7dmFyIGk9c2V0VGltZW91dChmdW5jdGlvbigpe251bGwhPT1lLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKTt2YXIgYT1lLmdldEF0dHJpYnV0ZShcImlkXCIpLG49dC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlN0eWxlLVwiK2EpO24mJm51bGwhPT1uLnBhcmVudE5vZGUmJm4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKSxjbGVhclRpbWVvdXQoaSl9LG8uY3NzQW5pbWF0aW9uRHVyYXRpb24pfSx0dD1mdW5jdGlvbih0KXtpZih0JiYwPHQubGVuZ3RoKWZvcih2YXIgZSxuPTA7bjx0Lmxlbmd0aDtuKyspZT10W25dLGUmJihlLmNsYXNzTGlzdC5hZGQoXCJueC1yZW1vdmVcIiksXyhlKSk7ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBhP2soXCJcXFwiTm90aWZsaXguQmxvY2sucmVtb3ZlKCk7XFxcIiBmdW5jdGlvbiBjYWxsZWQgd2l0aCBcXFwiXCIrYStcIlxcXCIgc2VsZWN0b3IsIGJ1dCB0aGlzIHNlbGVjdG9yIGRvZXMgbm90IGhhdmUgYSBcXFwiQmxvY2tcXFwiIGVsZW1lbnQgdG8gcmVtb3ZlLlwiKTprKFwiXFxcIk5vdGlmbGl4LkJsb2NrLnJlbW92ZSgpO1xcXCIgZnVuY3Rpb24gY2FsbGVkIHdpdGggXFxcIlwiK2ErXCJcXFwiLCBidXQgdGhpcyBcXFwiQXJyYXk8SFRNTEVsZW1lbnQ+XFxcIiBvciBcXFwiTm9kZUxpc3RPZjxIVE1MRWxlbWVudD5cXFwiIGRvZXMgbm90IGhhdmUgYSBcXFwiQmxvY2tcXFwiIGVsZW1lbnQgdG8gcmVtb3ZlLlwiKX0sZXQ9ZnVuY3Rpb24odCl7dmFyIGU9c2V0VGltZW91dChmdW5jdGlvbigpe3QuY2xhc3NMaXN0LnJlbW92ZSh6KSxjbGVhclRpbWVvdXQoZSl9LG8uY3NzQW5pbWF0aW9uRHVyYXRpb24rMzAwKX0saXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2Zvcih2YXIgdCxlPTA7ZTxDO2UrKyl0PW1bZV0sdCYmKGV0KHQpLEQ9dC5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXj1cIit1LklEK1wiXVwiKSx0dChEKSk7Y2xlYXJUaW1lb3V0KGl0KX0sbCk7bz12KCEwLG8sZil9LEc9e05vdGlmeTp7aW5pdDpmdW5jdGlvbih0KXtlPXYoITAsbSx0KSxoKEQsXCJOb3RpZmxpeE5vdGlmeUludGVybmFsQ1NTXCIpfSxtZXJnZTpmdW5jdGlvbih0KXtyZXR1cm4gZT92b2lkKGU9dighMCxlLHQpKTooeShcIllvdSBoYXZlIHRvIGluaXRpYWxpemUgdGhlIE5vdGlmeSBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3VjY2VzczpmdW5jdGlvbih0LGUsaSl7RihsLlN1Y2Nlc3MsdCxlLGkpfSxmYWlsdXJlOmZ1bmN0aW9uKHQsZSxpKXtGKGwuRmFpbHVyZSx0LGUsaSl9LHdhcm5pbmc6ZnVuY3Rpb24odCxlLGkpe0YobC5XYXJuaW5nLHQsZSxpKX0saW5mbzpmdW5jdGlvbih0LGUsaSl7RihsLkluZm8sdCxlLGkpfX0sUmVwb3J0Ontpbml0OmZ1bmN0aW9uKHQpe2k9dighMCxwLHQpLGgoRSxcIk5vdGlmbGl4UmVwb3J0SW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBpP3ZvaWQoaT12KCEwLGksdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgUmVwb3J0IG1vZHVsZSBiZWZvcmUgY2FsbCBNZXJnZSBmdW5jdGlvbi5cIiksITEpfSxzdWNjZXNzOmZ1bmN0aW9uKHQsZSxpLGEsbil7aihjLlN1Y2Nlc3MsdCxlLGksYSxuKX0sZmFpbHVyZTpmdW5jdGlvbih0LGUsaSxhLG4pe2ooYy5GYWlsdXJlLHQsZSxpLGEsbil9LHdhcm5pbmc6ZnVuY3Rpb24odCxlLGksYSxuKXtqKGMuV2FybmluZyx0LGUsaSxhLG4pfSxpbmZvOmZ1bmN0aW9uKHQsZSxpLGEsbil7aihjLkluZm8sdCxlLGksYSxuKX19LENvbmZpcm06e2luaXQ6ZnVuY3Rpb24odCl7YT12KCEwLGQsdCksaChPLFwiTm90aWZsaXhDb25maXJtSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBhP3ZvaWQoYT12KCEwLGEsdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgQ29uZmlybSBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc2hvdzpmdW5jdGlvbih0LGUsaSxhLG4sbyxyKXtIKGYuU2hvdyx0LGUsbnVsbCxpLGEsbixvLHIpfSxhc2s6ZnVuY3Rpb24odCxlLGksYSxuLG8scixzKXtIKGYuQXNrLHQsZSxpLGEsbixvLHIscyl9LHByb21wdDpmdW5jdGlvbih0LGUsaSxhLG4sbyxyLHMpe0goZi5Qcm9tcHQsdCxlLGksYSxuLG8scixzKX19LExvYWRpbmc6e2luaXQ6ZnVuY3Rpb24odCl7bj12KCEwLGcsdCksaChQLFwiTm90aWZsaXhMb2FkaW5nSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBuP3ZvaWQobj12KCEwLG4sdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgTG9hZGluZyBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3RhbmRhcmQ6ZnVuY3Rpb24odCxlKXtVKHguU3RhbmRhcmQsdCxlLCEwLDApfSxob3VyZ2xhc3M6ZnVuY3Rpb24odCxlKXtVKHguSG91cmdsYXNzLHQsZSwhMCwwKX0sY2lyY2xlOmZ1bmN0aW9uKHQsZSl7VSh4LkNpcmNsZSx0LGUsITAsMCl9LGFycm93czpmdW5jdGlvbih0LGUpe1UoeC5BcnJvd3MsdCxlLCEwLDApfSxkb3RzOmZ1bmN0aW9uKHQsZSl7VSh4LkRvdHMsdCxlLCEwLDApfSxwdWxzZTpmdW5jdGlvbih0LGUpe1UoeC5QdWxzZSx0LGUsITAsMCl9LGN1c3RvbTpmdW5jdGlvbih0LGUpe1UoeC5DdXN0b20sdCxlLCEwLDApfSxub3RpZmxpeDpmdW5jdGlvbih0LGUpe1UoeC5Ob3RpZmxpeCx0LGUsITAsMCl9LHJlbW92ZTpmdW5jdGlvbih0KXtcIm51bWJlclwiIT10eXBlb2YgdCYmKHQ9MCksVShudWxsLG51bGwsbnVsbCwhMSx0KX0sY2hhbmdlOmZ1bmN0aW9uKHQpe1YodCl9fSxCbG9jazp7aW5pdDpmdW5jdGlvbih0KXtvPXYoITAsdSx0KSxoKHEsXCJOb3RpZmxpeEJsb2NrSW50ZXJuYWxDU1NcIil9LG1lcmdlOmZ1bmN0aW9uKHQpe3JldHVybiBvP3ZvaWQobz12KCEwLG8sdCkpOih5KFwiWW91IGhhdmUgdG8gaW5pdGlhbGl6ZSB0aGUgXFxcIk5vdGlmbGl4LkJsb2NrXFxcIiBtb2R1bGUgYmVmb3JlIGNhbGwgTWVyZ2UgZnVuY3Rpb24uXCIpLCExKX0sc3RhbmRhcmQ6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5TdGFuZGFyZCx0LGUsaSl9LGhvdXJnbGFzczpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkhvdXJnbGFzcyx0LGUsaSl9LGNpcmNsZTpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkNpcmNsZSx0LGUsaSl9LGFycm93czpmdW5jdGlvbih0LGUsaSl7WSghMCxiLkFycm93cyx0LGUsaSl9LGRvdHM6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5Eb3RzLHQsZSxpKX0scHVsc2U6ZnVuY3Rpb24odCxlLGkpe1koITAsYi5QdWxzZSx0LGUsaSl9LHJlbW92ZTpmdW5jdGlvbih0LGUpe1wibnVtYmVyXCIhPXR5cGVvZiBlJiYoZT0wKSxZKCExLG51bGwsdCxudWxsLG51bGwsZSl9fX07cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHQuTm90aWZsaXg/dighMCx0Lk5vdGlmbGl4LHtOb3RpZnk6Ry5Ob3RpZnksUmVwb3J0OkcuUmVwb3J0LENvbmZpcm06Ry5Db25maXJtLExvYWRpbmc6Ry5Mb2FkaW5nLEJsb2NrOkcuQmxvY2t9KTp7Tm90aWZ5OkcuTm90aWZ5LFJlcG9ydDpHLlJlcG9ydCxDb25maXJtOkcuQ29uZmlybSxMb2FkaW5nOkcuTG9hZGluZyxCbG9jazpHLkJsb2NrfX0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImltcG9ydCB7IGdldFNldHRpbmcgfSBmcm9tICcuL29wdGlvbnMnXG5cbmV4cG9ydCBsZXQgcmVwb3J0T3B0aW9ucyA9IHt9XG5leHBvcnQgbGV0IGNvbmZpcm1PcHRpb25zID0ge2JvcmRlclJhZGl1czogMTB9XG5cbmV4cG9ydCBjb25zdCB0aGVtZXMgPSB7XG4gICAgXCJkYXJrXCI6IHtcbiAgICAgICAgXCJiZ1wiOiBcIiMyMzIzMjNcIixcbiAgICAgICAgXCJ0ZXh0LWNvbG9yXCI6IFwiI0ZGRkZGRlwiLFxuICAgICAgICBcInNlY29uZGFyeS10ZXh0LWNvbG9yXCI6IFwiI2QxZDFkMVwiLFxuICAgICAgICBcIm9wdGlvbi1iZ1wiOiBcIiM0MzQzNDNcIixcbiAgICAgICAgXCJvcHRpb24taG92ZXItYmdcIjogXCIjMzAzMDMwXCIsXG4gICAgICAgIFwib3B0aW9uLWJvcmRlci1jb2xvclwiOiBcIiM4YThhOGFcIixcbiAgICAgICAgXCJwcm9ncmVzcy1iYXItY29sb3JcIjogXCIjMTk2M2JkXCIsXG4gICAgICAgIFwicHJvZ3Jlc3MtYmFyLWJnXCI6IFwiIzYzNjM2M1wiLFxuICAgICAgICBcInJhZGlvLWJnXCI6IFwiIzRENEQ0RFwiLFxuICAgICAgICBcInJhZGlvLXNlbGVjdGVkLWJnXCI6IFwiIzc2RUE1RFwiLFxuICAgICAgICBcImdyYXktYnRuLWNvbG9yXCI6IFwiIzYwNjA2MFwiLFxuICAgICAgICBcImdyYXktYnRuLWhvdmVyXCI6IFwiIzU0NTQ1NFwiLFxuICAgICAgICBcImNhcmQtYm9yZGVyXCI6IFwiIzYyNjI2MlwiLFxuICAgICAgICBcImZpZWxkc2V0LWJvcmRlclwiOiBcIiM2ZDZkNmRcIixcbiAgICAgICAgXCJsaW5rLWNvbG9yXCI6IFwiIzJCQTdERVwiLFxuICAgICAgICBcIm54LWdsb2JhbFwiOiB7XG4gICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNGRkZGRkZcIixcbiAgICAgICAgICAgIFwiYmFja2dyb3VuZENvbG9yXCI6IFwiIzM1MzUzNVwiLFxuICAgICAgICAgICAgXCJzdWNjZXNzXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJmYWlsdXJlXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjRkZGRkZGXCIsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwiZGltXCI6IHtcbiAgICAgICAgXCJiZ1wiOiBcIiMzODM5M0RcIixcbiAgICAgICAgXCJ0ZXh0LWNvbG9yXCI6IFwiI0YwRjBGMFwiLFxuICAgICAgICBcInNlY29uZGFyeS10ZXh0LWNvbG9yXCI6IFwiI0QwRDNENFwiLFxuICAgICAgICBcIm9wdGlvbi1iZ1wiOiBcIiM1MTVBNUFcIixcbiAgICAgICAgXCJvcHRpb24taG92ZXItYmdcIjogXCIjNDI0OTQ5XCIsXG4gICAgICAgIFwib3B0aW9uLWJvcmRlci1jb2xvclwiOiBcIiM4YThhOGFcIixcbiAgICAgICAgXCJwcm9ncmVzcy1iYXItY29sb3JcIjogXCIjMzQ5OERCXCIsXG4gICAgICAgIFwicHJvZ3Jlc3MtYmFyLWJnXCI6IFwiIzYzNjM2M1wiLFxuICAgICAgICBcInJhZGlvLWJnXCI6IFwiIzRkNGQ0ZFwiLFxuICAgICAgICBcInJhZGlvLXNlbGVjdGVkLWJnXCI6IFwiIzc2RUE1RFwiLFxuICAgICAgICBcImdyYXktYnRuLWNvbG9yXCI6IFwiIzYwNjA2MFwiLFxuICAgICAgICBcImdyYXktYnRuLWhvdmVyXCI6IFwiIzU0NTQ1NFwiLFxuICAgICAgICBcImNhcmQtYm9yZGVyXCI6IFwiIzYyNjI2MlwiLFxuICAgICAgICBcImZpZWxkc2V0LWJvcmRlclwiOiBcIiM4MDhCOTZcIixcbiAgICAgICAgXCJsaW5rLWNvbG9yXCI6IFwiIzI4NzRBNlwiLFxuICAgICAgICBcIm54LWdsb2JhbFwiOiB7XG4gICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNGMEYwRjBcIixcbiAgICAgICAgICAgIFwiYmFja2dyb3VuZENvbG9yXCI6IFwiIzM4MzkzRFwiLFxuICAgICAgICAgICAgXCJzdWNjZXNzXCI6IHtcbiAgICAgICAgICAgICAgICBcInRpdGxlQ29sb3JcIjogXCIjZjBmMGYwXCIsXG4gICAgICAgICAgICAgICAgXCJtZXNzYWdlQ29sb3JcIjogXCIjZjBmMGYwXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImZhaWx1cmVcIjoge1xuICAgICAgICAgICAgICAgIFwidGl0bGVDb2xvclwiOiBcIiNmMGYwZjBcIixcbiAgICAgICAgICAgICAgICBcIm1lc3NhZ2VDb2xvclwiOiBcIiNmMGYwZjBcIlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlUaGVtZSh0aGVtZU5hbWUpIHtcbiAgICBpZiAodGhlbWVOYW1lID09IFwiZGVmYXVsdC10aGVtZVwiIHx8IHRoZW1lTmFtZSA9PSBcImRlZmF1bHRcIikgcmV0dXJuXG4gICAgcmVzZXRUaGVtZSh0cnVlKVxuICAgIGxldCB0aGVtZSA9IHRoZW1lc1t0aGVtZU5hbWVdXG4gICAgaWYgKCF0aGVtZSkge2NvbnNvbGUud2FybihgVGhlbWUgXCIke3RoZW1lTmFtZX1cIiBub3QgZm91bmQhYCk7IHJldHVybn1cbiAgICBmb3IgKGxldCBwcm9wZXJ0eSBpbiB0aGVtZSkge1xuICAgICAgICBpZiAocHJvcGVydHkuc3RhcnRzV2l0aCgnbngtJykpIGNvbnRpbnVlXG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke3Byb3BlcnR5fWAsIHRoZW1lW3Byb3BlcnR5XSlcbiAgICB9XG4gICAgbGV0IGdsb2JhbE9wdGlvbnMgPSB0aGVtZVsnbngtZ2xvYmFsJ11cbiAgICBsZXQgbmV3R2xvYmFsT3B0aW9ucyA9IHt9XG4gICAgZm9yIChsZXQgcHJvcGVydHkgaW4gZ2xvYmFsT3B0aW9ucykge1xuICAgICAgICBpZiAocHJvcGVydHkgPT0gXCJhbGxcIikgY29udGludWVcbiAgICAgICAgbmV3R2xvYmFsT3B0aW9uc1twcm9wZXJ0eV0gPSBnbG9iYWxPcHRpb25zW3Byb3BlcnR5XVxuICAgIH1cbiAgICBuZXdHbG9iYWxPcHRpb25zWydwbGFpblRleHQnXSA9IGZhbHNlXG4gICAgbmV3R2xvYmFsT3B0aW9uc1snY3NzQW5pbWF0aW9uU3R5bGUnXSA9IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpXG4gICAgcmVwb3J0T3B0aW9ucyA9IG5ld0dsb2JhbE9wdGlvbnNcbiAgICBuZXdHbG9iYWxPcHRpb25zWydib3JkZXJSYWRpdXMnXSA9IDEwXG4gICAgY29uZmlybU9wdGlvbnMgPSBuZXdHbG9iYWxPcHRpb25zXG4gICAgdHJ5IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3MtcG9wdXAtJHtnZXRTZXR0aW5nKCdwb3B1cC1hbmltYXRpb24nKX1gKS5jaGVja2VkID0gdHJ1ZVxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcy0ke3RoZW1lTmFtZX1gKS5jaGVja2VkID0gdHJ1ZVxuICAgIH0gY2F0Y2goZSkge2FsZXJ0KGUpfSAgICBcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWV0YVtuYW1lPSd0aGVtZS1jb2xvciddXCIpLmNvbnRlbnQgPSB0aGVtZS5iZ1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0VGhlbWUobm9UaGVtZUNvbG9yKSB7XG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiXCIpXG4gICAgY29uZmlybU9wdGlvbnMgPSB7cGxhaW5UZXh0OiBmYWxzZSwgYm9yZGVyUmFkaXVzOiAxMCwgY3NzQW5pbWF0aW9uU3R5bGU6IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpfVxuICAgIHJlcG9ydE9wdGlvbnMgPSB7cGxhaW5UZXh0OiBmYWxzZSwgY3NzQW5pbWF0aW9uU3R5bGU6IGdldFNldHRpbmcoJ3BvcHVwLWFuaW1hdGlvbicpfVxuICAgIGlmICghbm9UaGVtZUNvbG9yKSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW25hbWU9J3RoZW1lLWNvbG9yJ11cIikuY29udGVudCA9IFwiI2VkZWRlZFwiXG4gICAgfVxufSIsImltcG9ydCB7IGFwcGx5VGhlbWUsIHJlc2V0VGhlbWUgfSBmcm9tIFwiLi90aGVtZXNcIlxuXG5jb25zdCByYWRpb3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFt0eXBlPSdyYWRpbyddXCIpKVxubGV0IHVzZXJPcHRpb25zID0ge31cbmxldCB1c2VyU2V0dGluZ3MgPSB7XG4gICAgXCJ0aGVtZVwiOiBcImRlZmF1bHQtdGhlbWVcIixcbiAgICBcInBvcHVwLWFuaW1hdGlvblwiOiBcImZhZGVcIlxufVxuXG5yYWRpb3MuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICBpZiAoaW5wdXQuaWQuc3RhcnRzV2l0aCgncy0nKSkge1xuICAgICAgICAvLyBTZXR0aW5nIGhhbmRsZXJcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgICAgICB1c2VyU2V0dGluZ3NbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZVxuICAgICAgICAgICAgY29uc29sZS5kZWJ1Zyh1c2VyU2V0dGluZ3MpXG4gICAgICAgICAgICBzYXZlU2V0dGluZ3ModXNlclNldHRpbmdzKVxuICAgICAgICAgICAgaWYgKHVzZXJTZXR0aW5ncy50aGVtZSAhPSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgICAgIGFwcGx5VGhlbWUodXNlclNldHRpbmdzLnRoZW1lKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXNldFRoZW1lKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBPcHRpb24gaGFuZGxlclxuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgICAgIHVzZXJPcHRpb25zW2lucHV0Lm5hbWVdID0gaW5wdXQuaWRcbiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcodXNlck9wdGlvbnMpXG4gICAgICAgICAgICBwcm9jZXNzU3ViU2V0cygpXG4gICAgICAgIH0pXG4gICAgICAgIGlmICghdXNlck9wdGlvbnNbaW5wdXQubmFtZV0pIHtcbiAgICAgICAgICAgIHVzZXJPcHRpb25zW2lucHV0Lm5hbWVdID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgaW5wdXRbbmFtZT0nJHtpbnB1dC5uYW1lfSddOmNoZWNrZWRgKS5pZFxuICAgICAgICB9XG4gICAgfVxufSlcblxuZXhwb3J0IGZ1bmN0aW9uICBnZXREYXRhVXJsKCkge1xuICAgIHJldHVybiBgZGF0YS8ke3VzZXJPcHRpb25zLnNldH0tb3B0Lmpzb25gXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyT3B0aW9ucygpIHtcbiAgICByZXR1cm4gdXNlck9wdGlvbnNcbn1cblxuZnVuY3Rpb24gbG9hZFNldHRpbmdzKCkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZmxhZy1ndWVzc2VyLXNldHRpbmdzXCIpKVxufVxuXG5mdW5jdGlvbiBzYXZlU2V0dGluZ3Moc2V0dGluZ3MpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImZsYWctZ3Vlc3Nlci1zZXR0aW5nc1wiLCBKU09OLnN0cmluZ2lmeShzZXR0aW5ncykpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXR0aW5nKHNldHRpbmdOYW1lKSB7XG4gICAgcmV0dXJuIHVzZXJTZXR0aW5nc1tzZXR0aW5nTmFtZV1cbn1cblxuaWYgKCFsb2FkU2V0dGluZ3MoKSkge1xuICAgIHNhdmVTZXR0aW5ncyh1c2VyU2V0dGluZ3MpXG59IGVsc2Uge1xuICAgIGxldCBsb2FkZWRTZXR0aW5ncyA9IGxvYWRTZXR0aW5ncygpXG4gICAgZm9yIChsZXQgayBpbiB1c2VyU2V0dGluZ3MpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBsb2FkZWRTZXR0aW5nc1trXSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJBZGRpbmcgbmV3bHkgYWRkZWQgc2V0dGluZyBcIiArIGsgKyBcIiwgdGhpcyBzaG91bGQgb25seSBhcHBlYXIgb25jZS5cIilcbiAgICAgICAgICAgIGxvYWRlZFNldHRpbmdzW2tdID0gdXNlclNldHRpbmdzW2tdXG4gICAgICAgICAgICBzYXZlU2V0dGluZ3MobG9hZGVkU2V0dGluZ3MpXG4gICAgICAgICAgICBwcm9jZXNzU3ViU2V0cygpXG4gICAgICAgIH1cbiAgICB9XG4gICAgdXNlclNldHRpbmdzID0gbG9hZGVkU2V0dGluZ3Ncbn1cbmFwcGx5VGhlbWUodXNlclNldHRpbmdzLnRoZW1lKVxuXG5mdW5jdGlvbiBwcm9jZXNzU3ViU2V0cygpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdmaWVsZHNldC5zdWJzZXRbZGF0YS1yZXF1aXJlc10nKS5mb3JFYWNoKChzdWJzZXQpID0+IHtcbiAgICAgICAgaWYgKHN1YnNldC5kYXRhc2V0LnJlcXVpcmVzKSB7XG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc3Vic2V0LmRhdGFzZXQucmVxdWlyZXMpICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHN1YnNldC5kYXRhc2V0LnJlcXVpcmVzKS50eXBlID09IFwicmFkaW9cIikge1xuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdWJzZXQuZGF0YXNldC5yZXF1aXJlcykuY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICBzdWJzZXQuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNldC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbn1cblxucHJvY2Vzc1N1YlNldHMoKSIsImltcG9ydCB7IGhpZGVBbGxTY3JlZW5zIH0gZnJvbSBcIi4vaW5kZXhcIlxuaW1wb3J0IHsgQ29uZmlybSB9IGZyb20gJ25vdGlmbGl4L2J1aWxkL25vdGlmbGl4LWNvbmZpcm0tYWlvJ1xuaW1wb3J0IHsgY29uZmlybU9wdGlvbnMsIHJlcG9ydE9wdGlvbnMgfSBmcm9tIFwiLi90aGVtZXNcIlxuaW1wb3J0IHsgUmVwb3J0IH0gZnJvbSBcIm5vdGlmbGl4XCJcblxubGV0IHN0YXRpc3RpY3MgPSB7XG4gICAgc3RyZWFrOiAwLFxuICAgIHRvdGFsUXVlc3Rpb25zOiAwLFxuICAgIHRvdGFsQ29ycmVjdDogMCxcbiAgICB0b3RhbEluY29ycmVjdDogMCxcbiAgICB0b3RhbEdhbWVzOiAwLFxuICAgIGZsYWdzU2VlbjogW11cbn1cbmxldCBnYW1lU3RhdGlzdGljcyA9IHtcbiAgICB0b3RhbFF1ZXN0aW9uczogMCxcbiAgICB0b3RhbENvcnJlY3Q6IDAsXG4gICAgdG90YWxJbmNvcnJlY3Q6IDAsXG4gICAgcGxheXRpbWU6IDAsXG4gICAgZGlmZmljdWx0eTogMFxufVxuY29uc3QgdG90YWxGbGFnQ291bnQgPSAyNTQgLy8gVG90YWwgbnVtYmVyIG9mIGZsYWdzIGluIGFsbCBkaWZmaWN1bHRpZXMuIFJ1biBzY3JpcHRzL2dldEZsYWdDb3VudC5qcyB0byByZWNhbGN1bGF0ZVxuXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVN0YXRzKHN0YXRzKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJmbGFnLWd1ZXNzZXItc3RhdHNcIiwgSlNPTi5zdHJpbmdpZnkoc3RhdHMpKVxuICAgIHVwZGF0ZVN0YXRSZWFkaW5nKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRTdGF0cygpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImZsYWctZ3Vlc3Nlci1zdGF0c1wiKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXQoc3RhdE5hbWUpIHtcbiAgICByZXR1cm4gc3RhdGlzdGljc1tzdGF0TmFtZV1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVN0YXQoc3RhdE5hbWUsIG5ld1ZhbHVlKSB7XG4gICAgc3RhdGlzdGljc1tzdGF0TmFtZV0gPSAgbmV3VmFsdWVcbiAgICBzYXZlU3RhdHMoc3RhdGlzdGljcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluY3JlbWVudFN0YXQoc3RhdE5hbWUpIHtcbiAgICB1cGRhdGVTdGF0KHN0YXROYW1lLCBzdGF0aXN0aWNzW3N0YXROYW1lXSArIDEpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVHYW1lU3RhdChzdGF0TmFtZSwgbmV3VmFsdWUpIHtcbiAgICBnYW1lU3RhdGlzdGljc1tzdGF0TmFtZV0gPSBuZXdWYWx1ZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5jcmVtZW50R2FtZVN0YXQoc3RhdE5hbWUpIHtcbiAgICB1cGRhdGVHYW1lU3RhdChzdGF0TmFtZSwgZ2FtZVN0YXRpc3RpY3Nbc3RhdE5hbWVdICsgMSlcbn1cblxuZnVuY3Rpb24gZm9ybWF0U2Vjb25kcyhzZWNvbmRzKSB7XG4gICAgdmFyIGggPSBNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKVxuICAgIHZhciBtID0gTWF0aC5mbG9vcihzZWNvbmRzICUgMzYwMCAvIDYwKVxuICAgIHZhciBzID0gTWF0aC5mbG9vcihzZWNvbmRzICUgMzYwMCAlIDYwKVxuICAgIHJldHVybiBgJHtoID4gMCA/IGggKyAnIGhvdXJzLCcgOiAnJ30gJHttID4gMCA/IG0gKyAnIG1pbnV0ZXMsJyA6ICcnfSAke3N9IHNlY29uZHNgXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93RW5kU2NyZWVuKGdhbWVNb2RlLCBzdHJlYWsgPSAwLCBzY29yZSA9IDAsIG1heFNjb3JlID0gMCwgY29ycmVjdEFuc3dlciA9ICcnKSB7XG4gICAgaGlkZUFsbFNjcmVlbnMoKVxuICAgIGNvbnN0IGVuZFNjcmVlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW5kXCIpXG4gICAgZW5kU2NyZWVuLnN0eWxlLmRpc3BsYXkgPSBcInVuc2V0XCJcbiAgICBmb3IgKGxldCBzdGF0SWQgaW4gZ2FtZVN0YXRpc3RpY3MpIHtcbiAgICAgICAgbGV0IHN0YXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RnLScgKyBzdGF0SWQpXG4gICAgICAgIGlmIChzdGF0RWxlbWVudCkge1xuICAgICAgICAgICAgc3RhdEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdGF0XCIpLmlubmVyVGV4dCA9IGdhbWVTdGF0aXN0aWNzW3N0YXRJZF1cbiAgICAgICAgfVxuICAgIH1cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRzZy1wbGF5dGltZVwiKS5xdWVyeVNlbGVjdG9yKFwiLnN0YXRcIikuaW5uZXJUZXh0ID0gZm9ybWF0U2Vjb25kcyhnYW1lU3RhdGlzdGljcy5wbGF5dGltZSlcbiAgICBsZXQgc3ViU3RyZWFrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdWItc3RyZWFrXCIpXG4gICAgbGV0IHN1YlF1aXpTY29yZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3ViLXF1aXotc2NvcmVcIilcbiAgICBpZiAoZ2FtZU1vZGUgPT0gXCJxdWVzdGlvbnNcIikge1xuICAgICAgICBzdWJRdWl6U2NvcmUuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIlxuICAgICAgICBzdWJTdHJlYWsuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSBlbHNlIGlmIChnYW1lTW9kZSA9PSBcInN0cmVha1wiKSB7XG4gICAgICAgIHN1YlF1aXpTY29yZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICAgICAgc3ViU3RyZWFrLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcbiAgICB9XG4gICAgc3ViU3RyZWFrLnF1ZXJ5U2VsZWN0b3IoXCIuc3RhdFwiKS5pbm5lclRleHQgPSBzdHJlYWtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNjb3JlLXZhbHVlXCIpLmlubmVyVGV4dCA9IHNjb3JlXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY29yZS1tYXhcIikuaW5uZXJUZXh0ID0gbWF4U2NvcmUuc3BsaXQoXCJxLVwiKVsxXVxuICAgIGlmIChnYW1lTW9kZSA9PSBcInF1ZXN0aW9uc1wiKSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW5kLXRpdGxlXCIpLmlubmVyVGV4dCA9IFwiR2FtZSBDb21wbGV0ZSFcIlxuICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW5kLXRpdGxlXCIpLmlubmVyVGV4dCA9IFwiR2FtZSBPdmVyIVwiXG4gICAgfVxuICAgIGxldCBjb3JyZWN0UGVyY2VudGFnZSA9IE1hdGguZmxvb3IoKGdhbWVTdGF0aXN0aWNzLnRvdGFsQ29ycmVjdCAqIDEwMCkgLyBnYW1lU3RhdGlzdGljcy50b3RhbFF1ZXN0aW9ucylcbiAgICBsZXQgZW5kQ29ycmVjdEFuc3dlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbmQtY29ycmVjdC1hbnN3ZXInKVxuICAgIGxldCBxdWVzdGlvbkNvdW50U3RhdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0Zy1xdWVzdGlvbnMnKVxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0c3Atd2luUmF0ZScpLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uc3RhdCcpLmlubmVyVGV4dCA9IGNvcnJlY3RQZXJjZW50YWdlXG4gICAgaWYgKGNvcnJlY3RBbnN3ZXIgPT0gJycpIHtcbiAgICAgICAgZW5kQ29ycmVjdEFuc3dlci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbmRDb3JyZWN0QW5zd2VyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCJcbiAgICAgICAgZW5kQ29ycmVjdEFuc3dlci5xdWVyeVNlbGVjdG9yKCcuc3RhdCcpLmlubmVyVGV4dCA9IGNvcnJlY3RBbnN3ZXJcbiAgICB9XG4gICAgaWYgKGdhbWVNb2RlID09IFwicXVlc3Rpb25zXCIpIHtcbiAgICAgICAgcXVlc3Rpb25Db3VudFN0YXQuc3R5bGUuZGlzcGxheSA9IFwidW5zZXRcIlxuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXN0aW9uQ291bnRTdGF0LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgIH1cbiAgICBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubm8tc3RyZWFrXCIpKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgIGlmICghZWxlbWVudCkgcmV0dXJuXG4gICAgICAgIGlmIChnYW1lTW9kZSA9PSBcInN0cmVha1wiKSB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGNsZWFyR2FtZVN0YXRzKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyR2FtZVN0YXRzKCkge1xuICAgIGZvciAobGV0IHN0YXQgaW4gZ2FtZVN0YXRpc3RpY3MpIHtcbiAgICAgICAgZ2FtZVN0YXRpc3RpY3Nbc3RhdF0gPSAwXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlU3RhdFJlYWRpbmcoKSB7XG4gICAgZm9yIChsZXQgayBpbiBzdGF0aXN0aWNzKSB7XG4gICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgcy0ke2t9YCkpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzLSR7a31gKS5xdWVyeVNlbGVjdG9yKCdzcGFuLnN0YXQnKS5pbm5lclRleHQgPSBnZXRTdGF0KGspXG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IGNvcnJlY3RQZXJjZW50YWdlID0gTWF0aC5mbG9vcigoZ2V0U3RhdCgndG90YWxDb3JyZWN0JykgKiAxMDApIC8gZ2V0U3RhdCgndG90YWxRdWVzdGlvbnMnKSlcbiAgICBpZiAoaXNOYU4oY29ycmVjdFBlcmNlbnRhZ2UpKSBjb3JyZWN0UGVyY2VudGFnZSA9IDBcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3Atd2luUmF0ZScpLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uc3RhdCcpLmlubmVyVGV4dCA9IGNvcnJlY3RQZXJjZW50YWdlXG4gICAgbGV0IGZsYWdzU2VlblBlcmNlbnRhZ2UgPSBNYXRoLmZsb29yKChnZXRTdGF0KCdmbGFnc1NlZW4nKS5sZW5ndGggKiAxMDApIC8gdG90YWxGbGFnQ291bnQpXG4gICAgaWYgKGlzTmFOKGZsYWdzU2VlblBlcmNlbnRhZ2UpKSBmbGFnc1NlZW5QZXJjZW50YWdlID0gMFxuICAgIGlmIChmbGFnc1NlZW5QZXJjZW50YWdlID4gMTAwKSBmbGFnc1NlZW5QZXJjZW50YWdlID0gMTAwIC8vIFdob29wcyBzb21lYm9keSBmb3Jnb3QgdG8gdXBkYXRlIHRoZSB0b3RhbEZsYWdDb3VudCB2YXJpYWJsZSFcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3AtZmxhZ3NQZXJjZW50JykucXVlcnlTZWxlY3Rvcignc3Bhbi5zdGF0JykuaW5uZXJUZXh0ID0gZmxhZ3NTZWVuUGVyY2VudGFnZVxufVxuXG5pZiAoIWxvYWRTdGF0cygpKSB7XG4gICAgc2F2ZVN0YXRzKHN0YXRpc3RpY3MpXG59IGVsc2Uge1xuICAgIGxldCBsb2FkZWRTdGF0cyA9IGxvYWRTdGF0cygpXG4gICAgZm9yIChsZXQgayBpbiBzdGF0aXN0aWNzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbG9hZGVkU3RhdHNba10gPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQWRkaW5nIHN0YXQgXCIgKyBrICsgXCIsIHRoaXMgc2hvdWxkIG9ubHkgYXBwZWFyIG9uY2UuXCIpXG4gICAgICAgICAgICBsb2FkZWRTdGF0c1trXSA9IHN0YXRpc3RpY3Nba11cbiAgICAgICAgICAgIHNhdmVTdGF0cyhsb2FkZWRTdGF0cylcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aXN0aWNzID0gbG9hZGVkU3RhdHNcbn1cbnVwZGF0ZVN0YXRSZWFkaW5nKClcblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXNldC1zdGF0c1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIENvbmZpcm0uc2hvdyhcIkFyZSB5b3Ugc3VyZT9cIiwgXCJUaGlzIGNhbm5vdCBiZSB1bmRvbmUhXCIsICdDbGVhciBTdGF0cycsICdDYW5jZWwnLCAoKSA9PiB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZmxhZy1ndWVzc2VyLXN0YXRzXCIpXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxuICAgIH0sIHVuZGVmaW5lZCwgY29uZmlybU9wdGlvbnMpXG59KVxuZnVuY3Rpb24gZ2VuZXJhdGVDb3B5VGV4dCgpIHtcbiAgICBsZXQgbGluZXMgPSBbXVxuICAgIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNzdGF0cy1jb250YWluZXIgPiB1bCA+IGxpXCIpKS5mb3JFYWNoKChsaXN0SXRlbSkgPT4ge1xuICAgICAgICBpZiAobGlzdEl0ZW0uZ2V0QXR0cmlidXRlKFwiaWNvblwiKSkge1xuICAgICAgICAgICAgbGluZXMucHVzaChgJHtsaXN0SXRlbS5nZXRBdHRyaWJ1dGUoXCJpY29uXCIpfSR7bGlzdEl0ZW0uaW5uZXJUZXh0fWApXG4gICAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiBsaW5lcy5qb2luKFwiXFxuXCIpXG59XG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvcHktc3RhdHNcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB0ZXh0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKVxuICAgICAgICB0ZXh0RWxlbWVudC52YWx1ZSA9IGdlbmVyYXRlQ29weVRleHQoKVxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRleHRFbGVtZW50KVxuICAgICAgICB0ZXh0RWxlbWVudC5zZWxlY3QoKVxuICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIilcbiAgICAgICAgdGV4dEVsZW1lbnQucmVtb3ZlKClcbiAgICAgICAgUmVwb3J0LnN1Y2Nlc3MoXCJDb3BpZWQhXCIsIFwiU3VjY2Vzc2Z1bGx5IGNvcGllZCB0byBjbGlwYm9hcmQuXCIsIFwiT2tcIiwgcmVwb3J0T3B0aW9ucylcbiAgICB9IGNhdGNoKGVycm9yTSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yTSlcbiAgICAgICAgUmVwb3J0LmZhaWx1cmUoXCJFcnJvclwiLCBcIkZhaWxlZCB0byBjb3B5IHRleHQsIHNvcnJ5IGFib3V0IHRoYXQgOihcIiwgXCJPa1wiLCByZXBvcnRPcHRpb25zKVxuICAgIH1cbn0pIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH1cblxuICBpZiAobm9kZS50b1N0cmluZygpICE9PSAnW29iamVjdCBXaW5kb3ddJykge1xuICAgIHZhciBvd25lckRvY3VtZW50ID0gbm9kZS5vd25lckRvY3VtZW50O1xuICAgIHJldHVybiBvd25lckRvY3VtZW50ID8gb3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyB8fCB3aW5kb3cgOiB3aW5kb3c7XG4gIH1cblxuICByZXR1cm4gbm9kZTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuXG5mdW5jdGlvbiBpc0VsZW1lbnQobm9kZSkge1xuICB2YXIgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5FbGVtZW50O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGlzSFRNTEVsZW1lbnQobm9kZSkge1xuICB2YXIgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5IVE1MRWxlbWVudDtcbiAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBPd25FbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gaXNTaGFkb3dSb290KG5vZGUpIHtcbiAgLy8gSUUgMTEgaGFzIG5vIFNoYWRvd1Jvb3RcbiAgaWYgKHR5cGVvZiBTaGFkb3dSb290ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLlNoYWRvd1Jvb3Q7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgU2hhZG93Um9vdDtcbn1cblxuZXhwb3J0IHsgaXNFbGVtZW50LCBpc0hUTUxFbGVtZW50LCBpc1NoYWRvd1Jvb3QgfTsiLCJleHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuZXhwb3J0IHZhciBtaW4gPSBNYXRoLm1pbjtcbmV4cG9ydCB2YXIgcm91bmQgPSBNYXRoLnJvdW5kOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFVBU3RyaW5nKCkge1xuICB2YXIgdWFEYXRhID0gbmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7XG5cbiAgaWYgKHVhRGF0YSAhPSBudWxsICYmIHVhRGF0YS5icmFuZHMpIHtcbiAgICByZXR1cm4gdWFEYXRhLmJyYW5kcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBpdGVtLmJyYW5kICsgXCIvXCIgKyBpdGVtLnZlcnNpb247XG4gICAgfSkuam9pbignICcpO1xuICB9XG5cbiAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQ7XG59IiwiaW1wb3J0IGdldFVBU3RyaW5nIGZyb20gXCIuLi91dGlscy91c2VyQWdlbnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzTGF5b3V0Vmlld3BvcnQoKSB7XG4gIHJldHVybiAhL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdChnZXRVQVN0cmluZygpKTtcbn0iLCJpbXBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgeyByb3VuZCB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGlzTGF5b3V0Vmlld3BvcnQgZnJvbSBcIi4vaXNMYXlvdXRWaWV3cG9ydC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5KSB7XG4gIGlmIChpbmNsdWRlU2NhbGUgPT09IHZvaWQgMCkge1xuICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzRml4ZWRTdHJhdGVneSA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZFN0cmF0ZWd5ID0gZmFsc2U7XG4gIH1cblxuICB2YXIgY2xpZW50UmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBzY2FsZVggPSAxO1xuICB2YXIgc2NhbGVZID0gMTtcblxuICBpZiAoaW5jbHVkZVNjYWxlICYmIGlzSFRNTEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICBzY2FsZVggPSBlbGVtZW50Lm9mZnNldFdpZHRoID4gMCA/IHJvdW5kKGNsaWVudFJlY3Qud2lkdGgpIC8gZWxlbWVudC5vZmZzZXRXaWR0aCB8fCAxIDogMTtcbiAgICBzY2FsZVkgPSBlbGVtZW50Lm9mZnNldEhlaWdodCA+IDAgPyByb3VuZChjbGllbnRSZWN0LmhlaWdodCkgLyBlbGVtZW50Lm9mZnNldEhlaWdodCB8fCAxIDogMTtcbiAgfVxuXG4gIHZhciBfcmVmID0gaXNFbGVtZW50KGVsZW1lbnQpID8gZ2V0V2luZG93KGVsZW1lbnQpIDogd2luZG93LFxuICAgICAgdmlzdWFsVmlld3BvcnQgPSBfcmVmLnZpc3VhbFZpZXdwb3J0O1xuXG4gIHZhciBhZGRWaXN1YWxPZmZzZXRzID0gIWlzTGF5b3V0Vmlld3BvcnQoKSAmJiBpc0ZpeGVkU3RyYXRlZ3k7XG4gIHZhciB4ID0gKGNsaWVudFJlY3QubGVmdCArIChhZGRWaXN1YWxPZmZzZXRzICYmIHZpc3VhbFZpZXdwb3J0ID8gdmlzdWFsVmlld3BvcnQub2Zmc2V0TGVmdCA6IDApKSAvIHNjYWxlWDtcbiAgdmFyIHkgPSAoY2xpZW50UmVjdC50b3AgKyAoYWRkVmlzdWFsT2Zmc2V0cyAmJiB2aXN1YWxWaWV3cG9ydCA/IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcCA6IDApKSAvIHNjYWxlWTtcbiAgdmFyIHdpZHRoID0gY2xpZW50UmVjdC53aWR0aCAvIHNjYWxlWDtcbiAgdmFyIGhlaWdodCA9IGNsaWVudFJlY3QuaGVpZ2h0IC8gc2NhbGVZO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICB0b3A6IHksXG4gICAgcmlnaHQ6IHggKyB3aWR0aCxcbiAgICBib3R0b206IHkgKyBoZWlnaHQsXG4gICAgbGVmdDogeCxcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsKG5vZGUpIHtcbiAgdmFyIHdpbiA9IGdldFdpbmRvdyhub2RlKTtcbiAgdmFyIHNjcm9sbExlZnQgPSB3aW4ucGFnZVhPZmZzZXQ7XG4gIHZhciBzY3JvbGxUb3AgPSB3aW4ucGFnZVlPZmZzZXQ7XG4gIHJldHVybiB7XG4gICAgc2Nyb2xsTGVmdDogc2Nyb2xsTGVmdCxcbiAgICBzY3JvbGxUb3A6IHNjcm9sbFRvcFxuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE5vZGVOYW1lKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQgPyAoZWxlbWVudC5ub2RlTmFtZSB8fCAnJykudG9Mb3dlckNhc2UoKSA6IG51bGw7XG59IiwiaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpIHtcbiAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXTogYXNzdW1lIGJvZHkgaXMgYWx3YXlzIGF2YWlsYWJsZVxuICByZXR1cm4gKChpc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50Lm93bmVyRG9jdW1lbnQgOiAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgZWxlbWVudC5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KS5kb2N1bWVudEVsZW1lbnQ7XG59IiwiaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KSB7XG4gIC8vIElmIDxodG1sPiBoYXMgYSBDU1Mgd2lkdGggZ3JlYXRlciB0aGFuIHRoZSB2aWV3cG9ydCwgdGhlbiB0aGlzIHdpbGwgYmVcbiAgLy8gaW5jb3JyZWN0IGZvciBSVEwuXG4gIC8vIFBvcHBlciAxIGlzIGJyb2tlbiBpbiB0aGlzIGNhc2UgYW5kIG5ldmVyIGhhZCBhIGJ1ZyByZXBvcnQgc28gbGV0J3MgYXNzdW1lXG4gIC8vIGl0J3Mgbm90IGFuIGlzc3VlLiBJIGRvbid0IHRoaW5rIGFueW9uZSBldmVyIHNwZWNpZmllcyB3aWR0aCBvbiA8aHRtbD5cbiAgLy8gYW55d2F5LlxuICAvLyBCcm93c2VycyB3aGVyZSB0aGUgbGVmdCBzY3JvbGxiYXIgZG9lc24ndCBjYXVzZSBhbiBpc3N1ZSByZXBvcnQgYDBgIGZvclxuICAvLyB0aGlzIChlLmcuIEVkZ2UgMjAxOSwgSUUxMSwgU2FmYXJpKVxuICByZXR1cm4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkubGVmdCArIGdldFdpbmRvd1Njcm9sbChlbGVtZW50KS5zY3JvbGxMZWZ0O1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldFdpbmRvdyhlbGVtZW50KS5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xufSIsImltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzU2Nyb2xsUGFyZW50KGVsZW1lbnQpIHtcbiAgLy8gRmlyZWZveCB3YW50cyB1cyB0byBjaGVjayBgLXhgIGFuZCBgLXlgIHZhcmlhdGlvbnMgYXMgd2VsbFxuICB2YXIgX2dldENvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLFxuICAgICAgb3ZlcmZsb3cgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5vdmVyZmxvdyxcbiAgICAgIG92ZXJmbG93WCA9IF9nZXRDb21wdXRlZFN0eWxlLm92ZXJmbG93WCxcbiAgICAgIG92ZXJmbG93WSA9IF9nZXRDb21wdXRlZFN0eWxlLm92ZXJmbG93WTtcblxuICByZXR1cm4gL2F1dG98c2Nyb2xsfG92ZXJsYXl8aGlkZGVuLy50ZXN0KG92ZXJmbG93ICsgb3ZlcmZsb3dZICsgb3ZlcmZsb3dYKTtcbn0iLCJpbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldE5vZGVTY3JvbGwgZnJvbSBcIi4vZ2V0Tm9kZVNjcm9sbC5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbEJhclggZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBpc1Njcm9sbFBhcmVudCBmcm9tIFwiLi9pc1Njcm9sbFBhcmVudC5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBpc0VsZW1lbnRTY2FsZWQoZWxlbWVudCkge1xuICB2YXIgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBzY2FsZVggPSByb3VuZChyZWN0LndpZHRoKSAvIGVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMTtcbiAgdmFyIHNjYWxlWSA9IHJvdW5kKHJlY3QuaGVpZ2h0KSAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDE7XG4gIHJldHVybiBzY2FsZVggIT09IDEgfHwgc2NhbGVZICE9PSAxO1xufSAvLyBSZXR1cm5zIHRoZSBjb21wb3NpdGUgcmVjdCBvZiBhbiBlbGVtZW50IHJlbGF0aXZlIHRvIGl0cyBvZmZzZXRQYXJlbnQuXG4vLyBDb21wb3NpdGUgbWVhbnMgaXQgdGFrZXMgaW50byBhY2NvdW50IHRyYW5zZm9ybXMgYXMgd2VsbCBhcyBsYXlvdXQuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcG9zaXRlUmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50LCBpc0ZpeGVkKSB7XG4gIGlmIChpc0ZpeGVkID09PSB2b2lkIDApIHtcbiAgICBpc0ZpeGVkID0gZmFsc2U7XG4gIH1cblxuICB2YXIgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIHZhciBvZmZzZXRQYXJlbnRJc1NjYWxlZCA9IGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBpc0VsZW1lbnRTY2FsZWQob2Zmc2V0UGFyZW50KTtcbiAgdmFyIGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICB2YXIgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50SXNTY2FsZWQsIGlzRml4ZWQpO1xuICB2YXIgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIHZhciBvZmZzZXRzID0ge1xuICAgIHg6IDAsXG4gICAgeTogMFxuICB9O1xuXG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgIWlzRml4ZWQpIHtcbiAgICBpZiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSAhPT0gJ2JvZHknIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTA3OFxuICAgIGlzU2Nyb2xsUGFyZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG5cbiAgICBpZiAoaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICBvZmZzZXRzID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KG9mZnNldFBhcmVudCwgdHJ1ZSk7XG4gICAgICBvZmZzZXRzLnggKz0gb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgKz0gb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogcmVjdC5sZWZ0ICsgc2Nyb2xsLnNjcm9sbExlZnQgLSBvZmZzZXRzLngsXG4gICAgeTogcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55LFxuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0SFRNTEVsZW1lbnRTY3JvbGwgZnJvbSBcIi4vZ2V0SFRNTEVsZW1lbnRTY3JvbGwuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE5vZGVTY3JvbGwobm9kZSkge1xuICBpZiAobm9kZSA9PT0gZ2V0V2luZG93KG5vZGUpIHx8ICFpc0hUTUxFbGVtZW50KG5vZGUpKSB7XG4gICAgcmV0dXJuIGdldFdpbmRvd1Njcm9sbChub2RlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZ2V0SFRNTEVsZW1lbnRTY3JvbGwobm9kZSk7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRIVE1MRWxlbWVudFNjcm9sbChlbGVtZW50KSB7XG4gIHJldHVybiB7XG4gICAgc2Nyb2xsTGVmdDogZWxlbWVudC5zY3JvbGxMZWZ0LFxuICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxUb3BcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiOyAvLyBSZXR1cm5zIHRoZSBsYXlvdXQgcmVjdCBvZiBhbiBlbGVtZW50IHJlbGF0aXZlIHRvIGl0cyBvZmZzZXRQYXJlbnQuIExheW91dFxuLy8gbWVhbnMgaXQgZG9lc24ndCB0YWtlIGludG8gYWNjb3VudCB0cmFuc2Zvcm1zLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRMYXlvdXRSZWN0KGVsZW1lbnQpIHtcbiAgdmFyIGNsaWVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCk7IC8vIFVzZSB0aGUgY2xpZW50UmVjdCBzaXplcyBpZiBpdCdzIG5vdCBiZWVuIHRyYW5zZm9ybWVkLlxuICAvLyBGaXhlcyBodHRwczovL2dpdGh1Yi5jb20vcG9wcGVyanMvcG9wcGVyLWNvcmUvaXNzdWVzLzEyMjNcblxuICB2YXIgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoO1xuICB2YXIgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cbiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3Qud2lkdGggLSB3aWR0aCkgPD0gMSkge1xuICAgIHdpZHRoID0gY2xpZW50UmVjdC53aWR0aDtcbiAgfVxuXG4gIGlmIChNYXRoLmFicyhjbGllbnRSZWN0LmhlaWdodCAtIGhlaWdodCkgPD0gMSkge1xuICAgIGhlaWdodCA9IGNsaWVudFJlY3QuaGVpZ2h0O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB4OiBlbGVtZW50Lm9mZnNldExlZnQsXG4gICAgeTogZWxlbWVudC5vZmZzZXRUb3AsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0XG4gIH07XG59IiwiaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IHsgaXNTaGFkb3dSb290IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSB7XG4gIGlmIChnZXROb2RlTmFtZShlbGVtZW50KSA9PT0gJ2h0bWwnKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm4gKC8vIHRoaXMgaXMgYSBxdWlja2VyIChidXQgbGVzcyB0eXBlIHNhZmUpIHdheSB0byBzYXZlIHF1aXRlIHNvbWUgYnl0ZXMgZnJvbSB0aGUgYnVuZGxlXG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXVxuICAgIC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICAgIGVsZW1lbnQuYXNzaWduZWRTbG90IHx8IC8vIHN0ZXAgaW50byB0aGUgc2hhZG93IERPTSBvZiB0aGUgcGFyZW50IG9mIGEgc2xvdHRlZCBub2RlXG4gICAgZWxlbWVudC5wYXJlbnROb2RlIHx8ICggLy8gRE9NIEVsZW1lbnQgZGV0ZWN0ZWRcbiAgICBpc1NoYWRvd1Jvb3QoZWxlbWVudCkgPyBlbGVtZW50Lmhvc3QgOiBudWxsKSB8fCAvLyBTaGFkb3dSb290IGRldGVjdGVkXG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FsbF06IEhUTUxFbGVtZW50IGlzIGEgTm9kZVxuICAgIGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSAvLyBmYWxsYmFja1xuXG4gICk7XG59IiwiaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGlzU2Nyb2xsUGFyZW50IGZyb20gXCIuL2lzU2Nyb2xsUGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTY3JvbGxQYXJlbnQobm9kZSkge1xuICBpZiAoWydodG1sJywgJ2JvZHknLCAnI2RvY3VtZW50J10uaW5kZXhPZihnZXROb2RlTmFtZShub2RlKSkgPj0gMCkge1xuICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl06IGFzc3VtZSBib2R5IGlzIGFsd2F5cyBhdmFpbGFibGVcbiAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50LmJvZHk7XG4gIH1cblxuICBpZiAoaXNIVE1MRWxlbWVudChub2RlKSAmJiBpc1Njcm9sbFBhcmVudChub2RlKSkge1xuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgcmV0dXJuIGdldFNjcm9sbFBhcmVudChnZXRQYXJlbnROb2RlKG5vZGUpKTtcbn0iLCJpbXBvcnQgZ2V0U2Nyb2xsUGFyZW50IGZyb20gXCIuL2dldFNjcm9sbFBhcmVudC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGdldFdpbmRvdyBmcm9tIFwiLi9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBpc1Njcm9sbFBhcmVudCBmcm9tIFwiLi9pc1Njcm9sbFBhcmVudC5qc1wiO1xuLypcbmdpdmVuIGEgRE9NIGVsZW1lbnQsIHJldHVybiB0aGUgbGlzdCBvZiBhbGwgc2Nyb2xsIHBhcmVudHMsIHVwIHRoZSBsaXN0IG9mIGFuY2Vzb3JzXG51bnRpbCB3ZSBnZXQgdG8gdGhlIHRvcCB3aW5kb3cgb2JqZWN0LiBUaGlzIGxpc3QgaXMgd2hhdCB3ZSBhdHRhY2ggc2Nyb2xsIGxpc3RlbmVyc1xudG8sIGJlY2F1c2UgaWYgYW55IG9mIHRoZXNlIHBhcmVudCBlbGVtZW50cyBzY3JvbGwsIHdlJ2xsIG5lZWQgdG8gcmUtY2FsY3VsYXRlIHRoZVxucmVmZXJlbmNlIGVsZW1lbnQncyBwb3NpdGlvbi5cbiovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpc3RTY3JvbGxQYXJlbnRzKGVsZW1lbnQsIGxpc3QpIHtcbiAgdmFyIF9lbGVtZW50JG93bmVyRG9jdW1lbjtcblxuICBpZiAobGlzdCA9PT0gdm9pZCAwKSB7XG4gICAgbGlzdCA9IFtdO1xuICB9XG5cbiAgdmFyIHNjcm9sbFBhcmVudCA9IGdldFNjcm9sbFBhcmVudChlbGVtZW50KTtcbiAgdmFyIGlzQm9keSA9IHNjcm9sbFBhcmVudCA9PT0gKChfZWxlbWVudCRvd25lckRvY3VtZW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4uYm9keSk7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3coc2Nyb2xsUGFyZW50KTtcbiAgdmFyIHRhcmdldCA9IGlzQm9keSA/IFt3aW5dLmNvbmNhdCh3aW4udmlzdWFsVmlld3BvcnQgfHwgW10sIGlzU2Nyb2xsUGFyZW50KHNjcm9sbFBhcmVudCkgPyBzY3JvbGxQYXJlbnQgOiBbXSkgOiBzY3JvbGxQYXJlbnQ7XG4gIHZhciB1cGRhdGVkTGlzdCA9IGxpc3QuY29uY2F0KHRhcmdldCk7XG4gIHJldHVybiBpc0JvZHkgPyB1cGRhdGVkTGlzdCA6IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhbGxdOiBpc0JvZHkgdGVsbHMgdXMgdGFyZ2V0IHdpbGwgYmUgYW4gSFRNTEVsZW1lbnQgaGVyZVxuICB1cGRhdGVkTGlzdC5jb25jYXQobGlzdFNjcm9sbFBhcmVudHMoZ2V0UGFyZW50Tm9kZSh0YXJnZXQpKSk7XG59IiwiaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1RhYmxlRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiBbJ3RhYmxlJywgJ3RkJywgJ3RoJ10uaW5kZXhPZihnZXROb2RlTmFtZShlbGVtZW50KSkgPj0gMDtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50LCBpc1NoYWRvd1Jvb3QgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgaXNUYWJsZUVsZW1lbnQgZnJvbSBcIi4vaXNUYWJsZUVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBnZXRVQVN0cmluZyBmcm9tIFwiLi4vdXRpbHMvdXNlckFnZW50LmpzXCI7XG5cbmZ1bmN0aW9uIGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgLy8gaHR0cHM6Ly9naXRodWIuY29tL3BvcHBlcmpzL3BvcHBlci1jb3JlL2lzc3Vlcy84MzdcbiAgZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnQub2Zmc2V0UGFyZW50O1xufSAvLyBgLm9mZnNldFBhcmVudGAgcmVwb3J0cyBgbnVsbGAgZm9yIGZpeGVkIGVsZW1lbnRzLCB3aGlsZSBhYnNvbHV0ZSBlbGVtZW50c1xuLy8gcmV0dXJuIHRoZSBjb250YWluaW5nIGJsb2NrXG5cblxuZnVuY3Rpb24gZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHtcbiAgdmFyIGlzRmlyZWZveCA9IC9maXJlZm94L2kudGVzdChnZXRVQVN0cmluZygpKTtcbiAgdmFyIGlzSUUgPSAvVHJpZGVudC9pLnRlc3QoZ2V0VUFTdHJpbmcoKSk7XG5cbiAgaWYgKGlzSUUgJiYgaXNIVE1MRWxlbWVudChlbGVtZW50KSkge1xuICAgIC8vIEluIElFIDksIDEwIGFuZCAxMSBmaXhlZCBlbGVtZW50cyBjb250YWluaW5nIGJsb2NrIGlzIGFsd2F5cyBlc3RhYmxpc2hlZCBieSB0aGUgdmlld3BvcnRcbiAgICB2YXIgZWxlbWVudENzcyA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG5cbiAgICBpZiAoZWxlbWVudENzcy5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgdmFyIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShlbGVtZW50KTtcblxuICBpZiAoaXNTaGFkb3dSb290KGN1cnJlbnROb2RlKSkge1xuICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUuaG9zdDtcbiAgfVxuXG4gIHdoaWxlIChpc0hUTUxFbGVtZW50KGN1cnJlbnROb2RlKSAmJiBbJ2h0bWwnLCAnYm9keSddLmluZGV4T2YoZ2V0Tm9kZU5hbWUoY3VycmVudE5vZGUpKSA8IDApIHtcbiAgICB2YXIgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZShjdXJyZW50Tm9kZSk7IC8vIFRoaXMgaXMgbm9uLWV4aGF1c3RpdmUgYnV0IGNvdmVycyB0aGUgbW9zdCBjb21tb24gQ1NTIHByb3BlcnRpZXMgdGhhdFxuICAgIC8vIGNyZWF0ZSBhIGNvbnRhaW5pbmcgYmxvY2suXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NvbnRhaW5pbmdfYmxvY2sjaWRlbnRpZnlpbmdfdGhlX2NvbnRhaW5pbmdfYmxvY2tcblxuICAgIGlmIChjc3MudHJhbnNmb3JtICE9PSAnbm9uZScgfHwgY3NzLnBlcnNwZWN0aXZlICE9PSAnbm9uZScgfHwgY3NzLmNvbnRhaW4gPT09ICdwYWludCcgfHwgWyd0cmFuc2Zvcm0nLCAncGVyc3BlY3RpdmUnXS5pbmRleE9mKGNzcy53aWxsQ2hhbmdlKSAhPT0gLTEgfHwgaXNGaXJlZm94ICYmIGNzcy53aWxsQ2hhbmdlID09PSAnZmlsdGVyJyB8fCBpc0ZpcmVmb3ggJiYgY3NzLmZpbHRlciAmJiBjc3MuZmlsdGVyICE9PSAnbm9uZScpIHtcbiAgICAgIHJldHVybiBjdXJyZW50Tm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufSAvLyBHZXRzIHRoZSBjbG9zZXN0IGFuY2VzdG9yIHBvc2l0aW9uZWQgZWxlbWVudC4gSGFuZGxlcyBzb21lIGVkZ2UgY2FzZXMsXG4vLyBzdWNoIGFzIHRhYmxlIGFuY2VzdG9ycyBhbmQgY3Jvc3MgYnJvd3NlciBidWdzLlxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIHZhciBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQpO1xuXG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBnZXRDb21wdXRlZFN0eWxlKG9mZnNldFBhcmVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnKSB7XG4gICAgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQpO1xuICB9XG5cbiAgaWYgKG9mZnNldFBhcmVudCAmJiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSA9PT0gJ2h0bWwnIHx8IGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgPT09ICdib2R5JyAmJiBnZXRDb21wdXRlZFN0eWxlKG9mZnNldFBhcmVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnKSkge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH1cblxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW5kb3c7XG59IiwiZXhwb3J0IHZhciB0b3AgPSAndG9wJztcbmV4cG9ydCB2YXIgYm90dG9tID0gJ2JvdHRvbSc7XG5leHBvcnQgdmFyIHJpZ2h0ID0gJ3JpZ2h0JztcbmV4cG9ydCB2YXIgbGVmdCA9ICdsZWZ0JztcbmV4cG9ydCB2YXIgYXV0byA9ICdhdXRvJztcbmV4cG9ydCB2YXIgYmFzZVBsYWNlbWVudHMgPSBbdG9wLCBib3R0b20sIHJpZ2h0LCBsZWZ0XTtcbmV4cG9ydCB2YXIgc3RhcnQgPSAnc3RhcnQnO1xuZXhwb3J0IHZhciBlbmQgPSAnZW5kJztcbmV4cG9ydCB2YXIgY2xpcHBpbmdQYXJlbnRzID0gJ2NsaXBwaW5nUGFyZW50cyc7XG5leHBvcnQgdmFyIHZpZXdwb3J0ID0gJ3ZpZXdwb3J0JztcbmV4cG9ydCB2YXIgcG9wcGVyID0gJ3BvcHBlcic7XG5leHBvcnQgdmFyIHJlZmVyZW5jZSA9ICdyZWZlcmVuY2UnO1xuZXhwb3J0IHZhciB2YXJpYXRpb25QbGFjZW1lbnRzID0gLyojX19QVVJFX18qL2Jhc2VQbGFjZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIGFjYy5jb25jYXQoW3BsYWNlbWVudCArIFwiLVwiICsgc3RhcnQsIHBsYWNlbWVudCArIFwiLVwiICsgZW5kXSk7XG59LCBbXSk7XG5leHBvcnQgdmFyIHBsYWNlbWVudHMgPSAvKiNfX1BVUkVfXyovW10uY29uY2F0KGJhc2VQbGFjZW1lbnRzLCBbYXV0b10pLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIGFjYy5jb25jYXQoW3BsYWNlbWVudCwgcGxhY2VtZW50ICsgXCItXCIgKyBzdGFydCwgcGxhY2VtZW50ICsgXCItXCIgKyBlbmRdKTtcbn0sIFtdKTsgLy8gbW9kaWZpZXJzIHRoYXQgbmVlZCB0byByZWFkIHRoZSBET01cblxuZXhwb3J0IHZhciBiZWZvcmVSZWFkID0gJ2JlZm9yZVJlYWQnO1xuZXhwb3J0IHZhciByZWFkID0gJ3JlYWQnO1xuZXhwb3J0IHZhciBhZnRlclJlYWQgPSAnYWZ0ZXJSZWFkJzsgLy8gcHVyZS1sb2dpYyBtb2RpZmllcnNcblxuZXhwb3J0IHZhciBiZWZvcmVNYWluID0gJ2JlZm9yZU1haW4nO1xuZXhwb3J0IHZhciBtYWluID0gJ21haW4nO1xuZXhwb3J0IHZhciBhZnRlck1haW4gPSAnYWZ0ZXJNYWluJzsgLy8gbW9kaWZpZXIgd2l0aCB0aGUgcHVycG9zZSB0byB3cml0ZSB0byB0aGUgRE9NIChvciB3cml0ZSBpbnRvIGEgZnJhbWV3b3JrIHN0YXRlKVxuXG5leHBvcnQgdmFyIGJlZm9yZVdyaXRlID0gJ2JlZm9yZVdyaXRlJztcbmV4cG9ydCB2YXIgd3JpdGUgPSAnd3JpdGUnO1xuZXhwb3J0IHZhciBhZnRlcldyaXRlID0gJ2FmdGVyV3JpdGUnO1xuZXhwb3J0IHZhciBtb2RpZmllclBoYXNlcyA9IFtiZWZvcmVSZWFkLCByZWFkLCBhZnRlclJlYWQsIGJlZm9yZU1haW4sIG1haW4sIGFmdGVyTWFpbiwgYmVmb3JlV3JpdGUsIHdyaXRlLCBhZnRlcldyaXRlXTsiLCJpbXBvcnQgeyBtb2RpZmllclBoYXNlcyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiOyAvLyBzb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ5ODc1MjU1XG5cbmZ1bmN0aW9uIG9yZGVyKG1vZGlmaWVycykge1xuICB2YXIgbWFwID0gbmV3IE1hcCgpO1xuICB2YXIgdmlzaXRlZCA9IG5ldyBTZXQoKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBtYXAuc2V0KG1vZGlmaWVyLm5hbWUsIG1vZGlmaWVyKTtcbiAgfSk7IC8vIE9uIHZpc2l0aW5nIG9iamVjdCwgY2hlY2sgZm9yIGl0cyBkZXBlbmRlbmNpZXMgYW5kIHZpc2l0IHRoZW0gcmVjdXJzaXZlbHlcblxuICBmdW5jdGlvbiBzb3J0KG1vZGlmaWVyKSB7XG4gICAgdmlzaXRlZC5hZGQobW9kaWZpZXIubmFtZSk7XG4gICAgdmFyIHJlcXVpcmVzID0gW10uY29uY2F0KG1vZGlmaWVyLnJlcXVpcmVzIHx8IFtdLCBtb2RpZmllci5yZXF1aXJlc0lmRXhpc3RzIHx8IFtdKTtcbiAgICByZXF1aXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChkZXApIHtcbiAgICAgIGlmICghdmlzaXRlZC5oYXMoZGVwKSkge1xuICAgICAgICB2YXIgZGVwTW9kaWZpZXIgPSBtYXAuZ2V0KGRlcCk7XG5cbiAgICAgICAgaWYgKGRlcE1vZGlmaWVyKSB7XG4gICAgICAgICAgc29ydChkZXBNb2RpZmllcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXN1bHQucHVzaChtb2RpZmllcik7XG4gIH1cblxuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBpZiAoIXZpc2l0ZWQuaGFzKG1vZGlmaWVyLm5hbWUpKSB7XG4gICAgICAvLyBjaGVjayBmb3IgdmlzaXRlZCBvYmplY3RcbiAgICAgIHNvcnQobW9kaWZpZXIpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9yZGVyTW9kaWZpZXJzKG1vZGlmaWVycykge1xuICAvLyBvcmRlciBiYXNlZCBvbiBkZXBlbmRlbmNpZXNcbiAgdmFyIG9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcihtb2RpZmllcnMpOyAvLyBvcmRlciBiYXNlZCBvbiBwaGFzZVxuXG4gIHJldHVybiBtb2RpZmllclBoYXNlcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGhhc2UpIHtcbiAgICByZXR1cm4gYWNjLmNvbmNhdChvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgIHJldHVybiBtb2RpZmllci5waGFzZSA9PT0gcGhhc2U7XG4gICAgfSkpO1xuICB9LCBbXSk7XG59IiwiaW1wb3J0IGdldENvbXBvc2l0ZVJlY3QgZnJvbSBcIi4vZG9tLXV0aWxzL2dldENvbXBvc2l0ZVJlY3QuanNcIjtcbmltcG9ydCBnZXRMYXlvdXRSZWN0IGZyb20gXCIuL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzXCI7XG5pbXBvcnQgbGlzdFNjcm9sbFBhcmVudHMgZnJvbSBcIi4vZG9tLXV0aWxzL2xpc3RTY3JvbGxQYXJlbnRzLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2RvbS11dGlscy9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgb3JkZXJNb2RpZmllcnMgZnJvbSBcIi4vdXRpbHMvb3JkZXJNb2RpZmllcnMuanNcIjtcbmltcG9ydCBkZWJvdW5jZSBmcm9tIFwiLi91dGlscy9kZWJvdW5jZS5qc1wiO1xuaW1wb3J0IHZhbGlkYXRlTW9kaWZpZXJzIGZyb20gXCIuL3V0aWxzL3ZhbGlkYXRlTW9kaWZpZXJzLmpzXCI7XG5pbXBvcnQgdW5pcXVlQnkgZnJvbSBcIi4vdXRpbHMvdW5pcXVlQnkuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBtZXJnZUJ5TmFtZSBmcm9tIFwiLi91dGlscy9tZXJnZUJ5TmFtZS5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IHsgYXV0byB9IGZyb20gXCIuL2VudW1zLmpzXCI7XG52YXIgSU5WQUxJRF9FTEVNRU5UX0VSUk9SID0gJ1BvcHBlcjogSW52YWxpZCByZWZlcmVuY2Ugb3IgcG9wcGVyIGFyZ3VtZW50IHByb3ZpZGVkLiBUaGV5IG11c3QgYmUgZWl0aGVyIGEgRE9NIGVsZW1lbnQgb3IgdmlydHVhbCBlbGVtZW50Lic7XG52YXIgSU5GSU5JVEVfTE9PUF9FUlJPUiA9ICdQb3BwZXI6IEFuIGluZmluaXRlIGxvb3AgaW4gdGhlIG1vZGlmaWVycyBjeWNsZSBoYXMgYmVlbiBkZXRlY3RlZCEgVGhlIGN5Y2xlIGhhcyBiZWVuIGludGVycnVwdGVkIHRvIHByZXZlbnQgYSBicm93c2VyIGNyYXNoLic7XG52YXIgREVGQVVMVF9PUFRJT05TID0ge1xuICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICBtb2RpZmllcnM6IFtdLFxuICBzdHJhdGVneTogJ2Fic29sdXRlJ1xufTtcblxuZnVuY3Rpb24gYXJlVmFsaWRFbGVtZW50cygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiAhYXJncy5zb21lKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgcmV0dXJuICEoZWxlbWVudCAmJiB0eXBlb2YgZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QgPT09ICdmdW5jdGlvbicpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvcHBlckdlbmVyYXRvcihnZW5lcmF0b3JPcHRpb25zKSB7XG4gIGlmIChnZW5lcmF0b3JPcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBnZW5lcmF0b3JPcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX2dlbmVyYXRvck9wdGlvbnMgPSBnZW5lcmF0b3JPcHRpb25zLFxuICAgICAgX2dlbmVyYXRvck9wdGlvbnMkZGVmID0gX2dlbmVyYXRvck9wdGlvbnMuZGVmYXVsdE1vZGlmaWVycyxcbiAgICAgIGRlZmF1bHRNb2RpZmllcnMgPSBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYgPT09IHZvaWQgMCA/IFtdIDogX2dlbmVyYXRvck9wdGlvbnMkZGVmLFxuICAgICAgX2dlbmVyYXRvck9wdGlvbnMkZGVmMiA9IF9nZW5lcmF0b3JPcHRpb25zLmRlZmF1bHRPcHRpb25zLFxuICAgICAgZGVmYXVsdE9wdGlvbnMgPSBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyID09PSB2b2lkIDAgPyBERUZBVUxUX09QVElPTlMgOiBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyO1xuICByZXR1cm4gZnVuY3Rpb24gY3JlYXRlUG9wcGVyKHJlZmVyZW5jZSwgcG9wcGVyLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IGRlZmF1bHRPcHRpb25zO1xuICAgIH1cblxuICAgIHZhciBzdGF0ZSA9IHtcbiAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICBvcmRlcmVkTW9kaWZpZXJzOiBbXSxcbiAgICAgIG9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfT1BUSU9OUywgZGVmYXVsdE9wdGlvbnMpLFxuICAgICAgbW9kaWZpZXJzRGF0YToge30sXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICByZWZlcmVuY2U6IHJlZmVyZW5jZSxcbiAgICAgICAgcG9wcGVyOiBwb3BwZXJcbiAgICAgIH0sXG4gICAgICBhdHRyaWJ1dGVzOiB7fSxcbiAgICAgIHN0eWxlczoge31cbiAgICB9O1xuICAgIHZhciBlZmZlY3RDbGVhbnVwRm5zID0gW107XG4gICAgdmFyIGlzRGVzdHJveWVkID0gZmFsc2U7XG4gICAgdmFyIGluc3RhbmNlID0ge1xuICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAgc2V0T3B0aW9uczogZnVuY3Rpb24gc2V0T3B0aW9ucyhzZXRPcHRpb25zQWN0aW9uKSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIHNldE9wdGlvbnNBY3Rpb24gPT09ICdmdW5jdGlvbicgPyBzZXRPcHRpb25zQWN0aW9uKHN0YXRlLm9wdGlvbnMpIDogc2V0T3B0aW9uc0FjdGlvbjtcbiAgICAgICAgY2xlYW51cE1vZGlmaWVyRWZmZWN0cygpO1xuICAgICAgICBzdGF0ZS5vcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdE9wdGlvbnMsIHN0YXRlLm9wdGlvbnMsIG9wdGlvbnMpO1xuICAgICAgICBzdGF0ZS5zY3JvbGxQYXJlbnRzID0ge1xuICAgICAgICAgIHJlZmVyZW5jZTogaXNFbGVtZW50KHJlZmVyZW5jZSkgPyBsaXN0U2Nyb2xsUGFyZW50cyhyZWZlcmVuY2UpIDogcmVmZXJlbmNlLmNvbnRleHRFbGVtZW50ID8gbGlzdFNjcm9sbFBhcmVudHMocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KSA6IFtdLFxuICAgICAgICAgIHBvcHBlcjogbGlzdFNjcm9sbFBhcmVudHMocG9wcGVyKVxuICAgICAgICB9OyAvLyBPcmRlcnMgdGhlIG1vZGlmaWVycyBiYXNlZCBvbiB0aGVpciBkZXBlbmRlbmNpZXMgYW5kIGBwaGFzZWBcbiAgICAgICAgLy8gcHJvcGVydGllc1xuXG4gICAgICAgIHZhciBvcmRlcmVkTW9kaWZpZXJzID0gb3JkZXJNb2RpZmllcnMobWVyZ2VCeU5hbWUoW10uY29uY2F0KGRlZmF1bHRNb2RpZmllcnMsIHN0YXRlLm9wdGlvbnMubW9kaWZpZXJzKSkpOyAvLyBTdHJpcCBvdXQgZGlzYWJsZWQgbW9kaWZpZXJzXG5cbiAgICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycyA9IG9yZGVyZWRNb2RpZmllcnMuZmlsdGVyKGZ1bmN0aW9uIChtKSB7XG4gICAgICAgICAgcmV0dXJuIG0uZW5hYmxlZDtcbiAgICAgICAgfSk7IC8vIFZhbGlkYXRlIHRoZSBwcm92aWRlZCBtb2RpZmllcnMgc28gdGhhdCB0aGUgY29uc3VtZXIgd2lsbCBnZXQgd2FybmVkXG4gICAgICAgIC8vIGlmIG9uZSBvZiB0aGUgbW9kaWZpZXJzIGlzIGludmFsaWQgZm9yIGFueSByZWFzb25cblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgdmFyIG1vZGlmaWVycyA9IHVuaXF1ZUJ5KFtdLmNvbmNhdChvcmRlcmVkTW9kaWZpZXJzLCBzdGF0ZS5vcHRpb25zLm1vZGlmaWVycyksIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZTtcbiAgICAgICAgICAgIHJldHVybiBuYW1lO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhbGlkYXRlTW9kaWZpZXJzKG1vZGlmaWVycyk7XG5cbiAgICAgICAgICBpZiAoZ2V0QmFzZVBsYWNlbWVudChzdGF0ZS5vcHRpb25zLnBsYWNlbWVudCkgPT09IGF1dG8pIHtcbiAgICAgICAgICAgIHZhciBmbGlwTW9kaWZpZXIgPSBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzLmZpbmQoZnVuY3Rpb24gKF9yZWYyKSB7XG4gICAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZjIubmFtZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5hbWUgPT09ICdmbGlwJztcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIWZsaXBNb2RpZmllcikge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBcImF1dG9cIiBwbGFjZW1lbnRzIHJlcXVpcmUgdGhlIFwiZmxpcFwiIG1vZGlmaWVyIGJlJywgJ3ByZXNlbnQgYW5kIGVuYWJsZWQgdG8gd29yay4nXS5qb2luKCcgJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBfZ2V0Q29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUocG9wcGVyKSxcbiAgICAgICAgICAgICAgbWFyZ2luVG9wID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luVG9wLFxuICAgICAgICAgICAgICBtYXJnaW5SaWdodCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpblJpZ2h0LFxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b20gPSBfZ2V0Q29tcHV0ZWRTdHlsZS5tYXJnaW5Cb3R0b20sXG4gICAgICAgICAgICAgIG1hcmdpbkxlZnQgPSBfZ2V0Q29tcHV0ZWRTdHlsZS5tYXJnaW5MZWZ0OyAvLyBXZSBubyBsb25nZXIgdGFrZSBpbnRvIGFjY291bnQgYG1hcmdpbnNgIG9uIHRoZSBwb3BwZXIsIGFuZCBpdCBjYW5cbiAgICAgICAgICAvLyBjYXVzZSBidWdzIHdpdGggcG9zaXRpb25pbmcsIHNvIHdlJ2xsIHdhcm4gdGhlIGNvbnN1bWVyXG5cblxuICAgICAgICAgIGlmIChbbWFyZ2luVG9wLCBtYXJnaW5SaWdodCwgbWFyZ2luQm90dG9tLCBtYXJnaW5MZWZ0XS5zb21lKGZ1bmN0aW9uIChtYXJnaW4pIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KG1hcmdpbik7XG4gICAgICAgICAgfSkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihbJ1BvcHBlcjogQ1NTIFwibWFyZ2luXCIgc3R5bGVzIGNhbm5vdCBiZSB1c2VkIHRvIGFwcGx5IHBhZGRpbmcnLCAnYmV0d2VlbiB0aGUgcG9wcGVyIGFuZCBpdHMgcmVmZXJlbmNlIGVsZW1lbnQgb3IgYm91bmRhcnkuJywgJ1RvIHJlcGxpY2F0ZSBtYXJnaW4sIHVzZSB0aGUgYG9mZnNldGAgbW9kaWZpZXIsIGFzIHdlbGwgYXMnLCAndGhlIGBwYWRkaW5nYCBvcHRpb24gaW4gdGhlIGBwcmV2ZW50T3ZlcmZsb3dgIGFuZCBgZmxpcGAnLCAnbW9kaWZpZXJzLiddLmpvaW4oJyAnKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcnVuTW9kaWZpZXJFZmZlY3RzKCk7XG4gICAgICAgIHJldHVybiBpbnN0YW5jZS51cGRhdGUoKTtcbiAgICAgIH0sXG4gICAgICAvLyBTeW5jIHVwZGF0ZSDigJMgaXQgd2lsbCBhbHdheXMgYmUgZXhlY3V0ZWQsIGV2ZW4gaWYgbm90IG5lY2Vzc2FyeS4gVGhpc1xuICAgICAgLy8gaXMgdXNlZnVsIGZvciBsb3cgZnJlcXVlbmN5IHVwZGF0ZXMgd2hlcmUgc3luYyBiZWhhdmlvciBzaW1wbGlmaWVzIHRoZVxuICAgICAgLy8gbG9naWMuXG4gICAgICAvLyBGb3IgaGlnaCBmcmVxdWVuY3kgdXBkYXRlcyAoZS5nLiBgcmVzaXplYCBhbmQgYHNjcm9sbGAgZXZlbnRzKSwgYWx3YXlzXG4gICAgICAvLyBwcmVmZXIgdGhlIGFzeW5jIFBvcHBlciN1cGRhdGUgbWV0aG9kXG4gICAgICBmb3JjZVVwZGF0ZTogZnVuY3Rpb24gZm9yY2VVcGRhdGUoKSB7XG4gICAgICAgIGlmIChpc0Rlc3Ryb3llZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBfc3RhdGUkZWxlbWVudHMgPSBzdGF0ZS5lbGVtZW50cyxcbiAgICAgICAgICAgIHJlZmVyZW5jZSA9IF9zdGF0ZSRlbGVtZW50cy5yZWZlcmVuY2UsXG4gICAgICAgICAgICBwb3BwZXIgPSBfc3RhdGUkZWxlbWVudHMucG9wcGVyOyAvLyBEb24ndCBwcm9jZWVkIGlmIGByZWZlcmVuY2VgIG9yIGBwb3BwZXJgIGFyZSBub3QgdmFsaWQgZWxlbWVudHNcbiAgICAgICAgLy8gYW55bW9yZVxuXG4gICAgICAgIGlmICghYXJlVmFsaWRFbGVtZW50cyhyZWZlcmVuY2UsIHBvcHBlcikpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKElOVkFMSURfRUxFTUVOVF9FUlJPUik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IC8vIFN0b3JlIHRoZSByZWZlcmVuY2UgYW5kIHBvcHBlciByZWN0cyB0byBiZSByZWFkIGJ5IG1vZGlmaWVyc1xuXG5cbiAgICAgICAgc3RhdGUucmVjdHMgPSB7XG4gICAgICAgICAgcmVmZXJlbmNlOiBnZXRDb21wb3NpdGVSZWN0KHJlZmVyZW5jZSwgZ2V0T2Zmc2V0UGFyZW50KHBvcHBlciksIHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3kgPT09ICdmaXhlZCcpLFxuICAgICAgICAgIHBvcHBlcjogZ2V0TGF5b3V0UmVjdChwb3BwZXIpXG4gICAgICAgIH07IC8vIE1vZGlmaWVycyBoYXZlIHRoZSBhYmlsaXR5IHRvIHJlc2V0IHRoZSBjdXJyZW50IHVwZGF0ZSBjeWNsZS4gVGhlXG4gICAgICAgIC8vIG1vc3QgY29tbW9uIHVzZSBjYXNlIGZvciB0aGlzIGlzIHRoZSBgZmxpcGAgbW9kaWZpZXIgY2hhbmdpbmcgdGhlXG4gICAgICAgIC8vIHBsYWNlbWVudCwgd2hpY2ggdGhlbiBuZWVkcyB0byByZS1ydW4gYWxsIHRoZSBtb2RpZmllcnMsIGJlY2F1c2UgdGhlXG4gICAgICAgIC8vIGxvZ2ljIHdhcyBwcmV2aW91c2x5IHJhbiBmb3IgdGhlIHByZXZpb3VzIHBsYWNlbWVudCBhbmQgaXMgdGhlcmVmb3JlXG4gICAgICAgIC8vIHN0YWxlL2luY29ycmVjdFxuXG4gICAgICAgIHN0YXRlLnJlc2V0ID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLnBsYWNlbWVudCA9IHN0YXRlLm9wdGlvbnMucGxhY2VtZW50OyAvLyBPbiBlYWNoIHVwZGF0ZSBjeWNsZSwgdGhlIGBtb2RpZmllcnNEYXRhYCBwcm9wZXJ0eSBmb3IgZWFjaCBtb2RpZmllclxuICAgICAgICAvLyBpcyBmaWxsZWQgd2l0aCB0aGUgaW5pdGlhbCBkYXRhIHNwZWNpZmllZCBieSB0aGUgbW9kaWZpZXIuIFRoaXMgbWVhbnNcbiAgICAgICAgLy8gaXQgZG9lc24ndCBwZXJzaXN0IGFuZCBpcyBmcmVzaCBvbiBlYWNoIHVwZGF0ZS5cbiAgICAgICAgLy8gVG8gZW5zdXJlIHBlcnNpc3RlbnQgZGF0YSwgdXNlIGAke25hbWV9I3BlcnNpc3RlbnRgXG5cbiAgICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RpZmllcikge1xuICAgICAgICAgIHJldHVybiBzdGF0ZS5tb2RpZmllcnNEYXRhW21vZGlmaWVyLm5hbWVdID0gT2JqZWN0LmFzc2lnbih7fSwgbW9kaWZpZXIuZGF0YSk7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgX19kZWJ1Z19sb29wc19fID0gMDtcblxuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICBfX2RlYnVnX2xvb3BzX18gKz0gMTtcblxuICAgICAgICAgICAgaWYgKF9fZGVidWdfbG9vcHNfXyA+IDEwMCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKElORklOSVRFX0xPT1BfRVJST1IpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc3RhdGUucmVzZXQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHN0YXRlLnJlc2V0ID0gZmFsc2U7XG4gICAgICAgICAgICBpbmRleCA9IC0xO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIF9zdGF0ZSRvcmRlcmVkTW9kaWZpZSA9IHN0YXRlLm9yZGVyZWRNb2RpZmllcnNbaW5kZXhdLFxuICAgICAgICAgICAgICBmbiA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5mbixcbiAgICAgICAgICAgICAgX3N0YXRlJG9yZGVyZWRNb2RpZmllMiA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5vcHRpb25zLFxuICAgICAgICAgICAgICBfb3B0aW9ucyA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIgPT09IHZvaWQgMCA/IHt9IDogX3N0YXRlJG9yZGVyZWRNb2RpZmllMixcbiAgICAgICAgICAgICAgbmFtZSA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5uYW1lO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgc3RhdGUgPSBmbih7XG4gICAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgICAgb3B0aW9uczogX29wdGlvbnMsXG4gICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgIGluc3RhbmNlOiBpbnN0YW5jZVxuICAgICAgICAgICAgfSkgfHwgc3RhdGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gQXN5bmMgYW5kIG9wdGltaXN0aWNhbGx5IG9wdGltaXplZCB1cGRhdGUg4oCTIGl0IHdpbGwgbm90IGJlIGV4ZWN1dGVkIGlmXG4gICAgICAvLyBub3QgbmVjZXNzYXJ5IChkZWJvdW5jZWQgdG8gcnVuIGF0IG1vc3Qgb25jZS1wZXItdGljaylcbiAgICAgIHVwZGF0ZTogZGVib3VuY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICBpbnN0YW5jZS5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgIHJlc29sdmUoc3RhdGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pLFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgY2xlYW51cE1vZGlmaWVyRWZmZWN0cygpO1xuICAgICAgICBpc0Rlc3Ryb3llZCA9IHRydWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmICghYXJlVmFsaWRFbGVtZW50cyhyZWZlcmVuY2UsIHBvcHBlcikpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihJTlZBTElEX0VMRU1FTlRfRVJST1IpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgaW5zdGFuY2Uuc2V0T3B0aW9ucyhvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgaWYgKCFpc0Rlc3Ryb3llZCAmJiBvcHRpb25zLm9uRmlyc3RVcGRhdGUpIHtcbiAgICAgICAgb3B0aW9ucy5vbkZpcnN0VXBkYXRlKHN0YXRlKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gTW9kaWZpZXJzIGhhdmUgdGhlIGFiaWxpdHkgdG8gZXhlY3V0ZSBhcmJpdHJhcnkgY29kZSBiZWZvcmUgdGhlIGZpcnN0XG4gICAgLy8gdXBkYXRlIGN5Y2xlIHJ1bnMuIFRoZXkgd2lsbCBiZSBleGVjdXRlZCBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGUgdXBkYXRlXG4gICAgLy8gY3ljbGUuIFRoaXMgaXMgdXNlZnVsIHdoZW4gYSBtb2RpZmllciBhZGRzIHNvbWUgcGVyc2lzdGVudCBkYXRhIHRoYXRcbiAgICAvLyBvdGhlciBtb2RpZmllcnMgbmVlZCB0byB1c2UsIGJ1dCB0aGUgbW9kaWZpZXIgaXMgcnVuIGFmdGVyIHRoZSBkZXBlbmRlbnRcbiAgICAvLyBvbmUuXG5cbiAgICBmdW5jdGlvbiBydW5Nb2RpZmllckVmZmVjdHMoKSB7XG4gICAgICBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgICAgIHZhciBuYW1lID0gX3JlZjMubmFtZSxcbiAgICAgICAgICAgIF9yZWYzJG9wdGlvbnMgPSBfcmVmMy5vcHRpb25zLFxuICAgICAgICAgICAgb3B0aW9ucyA9IF9yZWYzJG9wdGlvbnMgPT09IHZvaWQgMCA/IHt9IDogX3JlZjMkb3B0aW9ucyxcbiAgICAgICAgICAgIGVmZmVjdCA9IF9yZWYzLmVmZmVjdDtcblxuICAgICAgICBpZiAodHlwZW9mIGVmZmVjdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHZhciBjbGVhbnVwRm4gPSBlZmZlY3Qoe1xuICAgICAgICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIGluc3RhbmNlOiBpbnN0YW5jZSxcbiAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHZhciBub29wRm4gPSBmdW5jdGlvbiBub29wRm4oKSB7fTtcblxuICAgICAgICAgIGVmZmVjdENsZWFudXBGbnMucHVzaChjbGVhbnVwRm4gfHwgbm9vcEZuKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xlYW51cE1vZGlmaWVyRWZmZWN0cygpIHtcbiAgICAgIGVmZmVjdENsZWFudXBGbnMuZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZuKCk7XG4gICAgICB9KTtcbiAgICAgIGVmZmVjdENsZWFudXBGbnMgPSBbXTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zdGFuY2U7XG4gIH07XG59XG5leHBvcnQgdmFyIGNyZWF0ZVBvcHBlciA9IC8qI19fUFVSRV9fKi9wb3BwZXJHZW5lcmF0b3IoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgeyBkZXRlY3RPdmVyZmxvdyB9OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlYm91bmNlKGZuKSB7XG4gIHZhciBwZW5kaW5nO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmICghcGVuZGluZykge1xuICAgICAgcGVuZGluZyA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHBlbmRpbmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgcmVzb2x2ZShmbigpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGVuZGluZztcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZXJnZUJ5TmFtZShtb2RpZmllcnMpIHtcbiAgdmFyIG1lcmdlZCA9IG1vZGlmaWVycy5yZWR1Y2UoZnVuY3Rpb24gKG1lcmdlZCwgY3VycmVudCkge1xuICAgIHZhciBleGlzdGluZyA9IG1lcmdlZFtjdXJyZW50Lm5hbWVdO1xuICAgIG1lcmdlZFtjdXJyZW50Lm5hbWVdID0gZXhpc3RpbmcgPyBPYmplY3QuYXNzaWduKHt9LCBleGlzdGluZywgY3VycmVudCwge1xuICAgICAgb3B0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgZXhpc3Rpbmcub3B0aW9ucywgY3VycmVudC5vcHRpb25zKSxcbiAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLmRhdGEsIGN1cnJlbnQuZGF0YSlcbiAgICB9KSA6IGN1cnJlbnQ7XG4gICAgcmV0dXJuIG1lcmdlZDtcbiAgfSwge30pOyAvLyBJRTExIGRvZXMgbm90IHN1cHBvcnQgT2JqZWN0LnZhbHVlc1xuXG4gIHJldHVybiBPYmplY3Qua2V5cyhtZXJnZWQpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIG1lcmdlZFtrZXldO1xuICB9KTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHBhc3NpdmUgPSB7XG4gIHBhc3NpdmU6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGVmZmVjdChfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBpbnN0YW5jZSA9IF9yZWYuaW5zdGFuY2UsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgX29wdGlvbnMkc2Nyb2xsID0gb3B0aW9ucy5zY3JvbGwsXG4gICAgICBzY3JvbGwgPSBfb3B0aW9ucyRzY3JvbGwgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRzY3JvbGwsXG4gICAgICBfb3B0aW9ucyRyZXNpemUgPSBvcHRpb25zLnJlc2l6ZSxcbiAgICAgIHJlc2l6ZSA9IF9vcHRpb25zJHJlc2l6ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHJlc2l6ZTtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdyhzdGF0ZS5lbGVtZW50cy5wb3BwZXIpO1xuICB2YXIgc2Nyb2xsUGFyZW50cyA9IFtdLmNvbmNhdChzdGF0ZS5zY3JvbGxQYXJlbnRzLnJlZmVyZW5jZSwgc3RhdGUuc2Nyb2xsUGFyZW50cy5wb3BwZXIpO1xuXG4gIGlmIChzY3JvbGwpIHtcbiAgICBzY3JvbGxQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24gKHNjcm9sbFBhcmVudCkge1xuICAgICAgc2Nyb2xsUGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocmVzaXplKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmIChzY3JvbGwpIHtcbiAgICAgIHNjcm9sbFBhcmVudHMuZm9yRWFjaChmdW5jdGlvbiAoc2Nyb2xsUGFyZW50KSB7XG4gICAgICAgIHNjcm9sbFBhcmVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHJlc2l6ZSkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgfVxuICB9O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3dyaXRlJyxcbiAgZm46IGZ1bmN0aW9uIGZuKCkge30sXG4gIGVmZmVjdDogZWZmZWN0LFxuICBkYXRhOiB7fVxufTsiLCJpbXBvcnQgeyBhdXRvIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMF07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gWyd0b3AnLCAnYm90dG9tJ10uaW5kZXhPZihwbGFjZW1lbnQpID49IDAgPyAneCcgOiAneSc7XG59IiwiaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4vZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldFZhcmlhdGlvbiBmcm9tIFwiLi9nZXRWYXJpYXRpb24uanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4vZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyB0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnQsIHN0YXJ0LCBlbmQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVPZmZzZXRzKF9yZWYpIHtcbiAgdmFyIHJlZmVyZW5jZSA9IF9yZWYucmVmZXJlbmNlLFxuICAgICAgZWxlbWVudCA9IF9yZWYuZWxlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9yZWYucGxhY2VtZW50O1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IHBsYWNlbWVudCA/IGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA6IG51bGw7XG4gIHZhciB2YXJpYXRpb24gPSBwbGFjZW1lbnQgPyBnZXRWYXJpYXRpb24ocGxhY2VtZW50KSA6IG51bGw7XG4gIHZhciBjb21tb25YID0gcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gZWxlbWVudC53aWR0aCAvIDI7XG4gIHZhciBjb21tb25ZID0gcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0IC8gMiAtIGVsZW1lbnQuaGVpZ2h0IC8gMjtcbiAgdmFyIG9mZnNldHM7XG5cbiAgc3dpdGNoIChiYXNlUGxhY2VtZW50KSB7XG4gICAgY2FzZSB0b3A6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGVsZW1lbnQuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIGJvdHRvbTpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IGNvbW1vblgsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSByaWdodDpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIGxlZnQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCAtIGVsZW1lbnQud2lkdGgsXG4gICAgICAgIHk6IGNvbW1vbllcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBvZmZzZXRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnlcbiAgICAgIH07XG4gIH1cblxuICB2YXIgbWFpbkF4aXMgPSBiYXNlUGxhY2VtZW50ID8gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KGJhc2VQbGFjZW1lbnQpIDogbnVsbDtcblxuICBpZiAobWFpbkF4aXMgIT0gbnVsbCkge1xuICAgIHZhciBsZW4gPSBtYWluQXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gICAgc3dpdGNoICh2YXJpYXRpb24pIHtcbiAgICAgIGNhc2Ugc3RhcnQ6XG4gICAgICAgIG9mZnNldHNbbWFpbkF4aXNdID0gb2Zmc2V0c1ttYWluQXhpc10gLSAocmVmZXJlbmNlW2xlbl0gLyAyIC0gZWxlbWVudFtsZW5dIC8gMik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIGVuZDpcbiAgICAgICAgb2Zmc2V0c1ttYWluQXhpc10gPSBvZmZzZXRzW21haW5BeGlzXSArIChyZWZlcmVuY2VbbGVuXSAvIDIgLSBlbGVtZW50W2xlbl0gLyAyKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9mZnNldHM7XG59IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBlbmQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbnZhciB1bnNldFNpZGVzID0ge1xuICB0b3A6ICdhdXRvJyxcbiAgcmlnaHQ6ICdhdXRvJyxcbiAgYm90dG9tOiAnYXV0bycsXG4gIGxlZnQ6ICdhdXRvJ1xufTsgLy8gUm91bmQgdGhlIG9mZnNldHMgdG8gdGhlIG5lYXJlc3Qgc3VpdGFibGUgc3VicGl4ZWwgYmFzZWQgb24gdGhlIERQUi5cbi8vIFpvb21pbmcgY2FuIGNoYW5nZSB0aGUgRFBSLCBidXQgaXQgc2VlbXMgdG8gcmVwb3J0IGEgdmFsdWUgdGhhdCB3aWxsXG4vLyBjbGVhbmx5IGRpdmlkZSB0aGUgdmFsdWVzIGludG8gdGhlIGFwcHJvcHJpYXRlIHN1YnBpeGVscy5cblxuZnVuY3Rpb24gcm91bmRPZmZzZXRzQnlEUFIoX3JlZikge1xuICB2YXIgeCA9IF9yZWYueCxcbiAgICAgIHkgPSBfcmVmLnk7XG4gIHZhciB3aW4gPSB3aW5kb3c7XG4gIHZhciBkcHIgPSB3aW4uZGV2aWNlUGl4ZWxSYXRpbyB8fCAxO1xuICByZXR1cm4ge1xuICAgIHg6IHJvdW5kKHggKiBkcHIpIC8gZHByIHx8IDAsXG4gICAgeTogcm91bmQoeSAqIGRwcikgLyBkcHIgfHwgMFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFwVG9TdHlsZXMoX3JlZjIpIHtcbiAgdmFyIF9PYmplY3QkYXNzaWduMjtcblxuICB2YXIgcG9wcGVyID0gX3JlZjIucG9wcGVyLFxuICAgICAgcG9wcGVyUmVjdCA9IF9yZWYyLnBvcHBlclJlY3QsXG4gICAgICBwbGFjZW1lbnQgPSBfcmVmMi5wbGFjZW1lbnQsXG4gICAgICB2YXJpYXRpb24gPSBfcmVmMi52YXJpYXRpb24sXG4gICAgICBvZmZzZXRzID0gX3JlZjIub2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uID0gX3JlZjIucG9zaXRpb24sXG4gICAgICBncHVBY2NlbGVyYXRpb24gPSBfcmVmMi5ncHVBY2NlbGVyYXRpb24sXG4gICAgICBhZGFwdGl2ZSA9IF9yZWYyLmFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzID0gX3JlZjIucm91bmRPZmZzZXRzLFxuICAgICAgaXNGaXhlZCA9IF9yZWYyLmlzRml4ZWQ7XG4gIHZhciBfb2Zmc2V0cyR4ID0gb2Zmc2V0cy54LFxuICAgICAgeCA9IF9vZmZzZXRzJHggPT09IHZvaWQgMCA/IDAgOiBfb2Zmc2V0cyR4LFxuICAgICAgX29mZnNldHMkeSA9IG9mZnNldHMueSxcbiAgICAgIHkgPSBfb2Zmc2V0cyR5ID09PSB2b2lkIDAgPyAwIDogX29mZnNldHMkeTtcblxuICB2YXIgX3JlZjMgPSB0eXBlb2Ygcm91bmRPZmZzZXRzID09PSAnZnVuY3Rpb24nID8gcm91bmRPZmZzZXRzKHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfSkgOiB7XG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH07XG5cbiAgeCA9IF9yZWYzLng7XG4gIHkgPSBfcmVmMy55O1xuICB2YXIgaGFzWCA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3gnKTtcbiAgdmFyIGhhc1kgPSBvZmZzZXRzLmhhc093blByb3BlcnR5KCd5Jyk7XG4gIHZhciBzaWRlWCA9IGxlZnQ7XG4gIHZhciBzaWRlWSA9IHRvcDtcbiAgdmFyIHdpbiA9IHdpbmRvdztcblxuICBpZiAoYWRhcHRpdmUpIHtcbiAgICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KHBvcHBlcik7XG4gICAgdmFyIGhlaWdodFByb3AgPSAnY2xpZW50SGVpZ2h0JztcbiAgICB2YXIgd2lkdGhQcm9wID0gJ2NsaWVudFdpZHRoJztcblxuICAgIGlmIChvZmZzZXRQYXJlbnQgPT09IGdldFdpbmRvdyhwb3BwZXIpKSB7XG4gICAgICBvZmZzZXRQYXJlbnQgPSBnZXREb2N1bWVudEVsZW1lbnQocG9wcGVyKTtcblxuICAgICAgaWYgKGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiAhPT0gJ3N0YXRpYycgJiYgcG9zaXRpb24gPT09ICdhYnNvbHV0ZScpIHtcbiAgICAgICAgaGVpZ2h0UHJvcCA9ICdzY3JvbGxIZWlnaHQnO1xuICAgICAgICB3aWR0aFByb3AgPSAnc2Nyb2xsV2lkdGgnO1xuICAgICAgfVxuICAgIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FzdF06IGZvcmNlIHR5cGUgcmVmaW5lbWVudCwgd2UgY29tcGFyZSBvZmZzZXRQYXJlbnQgd2l0aCB3aW5kb3cgYWJvdmUsIGJ1dCBGbG93IGRvZXNuJ3QgZGV0ZWN0IGl0XG5cblxuICAgIG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudDtcblxuICAgIGlmIChwbGFjZW1lbnQgPT09IHRvcCB8fCAocGxhY2VtZW50ID09PSBsZWZ0IHx8IHBsYWNlbWVudCA9PT0gcmlnaHQpICYmIHZhcmlhdGlvbiA9PT0gZW5kKSB7XG4gICAgICBzaWRlWSA9IGJvdHRvbTtcbiAgICAgIHZhciBvZmZzZXRZID0gaXNGaXhlZCAmJiBvZmZzZXRQYXJlbnQgPT09IHdpbiAmJiB3aW4udmlzdWFsVmlld3BvcnQgPyB3aW4udmlzdWFsVmlld3BvcnQuaGVpZ2h0IDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgICBvZmZzZXRQYXJlbnRbaGVpZ2h0UHJvcF07XG4gICAgICB5IC09IG9mZnNldFkgLSBwb3BwZXJSZWN0LmhlaWdodDtcbiAgICAgIHkgKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xO1xuICAgIH1cblxuICAgIGlmIChwbGFjZW1lbnQgPT09IGxlZnQgfHwgKHBsYWNlbWVudCA9PT0gdG9wIHx8IHBsYWNlbWVudCA9PT0gYm90dG9tKSAmJiB2YXJpYXRpb24gPT09IGVuZCkge1xuICAgICAgc2lkZVggPSByaWdodDtcbiAgICAgIHZhciBvZmZzZXRYID0gaXNGaXhlZCAmJiBvZmZzZXRQYXJlbnQgPT09IHdpbiAmJiB3aW4udmlzdWFsVmlld3BvcnQgPyB3aW4udmlzdWFsVmlld3BvcnQud2lkdGggOiAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICAgIG9mZnNldFBhcmVudFt3aWR0aFByb3BdO1xuICAgICAgeCAtPSBvZmZzZXRYIC0gcG9wcGVyUmVjdC53aWR0aDtcbiAgICAgIHggKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjb21tb25TdHlsZXMgPSBPYmplY3QuYXNzaWduKHtcbiAgICBwb3NpdGlvbjogcG9zaXRpb25cbiAgfSwgYWRhcHRpdmUgJiYgdW5zZXRTaWRlcyk7XG5cbiAgdmFyIF9yZWY0ID0gcm91bmRPZmZzZXRzID09PSB0cnVlID8gcm91bmRPZmZzZXRzQnlEUFIoe1xuICAgIHg6IHgsXG4gICAgeTogeVxuICB9KSA6IHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcblxuICB4ID0gX3JlZjQueDtcbiAgeSA9IF9yZWY0Lnk7XG5cbiAgaWYgKGdwdUFjY2VsZXJhdGlvbikge1xuICAgIHZhciBfT2JqZWN0JGFzc2lnbjtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIChfT2JqZWN0JGFzc2lnbiA9IHt9LCBfT2JqZWN0JGFzc2lnbltzaWRlWV0gPSBoYXNZID8gJzAnIDogJycsIF9PYmplY3QkYXNzaWduW3NpZGVYXSA9IGhhc1ggPyAnMCcgOiAnJywgX09iamVjdCRhc3NpZ24udHJhbnNmb3JtID0gKHdpbi5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIDw9IDEgPyBcInRyYW5zbGF0ZShcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4KVwiIDogXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4LCAwKVwiLCBfT2JqZWN0JGFzc2lnbikpO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgKF9PYmplY3QkYXNzaWduMiA9IHt9LCBfT2JqZWN0JGFzc2lnbjJbc2lkZVldID0gaGFzWSA/IHkgKyBcInB4XCIgOiAnJywgX09iamVjdCRhc3NpZ24yW3NpZGVYXSA9IGhhc1ggPyB4ICsgXCJweFwiIDogJycsIF9PYmplY3QkYXNzaWduMi50cmFuc2Zvcm0gPSAnJywgX09iamVjdCRhc3NpZ24yKSk7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVTdHlsZXMoX3JlZjUpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjUuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjUub3B0aW9ucztcbiAgdmFyIF9vcHRpb25zJGdwdUFjY2VsZXJhdCA9IG9wdGlvbnMuZ3B1QWNjZWxlcmF0aW9uLFxuICAgICAgZ3B1QWNjZWxlcmF0aW9uID0gX29wdGlvbnMkZ3B1QWNjZWxlcmF0ID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkZ3B1QWNjZWxlcmF0LFxuICAgICAgX29wdGlvbnMkYWRhcHRpdmUgPSBvcHRpb25zLmFkYXB0aXZlLFxuICAgICAgYWRhcHRpdmUgPSBfb3B0aW9ucyRhZGFwdGl2ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFkYXB0aXZlLFxuICAgICAgX29wdGlvbnMkcm91bmRPZmZzZXRzID0gb3B0aW9ucy5yb3VuZE9mZnNldHMsXG4gICAgICByb3VuZE9mZnNldHMgPSBfb3B0aW9ucyRyb3VuZE9mZnNldHMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRyb3VuZE9mZnNldHM7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHZhciB0cmFuc2l0aW9uUHJvcGVydHkgPSBnZXRDb21wdXRlZFN0eWxlKHN0YXRlLmVsZW1lbnRzLnBvcHBlcikudHJhbnNpdGlvblByb3BlcnR5IHx8ICcnO1xuXG4gICAgaWYgKGFkYXB0aXZlICYmIFsndHJhbnNmb3JtJywgJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddLnNvbWUoZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICByZXR1cm4gdHJhbnNpdGlvblByb3BlcnR5LmluZGV4T2YocHJvcGVydHkpID49IDA7XG4gICAgfSkpIHtcbiAgICAgIGNvbnNvbGUud2FybihbJ1BvcHBlcjogRGV0ZWN0ZWQgQ1NTIHRyYW5zaXRpb25zIG9uIGF0IGxlYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nJywgJ0NTUyBwcm9wZXJ0aWVzOiBcInRyYW5zZm9ybVwiLCBcInRvcFwiLCBcInJpZ2h0XCIsIFwiYm90dG9tXCIsIFwibGVmdFwiLicsICdcXG5cXG4nLCAnRGlzYWJsZSB0aGUgXCJjb21wdXRlU3R5bGVzXCIgbW9kaWZpZXJcXCdzIGBhZGFwdGl2ZWAgb3B0aW9uIHRvIGFsbG93JywgJ2ZvciBzbW9vdGggdHJhbnNpdGlvbnMsIG9yIHJlbW92ZSB0aGVzZSBwcm9wZXJ0aWVzIGZyb20gdGhlIENTUycsICd0cmFuc2l0aW9uIGRlY2xhcmF0aW9uIG9uIHRoZSBwb3BwZXIgZWxlbWVudCBpZiBvbmx5IHRyYW5zaXRpb25pbmcnLCAnb3BhY2l0eSBvciBiYWNrZ3JvdW5kLWNvbG9yIGZvciBleGFtcGxlLicsICdcXG5cXG4nLCAnV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBwb3BwZXIgZWxlbWVudCBhcyBhIHdyYXBwZXIgYXJvdW5kIGFuIGlubmVyJywgJ2VsZW1lbnQgdGhhdCBjYW4gaGF2ZSBhbnkgQ1NTIHByb3BlcnR5IHRyYW5zaXRpb25lZCBmb3IgYW5pbWF0aW9ucy4nXS5qb2luKCcgJykpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjb21tb25TdHlsZXMgPSB7XG4gICAgcGxhY2VtZW50OiBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCksXG4gICAgdmFyaWF0aW9uOiBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KSxcbiAgICBwb3BwZXI6IHN0YXRlLmVsZW1lbnRzLnBvcHBlcixcbiAgICBwb3BwZXJSZWN0OiBzdGF0ZS5yZWN0cy5wb3BwZXIsXG4gICAgZ3B1QWNjZWxlcmF0aW9uOiBncHVBY2NlbGVyYXRpb24sXG4gICAgaXNGaXhlZDogc3RhdGUub3B0aW9ucy5zdHJhdGVneSA9PT0gJ2ZpeGVkJ1xuICB9O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5zdHlsZXMucG9wcGVyLCBtYXBUb1N0eWxlcyhPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIHtcbiAgICAgIG9mZnNldHM6IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgYWRhcHRpdmU6IGFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHNcbiAgICB9KSkpO1xuICB9XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEuYXJyb3cgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5hcnJvdyA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnN0eWxlcy5hcnJvdywgbWFwVG9TdHlsZXMoT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCB7XG4gICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLmFycm93LFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBhZGFwdGl2ZTogZmFsc2UsXG4gICAgICByb3VuZE9mZnNldHM6IHJvdW5kT2Zmc2V0c1xuICAgIH0pKSk7XG4gIH1cblxuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXBsYWNlbWVudCc6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2NvbXB1dGVTdHlsZXMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ2JlZm9yZVdyaXRlJyxcbiAgZm46IGNvbXB1dGVTdHlsZXMsXG4gIGRhdGE6IHt9XG59OyIsImltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7IC8vIFRoaXMgbW9kaWZpZXIgdGFrZXMgdGhlIHN0eWxlcyBwcmVwYXJlZCBieSB0aGUgYGNvbXB1dGVTdHlsZXNgIG1vZGlmaWVyXG4vLyBhbmQgYXBwbGllcyB0aGVtIHRvIHRoZSBIVE1MRWxlbWVudHMgc3VjaCBhcyBwb3BwZXIgYW5kIGFycm93XG5cbmZ1bmN0aW9uIGFwcGx5U3R5bGVzKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZTtcbiAgT2JqZWN0LmtleXMoc3RhdGUuZWxlbWVudHMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YXIgc3R5bGUgPSBzdGF0ZS5zdHlsZXNbbmFtZV0gfHwge307XG4gICAgdmFyIGF0dHJpYnV0ZXMgPSBzdGF0ZS5hdHRyaWJ1dGVzW25hbWVdIHx8IHt9O1xuICAgIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbbmFtZV07IC8vIGFycm93IGlzIG9wdGlvbmFsICsgdmlydHVhbCBlbGVtZW50c1xuXG4gICAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8ICFnZXROb2RlTmFtZShlbGVtZW50KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gRmxvdyBkb2Vzbid0IHN1cHBvcnQgdG8gZXh0ZW5kIHRoaXMgcHJvcGVydHksIGJ1dCBpdCdzIHRoZSBtb3N0XG4gICAgLy8gZWZmZWN0aXZlIHdheSB0byBhcHBseSBzdHlsZXMgdG8gYW4gSFRNTEVsZW1lbnRcbiAgICAvLyAkRmxvd0ZpeE1lW2Nhbm5vdC13cml0ZV1cblxuXG4gICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCBzdHlsZSk7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1tuYW1lXTtcblxuICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlID09PSB0cnVlID8gJycgOiB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBlZmZlY3QoX3JlZjIpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGU7XG4gIHZhciBpbml0aWFsU3R5bGVzID0ge1xuICAgIHBvcHBlcjoge1xuICAgICAgcG9zaXRpb246IHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3ksXG4gICAgICBsZWZ0OiAnMCcsXG4gICAgICB0b3A6ICcwJyxcbiAgICAgIG1hcmdpbjogJzAnXG4gICAgfSxcbiAgICBhcnJvdzoge1xuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZSdcbiAgICB9LFxuICAgIHJlZmVyZW5jZToge31cbiAgfTtcbiAgT2JqZWN0LmFzc2lnbihzdGF0ZS5lbGVtZW50cy5wb3BwZXIuc3R5bGUsIGluaXRpYWxTdHlsZXMucG9wcGVyKTtcbiAgc3RhdGUuc3R5bGVzID0gaW5pdGlhbFN0eWxlcztcblxuICBpZiAoc3RhdGUuZWxlbWVudHMuYXJyb3cpIHtcbiAgICBPYmplY3QuYXNzaWduKHN0YXRlLmVsZW1lbnRzLmFycm93LnN0eWxlLCBpbml0aWFsU3R5bGVzLmFycm93KTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgT2JqZWN0LmtleXMoc3RhdGUuZWxlbWVudHMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbbmFtZV07XG4gICAgICB2YXIgYXR0cmlidXRlcyA9IHN0YXRlLmF0dHJpYnV0ZXNbbmFtZV0gfHwge307XG4gICAgICB2YXIgc3R5bGVQcm9wZXJ0aWVzID0gT2JqZWN0LmtleXMoc3RhdGUuc3R5bGVzLmhhc093blByb3BlcnR5KG5hbWUpID8gc3RhdGUuc3R5bGVzW25hbWVdIDogaW5pdGlhbFN0eWxlc1tuYW1lXSk7IC8vIFNldCBhbGwgdmFsdWVzIHRvIGFuIGVtcHR5IHN0cmluZyB0byB1bnNldCB0aGVtXG5cbiAgICAgIHZhciBzdHlsZSA9IHN0eWxlUHJvcGVydGllcy5yZWR1Y2UoZnVuY3Rpb24gKHN0eWxlLCBwcm9wZXJ0eSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSAnJztcbiAgICAgICAgcmV0dXJuIHN0eWxlO1xuICAgICAgfSwge30pOyAvLyBhcnJvdyBpcyBvcHRpb25hbCArIHZpcnR1YWwgZWxlbWVudHNcblxuICAgICAgaWYgKCFpc0hUTUxFbGVtZW50KGVsZW1lbnQpIHx8ICFnZXROb2RlTmFtZShlbGVtZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwgc3R5bGUpO1xuICAgICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoYXR0cmlidXRlKSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2FwcGx5U3R5bGVzJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICd3cml0ZScsXG4gIGZuOiBhcHBseVN0eWxlcyxcbiAgZWZmZWN0OiBlZmZlY3QsXG4gIHJlcXVpcmVzOiBbJ2NvbXB1dGVTdHlsZXMnXVxufTsiLCJpbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgcGxhY2VtZW50cyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCBmdW5jdGlvbiBkaXN0YW5jZUFuZFNraWRkaW5nVG9YWShwbGFjZW1lbnQsIHJlY3RzLCBvZmZzZXQpIHtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHZhciBpbnZlcnREaXN0YW5jZSA9IFtsZWZ0LCB0b3BdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMCA/IC0xIDogMTtcblxuICB2YXIgX3JlZiA9IHR5cGVvZiBvZmZzZXQgPT09ICdmdW5jdGlvbicgPyBvZmZzZXQoT2JqZWN0LmFzc2lnbih7fSwgcmVjdHMsIHtcbiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICB9KSkgOiBvZmZzZXQsXG4gICAgICBza2lkZGluZyA9IF9yZWZbMF0sXG4gICAgICBkaXN0YW5jZSA9IF9yZWZbMV07XG5cbiAgc2tpZGRpbmcgPSBza2lkZGluZyB8fCAwO1xuICBkaXN0YW5jZSA9IChkaXN0YW5jZSB8fCAwKSAqIGludmVydERpc3RhbmNlO1xuICByZXR1cm4gW2xlZnQsIHJpZ2h0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDAgPyB7XG4gICAgeDogZGlzdGFuY2UsXG4gICAgeTogc2tpZGRpbmdcbiAgfSA6IHtcbiAgICB4OiBza2lkZGluZyxcbiAgICB5OiBkaXN0YW5jZVxuICB9O1xufVxuXG5mdW5jdGlvbiBvZmZzZXQoX3JlZjIpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjIub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmMi5uYW1lO1xuICB2YXIgX29wdGlvbnMkb2Zmc2V0ID0gb3B0aW9ucy5vZmZzZXQsXG4gICAgICBvZmZzZXQgPSBfb3B0aW9ucyRvZmZzZXQgPT09IHZvaWQgMCA/IFswLCAwXSA6IF9vcHRpb25zJG9mZnNldDtcbiAgdmFyIGRhdGEgPSBwbGFjZW1lbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbGFjZW1lbnQpIHtcbiAgICBhY2NbcGxhY2VtZW50XSA9IGRpc3RhbmNlQW5kU2tpZGRpbmdUb1hZKHBsYWNlbWVudCwgc3RhdGUucmVjdHMsIG9mZnNldCk7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuICB2YXIgX2RhdGEkc3RhdGUkcGxhY2VtZW50ID0gZGF0YVtzdGF0ZS5wbGFjZW1lbnRdLFxuICAgICAgeCA9IF9kYXRhJHN0YXRlJHBsYWNlbWVudC54LFxuICAgICAgeSA9IF9kYXRhJHN0YXRlJHBsYWNlbWVudC55O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy54ICs9IHg7XG4gICAgc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLnkgKz0geTtcbiAgfVxuXG4gIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSBkYXRhO1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnb2Zmc2V0JyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgcmVxdWlyZXM6IFsncG9wcGVyT2Zmc2V0cyddLFxuICBmbjogb2Zmc2V0XG59OyIsInZhciBoYXNoID0ge1xuICBsZWZ0OiAncmlnaHQnLFxuICByaWdodDogJ2xlZnQnLFxuICBib3R0b206ICd0b3AnLFxuICB0b3A6ICdib3R0b20nXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7XG4gICAgcmV0dXJuIGhhc2hbbWF0Y2hlZF07XG4gIH0pO1xufSIsInZhciBoYXNoID0ge1xuICBzdGFydDogJ2VuZCcsXG4gIGVuZDogJ3N0YXJ0J1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL3N0YXJ0fGVuZC9nLCBmdW5jdGlvbiAobWF0Y2hlZCkge1xuICAgIHJldHVybiBoYXNoW21hdGNoZWRdO1xuICB9KTtcbn0iLCJpbXBvcnQgeyBpc1NoYWRvd1Jvb3QgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb250YWlucyhwYXJlbnQsIGNoaWxkKSB7XG4gIHZhciByb290Tm9kZSA9IGNoaWxkLmdldFJvb3ROb2RlICYmIGNoaWxkLmdldFJvb3ROb2RlKCk7IC8vIEZpcnN0LCBhdHRlbXB0IHdpdGggZmFzdGVyIG5hdGl2ZSBtZXRob2RcblxuICBpZiAocGFyZW50LmNvbnRhaW5zKGNoaWxkKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIHRoZW4gZmFsbGJhY2sgdG8gY3VzdG9tIGltcGxlbWVudGF0aW9uIHdpdGggU2hhZG93IERPTSBzdXBwb3J0XG4gIGVsc2UgaWYgKHJvb3ROb2RlICYmIGlzU2hhZG93Um9vdChyb290Tm9kZSkpIHtcbiAgICAgIHZhciBuZXh0ID0gY2hpbGQ7XG5cbiAgICAgIGRvIHtcbiAgICAgICAgaWYgKG5leHQgJiYgcGFyZW50LmlzU2FtZU5vZGUobmV4dCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ106IG5lZWQgYSBiZXR0ZXIgd2F5IHRvIGhhbmRsZSB0aGlzLi4uXG5cblxuICAgICAgICBuZXh0ID0gbmV4dC5wYXJlbnROb2RlIHx8IG5leHQuaG9zdDtcbiAgICAgIH0gd2hpbGUgKG5leHQpO1xuICAgIH0gLy8gR2l2ZSB1cCwgdGhlIHJlc3VsdCBpcyBmYWxzZVxuXG5cbiAgcmV0dXJuIGZhbHNlO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlY3RUb0NsaWVudFJlY3QocmVjdCkge1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcmVjdCwge1xuICAgIGxlZnQ6IHJlY3QueCxcbiAgICB0b3A6IHJlY3QueSxcbiAgICByaWdodDogcmVjdC54ICsgcmVjdC53aWR0aCxcbiAgICBib3R0b206IHJlY3QueSArIHJlY3QuaGVpZ2h0XG4gIH0pO1xufSIsImltcG9ydCB7IHZpZXdwb3J0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0Vmlld3BvcnRSZWN0IGZyb20gXCIuL2dldFZpZXdwb3J0UmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50UmVjdCBmcm9tIFwiLi9nZXREb2N1bWVudFJlY3QuanNcIjtcbmltcG9ydCBsaXN0U2Nyb2xsUGFyZW50cyBmcm9tIFwiLi9saXN0U2Nyb2xsUGFyZW50cy5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGNvbnRhaW5zIGZyb20gXCIuL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCByZWN0VG9DbGllbnRSZWN0IGZyb20gXCIuLi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBtYXgsIG1pbiB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIHZhciByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGZhbHNlLCBzdHJhdGVneSA9PT0gJ2ZpeGVkJyk7XG4gIHJlY3QudG9wID0gcmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgcmVjdC5sZWZ0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICByZWN0LmJvdHRvbSA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIHJlY3QucmlnaHQgPSByZWN0LmxlZnQgKyBlbGVtZW50LmNsaWVudFdpZHRoO1xuICByZWN0LndpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aDtcbiAgcmVjdC5oZWlnaHQgPSBlbGVtZW50LmNsaWVudEhlaWdodDtcbiAgcmVjdC54ID0gcmVjdC5sZWZ0O1xuICByZWN0LnkgPSByZWN0LnRvcDtcbiAgcmV0dXJuIHJlY3Q7XG59XG5cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tTWl4ZWRUeXBlKGVsZW1lbnQsIGNsaXBwaW5nUGFyZW50LCBzdHJhdGVneSkge1xuICByZXR1cm4gY2xpcHBpbmdQYXJlbnQgPT09IHZpZXdwb3J0ID8gcmVjdFRvQ2xpZW50UmVjdChnZXRWaWV3cG9ydFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpKSA6IGlzRWxlbWVudChjbGlwcGluZ1BhcmVudCkgPyBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChjbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpIDogcmVjdFRvQ2xpZW50UmVjdChnZXREb2N1bWVudFJlY3QoZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpKSk7XG59IC8vIEEgXCJjbGlwcGluZyBwYXJlbnRcIiBpcyBhbiBvdmVyZmxvd2FibGUgY29udGFpbmVyIHdpdGggdGhlIGNoYXJhY3RlcmlzdGljIG9mXG4vLyBjbGlwcGluZyAob3IgaGlkaW5nKSBvdmVyZmxvd2luZyBlbGVtZW50cyB3aXRoIGEgcG9zaXRpb24gZGlmZmVyZW50IGZyb21cbi8vIGBpbml0aWFsYFxuXG5cbmZ1bmN0aW9uIGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSB7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBsaXN0U2Nyb2xsUGFyZW50cyhnZXRQYXJlbnROb2RlKGVsZW1lbnQpKTtcbiAgdmFyIGNhbkVzY2FwZUNsaXBwaW5nID0gWydhYnNvbHV0ZScsICdmaXhlZCddLmluZGV4T2YoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5wb3NpdGlvbikgPj0gMDtcbiAgdmFyIGNsaXBwZXJFbGVtZW50ID0gY2FuRXNjYXBlQ2xpcHBpbmcgJiYgaXNIVE1MRWxlbWVudChlbGVtZW50KSA/IGdldE9mZnNldFBhcmVudChlbGVtZW50KSA6IGVsZW1lbnQ7XG5cbiAgaWYgKCFpc0VsZW1lbnQoY2xpcHBlckVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl06IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mbG93L2lzc3Vlcy8xNDE0XG5cblxuICByZXR1cm4gY2xpcHBpbmdQYXJlbnRzLmZpbHRlcihmdW5jdGlvbiAoY2xpcHBpbmdQYXJlbnQpIHtcbiAgICByZXR1cm4gaXNFbGVtZW50KGNsaXBwaW5nUGFyZW50KSAmJiBjb250YWlucyhjbGlwcGluZ1BhcmVudCwgY2xpcHBlckVsZW1lbnQpICYmIGdldE5vZGVOYW1lKGNsaXBwaW5nUGFyZW50KSAhPT0gJ2JvZHknO1xuICB9KTtcbn0gLy8gR2V0cyB0aGUgbWF4aW11bSBhcmVhIHRoYXQgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBpbiBkdWUgdG8gYW55IG51bWJlciBvZlxuLy8gY2xpcHBpbmcgcGFyZW50c1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChlbGVtZW50LCBib3VuZGFyeSwgcm9vdEJvdW5kYXJ5LCBzdHJhdGVneSkge1xuICB2YXIgbWFpbkNsaXBwaW5nUGFyZW50cyA9IGJvdW5kYXJ5ID09PSAnY2xpcHBpbmdQYXJlbnRzJyA/IGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSA6IFtdLmNvbmNhdChib3VuZGFyeSk7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBbXS5jb25jYXQobWFpbkNsaXBwaW5nUGFyZW50cywgW3Jvb3RCb3VuZGFyeV0pO1xuICB2YXIgZmlyc3RDbGlwcGluZ1BhcmVudCA9IGNsaXBwaW5nUGFyZW50c1swXTtcbiAgdmFyIGNsaXBwaW5nUmVjdCA9IGNsaXBwaW5nUGFyZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY1JlY3QsIGNsaXBwaW5nUGFyZW50KSB7XG4gICAgdmFyIHJlY3QgPSBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpO1xuICAgIGFjY1JlY3QudG9wID0gbWF4KHJlY3QudG9wLCBhY2NSZWN0LnRvcCk7XG4gICAgYWNjUmVjdC5yaWdodCA9IG1pbihyZWN0LnJpZ2h0LCBhY2NSZWN0LnJpZ2h0KTtcbiAgICBhY2NSZWN0LmJvdHRvbSA9IG1pbihyZWN0LmJvdHRvbSwgYWNjUmVjdC5ib3R0b20pO1xuICAgIGFjY1JlY3QubGVmdCA9IG1heChyZWN0LmxlZnQsIGFjY1JlY3QubGVmdCk7XG4gICAgcmV0dXJuIGFjY1JlY3Q7XG4gIH0sIGdldENsaWVudFJlY3RGcm9tTWl4ZWRUeXBlKGVsZW1lbnQsIGZpcnN0Q2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KSk7XG4gIGNsaXBwaW5nUmVjdC53aWR0aCA9IGNsaXBwaW5nUmVjdC5yaWdodCAtIGNsaXBwaW5nUmVjdC5sZWZ0O1xuICBjbGlwcGluZ1JlY3QuaGVpZ2h0ID0gY2xpcHBpbmdSZWN0LmJvdHRvbSAtIGNsaXBwaW5nUmVjdC50b3A7XG4gIGNsaXBwaW5nUmVjdC54ID0gY2xpcHBpbmdSZWN0LmxlZnQ7XG4gIGNsaXBwaW5nUmVjdC55ID0gY2xpcHBpbmdSZWN0LnRvcDtcbiAgcmV0dXJuIGNsaXBwaW5nUmVjdDtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGxCYXJYIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbEJhclguanNcIjtcbmltcG9ydCBpc0xheW91dFZpZXdwb3J0IGZyb20gXCIuL2lzTGF5b3V0Vmlld3BvcnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICB2YXIgd2luID0gZ2V0V2luZG93KGVsZW1lbnQpO1xuICB2YXIgaHRtbCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgdmFyIHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICB2YXIgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICB2YXIgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIHZhciB4ID0gMDtcbiAgdmFyIHkgPSAwO1xuXG4gIGlmICh2aXN1YWxWaWV3cG9ydCkge1xuICAgIHdpZHRoID0gdmlzdWFsVmlld3BvcnQud2lkdGg7XG4gICAgaGVpZ2h0ID0gdmlzdWFsVmlld3BvcnQuaGVpZ2h0O1xuICAgIHZhciBsYXlvdXRWaWV3cG9ydCA9IGlzTGF5b3V0Vmlld3BvcnQoKTtcblxuICAgIGlmIChsYXlvdXRWaWV3cG9ydCB8fCAhbGF5b3V0Vmlld3BvcnQgJiYgc3RyYXRlZ3kgPT09ICdmaXhlZCcpIHtcbiAgICAgIHggPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0O1xuICAgICAgeSA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICB4OiB4ICsgZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KSxcbiAgICB5OiB5XG4gIH07XG59IiwiaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGxCYXJYIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbEJhclguanNcIjtcbmltcG9ydCBnZXRXaW5kb3dTY3JvbGwgZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsLmpzXCI7XG5pbXBvcnQgeyBtYXggfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiOyAvLyBHZXRzIHRoZSBlbnRpcmUgc2l6ZSBvZiB0aGUgc2Nyb2xsYWJsZSBkb2N1bWVudCBhcmVhLCBldmVuIGV4dGVuZGluZyBvdXRzaWRlXG4vLyBvZiB0aGUgYDxodG1sPmAgYW5kIGA8Ym9keT5gIHJlY3QgYm91bmRzIGlmIGhvcml6b250YWxseSBzY3JvbGxhYmxlXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldERvY3VtZW50UmVjdChlbGVtZW50KSB7XG4gIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47XG5cbiAgdmFyIGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIHZhciB3aW5TY3JvbGwgPSBnZXRXaW5kb3dTY3JvbGwoZWxlbWVudCk7XG4gIHZhciBib2R5ID0gKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5O1xuICB2YXIgd2lkdGggPSBtYXgoaHRtbC5zY3JvbGxXaWR0aCwgaHRtbC5jbGllbnRXaWR0aCwgYm9keSA/IGJvZHkuc2Nyb2xsV2lkdGggOiAwLCBib2R5ID8gYm9keS5jbGllbnRXaWR0aCA6IDApO1xuICB2YXIgaGVpZ2h0ID0gbWF4KGh0bWwuc2Nyb2xsSGVpZ2h0LCBodG1sLmNsaWVudEhlaWdodCwgYm9keSA/IGJvZHkuc2Nyb2xsSGVpZ2h0IDogMCwgYm9keSA/IGJvZHkuY2xpZW50SGVpZ2h0IDogMCk7XG4gIHZhciB4ID0gLXdpblNjcm9sbC5zY3JvbGxMZWZ0ICsgZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KTtcbiAgdmFyIHkgPSAtd2luU2Nyb2xsLnNjcm9sbFRvcDtcblxuICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZShib2R5IHx8IGh0bWwpLmRpcmVjdGlvbiA9PT0gJ3J0bCcpIHtcbiAgICB4ICs9IG1heChodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5jbGllbnRXaWR0aCA6IDApIC0gd2lkdGg7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0RnJlc2hTaWRlT2JqZWN0IGZyb20gXCIuL2dldEZyZXNoU2lkZU9iamVjdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VQYWRkaW5nT2JqZWN0KHBhZGRpbmdPYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGdldEZyZXNoU2lkZU9iamVjdCgpLCBwYWRkaW5nT2JqZWN0KTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRGcmVzaFNpZGVPYmplY3QoKSB7XG4gIHJldHVybiB7XG4gICAgdG9wOiAwLFxuICAgIHJpZ2h0OiAwLFxuICAgIGJvdHRvbTogMCxcbiAgICBsZWZ0OiAwXG4gIH07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXhwYW5kVG9IYXNoTWFwKHZhbHVlLCBrZXlzKSB7XG4gIHJldHVybiBrZXlzLnJlZHVjZShmdW5jdGlvbiAoaGFzaE1hcCwga2V5KSB7XG4gICAgaGFzaE1hcFtrZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIGhhc2hNYXA7XG4gIH0sIHt9KTtcbn0iLCJpbXBvcnQgZ2V0Q2xpcHBpbmdSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Q2xpcHBpbmdSZWN0LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgY29tcHV0ZU9mZnNldHMgZnJvbSBcIi4vY29tcHV0ZU9mZnNldHMuanNcIjtcbmltcG9ydCByZWN0VG9DbGllbnRSZWN0IGZyb20gXCIuL3JlY3RUb0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCB7IGNsaXBwaW5nUGFyZW50cywgcmVmZXJlbmNlLCBwb3BwZXIsIGJvdHRvbSwgdG9wLCByaWdodCwgYmFzZVBsYWNlbWVudHMsIHZpZXdwb3J0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBtZXJnZVBhZGRpbmdPYmplY3QgZnJvbSBcIi4vbWVyZ2VQYWRkaW5nT2JqZWN0LmpzXCI7XG5pbXBvcnQgZXhwYW5kVG9IYXNoTWFwIGZyb20gXCIuL2V4cGFuZFRvSGFzaE1hcC5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRldGVjdE92ZXJmbG93KHN0YXRlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMkcGxhY2VtZW50ID09PSB2b2lkIDAgPyBzdGF0ZS5wbGFjZW1lbnQgOiBfb3B0aW9ucyRwbGFjZW1lbnQsXG4gICAgICBfb3B0aW9ucyRzdHJhdGVneSA9IF9vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgc3RyYXRlZ3kgPSBfb3B0aW9ucyRzdHJhdGVneSA9PT0gdm9pZCAwID8gc3RhdGUuc3RyYXRlZ3kgOiBfb3B0aW9ucyRzdHJhdGVneSxcbiAgICAgIF9vcHRpb25zJGJvdW5kYXJ5ID0gX29wdGlvbnMuYm91bmRhcnksXG4gICAgICBib3VuZGFyeSA9IF9vcHRpb25zJGJvdW5kYXJ5ID09PSB2b2lkIDAgPyBjbGlwcGluZ1BhcmVudHMgOiBfb3B0aW9ucyRib3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJHJvb3RCb3VuZGFyeSA9IF9vcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IF9vcHRpb25zJHJvb3RCb3VuZGFyeSA9PT0gdm9pZCAwID8gdmlld3BvcnQgOiBfb3B0aW9ucyRyb290Qm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRlbGVtZW50Q29udGUgPSBfb3B0aW9ucy5lbGVtZW50Q29udGV4dCxcbiAgICAgIGVsZW1lbnRDb250ZXh0ID0gX29wdGlvbnMkZWxlbWVudENvbnRlID09PSB2b2lkIDAgPyBwb3BwZXIgOiBfb3B0aW9ucyRlbGVtZW50Q29udGUsXG4gICAgICBfb3B0aW9ucyRhbHRCb3VuZGFyeSA9IF9vcHRpb25zLmFsdEJvdW5kYXJ5LFxuICAgICAgYWx0Qm91bmRhcnkgPSBfb3B0aW9ucyRhbHRCb3VuZGFyeSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRhbHRCb3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJHBhZGRpbmcgPSBfb3B0aW9ucy5wYWRkaW5nLFxuICAgICAgcGFkZGluZyA9IF9vcHRpb25zJHBhZGRpbmcgPT09IHZvaWQgMCA/IDAgOiBfb3B0aW9ucyRwYWRkaW5nO1xuICB2YXIgcGFkZGluZ09iamVjdCA9IG1lcmdlUGFkZGluZ09iamVjdCh0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBwYWRkaW5nIDogZXhwYW5kVG9IYXNoTWFwKHBhZGRpbmcsIGJhc2VQbGFjZW1lbnRzKSk7XG4gIHZhciBhbHRDb250ZXh0ID0gZWxlbWVudENvbnRleHQgPT09IHBvcHBlciA/IHJlZmVyZW5jZSA6IHBvcHBlcjtcbiAgdmFyIHBvcHBlclJlY3QgPSBzdGF0ZS5yZWN0cy5wb3BwZXI7XG4gIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbYWx0Qm91bmRhcnkgPyBhbHRDb250ZXh0IDogZWxlbWVudENvbnRleHRdO1xuICB2YXIgY2xpcHBpbmdDbGllbnRSZWN0ID0gZ2V0Q2xpcHBpbmdSZWN0KGlzRWxlbWVudChlbGVtZW50KSA/IGVsZW1lbnQgOiBlbGVtZW50LmNvbnRleHRFbGVtZW50IHx8IGdldERvY3VtZW50RWxlbWVudChzdGF0ZS5lbGVtZW50cy5wb3BwZXIpLCBib3VuZGFyeSwgcm9vdEJvdW5kYXJ5LCBzdHJhdGVneSk7XG4gIHZhciByZWZlcmVuY2VDbGllbnRSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHN0YXRlLmVsZW1lbnRzLnJlZmVyZW5jZSk7XG4gIHZhciBwb3BwZXJPZmZzZXRzID0gY29tcHV0ZU9mZnNldHMoe1xuICAgIHJlZmVyZW5jZTogcmVmZXJlbmNlQ2xpZW50UmVjdCxcbiAgICBlbGVtZW50OiBwb3BwZXJSZWN0LFxuICAgIHN0cmF0ZWd5OiAnYWJzb2x1dGUnLFxuICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gIH0pO1xuICB2YXIgcG9wcGVyQ2xpZW50UmVjdCA9IHJlY3RUb0NsaWVudFJlY3QoT2JqZWN0LmFzc2lnbih7fSwgcG9wcGVyUmVjdCwgcG9wcGVyT2Zmc2V0cykpO1xuICB2YXIgZWxlbWVudENsaWVudFJlY3QgPSBlbGVtZW50Q29udGV4dCA9PT0gcG9wcGVyID8gcG9wcGVyQ2xpZW50UmVjdCA6IHJlZmVyZW5jZUNsaWVudFJlY3Q7IC8vIHBvc2l0aXZlID0gb3ZlcmZsb3dpbmcgdGhlIGNsaXBwaW5nIHJlY3RcbiAgLy8gMCBvciBuZWdhdGl2ZSA9IHdpdGhpbiB0aGUgY2xpcHBpbmcgcmVjdFxuXG4gIHZhciBvdmVyZmxvd09mZnNldHMgPSB7XG4gICAgdG9wOiBjbGlwcGluZ0NsaWVudFJlY3QudG9wIC0gZWxlbWVudENsaWVudFJlY3QudG9wICsgcGFkZGluZ09iamVjdC50b3AsXG4gICAgYm90dG9tOiBlbGVtZW50Q2xpZW50UmVjdC5ib3R0b20gLSBjbGlwcGluZ0NsaWVudFJlY3QuYm90dG9tICsgcGFkZGluZ09iamVjdC5ib3R0b20sXG4gICAgbGVmdDogY2xpcHBpbmdDbGllbnRSZWN0LmxlZnQgLSBlbGVtZW50Q2xpZW50UmVjdC5sZWZ0ICsgcGFkZGluZ09iamVjdC5sZWZ0LFxuICAgIHJpZ2h0OiBlbGVtZW50Q2xpZW50UmVjdC5yaWdodCAtIGNsaXBwaW5nQ2xpZW50UmVjdC5yaWdodCArIHBhZGRpbmdPYmplY3QucmlnaHRcbiAgfTtcbiAgdmFyIG9mZnNldERhdGEgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldDsgLy8gT2Zmc2V0cyBjYW4gYmUgYXBwbGllZCBvbmx5IHRvIHRoZSBwb3BwZXIgZWxlbWVudFxuXG4gIGlmIChlbGVtZW50Q29udGV4dCA9PT0gcG9wcGVyICYmIG9mZnNldERhdGEpIHtcbiAgICB2YXIgb2Zmc2V0ID0gb2Zmc2V0RGF0YVtwbGFjZW1lbnRdO1xuICAgIE9iamVjdC5rZXlzKG92ZXJmbG93T2Zmc2V0cykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIgbXVsdGlwbHkgPSBbcmlnaHQsIGJvdHRvbV0uaW5kZXhPZihrZXkpID49IDAgPyAxIDogLTE7XG4gICAgICB2YXIgYXhpcyA9IFt0b3AsIGJvdHRvbV0uaW5kZXhPZihrZXkpID49IDAgPyAneScgOiAneCc7XG4gICAgICBvdmVyZmxvd09mZnNldHNba2V5XSArPSBvZmZzZXRbYXhpc10gKiBtdWx0aXBseTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBvdmVyZmxvd09mZnNldHM7XG59IiwiaW1wb3J0IGdldE9wcG9zaXRlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRPcHBvc2l0ZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBjb21wdXRlQXV0b1BsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvY29tcHV0ZUF1dG9QbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IGJvdHRvbSwgdG9wLCBzdGFydCwgcmlnaHQsIGxlZnQsIGF1dG8gfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmZ1bmN0aW9uIGdldEV4cGFuZGVkRmFsbGJhY2tQbGFjZW1lbnRzKHBsYWNlbWVudCkge1xuICBpZiAoZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpID09PSBhdXRvKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgdmFyIG9wcG9zaXRlUGxhY2VtZW50ID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgcmV0dXJuIFtnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudChwbGFjZW1lbnQpLCBvcHBvc2l0ZVBsYWNlbWVudCwgZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQob3Bwb3NpdGVQbGFjZW1lbnQpXTtcbn1cblxuZnVuY3Rpb24gZmxpcChfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZTtcblxuICBpZiAoc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXS5fc2tpcCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyRtYWluQXhpcyA9IG9wdGlvbnMubWFpbkF4aXMsXG4gICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcyxcbiAgICAgIF9vcHRpb25zJGFsdEF4aXMgPSBvcHRpb25zLmFsdEF4aXMsXG4gICAgICBjaGVja0FsdEF4aXMgPSBfb3B0aW9ucyRhbHRBeGlzID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkYWx0QXhpcyxcbiAgICAgIHNwZWNpZmllZEZhbGxiYWNrUGxhY2VtZW50cyA9IG9wdGlvbnMuZmFsbGJhY2tQbGFjZW1lbnRzLFxuICAgICAgcGFkZGluZyA9IG9wdGlvbnMucGFkZGluZyxcbiAgICAgIGJvdW5kYXJ5ID0gb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IG9wdGlvbnMucm9vdEJvdW5kYXJ5LFxuICAgICAgYWx0Qm91bmRhcnkgPSBvcHRpb25zLmFsdEJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkZmxpcFZhcmlhdGlvID0gb3B0aW9ucy5mbGlwVmFyaWF0aW9ucyxcbiAgICAgIGZsaXBWYXJpYXRpb25zID0gX29wdGlvbnMkZmxpcFZhcmlhdGlvID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkZmxpcFZhcmlhdGlvLFxuICAgICAgYWxsb3dlZEF1dG9QbGFjZW1lbnRzID0gb3B0aW9ucy5hbGxvd2VkQXV0b1BsYWNlbWVudHM7XG4gIHZhciBwcmVmZXJyZWRQbGFjZW1lbnQgPSBzdGF0ZS5vcHRpb25zLnBsYWNlbWVudDtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHByZWZlcnJlZFBsYWNlbWVudCk7XG4gIHZhciBpc0Jhc2VQbGFjZW1lbnQgPSBiYXNlUGxhY2VtZW50ID09PSBwcmVmZXJyZWRQbGFjZW1lbnQ7XG4gIHZhciBmYWxsYmFja1BsYWNlbWVudHMgPSBzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMgfHwgKGlzQmFzZVBsYWNlbWVudCB8fCAhZmxpcFZhcmlhdGlvbnMgPyBbZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocHJlZmVycmVkUGxhY2VtZW50KV0gOiBnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyhwcmVmZXJyZWRQbGFjZW1lbnQpKTtcbiAgdmFyIHBsYWNlbWVudHMgPSBbcHJlZmVycmVkUGxhY2VtZW50XS5jb25jYXQoZmFsbGJhY2tQbGFjZW1lbnRzKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgcmV0dXJuIGFjYy5jb25jYXQoZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpID09PSBhdXRvID8gY29tcHV0ZUF1dG9QbGFjZW1lbnQoc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgICAgZmxpcFZhcmlhdGlvbnM6IGZsaXBWYXJpYXRpb25zLFxuICAgICAgYWxsb3dlZEF1dG9QbGFjZW1lbnRzOiBhbGxvd2VkQXV0b1BsYWNlbWVudHNcbiAgICB9KSA6IHBsYWNlbWVudCk7XG4gIH0sIFtdKTtcbiAgdmFyIHJlZmVyZW5jZVJlY3QgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2U7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgY2hlY2tzTWFwID0gbmV3IE1hcCgpO1xuICB2YXIgbWFrZUZhbGxiYWNrQ2hlY2tzID0gdHJ1ZTtcbiAgdmFyIGZpcnN0Rml0dGluZ1BsYWNlbWVudCA9IHBsYWNlbWVudHNbMF07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwbGFjZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHBsYWNlbWVudCA9IHBsYWNlbWVudHNbaV07XG5cbiAgICB2YXIgX2Jhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCk7XG5cbiAgICB2YXIgaXNTdGFydFZhcmlhdGlvbiA9IGdldFZhcmlhdGlvbihwbGFjZW1lbnQpID09PSBzdGFydDtcbiAgICB2YXIgaXNWZXJ0aWNhbCA9IFt0b3AsIGJvdHRvbV0uaW5kZXhPZihfYmFzZVBsYWNlbWVudCkgPj0gMDtcbiAgICB2YXIgbGVuID0gaXNWZXJ0aWNhbCA/ICd3aWR0aCcgOiAnaGVpZ2h0JztcbiAgICB2YXIgb3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBib3VuZGFyeTogYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmdcbiAgICB9KTtcbiAgICB2YXIgbWFpblZhcmlhdGlvblNpZGUgPSBpc1ZlcnRpY2FsID8gaXNTdGFydFZhcmlhdGlvbiA/IHJpZ2h0IDogbGVmdCA6IGlzU3RhcnRWYXJpYXRpb24gPyBib3R0b20gOiB0b3A7XG5cbiAgICBpZiAocmVmZXJlbmNlUmVjdFtsZW5dID4gcG9wcGVyUmVjdFtsZW5dKSB7XG4gICAgICBtYWluVmFyaWF0aW9uU2lkZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KG1haW5WYXJpYXRpb25TaWRlKTtcbiAgICB9XG5cbiAgICB2YXIgYWx0VmFyaWF0aW9uU2lkZSA9IGdldE9wcG9zaXRlUGxhY2VtZW50KG1haW5WYXJpYXRpb25TaWRlKTtcbiAgICB2YXIgY2hlY2tzID0gW107XG5cbiAgICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgICAgY2hlY2tzLnB1c2gob3ZlcmZsb3dbX2Jhc2VQbGFjZW1lbnRdIDw9IDApO1xuICAgIH1cblxuICAgIGlmIChjaGVja0FsdEF4aXMpIHtcbiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W21haW5WYXJpYXRpb25TaWRlXSA8PSAwLCBvdmVyZmxvd1thbHRWYXJpYXRpb25TaWRlXSA8PSAwKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tzLmV2ZXJ5KGZ1bmN0aW9uIChjaGVjaykge1xuICAgICAgcmV0dXJuIGNoZWNrO1xuICAgIH0pKSB7XG4gICAgICBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnQ7XG4gICAgICBtYWtlRmFsbGJhY2tDaGVja3MgPSBmYWxzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGNoZWNrc01hcC5zZXQocGxhY2VtZW50LCBjaGVja3MpO1xuICB9XG5cbiAgaWYgKG1ha2VGYWxsYmFja0NoZWNrcykge1xuICAgIC8vIGAyYCBtYXkgYmUgZGVzaXJlZCBpbiBzb21lIGNhc2VzIOKAkyByZXNlYXJjaCBsYXRlclxuICAgIHZhciBudW1iZXJPZkNoZWNrcyA9IGZsaXBWYXJpYXRpb25zID8gMyA6IDE7XG5cbiAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChfaSkge1xuICAgICAgdmFyIGZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRzLmZpbmQoZnVuY3Rpb24gKHBsYWNlbWVudCkge1xuICAgICAgICB2YXIgY2hlY2tzID0gY2hlY2tzTWFwLmdldChwbGFjZW1lbnQpO1xuXG4gICAgICAgIGlmIChjaGVja3MpIHtcbiAgICAgICAgICByZXR1cm4gY2hlY2tzLnNsaWNlKDAsIF9pKS5ldmVyeShmdW5jdGlvbiAoY2hlY2spIHtcbiAgICAgICAgICAgIHJldHVybiBjaGVjaztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChmaXR0aW5nUGxhY2VtZW50KSB7XG4gICAgICAgIGZpcnN0Rml0dGluZ1BsYWNlbWVudCA9IGZpdHRpbmdQbGFjZW1lbnQ7XG4gICAgICAgIHJldHVybiBcImJyZWFrXCI7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIF9pID0gbnVtYmVyT2ZDaGVja3M7IF9pID4gMDsgX2ktLSkge1xuICAgICAgdmFyIF9yZXQgPSBfbG9vcChfaSk7XG5cbiAgICAgIGlmIChfcmV0ID09PSBcImJyZWFrXCIpIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzdGF0ZS5wbGFjZW1lbnQgIT09IGZpcnN0Rml0dGluZ1BsYWNlbWVudCkge1xuICAgIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0uX3NraXAgPSB0cnVlO1xuICAgIHN0YXRlLnBsYWNlbWVudCA9IGZpcnN0Rml0dGluZ1BsYWNlbWVudDtcbiAgICBzdGF0ZS5yZXNldCA9IHRydWU7XG4gIH1cbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2ZsaXAnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogZmxpcCxcbiAgcmVxdWlyZXNJZkV4aXN0czogWydvZmZzZXQnXSxcbiAgZGF0YToge1xuICAgIF9za2lwOiBmYWxzZVxuICB9XG59OyIsImltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4vZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgeyB2YXJpYXRpb25QbGFjZW1lbnRzLCBiYXNlUGxhY2VtZW50cywgcGxhY2VtZW50cyBhcyBhbGxQbGFjZW1lbnRzIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4vZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IF9vcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucy5wYWRkaW5nLFxuICAgICAgZmxpcFZhcmlhdGlvbnMgPSBfb3B0aW9ucy5mbGlwVmFyaWF0aW9ucyxcbiAgICAgIF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9IF9vcHRpb25zLmFsbG93ZWRBdXRvUGxhY2VtZW50cyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9PT0gdm9pZCAwID8gYWxsUGxhY2VtZW50cyA6IF9vcHRpb25zJGFsbG93ZWRBdXRvUDtcbiAgdmFyIHZhcmlhdGlvbiA9IGdldFZhcmlhdGlvbihwbGFjZW1lbnQpO1xuICB2YXIgcGxhY2VtZW50cyA9IHZhcmlhdGlvbiA/IGZsaXBWYXJpYXRpb25zID8gdmFyaWF0aW9uUGxhY2VtZW50cyA6IHZhcmlhdGlvblBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkgPT09IHZhcmlhdGlvbjtcbiAgfSkgOiBiYXNlUGxhY2VtZW50cztcbiAgdmFyIGFsbG93ZWRQbGFjZW1lbnRzID0gcGxhY2VtZW50cy5maWx0ZXIoZnVuY3Rpb24gKHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhbGxvd2VkQXV0b1BsYWNlbWVudHMuaW5kZXhPZihwbGFjZW1lbnQpID49IDA7XG4gIH0pO1xuXG4gIGlmIChhbGxvd2VkUGxhY2VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBUaGUgYGFsbG93ZWRBdXRvUGxhY2VtZW50c2Agb3B0aW9uIGRpZCBub3QgYWxsb3cgYW55JywgJ3BsYWNlbWVudHMuIEVuc3VyZSB0aGUgYHBsYWNlbWVudGAgb3B0aW9uIG1hdGNoZXMgdGhlIHZhcmlhdGlvbicsICdvZiB0aGUgYWxsb3dlZCBwbGFjZW1lbnRzLicsICdGb3IgZXhhbXBsZSwgXCJhdXRvXCIgY2Fubm90IGJlIHVzZWQgdG8gYWxsb3cgXCJib3R0b20tc3RhcnRcIi4nLCAnVXNlIFwiYXV0by1zdGFydFwiIGluc3RlYWQuJ10uam9pbignICcpKTtcbiAgICB9XG4gIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdHlwZV06IEZsb3cgc2VlbXMgdG8gaGF2ZSBwcm9ibGVtcyB3aXRoIHR3byBhcnJheSB1bmlvbnMuLi5cblxuXG4gIHZhciBvdmVyZmxvd3MgPSBhbGxvd2VkUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gICAgYWNjW3BsYWNlbWVudF0gPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBib3VuZGFyeTogYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmc6IHBhZGRpbmdcbiAgICB9KVtnZXRCYXNlUGxhY2VtZW50KHBsYWNlbWVudCldO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG92ZXJmbG93cykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBvdmVyZmxvd3NbYV0gLSBvdmVyZmxvd3NbYl07XG4gIH0pO1xufSIsImltcG9ydCB7IG1heCBhcyBtYXRoTWF4LCBtaW4gYXMgbWF0aE1pbiB9IGZyb20gXCIuL21hdGguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB3aXRoaW4obWluLCB2YWx1ZSwgbWF4KSB7XG4gIHJldHVybiBtYXRoTWF4KG1pbiwgbWF0aE1pbih2YWx1ZSwgbWF4KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gd2l0aGluTWF4Q2xhbXAobWluLCB2YWx1ZSwgbWF4KSB7XG4gIHZhciB2ID0gd2l0aGluKG1pbiwgdmFsdWUsIG1heCk7XG4gIHJldHVybiB2ID4gbWF4ID8gbWF4IDogdjtcbn0iLCJpbXBvcnQgeyB0b3AsIGxlZnQsIHJpZ2h0LCBib3R0b20sIHN0YXJ0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0QWx0QXhpcyBmcm9tIFwiLi4vdXRpbHMvZ2V0QWx0QXhpcy5qc1wiO1xuaW1wb3J0IHsgd2l0aGluLCB3aXRoaW5NYXhDbGFtcCB9IGZyb20gXCIuLi91dGlscy93aXRoaW4uanNcIjtcbmltcG9ydCBnZXRMYXlvdXRSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qc1wiO1xuaW1wb3J0IGdldFZhcmlhdGlvbiBmcm9tIFwiLi4vdXRpbHMvZ2V0VmFyaWF0aW9uLmpzXCI7XG5pbXBvcnQgZ2V0RnJlc2hTaWRlT2JqZWN0IGZyb20gXCIuLi91dGlscy9nZXRGcmVzaFNpZGVPYmplY3QuanNcIjtcbmltcG9ydCB7IG1pbiBhcyBtYXRoTWluLCBtYXggYXMgbWF0aE1heCB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIHByZXZlbnRPdmVyZmxvdyhfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZTtcbiAgdmFyIF9vcHRpb25zJG1haW5BeGlzID0gb3B0aW9ucy5tYWluQXhpcyxcbiAgICAgIGNoZWNrTWFpbkF4aXMgPSBfb3B0aW9ucyRtYWluQXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJG1haW5BeGlzLFxuICAgICAgX29wdGlvbnMkYWx0QXhpcyA9IG9wdGlvbnMuYWx0QXhpcyxcbiAgICAgIGNoZWNrQWx0QXhpcyA9IF9vcHRpb25zJGFsdEF4aXMgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkYWx0QXhpcyxcbiAgICAgIGJvdW5kYXJ5ID0gb3B0aW9ucy5ib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeSA9IG9wdGlvbnMucm9vdEJvdW5kYXJ5LFxuICAgICAgYWx0Qm91bmRhcnkgPSBvcHRpb25zLmFsdEJvdW5kYXJ5LFxuICAgICAgcGFkZGluZyA9IG9wdGlvbnMucGFkZGluZyxcbiAgICAgIF9vcHRpb25zJHRldGhlciA9IG9wdGlvbnMudGV0aGVyLFxuICAgICAgdGV0aGVyID0gX29wdGlvbnMkdGV0aGVyID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkdGV0aGVyLFxuICAgICAgX29wdGlvbnMkdGV0aGVyT2Zmc2V0ID0gb3B0aW9ucy50ZXRoZXJPZmZzZXQsXG4gICAgICB0ZXRoZXJPZmZzZXQgPSBfb3B0aW9ucyR0ZXRoZXJPZmZzZXQgPT09IHZvaWQgMCA/IDAgOiBfb3B0aW9ucyR0ZXRoZXJPZmZzZXQ7XG4gIHZhciBvdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LFxuICAgIHBhZGRpbmc6IHBhZGRpbmcsXG4gICAgYWx0Qm91bmRhcnk6IGFsdEJvdW5kYXJ5XG4gIH0pO1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQoc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIHZhcmlhdGlvbiA9IGdldFZhcmlhdGlvbihzdGF0ZS5wbGFjZW1lbnQpO1xuICB2YXIgaXNCYXNlUGxhY2VtZW50ID0gIXZhcmlhdGlvbjtcbiAgdmFyIG1haW5BeGlzID0gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KGJhc2VQbGFjZW1lbnQpO1xuICB2YXIgYWx0QXhpcyA9IGdldEFsdEF4aXMobWFpbkF4aXMpO1xuICB2YXIgcG9wcGVyT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cztcbiAgdmFyIHJlZmVyZW5jZVJlY3QgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2U7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgdGV0aGVyT2Zmc2V0VmFsdWUgPSB0eXBlb2YgdGV0aGVyT2Zmc2V0ID09PSAnZnVuY3Rpb24nID8gdGV0aGVyT2Zmc2V0KE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSkpIDogdGV0aGVyT2Zmc2V0O1xuICB2YXIgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldFZhbHVlID09PSAnbnVtYmVyJyA/IHtcbiAgICBtYWluQXhpczogdGV0aGVyT2Zmc2V0VmFsdWUsXG4gICAgYWx0QXhpczogdGV0aGVyT2Zmc2V0VmFsdWVcbiAgfSA6IE9iamVjdC5hc3NpZ24oe1xuICAgIG1haW5BeGlzOiAwLFxuICAgIGFsdEF4aXM6IDBcbiAgfSwgdGV0aGVyT2Zmc2V0VmFsdWUpO1xuICB2YXIgb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9IHN0YXRlLm1vZGlmaWVyc0RhdGEub2Zmc2V0ID8gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXRbc3RhdGUucGxhY2VtZW50XSA6IG51bGw7XG4gIHZhciBkYXRhID0ge1xuICAgIHg6IDAsXG4gICAgeTogMFxuICB9O1xuXG4gIGlmICghcG9wcGVyT2Zmc2V0cykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChjaGVja01haW5BeGlzKSB7XG4gICAgdmFyIF9vZmZzZXRNb2RpZmllclN0YXRlJDtcblxuICAgIHZhciBtYWluU2lkZSA9IG1haW5BeGlzID09PSAneScgPyB0b3AgOiBsZWZ0O1xuICAgIHZhciBhbHRTaWRlID0gbWFpbkF4aXMgPT09ICd5JyA/IGJvdHRvbSA6IHJpZ2h0O1xuICAgIHZhciBsZW4gPSBtYWluQXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuICAgIHZhciBvZmZzZXQgPSBwb3BwZXJPZmZzZXRzW21haW5BeGlzXTtcbiAgICB2YXIgbWluID0gb2Zmc2V0ICsgb3ZlcmZsb3dbbWFpblNpZGVdO1xuICAgIHZhciBtYXggPSBvZmZzZXQgLSBvdmVyZmxvd1thbHRTaWRlXTtcbiAgICB2YXIgYWRkaXRpdmUgPSB0ZXRoZXIgPyAtcG9wcGVyUmVjdFtsZW5dIC8gMiA6IDA7XG4gICAgdmFyIG1pbkxlbiA9IHZhcmlhdGlvbiA9PT0gc3RhcnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gOiBwb3BwZXJSZWN0W2xlbl07XG4gICAgdmFyIG1heExlbiA9IHZhcmlhdGlvbiA9PT0gc3RhcnQgPyAtcG9wcGVyUmVjdFtsZW5dIDogLXJlZmVyZW5jZVJlY3RbbGVuXTsgLy8gV2UgbmVlZCB0byBpbmNsdWRlIHRoZSBhcnJvdyBpbiB0aGUgY2FsY3VsYXRpb24gc28gdGhlIGFycm93IGRvZXNuJ3QgZ29cbiAgICAvLyBvdXRzaWRlIHRoZSByZWZlcmVuY2UgYm91bmRzXG5cbiAgICB2YXIgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3c7XG4gICAgdmFyIGFycm93UmVjdCA9IHRldGhlciAmJiBhcnJvd0VsZW1lbnQgPyBnZXRMYXlvdXRSZWN0KGFycm93RWxlbWVudCkgOiB7XG4gICAgICB3aWR0aDogMCxcbiAgICAgIGhlaWdodDogMFxuICAgIH07XG4gICAgdmFyIGFycm93UGFkZGluZ09iamVjdCA9IHN0YXRlLm1vZGlmaWVyc0RhdGFbJ2Fycm93I3BlcnNpc3RlbnQnXSA/IHN0YXRlLm1vZGlmaWVyc0RhdGFbJ2Fycm93I3BlcnNpc3RlbnQnXS5wYWRkaW5nIDogZ2V0RnJlc2hTaWRlT2JqZWN0KCk7XG4gICAgdmFyIGFycm93UGFkZGluZ01pbiA9IGFycm93UGFkZGluZ09iamVjdFttYWluU2lkZV07XG4gICAgdmFyIGFycm93UGFkZGluZ01heCA9IGFycm93UGFkZGluZ09iamVjdFthbHRTaWRlXTsgLy8gSWYgdGhlIHJlZmVyZW5jZSBsZW5ndGggaXMgc21hbGxlciB0aGFuIHRoZSBhcnJvdyBsZW5ndGgsIHdlIGRvbid0IHdhbnRcbiAgICAvLyB0byBpbmNsdWRlIGl0cyBmdWxsIHNpemUgaW4gdGhlIGNhbGN1bGF0aW9uLiBJZiB0aGUgcmVmZXJlbmNlIGlzIHNtYWxsXG4gICAgLy8gYW5kIG5lYXIgdGhlIGVkZ2Ugb2YgYSBib3VuZGFyeSwgdGhlIHBvcHBlciBjYW4gb3ZlcmZsb3cgZXZlbiBpZiB0aGVcbiAgICAvLyByZWZlcmVuY2UgaXMgbm90IG92ZXJmbG93aW5nIGFzIHdlbGwgKGUuZy4gdmlydHVhbCBlbGVtZW50cyB3aXRoIG5vXG4gICAgLy8gd2lkdGggb3IgaGVpZ2h0KVxuXG4gICAgdmFyIGFycm93TGVuID0gd2l0aGluKDAsIHJlZmVyZW5jZVJlY3RbbGVuXSwgYXJyb3dSZWN0W2xlbl0pO1xuICAgIHZhciBtaW5PZmZzZXQgPSBpc0Jhc2VQbGFjZW1lbnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gLyAyIC0gYWRkaXRpdmUgLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcyA6IG1pbkxlbiAtIGFycm93TGVuIC0gYXJyb3dQYWRkaW5nTWluIC0gbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzO1xuICAgIHZhciBtYXhPZmZzZXQgPSBpc0Jhc2VQbGFjZW1lbnQgPyAtcmVmZXJlbmNlUmVjdFtsZW5dIC8gMiArIGFkZGl0aXZlICsgYXJyb3dMZW4gKyBhcnJvd1BhZGRpbmdNYXggKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXMgOiBtYXhMZW4gKyBhcnJvd0xlbiArIGFycm93UGFkZGluZ01heCArIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcztcbiAgICB2YXIgYXJyb3dPZmZzZXRQYXJlbnQgPSBzdGF0ZS5lbGVtZW50cy5hcnJvdyAmJiBnZXRPZmZzZXRQYXJlbnQoc3RhdGUuZWxlbWVudHMuYXJyb3cpO1xuICAgIHZhciBjbGllbnRPZmZzZXQgPSBhcnJvd09mZnNldFBhcmVudCA/IG1haW5BeGlzID09PSAneScgPyBhcnJvd09mZnNldFBhcmVudC5jbGllbnRUb3AgfHwgMCA6IGFycm93T2Zmc2V0UGFyZW50LmNsaWVudExlZnQgfHwgMCA6IDA7XG4gICAgdmFyIG9mZnNldE1vZGlmaWVyVmFsdWUgPSAoX29mZnNldE1vZGlmaWVyU3RhdGUkID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVttYWluQXhpc10pICE9IG51bGwgPyBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQgOiAwO1xuICAgIHZhciB0ZXRoZXJNaW4gPSBvZmZzZXQgKyBtaW5PZmZzZXQgLSBvZmZzZXRNb2RpZmllclZhbHVlIC0gY2xpZW50T2Zmc2V0O1xuICAgIHZhciB0ZXRoZXJNYXggPSBvZmZzZXQgKyBtYXhPZmZzZXQgLSBvZmZzZXRNb2RpZmllclZhbHVlO1xuICAgIHZhciBwcmV2ZW50ZWRPZmZzZXQgPSB3aXRoaW4odGV0aGVyID8gbWF0aE1pbihtaW4sIHRldGhlck1pbikgOiBtaW4sIG9mZnNldCwgdGV0aGVyID8gbWF0aE1heChtYXgsIHRldGhlck1heCkgOiBtYXgpO1xuICAgIHBvcHBlck9mZnNldHNbbWFpbkF4aXNdID0gcHJldmVudGVkT2Zmc2V0O1xuICAgIGRhdGFbbWFpbkF4aXNdID0gcHJldmVudGVkT2Zmc2V0IC0gb2Zmc2V0O1xuICB9XG5cbiAgaWYgKGNoZWNrQWx0QXhpcykge1xuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyO1xuXG4gICAgdmFyIF9tYWluU2lkZSA9IG1haW5BeGlzID09PSAneCcgPyB0b3AgOiBsZWZ0O1xuXG4gICAgdmFyIF9hbHRTaWRlID0gbWFpbkF4aXMgPT09ICd4JyA/IGJvdHRvbSA6IHJpZ2h0O1xuXG4gICAgdmFyIF9vZmZzZXQgPSBwb3BwZXJPZmZzZXRzW2FsdEF4aXNdO1xuXG4gICAgdmFyIF9sZW4gPSBhbHRBeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG5cbiAgICB2YXIgX21pbiA9IF9vZmZzZXQgKyBvdmVyZmxvd1tfbWFpblNpZGVdO1xuXG4gICAgdmFyIF9tYXggPSBfb2Zmc2V0IC0gb3ZlcmZsb3dbX2FsdFNpZGVdO1xuXG4gICAgdmFyIGlzT3JpZ2luU2lkZSA9IFt0b3AsIGxlZnRdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgIT09IC0xO1xuXG4gICAgdmFyIF9vZmZzZXRNb2RpZmllclZhbHVlID0gKF9vZmZzZXRNb2RpZmllclN0YXRlJDIgPSBvZmZzZXRNb2RpZmllclN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBvZmZzZXRNb2RpZmllclN0YXRlW2FsdEF4aXNdKSAhPSBudWxsID8gX29mZnNldE1vZGlmaWVyU3RhdGUkMiA6IDA7XG5cbiAgICB2YXIgX3RldGhlck1pbiA9IGlzT3JpZ2luU2lkZSA/IF9taW4gOiBfb2Zmc2V0IC0gcmVmZXJlbmNlUmVjdFtfbGVuXSAtIHBvcHBlclJlY3RbX2xlbl0gLSBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSArIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5hbHRBeGlzO1xuXG4gICAgdmFyIF90ZXRoZXJNYXggPSBpc09yaWdpblNpZGUgPyBfb2Zmc2V0ICsgcmVmZXJlbmNlUmVjdFtfbGVuXSArIHBvcHBlclJlY3RbX2xlbl0gLSBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5hbHRBeGlzIDogX21heDtcblxuICAgIHZhciBfcHJldmVudGVkT2Zmc2V0ID0gdGV0aGVyICYmIGlzT3JpZ2luU2lkZSA/IHdpdGhpbk1heENsYW1wKF90ZXRoZXJNaW4sIF9vZmZzZXQsIF90ZXRoZXJNYXgpIDogd2l0aGluKHRldGhlciA/IF90ZXRoZXJNaW4gOiBfbWluLCBfb2Zmc2V0LCB0ZXRoZXIgPyBfdGV0aGVyTWF4IDogX21heCk7XG5cbiAgICBwb3BwZXJPZmZzZXRzW2FsdEF4aXNdID0gX3ByZXZlbnRlZE9mZnNldDtcbiAgICBkYXRhW2FsdEF4aXNdID0gX3ByZXZlbnRlZE9mZnNldCAtIF9vZmZzZXQ7XG4gIH1cblxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gZGF0YTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3ByZXZlbnRPdmVyZmxvdycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIGZuOiBwcmV2ZW50T3ZlcmZsb3csXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsnb2Zmc2V0J11cbn07IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QWx0QXhpcyhheGlzKSB7XG4gIHJldHVybiBheGlzID09PSAneCcgPyAneScgOiAneCc7XG59IiwiaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRMYXlvdXRSZWN0IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qc1wiO1xuaW1wb3J0IGNvbnRhaW5zIGZyb20gXCIuLi9kb20tdXRpbHMvY29udGFpbnMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IHsgd2l0aGluIH0gZnJvbSBcIi4uL3V0aWxzL3dpdGhpbi5qc1wiO1xuaW1wb3J0IG1lcmdlUGFkZGluZ09iamVjdCBmcm9tIFwiLi4vdXRpbHMvbWVyZ2VQYWRkaW5nT2JqZWN0LmpzXCI7XG5pbXBvcnQgZXhwYW5kVG9IYXNoTWFwIGZyb20gXCIuLi91dGlscy9leHBhbmRUb0hhc2hNYXAuanNcIjtcbmltcG9ydCB7IGxlZnQsIHJpZ2h0LCBiYXNlUGxhY2VtZW50cywgdG9wLCBib3R0b20gfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG52YXIgdG9QYWRkaW5nT2JqZWN0ID0gZnVuY3Rpb24gdG9QYWRkaW5nT2JqZWN0KHBhZGRpbmcsIHN0YXRlKSB7XG4gIHBhZGRpbmcgPSB0eXBlb2YgcGFkZGluZyA9PT0gJ2Z1bmN0aW9uJyA/IHBhZGRpbmcoT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUucmVjdHMsIHtcbiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudFxuICB9KSkgOiBwYWRkaW5nO1xuICByZXR1cm4gbWVyZ2VQYWRkaW5nT2JqZWN0KHR5cGVvZiBwYWRkaW5nICE9PSAnbnVtYmVyJyA/IHBhZGRpbmcgOiBleHBhbmRUb0hhc2hNYXAocGFkZGluZywgYmFzZVBsYWNlbWVudHMpKTtcbn07XG5cbmZ1bmN0aW9uIGFycm93KF9yZWYpIHtcbiAgdmFyIF9zdGF0ZSRtb2RpZmllcnNEYXRhJDtcblxuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnM7XG4gIHZhciBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5hcnJvdztcbiAgdmFyIHBvcHBlck9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHM7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChzdGF0ZS5wbGFjZW1lbnQpO1xuICB2YXIgYXhpcyA9IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KTtcbiAgdmFyIGlzVmVydGljYWwgPSBbbGVmdCwgcmlnaHRdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMDtcbiAgdmFyIGxlbiA9IGlzVmVydGljYWwgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG5cbiAgaWYgKCFhcnJvd0VsZW1lbnQgfHwgIXBvcHBlck9mZnNldHMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgcGFkZGluZ09iamVjdCA9IHRvUGFkZGluZ09iamVjdChvcHRpb25zLnBhZGRpbmcsIHN0YXRlKTtcbiAgdmFyIGFycm93UmVjdCA9IGdldExheW91dFJlY3QoYXJyb3dFbGVtZW50KTtcbiAgdmFyIG1pblByb3AgPSBheGlzID09PSAneScgPyB0b3AgOiBsZWZ0O1xuICB2YXIgbWF4UHJvcCA9IGF4aXMgPT09ICd5JyA/IGJvdHRvbSA6IHJpZ2h0O1xuICB2YXIgZW5kRGlmZiA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtsZW5dICsgc3RhdGUucmVjdHMucmVmZXJlbmNlW2F4aXNdIC0gcG9wcGVyT2Zmc2V0c1theGlzXSAtIHN0YXRlLnJlY3RzLnBvcHBlcltsZW5dO1xuICB2YXIgc3RhcnREaWZmID0gcG9wcGVyT2Zmc2V0c1theGlzXSAtIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXTtcbiAgdmFyIGFycm93T2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KGFycm93RWxlbWVudCk7XG4gIHZhciBjbGllbnRTaXplID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBheGlzID09PSAneScgPyBhcnJvd09mZnNldFBhcmVudC5jbGllbnRIZWlnaHQgfHwgMCA6IGFycm93T2Zmc2V0UGFyZW50LmNsaWVudFdpZHRoIHx8IDAgOiAwO1xuICB2YXIgY2VudGVyVG9SZWZlcmVuY2UgPSBlbmREaWZmIC8gMiAtIHN0YXJ0RGlmZiAvIDI7IC8vIE1ha2Ugc3VyZSB0aGUgYXJyb3cgZG9lc24ndCBvdmVyZmxvdyB0aGUgcG9wcGVyIGlmIHRoZSBjZW50ZXIgcG9pbnQgaXNcbiAgLy8gb3V0c2lkZSBvZiB0aGUgcG9wcGVyIGJvdW5kc1xuXG4gIHZhciBtaW4gPSBwYWRkaW5nT2JqZWN0W21pblByb3BdO1xuICB2YXIgbWF4ID0gY2xpZW50U2l6ZSAtIGFycm93UmVjdFtsZW5dIC0gcGFkZGluZ09iamVjdFttYXhQcm9wXTtcbiAgdmFyIGNlbnRlciA9IGNsaWVudFNpemUgLyAyIC0gYXJyb3dSZWN0W2xlbl0gLyAyICsgY2VudGVyVG9SZWZlcmVuY2U7XG4gIHZhciBvZmZzZXQgPSB3aXRoaW4obWluLCBjZW50ZXIsIG1heCk7IC8vIFByZXZlbnRzIGJyZWFraW5nIHN5bnRheCBoaWdobGlnaHRpbmcuLi5cblxuICB2YXIgYXhpc1Byb3AgPSBheGlzO1xuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gKF9zdGF0ZSRtb2RpZmllcnNEYXRhJCA9IHt9LCBfc3RhdGUkbW9kaWZpZXJzRGF0YSRbYXhpc1Byb3BdID0gb2Zmc2V0LCBfc3RhdGUkbW9kaWZpZXJzRGF0YSQuY2VudGVyT2Zmc2V0ID0gb2Zmc2V0IC0gY2VudGVyLCBfc3RhdGUkbW9kaWZpZXJzRGF0YSQpO1xufVxuXG5mdW5jdGlvbiBlZmZlY3QoX3JlZjIpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjIub3B0aW9ucztcbiAgdmFyIF9vcHRpb25zJGVsZW1lbnQgPSBvcHRpb25zLmVsZW1lbnQsXG4gICAgICBhcnJvd0VsZW1lbnQgPSBfb3B0aW9ucyRlbGVtZW50ID09PSB2b2lkIDAgPyAnW2RhdGEtcG9wcGVyLWFycm93XScgOiBfb3B0aW9ucyRlbGVtZW50O1xuXG4gIGlmIChhcnJvd0VsZW1lbnQgPT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfSAvLyBDU1Mgc2VsZWN0b3JcblxuXG4gIGlmICh0eXBlb2YgYXJyb3dFbGVtZW50ID09PSAnc3RyaW5nJykge1xuICAgIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLnBvcHBlci5xdWVyeVNlbGVjdG9yKGFycm93RWxlbWVudCk7XG5cbiAgICBpZiAoIWFycm93RWxlbWVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBpZiAoIWlzSFRNTEVsZW1lbnQoYXJyb3dFbGVtZW50KSkge1xuICAgICAgY29uc29sZS5lcnJvcihbJ1BvcHBlcjogXCJhcnJvd1wiIGVsZW1lbnQgbXVzdCBiZSBhbiBIVE1MRWxlbWVudCAobm90IGFuIFNWR0VsZW1lbnQpLicsICdUbyB1c2UgYW4gU1ZHIGFycm93LCB3cmFwIGl0IGluIGFuIEhUTUxFbGVtZW50IHRoYXQgd2lsbCBiZSB1c2VkIGFzJywgJ3RoZSBhcnJvdy4nXS5qb2luKCcgJykpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29udGFpbnMoc3RhdGUuZWxlbWVudHMucG9wcGVyLCBhcnJvd0VsZW1lbnQpKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgY29uc29sZS5lcnJvcihbJ1BvcHBlcjogXCJhcnJvd1wiIG1vZGlmaWVyXFwncyBgZWxlbWVudGAgbXVzdCBiZSBhIGNoaWxkIG9mIHRoZSBwb3BwZXInLCAnZWxlbWVudC4nXS5qb2luKCcgJykpO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHN0YXRlLmVsZW1lbnRzLmFycm93ID0gYXJyb3dFbGVtZW50O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnYXJyb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogYXJyb3csXG4gIGVmZmVjdDogZWZmZWN0LFxuICByZXF1aXJlczogWydwb3BwZXJPZmZzZXRzJ10sXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsncHJldmVudE92ZXJmbG93J11cbn07IiwiaW1wb3J0IHsgdG9wLCBib3R0b20sIGxlZnQsIHJpZ2h0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4uL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5cbmZ1bmN0aW9uIGdldFNpZGVPZmZzZXRzKG92ZXJmbG93LCByZWN0LCBwcmV2ZW50ZWRPZmZzZXRzKSB7XG4gIGlmIChwcmV2ZW50ZWRPZmZzZXRzID09PSB2b2lkIDApIHtcbiAgICBwcmV2ZW50ZWRPZmZzZXRzID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDBcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0b3A6IG92ZXJmbG93LnRvcCAtIHJlY3QuaGVpZ2h0IC0gcHJldmVudGVkT2Zmc2V0cy55LFxuICAgIHJpZ2h0OiBvdmVyZmxvdy5yaWdodCAtIHJlY3Qud2lkdGggKyBwcmV2ZW50ZWRPZmZzZXRzLngsXG4gICAgYm90dG9tOiBvdmVyZmxvdy5ib3R0b20gLSByZWN0LmhlaWdodCArIHByZXZlbnRlZE9mZnNldHMueSxcbiAgICBsZWZ0OiBvdmVyZmxvdy5sZWZ0IC0gcmVjdC53aWR0aCAtIHByZXZlbnRlZE9mZnNldHMueFxuICB9O1xufVxuXG5mdW5jdGlvbiBpc0FueVNpZGVGdWxseUNsaXBwZWQob3ZlcmZsb3cpIHtcbiAgcmV0dXJuIFt0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnRdLnNvbWUoZnVuY3Rpb24gKHNpZGUpIHtcbiAgICByZXR1cm4gb3ZlcmZsb3dbc2lkZV0gPj0gMDtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGhpZGUoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZTtcbiAgdmFyIHJlZmVyZW5jZVJlY3QgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2U7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgcHJldmVudGVkT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucHJldmVudE92ZXJmbG93O1xuICB2YXIgcmVmZXJlbmNlT3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGVsZW1lbnRDb250ZXh0OiAncmVmZXJlbmNlJ1xuICB9KTtcbiAgdmFyIHBvcHBlckFsdE92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICBhbHRCb3VuZGFyeTogdHJ1ZVxuICB9KTtcbiAgdmFyIHJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cyA9IGdldFNpZGVPZmZzZXRzKHJlZmVyZW5jZU92ZXJmbG93LCByZWZlcmVuY2VSZWN0KTtcbiAgdmFyIHBvcHBlckVzY2FwZU9mZnNldHMgPSBnZXRTaWRlT2Zmc2V0cyhwb3BwZXJBbHRPdmVyZmxvdywgcG9wcGVyUmVjdCwgcHJldmVudGVkT2Zmc2V0cyk7XG4gIHZhciBpc1JlZmVyZW5jZUhpZGRlbiA9IGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChyZWZlcmVuY2VDbGlwcGluZ09mZnNldHMpO1xuICB2YXIgaGFzUG9wcGVyRXNjYXBlZCA9IGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChwb3BwZXJFc2NhcGVPZmZzZXRzKTtcbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IHtcbiAgICByZWZlcmVuY2VDbGlwcGluZ09mZnNldHM6IHJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cyxcbiAgICBwb3BwZXJFc2NhcGVPZmZzZXRzOiBwb3BwZXJFc2NhcGVPZmZzZXRzLFxuICAgIGlzUmVmZXJlbmNlSGlkZGVuOiBpc1JlZmVyZW5jZUhpZGRlbixcbiAgICBoYXNQb3BwZXJFc2NhcGVkOiBoYXNQb3BwZXJFc2NhcGVkXG4gIH07XG4gIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUuYXR0cmlidXRlcy5wb3BwZXIsIHtcbiAgICAnZGF0YS1wb3BwZXItcmVmZXJlbmNlLWhpZGRlbic6IGlzUmVmZXJlbmNlSGlkZGVuLFxuICAgICdkYXRhLXBvcHBlci1lc2NhcGVkJzogaGFzUG9wcGVyRXNjYXBlZFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2hpZGUnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ3ByZXZlbnRPdmVyZmxvdyddLFxuICBmbjogaGlkZVxufTsiLCJpbXBvcnQgeyBwb3BwZXJHZW5lcmF0b3IsIGRldGVjdE92ZXJmbG93IH0gZnJvbSBcIi4vY3JlYXRlUG9wcGVyLmpzXCI7XG5pbXBvcnQgZXZlbnRMaXN0ZW5lcnMgZnJvbSBcIi4vbW9kaWZpZXJzL2V2ZW50TGlzdGVuZXJzLmpzXCI7XG5pbXBvcnQgcG9wcGVyT2Zmc2V0cyBmcm9tIFwiLi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qc1wiO1xuaW1wb3J0IGNvbXB1dGVTdHlsZXMgZnJvbSBcIi4vbW9kaWZpZXJzL2NvbXB1dGVTdHlsZXMuanNcIjtcbmltcG9ydCBhcHBseVN0eWxlcyBmcm9tIFwiLi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanNcIjtcbmltcG9ydCBvZmZzZXQgZnJvbSBcIi4vbW9kaWZpZXJzL29mZnNldC5qc1wiO1xuaW1wb3J0IGZsaXAgZnJvbSBcIi4vbW9kaWZpZXJzL2ZsaXAuanNcIjtcbmltcG9ydCBwcmV2ZW50T3ZlcmZsb3cgZnJvbSBcIi4vbW9kaWZpZXJzL3ByZXZlbnRPdmVyZmxvdy5qc1wiO1xuaW1wb3J0IGFycm93IGZyb20gXCIuL21vZGlmaWVycy9hcnJvdy5qc1wiO1xuaW1wb3J0IGhpZGUgZnJvbSBcIi4vbW9kaWZpZXJzL2hpZGUuanNcIjtcbnZhciBkZWZhdWx0TW9kaWZpZXJzID0gW2V2ZW50TGlzdGVuZXJzLCBwb3BwZXJPZmZzZXRzLCBjb21wdXRlU3R5bGVzLCBhcHBseVN0eWxlcywgb2Zmc2V0LCBmbGlwLCBwcmV2ZW50T3ZlcmZsb3csIGFycm93LCBoaWRlXTtcbnZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovcG9wcGVyR2VuZXJhdG9yKHtcbiAgZGVmYXVsdE1vZGlmaWVyczogZGVmYXVsdE1vZGlmaWVyc1xufSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgY3JlYXRlUG9wcGVyLCBwb3BwZXJHZW5lcmF0b3IsIGRlZmF1bHRNb2RpZmllcnMsIGRldGVjdE92ZXJmbG93IH07IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgY3JlYXRlUG9wcGVyIGFzIGNyZWF0ZVBvcHBlckxpdGUgfSBmcm9tIFwiLi9wb3BwZXItbGl0ZS5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCAqIGZyb20gXCIuL21vZGlmaWVycy9pbmRleC5qc1wiOyIsImltcG9ydCBjb21wdXRlT2Zmc2V0cyBmcm9tIFwiLi4vdXRpbHMvY29tcHV0ZU9mZnNldHMuanNcIjtcblxuZnVuY3Rpb24gcG9wcGVyT2Zmc2V0cyhfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBuYW1lID0gX3JlZi5uYW1lO1xuICAvLyBPZmZzZXRzIGFyZSB0aGUgYWN0dWFsIHBvc2l0aW9uIHRoZSBwb3BwZXIgbmVlZHMgdG8gaGF2ZSB0byBiZVxuICAvLyBwcm9wZXJseSBwb3NpdGlvbmVkIG5lYXIgaXRzIHJlZmVyZW5jZSBlbGVtZW50XG4gIC8vIFRoaXMgaXMgdGhlIG1vc3QgYmFzaWMgcGxhY2VtZW50LCBhbmQgd2lsbCBiZSBhZGp1c3RlZCBieVxuICAvLyB0aGUgbW9kaWZpZXJzIGluIHRoZSBuZXh0IHN0ZXBcbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGNvbXB1dGVPZmZzZXRzKHtcbiAgICByZWZlcmVuY2U6IHN0YXRlLnJlY3RzLnJlZmVyZW5jZSxcbiAgICBlbGVtZW50OiBzdGF0ZS5yZWN0cy5wb3BwZXIsXG4gICAgc3RyYXRlZ3k6ICdhYnNvbHV0ZScsXG4gICAgcGxhY2VtZW50OiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSk7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwb3BwZXJPZmZzZXRzJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdyZWFkJyxcbiAgZm46IHBvcHBlck9mZnNldHMsXG4gIGRhdGE6IHt9XG59OyIsIi8qKiFcbiogdGlwcHkuanMgdjYuMy43XG4qIChjKSAyMDE3LTIwMjEgYXRvbWlrc1xuKiBNSVQgTGljZW5zZVxuKi9cbmltcG9ydCB7IGNyZWF0ZVBvcHBlciwgYXBwbHlTdHlsZXMgfSBmcm9tICdAcG9wcGVyanMvY29yZSc7XG5cbnZhciBST1VORF9BUlJPVyA9ICc8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCI2XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNMCA2czEuNzk2LS4wMTMgNC42Ny0zLjYxNUM1Ljg1MS45IDYuOTMuMDA2IDggMGMxLjA3LS4wMDYgMi4xNDguODg3IDMuMzQzIDIuMzg1QzE0LjIzMyA2LjAwNSAxNiA2IDE2IDZIMHpcIj48L3N2Zz4nO1xudmFyIEJPWF9DTEFTUyA9IFwidGlwcHktYm94XCI7XG52YXIgQ09OVEVOVF9DTEFTUyA9IFwidGlwcHktY29udGVudFwiO1xudmFyIEJBQ0tEUk9QX0NMQVNTID0gXCJ0aXBweS1iYWNrZHJvcFwiO1xudmFyIEFSUk9XX0NMQVNTID0gXCJ0aXBweS1hcnJvd1wiO1xudmFyIFNWR19BUlJPV19DTEFTUyA9IFwidGlwcHktc3ZnLWFycm93XCI7XG52YXIgVE9VQ0hfT1BUSU9OUyA9IHtcbiAgcGFzc2l2ZTogdHJ1ZSxcbiAgY2FwdHVyZTogdHJ1ZVxufTtcbnZhciBUSVBQWV9ERUZBVUxUX0FQUEVORF9UTyA9IGZ1bmN0aW9uIFRJUFBZX0RFRkFVTFRfQVBQRU5EX1RPKCkge1xuICByZXR1cm4gZG9jdW1lbnQuYm9keTtcbn07XG5cbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwga2V5KSB7XG4gIHJldHVybiB7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KTtcbn1cbmZ1bmN0aW9uIGdldFZhbHVlQXRJbmRleE9yUmV0dXJuKHZhbHVlLCBpbmRleCwgZGVmYXVsdFZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHZhciB2ID0gdmFsdWVbaW5kZXhdO1xuICAgIHJldHVybiB2ID09IG51bGwgPyBBcnJheS5pc0FycmF5KGRlZmF1bHRWYWx1ZSkgPyBkZWZhdWx0VmFsdWVbaW5kZXhdIDogZGVmYXVsdFZhbHVlIDogdjtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGlzVHlwZSh2YWx1ZSwgdHlwZSkge1xuICB2YXIgc3RyID0ge30udG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIHJldHVybiBzdHIuaW5kZXhPZignW29iamVjdCcpID09PSAwICYmIHN0ci5pbmRleE9mKHR5cGUgKyBcIl1cIikgPiAtMTtcbn1cbmZ1bmN0aW9uIGludm9rZVdpdGhBcmdzT3JSZXR1cm4odmFsdWUsIGFyZ3MpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlLmFwcGx5KHZvaWQgMCwgYXJncykgOiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGRlYm91bmNlKGZuLCBtcykge1xuICAvLyBBdm9pZCB3cmFwcGluZyBpbiBgc2V0VGltZW91dGAgaWYgbXMgaXMgMCBhbnl3YXlcbiAgaWYgKG1zID09PSAwKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHRpbWVvdXQ7XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGZuKGFyZyk7XG4gICAgfSwgbXMpO1xuICB9O1xufVxuZnVuY3Rpb24gcmVtb3ZlUHJvcGVydGllcyhvYmosIGtleXMpIHtcbiAgdmFyIGNsb25lID0gT2JqZWN0LmFzc2lnbih7fSwgb2JqKTtcbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBkZWxldGUgY2xvbmVba2V5XTtcbiAgfSk7XG4gIHJldHVybiBjbG9uZTtcbn1cbmZ1bmN0aW9uIHNwbGl0QnlTcGFjZXModmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlLnNwbGl0KC9cXHMrLykuZmlsdGVyKEJvb2xlYW4pO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplVG9BcnJheSh2YWx1ZSkge1xuICByZXR1cm4gW10uY29uY2F0KHZhbHVlKTtcbn1cbmZ1bmN0aW9uIHB1c2hJZlVuaXF1ZShhcnIsIHZhbHVlKSB7XG4gIGlmIChhcnIuaW5kZXhPZih2YWx1ZSkgPT09IC0xKSB7XG4gICAgYXJyLnB1c2godmFsdWUpO1xuICB9XG59XG5mdW5jdGlvbiB1bmlxdWUoYXJyKSB7XG4gIHJldHVybiBhcnIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgIHJldHVybiBhcnIuaW5kZXhPZihpdGVtKSA9PT0gaW5kZXg7XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xufVxuZnVuY3Rpb24gYXJyYXlGcm9tKHZhbHVlKSB7XG4gIHJldHVybiBbXS5zbGljZS5jYWxsKHZhbHVlKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVVuZGVmaW5lZFByb3BzKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgaWYgKG9ialtrZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGFjY1trZXldID0gb2JqW2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xufVxuXG5mdW5jdGlvbiBkaXYoKSB7XG4gIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbn1cbmZ1bmN0aW9uIGlzRWxlbWVudCh2YWx1ZSkge1xuICByZXR1cm4gWydFbGVtZW50JywgJ0ZyYWdtZW50J10uc29tZShmdW5jdGlvbiAodHlwZSkge1xuICAgIHJldHVybiBpc1R5cGUodmFsdWUsIHR5cGUpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGlzTm9kZUxpc3QodmFsdWUpIHtcbiAgcmV0dXJuIGlzVHlwZSh2YWx1ZSwgJ05vZGVMaXN0Jyk7XG59XG5mdW5jdGlvbiBpc01vdXNlRXZlbnQodmFsdWUpIHtcbiAgcmV0dXJuIGlzVHlwZSh2YWx1ZSwgJ01vdXNlRXZlbnQnKTtcbn1cbmZ1bmN0aW9uIGlzUmVmZXJlbmNlRWxlbWVudCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX3RpcHB5ICYmIHZhbHVlLl90aXBweS5yZWZlcmVuY2UgPT09IHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldEFycmF5T2ZFbGVtZW50cyh2YWx1ZSkge1xuICBpZiAoaXNFbGVtZW50KHZhbHVlKSkge1xuICAgIHJldHVybiBbdmFsdWVdO1xuICB9XG5cbiAgaWYgKGlzTm9kZUxpc3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIGFycmF5RnJvbSh2YWx1ZSk7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gYXJyYXlGcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodmFsdWUpKTtcbn1cbmZ1bmN0aW9uIHNldFRyYW5zaXRpb25EdXJhdGlvbihlbHMsIHZhbHVlKSB7XG4gIGVscy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChlbCkge1xuICAgICAgZWwuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gdmFsdWUgKyBcIm1zXCI7XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIHNldFZpc2liaWxpdHlTdGF0ZShlbHMsIHN0YXRlKSB7XG4gIGVscy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChlbCkge1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJywgc3RhdGUpO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBnZXRPd25lckRvY3VtZW50KGVsZW1lbnRPckVsZW1lbnRzKSB7XG4gIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47XG5cbiAgdmFyIF9ub3JtYWxpemVUb0FycmF5ID0gbm9ybWFsaXplVG9BcnJheShlbGVtZW50T3JFbGVtZW50cyksXG4gICAgICBlbGVtZW50ID0gX25vcm1hbGl6ZVRvQXJyYXlbMF07IC8vIEVsZW1lbnRzIGNyZWF0ZWQgdmlhIGEgPHRlbXBsYXRlPiBoYXZlIGFuIG93bmVyRG9jdW1lbnQgd2l0aCBubyByZWZlcmVuY2UgdG8gdGhlIGJvZHlcblxuXG4gIHJldHVybiBlbGVtZW50ICE9IG51bGwgJiYgKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgIT0gbnVsbCAmJiBfZWxlbWVudCRvd25lckRvY3VtZW4uYm9keSA/IGVsZW1lbnQub3duZXJEb2N1bWVudCA6IGRvY3VtZW50O1xufVxuZnVuY3Rpb24gaXNDdXJzb3JPdXRzaWRlSW50ZXJhY3RpdmVCb3JkZXIocG9wcGVyVHJlZURhdGEsIGV2ZW50KSB7XG4gIHZhciBjbGllbnRYID0gZXZlbnQuY2xpZW50WCxcbiAgICAgIGNsaWVudFkgPSBldmVudC5jbGllbnRZO1xuICByZXR1cm4gcG9wcGVyVHJlZURhdGEuZXZlcnkoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgcG9wcGVyUmVjdCA9IF9yZWYucG9wcGVyUmVjdCxcbiAgICAgICAgcG9wcGVyU3RhdGUgPSBfcmVmLnBvcHBlclN0YXRlLFxuICAgICAgICBwcm9wcyA9IF9yZWYucHJvcHM7XG4gICAgdmFyIGludGVyYWN0aXZlQm9yZGVyID0gcHJvcHMuaW50ZXJhY3RpdmVCb3JkZXI7XG4gICAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHBvcHBlclN0YXRlLnBsYWNlbWVudCk7XG4gICAgdmFyIG9mZnNldERhdGEgPSBwb3BwZXJTdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldDtcblxuICAgIGlmICghb2Zmc2V0RGF0YSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHRvcERpc3RhbmNlID0gYmFzZVBsYWNlbWVudCA9PT0gJ2JvdHRvbScgPyBvZmZzZXREYXRhLnRvcC55IDogMDtcbiAgICB2YXIgYm90dG9tRGlzdGFuY2UgPSBiYXNlUGxhY2VtZW50ID09PSAndG9wJyA/IG9mZnNldERhdGEuYm90dG9tLnkgOiAwO1xuICAgIHZhciBsZWZ0RGlzdGFuY2UgPSBiYXNlUGxhY2VtZW50ID09PSAncmlnaHQnID8gb2Zmc2V0RGF0YS5sZWZ0LnggOiAwO1xuICAgIHZhciByaWdodERpc3RhbmNlID0gYmFzZVBsYWNlbWVudCA9PT0gJ2xlZnQnID8gb2Zmc2V0RGF0YS5yaWdodC54IDogMDtcbiAgICB2YXIgZXhjZWVkc1RvcCA9IHBvcHBlclJlY3QudG9wIC0gY2xpZW50WSArIHRvcERpc3RhbmNlID4gaW50ZXJhY3RpdmVCb3JkZXI7XG4gICAgdmFyIGV4Y2VlZHNCb3R0b20gPSBjbGllbnRZIC0gcG9wcGVyUmVjdC5ib3R0b20gLSBib3R0b21EaXN0YW5jZSA+IGludGVyYWN0aXZlQm9yZGVyO1xuICAgIHZhciBleGNlZWRzTGVmdCA9IHBvcHBlclJlY3QubGVmdCAtIGNsaWVudFggKyBsZWZ0RGlzdGFuY2UgPiBpbnRlcmFjdGl2ZUJvcmRlcjtcbiAgICB2YXIgZXhjZWVkc1JpZ2h0ID0gY2xpZW50WCAtIHBvcHBlclJlY3QucmlnaHQgLSByaWdodERpc3RhbmNlID4gaW50ZXJhY3RpdmVCb3JkZXI7XG4gICAgcmV0dXJuIGV4Y2VlZHNUb3AgfHwgZXhjZWVkc0JvdHRvbSB8fCBleGNlZWRzTGVmdCB8fCBleGNlZWRzUmlnaHQ7XG4gIH0pO1xufVxuZnVuY3Rpb24gdXBkYXRlVHJhbnNpdGlvbkVuZExpc3RlbmVyKGJveCwgYWN0aW9uLCBsaXN0ZW5lcikge1xuICB2YXIgbWV0aG9kID0gYWN0aW9uICsgXCJFdmVudExpc3RlbmVyXCI7IC8vIHNvbWUgYnJvd3NlcnMgYXBwYXJlbnRseSBzdXBwb3J0IGB0cmFuc2l0aW9uYCAodW5wcmVmaXhlZCkgYnV0IG9ubHkgZmlyZVxuICAvLyBgd2Via2l0VHJhbnNpdGlvbkVuZGAuLi5cblxuICBbJ3RyYW5zaXRpb25lbmQnLCAnd2Via2l0VHJhbnNpdGlvbkVuZCddLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgYm94W21ldGhvZF0oZXZlbnQsIGxpc3RlbmVyKTtcbiAgfSk7XG59XG4vKipcbiAqIENvbXBhcmVkIHRvIHh4eC5jb250YWlucywgdGhpcyBmdW5jdGlvbiB3b3JrcyBmb3IgZG9tIHN0cnVjdHVyZXMgd2l0aCBzaGFkb3dcbiAqIGRvbVxuICovXG5cbmZ1bmN0aW9uIGFjdHVhbENvbnRhaW5zKHBhcmVudCwgY2hpbGQpIHtcbiAgdmFyIHRhcmdldCA9IGNoaWxkO1xuXG4gIHdoaWxlICh0YXJnZXQpIHtcbiAgICB2YXIgX3RhcmdldCRnZXRSb290Tm9kZTtcblxuICAgIGlmIChwYXJlbnQuY29udGFpbnModGFyZ2V0KSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdGFyZ2V0ID0gdGFyZ2V0LmdldFJvb3ROb2RlID09IG51bGwgPyB2b2lkIDAgOiAoX3RhcmdldCRnZXRSb290Tm9kZSA9IHRhcmdldC5nZXRSb290Tm9kZSgpKSA9PSBudWxsID8gdm9pZCAwIDogX3RhcmdldCRnZXRSb290Tm9kZS5ob3N0O1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG52YXIgY3VycmVudElucHV0ID0ge1xuICBpc1RvdWNoOiBmYWxzZVxufTtcbnZhciBsYXN0TW91c2VNb3ZlVGltZSA9IDA7XG4vKipcbiAqIFdoZW4gYSBgdG91Y2hzdGFydGAgZXZlbnQgaXMgZmlyZWQsIGl0J3MgYXNzdW1lZCB0aGUgdXNlciBpcyB1c2luZyB0b3VjaFxuICogaW5wdXQuIFdlJ2xsIGJpbmQgYSBgbW91c2Vtb3ZlYCBldmVudCBsaXN0ZW5lciB0byBsaXN0ZW4gZm9yIG1vdXNlIGlucHV0IGluXG4gKiB0aGUgZnV0dXJlLiBUaGlzIHdheSwgdGhlIGBpc1RvdWNoYCBwcm9wZXJ0eSBpcyBmdWxseSBkeW5hbWljIGFuZCB3aWxsIGhhbmRsZVxuICogaHlicmlkIGRldmljZXMgdGhhdCB1c2UgYSBtaXggb2YgdG91Y2ggKyBtb3VzZSBpbnB1dC5cbiAqL1xuXG5mdW5jdGlvbiBvbkRvY3VtZW50VG91Y2hTdGFydCgpIHtcbiAgaWYgKGN1cnJlbnRJbnB1dC5pc1RvdWNoKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY3VycmVudElucHV0LmlzVG91Y2ggPSB0cnVlO1xuXG4gIGlmICh3aW5kb3cucGVyZm9ybWFuY2UpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBvbkRvY3VtZW50TW91c2VNb3ZlKTtcbiAgfVxufVxuLyoqXG4gKiBXaGVuIHR3byBgbW91c2Vtb3ZlYCBldmVudCBhcmUgZmlyZWQgY29uc2VjdXRpdmVseSB3aXRoaW4gMjBtcywgaXQncyBhc3N1bWVkXG4gKiB0aGUgdXNlciBpcyB1c2luZyBtb3VzZSBpbnB1dCBhZ2Fpbi4gYG1vdXNlbW92ZWAgY2FuIGZpcmUgb24gdG91Y2ggZGV2aWNlcyBhc1xuICogd2VsbCwgYnV0IHZlcnkgcmFyZWx5IHRoYXQgcXVpY2tseS5cbiAqL1xuXG5mdW5jdGlvbiBvbkRvY3VtZW50TW91c2VNb3ZlKCkge1xuICB2YXIgbm93ID0gcGVyZm9ybWFuY2Uubm93KCk7XG5cbiAgaWYgKG5vdyAtIGxhc3RNb3VzZU1vdmVUaW1lIDwgMjApIHtcbiAgICBjdXJyZW50SW5wdXQuaXNUb3VjaCA9IGZhbHNlO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uRG9jdW1lbnRNb3VzZU1vdmUpO1xuICB9XG5cbiAgbGFzdE1vdXNlTW92ZVRpbWUgPSBub3c7XG59XG4vKipcbiAqIFdoZW4gYW4gZWxlbWVudCBpcyBpbiBmb2N1cyBhbmQgaGFzIGEgdGlwcHksIGxlYXZpbmcgdGhlIHRhYi93aW5kb3cgYW5kXG4gKiByZXR1cm5pbmcgY2F1c2VzIGl0IHRvIHNob3cgYWdhaW4uIEZvciBtb3VzZSB1c2VycyB0aGlzIGlzIHVuZXhwZWN0ZWQsIGJ1dFxuICogZm9yIGtleWJvYXJkIHVzZSBpdCBtYWtlcyBzZW5zZS5cbiAqIFRPRE86IGZpbmQgYSBiZXR0ZXIgdGVjaG5pcXVlIHRvIHNvbHZlIHRoaXMgcHJvYmxlbVxuICovXG5cbmZ1bmN0aW9uIG9uV2luZG93Qmx1cigpIHtcbiAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gIGlmIChpc1JlZmVyZW5jZUVsZW1lbnQoYWN0aXZlRWxlbWVudCkpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBhY3RpdmVFbGVtZW50Ll90aXBweTtcblxuICAgIGlmIChhY3RpdmVFbGVtZW50LmJsdXIgJiYgIWluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSkge1xuICAgICAgYWN0aXZlRWxlbWVudC5ibHVyKCk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBiaW5kR2xvYmFsRXZlbnRMaXN0ZW5lcnMoKSB7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBvbkRvY3VtZW50VG91Y2hTdGFydCwgVE9VQ0hfT1BUSU9OUyk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgb25XaW5kb3dCbHVyKTtcbn1cblxudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgaXNJRTExID0gaXNCcm93c2VyID8gLy8gQHRzLWlnbm9yZVxuISF3aW5kb3cubXNDcnlwdG8gOiBmYWxzZTtcblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcobWV0aG9kKSB7XG4gIHZhciB0eHQgPSBtZXRob2QgPT09ICdkZXN0cm95JyA/ICduIGFscmVhZHktJyA6ICcgJztcbiAgcmV0dXJuIFttZXRob2QgKyBcIigpIHdhcyBjYWxsZWQgb24gYVwiICsgdHh0ICsgXCJkZXN0cm95ZWQgaW5zdGFuY2UuIFRoaXMgaXMgYSBuby1vcCBidXRcIiwgJ2luZGljYXRlcyBhIHBvdGVudGlhbCBtZW1vcnkgbGVhay4nXS5qb2luKCcgJyk7XG59XG5mdW5jdGlvbiBjbGVhbih2YWx1ZSkge1xuICB2YXIgc3BhY2VzQW5kVGFicyA9IC9bIFxcdF17Mix9L2c7XG4gIHZhciBsaW5lU3RhcnRXaXRoU3BhY2VzID0gL15bIFxcdF0qL2dtO1xuICByZXR1cm4gdmFsdWUucmVwbGFjZShzcGFjZXNBbmRUYWJzLCAnICcpLnJlcGxhY2UobGluZVN0YXJ0V2l0aFNwYWNlcywgJycpLnRyaW0oKTtcbn1cblxuZnVuY3Rpb24gZ2V0RGV2TWVzc2FnZShtZXNzYWdlKSB7XG4gIHJldHVybiBjbGVhbihcIlxcbiAgJWN0aXBweS5qc1xcblxcbiAgJWNcIiArIGNsZWFuKG1lc3NhZ2UpICsgXCJcXG5cXG4gICVjXFx1RDgzRFxcdURDNzdcXHUyMDBEIFRoaXMgaXMgYSBkZXZlbG9wbWVudC1vbmx5IG1lc3NhZ2UuIEl0IHdpbGwgYmUgcmVtb3ZlZCBpbiBwcm9kdWN0aW9uLlxcbiAgXCIpO1xufVxuXG5mdW5jdGlvbiBnZXRGb3JtYXR0ZWRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgcmV0dXJuIFtnZXREZXZNZXNzYWdlKG1lc3NhZ2UpLCAvLyB0aXRsZVxuICAnY29sb3I6ICMwMEM1ODQ7IGZvbnQtc2l6ZTogMS4zZW07IGZvbnQtd2VpZ2h0OiBib2xkOycsIC8vIG1lc3NhZ2VcbiAgJ2xpbmUtaGVpZ2h0OiAxLjUnLCAvLyBmb290ZXJcbiAgJ2NvbG9yOiAjYTZhMDk1OyddO1xufSAvLyBBc3N1bWUgd2FybmluZ3MgYW5kIGVycm9ycyBuZXZlciBoYXZlIHRoZSBzYW1lIG1lc3NhZ2VcblxudmFyIHZpc2l0ZWRNZXNzYWdlcztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICByZXNldFZpc2l0ZWRNZXNzYWdlcygpO1xufVxuXG5mdW5jdGlvbiByZXNldFZpc2l0ZWRNZXNzYWdlcygpIHtcbiAgdmlzaXRlZE1lc3NhZ2VzID0gbmV3IFNldCgpO1xufVxuZnVuY3Rpb24gd2FybldoZW4oY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmIChjb25kaXRpb24gJiYgIXZpc2l0ZWRNZXNzYWdlcy5oYXMobWVzc2FnZSkpIHtcbiAgICB2YXIgX2NvbnNvbGU7XG5cbiAgICB2aXNpdGVkTWVzc2FnZXMuYWRkKG1lc3NhZ2UpO1xuXG4gICAgKF9jb25zb2xlID0gY29uc29sZSkud2Fybi5hcHBseShfY29uc29sZSwgZ2V0Rm9ybWF0dGVkTWVzc2FnZShtZXNzYWdlKSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGVycm9yV2hlbihjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKGNvbmRpdGlvbiAmJiAhdmlzaXRlZE1lc3NhZ2VzLmhhcyhtZXNzYWdlKSkge1xuICAgIHZhciBfY29uc29sZTI7XG5cbiAgICB2aXNpdGVkTWVzc2FnZXMuYWRkKG1lc3NhZ2UpO1xuXG4gICAgKF9jb25zb2xlMiA9IGNvbnNvbGUpLmVycm9yLmFwcGx5KF9jb25zb2xlMiwgZ2V0Rm9ybWF0dGVkTWVzc2FnZShtZXNzYWdlKSk7XG4gIH1cbn1cbmZ1bmN0aW9uIHZhbGlkYXRlVGFyZ2V0cyh0YXJnZXRzKSB7XG4gIHZhciBkaWRQYXNzRmFsc3lWYWx1ZSA9ICF0YXJnZXRzO1xuICB2YXIgZGlkUGFzc1BsYWluT2JqZWN0ID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHRhcmdldHMpID09PSAnW29iamVjdCBPYmplY3RdJyAmJiAhdGFyZ2V0cy5hZGRFdmVudExpc3RlbmVyO1xuICBlcnJvcldoZW4oZGlkUGFzc0ZhbHN5VmFsdWUsIFsndGlwcHkoKSB3YXMgcGFzc2VkJywgJ2AnICsgU3RyaW5nKHRhcmdldHMpICsgJ2AnLCAnYXMgaXRzIHRhcmdldHMgKGZpcnN0KSBhcmd1bWVudC4gVmFsaWQgdHlwZXMgYXJlOiBTdHJpbmcsIEVsZW1lbnQsJywgJ0VsZW1lbnRbXSwgb3IgTm9kZUxpc3QuJ10uam9pbignICcpKTtcbiAgZXJyb3JXaGVuKGRpZFBhc3NQbGFpbk9iamVjdCwgWyd0aXBweSgpIHdhcyBwYXNzZWQgYSBwbGFpbiBvYmplY3Qgd2hpY2ggaXMgbm90IHN1cHBvcnRlZCBhcyBhbiBhcmd1bWVudCcsICdmb3IgdmlydHVhbCBwb3NpdGlvbmluZy4gVXNlIHByb3BzLmdldFJlZmVyZW5jZUNsaWVudFJlY3QgaW5zdGVhZC4nXS5qb2luKCcgJykpO1xufVxuXG52YXIgcGx1Z2luUHJvcHMgPSB7XG4gIGFuaW1hdGVGaWxsOiBmYWxzZSxcbiAgZm9sbG93Q3Vyc29yOiBmYWxzZSxcbiAgaW5saW5lUG9zaXRpb25pbmc6IGZhbHNlLFxuICBzdGlja3k6IGZhbHNlXG59O1xudmFyIHJlbmRlclByb3BzID0ge1xuICBhbGxvd0hUTUw6IGZhbHNlLFxuICBhbmltYXRpb246ICdmYWRlJyxcbiAgYXJyb3c6IHRydWUsXG4gIGNvbnRlbnQ6ICcnLFxuICBpbmVydGlhOiBmYWxzZSxcbiAgbWF4V2lkdGg6IDM1MCxcbiAgcm9sZTogJ3Rvb2x0aXAnLFxuICB0aGVtZTogJycsXG4gIHpJbmRleDogOTk5OVxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSBPYmplY3QuYXNzaWduKHtcbiAgYXBwZW5kVG86IFRJUFBZX0RFRkFVTFRfQVBQRU5EX1RPLFxuICBhcmlhOiB7XG4gICAgY29udGVudDogJ2F1dG8nLFxuICAgIGV4cGFuZGVkOiAnYXV0bydcbiAgfSxcbiAgZGVsYXk6IDAsXG4gIGR1cmF0aW9uOiBbMzAwLCAyNTBdLFxuICBnZXRSZWZlcmVuY2VDbGllbnRSZWN0OiBudWxsLFxuICBoaWRlT25DbGljazogdHJ1ZSxcbiAgaWdub3JlQXR0cmlidXRlczogZmFsc2UsXG4gIGludGVyYWN0aXZlOiBmYWxzZSxcbiAgaW50ZXJhY3RpdmVCb3JkZXI6IDIsXG4gIGludGVyYWN0aXZlRGVib3VuY2U6IDAsXG4gIG1vdmVUcmFuc2l0aW9uOiAnJyxcbiAgb2Zmc2V0OiBbMCwgMTBdLFxuICBvbkFmdGVyVXBkYXRlOiBmdW5jdGlvbiBvbkFmdGVyVXBkYXRlKCkge30sXG4gIG9uQmVmb3JlVXBkYXRlOiBmdW5jdGlvbiBvbkJlZm9yZVVwZGF0ZSgpIHt9LFxuICBvbkNyZWF0ZTogZnVuY3Rpb24gb25DcmVhdGUoKSB7fSxcbiAgb25EZXN0cm95OiBmdW5jdGlvbiBvbkRlc3Ryb3koKSB7fSxcbiAgb25IaWRkZW46IGZ1bmN0aW9uIG9uSGlkZGVuKCkge30sXG4gIG9uSGlkZTogZnVuY3Rpb24gb25IaWRlKCkge30sXG4gIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7fSxcbiAgb25TaG93OiBmdW5jdGlvbiBvblNob3coKSB7fSxcbiAgb25TaG93bjogZnVuY3Rpb24gb25TaG93bigpIHt9LFxuICBvblRyaWdnZXI6IGZ1bmN0aW9uIG9uVHJpZ2dlcigpIHt9LFxuICBvblVudHJpZ2dlcjogZnVuY3Rpb24gb25VbnRyaWdnZXIoKSB7fSxcbiAgb25DbGlja091dHNpZGU6IGZ1bmN0aW9uIG9uQ2xpY2tPdXRzaWRlKCkge30sXG4gIHBsYWNlbWVudDogJ3RvcCcsXG4gIHBsdWdpbnM6IFtdLFxuICBwb3BwZXJPcHRpb25zOiB7fSxcbiAgcmVuZGVyOiBudWxsLFxuICBzaG93T25DcmVhdGU6IGZhbHNlLFxuICB0b3VjaDogdHJ1ZSxcbiAgdHJpZ2dlcjogJ21vdXNlZW50ZXIgZm9jdXMnLFxuICB0cmlnZ2VyVGFyZ2V0OiBudWxsXG59LCBwbHVnaW5Qcm9wcywgcmVuZGVyUHJvcHMpO1xudmFyIGRlZmF1bHRLZXlzID0gT2JqZWN0LmtleXMoZGVmYXVsdFByb3BzKTtcbnZhciBzZXREZWZhdWx0UHJvcHMgPSBmdW5jdGlvbiBzZXREZWZhdWx0UHJvcHMocGFydGlhbFByb3BzKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICB2YWxpZGF0ZVByb3BzKHBhcnRpYWxQcm9wcywgW10pO1xuICB9XG5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhwYXJ0aWFsUHJvcHMpO1xuICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGRlZmF1bHRQcm9wc1trZXldID0gcGFydGlhbFByb3BzW2tleV07XG4gIH0pO1xufTtcbmZ1bmN0aW9uIGdldEV4dGVuZGVkUGFzc2VkUHJvcHMocGFzc2VkUHJvcHMpIHtcbiAgdmFyIHBsdWdpbnMgPSBwYXNzZWRQcm9wcy5wbHVnaW5zIHx8IFtdO1xuICB2YXIgcGx1Z2luUHJvcHMgPSBwbHVnaW5zLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbHVnaW4pIHtcbiAgICB2YXIgbmFtZSA9IHBsdWdpbi5uYW1lLFxuICAgICAgICBkZWZhdWx0VmFsdWUgPSBwbHVnaW4uZGVmYXVsdFZhbHVlO1xuXG4gICAgaWYgKG5hbWUpIHtcbiAgICAgIHZhciBfbmFtZTtcblxuICAgICAgYWNjW25hbWVdID0gcGFzc2VkUHJvcHNbbmFtZV0gIT09IHVuZGVmaW5lZCA/IHBhc3NlZFByb3BzW25hbWVdIDogKF9uYW1lID0gZGVmYXVsdFByb3BzW25hbWVdKSAhPSBudWxsID8gX25hbWUgOiBkZWZhdWx0VmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcGFzc2VkUHJvcHMsIHBsdWdpblByb3BzKTtcbn1cbmZ1bmN0aW9uIGdldERhdGFBdHRyaWJ1dGVQcm9wcyhyZWZlcmVuY2UsIHBsdWdpbnMpIHtcbiAgdmFyIHByb3BLZXlzID0gcGx1Z2lucyA/IE9iamVjdC5rZXlzKGdldEV4dGVuZGVkUGFzc2VkUHJvcHMoT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFByb3BzLCB7XG4gICAgcGx1Z2luczogcGx1Z2luc1xuICB9KSkpIDogZGVmYXVsdEtleXM7XG4gIHZhciBwcm9wcyA9IHByb3BLZXlzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICB2YXIgdmFsdWVBc1N0cmluZyA9IChyZWZlcmVuY2UuZ2V0QXR0cmlidXRlKFwiZGF0YS10aXBweS1cIiArIGtleSkgfHwgJycpLnRyaW0oKTtcblxuICAgIGlmICghdmFsdWVBc1N0cmluZykge1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGFjY1trZXldID0gdmFsdWVBc1N0cmluZztcbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYWNjW2tleV0gPSBKU09OLnBhcnNlKHZhbHVlQXNTdHJpbmcpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBhY2Nba2V5XSA9IHZhbHVlQXNTdHJpbmc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuICByZXR1cm4gcHJvcHM7XG59XG5mdW5jdGlvbiBldmFsdWF0ZVByb3BzKHJlZmVyZW5jZSwgcHJvcHMpIHtcbiAgdmFyIG91dCA9IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgY29udGVudDogaW52b2tlV2l0aEFyZ3NPclJldHVybihwcm9wcy5jb250ZW50LCBbcmVmZXJlbmNlXSlcbiAgfSwgcHJvcHMuaWdub3JlQXR0cmlidXRlcyA/IHt9IDogZ2V0RGF0YUF0dHJpYnV0ZVByb3BzKHJlZmVyZW5jZSwgcHJvcHMucGx1Z2lucykpO1xuICBvdXQuYXJpYSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRQcm9wcy5hcmlhLCBvdXQuYXJpYSk7XG4gIG91dC5hcmlhID0ge1xuICAgIGV4cGFuZGVkOiBvdXQuYXJpYS5leHBhbmRlZCA9PT0gJ2F1dG8nID8gcHJvcHMuaW50ZXJhY3RpdmUgOiBvdXQuYXJpYS5leHBhbmRlZCxcbiAgICBjb250ZW50OiBvdXQuYXJpYS5jb250ZW50ID09PSAnYXV0bycgPyBwcm9wcy5pbnRlcmFjdGl2ZSA/IG51bGwgOiAnZGVzY3JpYmVkYnknIDogb3V0LmFyaWEuY29udGVudFxuICB9O1xuICByZXR1cm4gb3V0O1xufVxuZnVuY3Rpb24gdmFsaWRhdGVQcm9wcyhwYXJ0aWFsUHJvcHMsIHBsdWdpbnMpIHtcbiAgaWYgKHBhcnRpYWxQcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFydGlhbFByb3BzID0ge307XG4gIH1cblxuICBpZiAocGx1Z2lucyA9PT0gdm9pZCAwKSB7XG4gICAgcGx1Z2lucyA9IFtdO1xuICB9XG5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhwYXJ0aWFsUHJvcHMpO1xuICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICB2YXIgbm9uUGx1Z2luUHJvcHMgPSByZW1vdmVQcm9wZXJ0aWVzKGRlZmF1bHRQcm9wcywgT2JqZWN0LmtleXMocGx1Z2luUHJvcHMpKTtcbiAgICB2YXIgZGlkUGFzc1Vua25vd25Qcm9wID0gIWhhc093blByb3BlcnR5KG5vblBsdWdpblByb3BzLCBwcm9wKTsgLy8gQ2hlY2sgaWYgdGhlIHByb3AgZXhpc3RzIGluIGBwbHVnaW5zYFxuXG4gICAgaWYgKGRpZFBhc3NVbmtub3duUHJvcCkge1xuICAgICAgZGlkUGFzc1Vua25vd25Qcm9wID0gcGx1Z2lucy5maWx0ZXIoZnVuY3Rpb24gKHBsdWdpbikge1xuICAgICAgICByZXR1cm4gcGx1Z2luLm5hbWUgPT09IHByb3A7XG4gICAgICB9KS5sZW5ndGggPT09IDA7XG4gICAgfVxuXG4gICAgd2FybldoZW4oZGlkUGFzc1Vua25vd25Qcm9wLCBbXCJgXCIgKyBwcm9wICsgXCJgXCIsIFwiaXMgbm90IGEgdmFsaWQgcHJvcC4gWW91IG1heSBoYXZlIHNwZWxsZWQgaXQgaW5jb3JyZWN0bHksIG9yIGlmIGl0J3NcIiwgJ2EgcGx1Z2luLCBmb3Jnb3QgdG8gcGFzcyBpdCBpbiBhbiBhcnJheSBhcyBwcm9wcy5wbHVnaW5zLicsICdcXG5cXG4nLCAnQWxsIHByb3BzOiBodHRwczovL2F0b21pa3MuZ2l0aHViLmlvL3RpcHB5anMvdjYvYWxsLXByb3BzL1xcbicsICdQbHVnaW5zOiBodHRwczovL2F0b21pa3MuZ2l0aHViLmlvL3RpcHB5anMvdjYvcGx1Z2lucy8nXS5qb2luKCcgJykpO1xuICB9KTtcbn1cblxudmFyIGlubmVySFRNTCA9IGZ1bmN0aW9uIGlubmVySFRNTCgpIHtcbiAgcmV0dXJuICdpbm5lckhUTUwnO1xufTtcblxuZnVuY3Rpb24gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwoZWxlbWVudCwgaHRtbCkge1xuICBlbGVtZW50W2lubmVySFRNTCgpXSA9IGh0bWw7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUFycm93RWxlbWVudCh2YWx1ZSkge1xuICB2YXIgYXJyb3cgPSBkaXYoKTtcblxuICBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICBhcnJvdy5jbGFzc05hbWUgPSBBUlJPV19DTEFTUztcbiAgfSBlbHNlIHtcbiAgICBhcnJvdy5jbGFzc05hbWUgPSBTVkdfQVJST1dfQ0xBU1M7XG5cbiAgICBpZiAoaXNFbGVtZW50KHZhbHVlKSkge1xuICAgICAgYXJyb3cuYXBwZW5kQ2hpbGQodmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTChhcnJvdywgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhcnJvdztcbn1cblxuZnVuY3Rpb24gc2V0Q29udGVudChjb250ZW50LCBwcm9wcykge1xuICBpZiAoaXNFbGVtZW50KHByb3BzLmNvbnRlbnQpKSB7XG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwoY29udGVudCwgJycpO1xuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQocHJvcHMuY29udGVudCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb3BzLmNvbnRlbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICBpZiAocHJvcHMuYWxsb3dIVE1MKSB7XG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTChjb250ZW50LCBwcm9wcy5jb250ZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGVudC50ZXh0Q29udGVudCA9IHByb3BzLmNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBnZXRDaGlsZHJlbihwb3BwZXIpIHtcbiAgdmFyIGJveCA9IHBvcHBlci5maXJzdEVsZW1lbnRDaGlsZDtcbiAgdmFyIGJveENoaWxkcmVuID0gYXJyYXlGcm9tKGJveC5jaGlsZHJlbik7XG4gIHJldHVybiB7XG4gICAgYm94OiBib3gsXG4gICAgY29udGVudDogYm94Q2hpbGRyZW4uZmluZChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKENPTlRFTlRfQ0xBU1MpO1xuICAgIH0pLFxuICAgIGFycm93OiBib3hDaGlsZHJlbi5maW5kKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICByZXR1cm4gbm9kZS5jbGFzc0xpc3QuY29udGFpbnMoQVJST1dfQ0xBU1MpIHx8IG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKFNWR19BUlJPV19DTEFTUyk7XG4gICAgfSksXG4gICAgYmFja2Ryb3A6IGJveENoaWxkcmVuLmZpbmQoZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIHJldHVybiBub2RlLmNsYXNzTGlzdC5jb250YWlucyhCQUNLRFJPUF9DTEFTUyk7XG4gICAgfSlcbiAgfTtcbn1cbmZ1bmN0aW9uIHJlbmRlcihpbnN0YW5jZSkge1xuICB2YXIgcG9wcGVyID0gZGl2KCk7XG4gIHZhciBib3ggPSBkaXYoKTtcbiAgYm94LmNsYXNzTmFtZSA9IEJPWF9DTEFTUztcbiAgYm94LnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0ZScsICdoaWRkZW4nKTtcbiAgYm94LnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgdmFyIGNvbnRlbnQgPSBkaXYoKTtcbiAgY29udGVudC5jbGFzc05hbWUgPSBDT05URU5UX0NMQVNTO1xuICBjb250ZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0ZScsICdoaWRkZW4nKTtcbiAgc2V0Q29udGVudChjb250ZW50LCBpbnN0YW5jZS5wcm9wcyk7XG4gIHBvcHBlci5hcHBlbmRDaGlsZChib3gpO1xuICBib3guYXBwZW5kQ2hpbGQoY29udGVudCk7XG4gIG9uVXBkYXRlKGluc3RhbmNlLnByb3BzLCBpbnN0YW5jZS5wcm9wcyk7XG5cbiAgZnVuY3Rpb24gb25VcGRhdGUocHJldlByb3BzLCBuZXh0UHJvcHMpIHtcbiAgICB2YXIgX2dldENoaWxkcmVuID0gZ2V0Q2hpbGRyZW4ocG9wcGVyKSxcbiAgICAgICAgYm94ID0gX2dldENoaWxkcmVuLmJveCxcbiAgICAgICAgY29udGVudCA9IF9nZXRDaGlsZHJlbi5jb250ZW50LFxuICAgICAgICBhcnJvdyA9IF9nZXRDaGlsZHJlbi5hcnJvdztcblxuICAgIGlmIChuZXh0UHJvcHMudGhlbWUpIHtcbiAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCBuZXh0UHJvcHMudGhlbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBib3gucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXRoZW1lJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBuZXh0UHJvcHMuYW5pbWF0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgYm94LnNldEF0dHJpYnV0ZSgnZGF0YS1hbmltYXRpb24nLCBuZXh0UHJvcHMuYW5pbWF0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYm94LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1hbmltYXRpb24nKTtcbiAgICB9XG5cbiAgICBpZiAobmV4dFByb3BzLmluZXJ0aWEpIHtcbiAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaW5lcnRpYScsICcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYm94LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1pbmVydGlhJyk7XG4gICAgfVxuXG4gICAgYm94LnN0eWxlLm1heFdpZHRoID0gdHlwZW9mIG5leHRQcm9wcy5tYXhXaWR0aCA9PT0gJ251bWJlcicgPyBuZXh0UHJvcHMubWF4V2lkdGggKyBcInB4XCIgOiBuZXh0UHJvcHMubWF4V2lkdGg7XG5cbiAgICBpZiAobmV4dFByb3BzLnJvbGUpIHtcbiAgICAgIGJveC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCBuZXh0UHJvcHMucm9sZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJveC5yZW1vdmVBdHRyaWJ1dGUoJ3JvbGUnKTtcbiAgICB9XG5cbiAgICBpZiAocHJldlByb3BzLmNvbnRlbnQgIT09IG5leHRQcm9wcy5jb250ZW50IHx8IHByZXZQcm9wcy5hbGxvd0hUTUwgIT09IG5leHRQcm9wcy5hbGxvd0hUTUwpIHtcbiAgICAgIHNldENvbnRlbnQoY29udGVudCwgaW5zdGFuY2UucHJvcHMpO1xuICAgIH1cblxuICAgIGlmIChuZXh0UHJvcHMuYXJyb3cpIHtcbiAgICAgIGlmICghYXJyb3cpIHtcbiAgICAgICAgYm94LmFwcGVuZENoaWxkKGNyZWF0ZUFycm93RWxlbWVudChuZXh0UHJvcHMuYXJyb3cpKTtcbiAgICAgIH0gZWxzZSBpZiAocHJldlByb3BzLmFycm93ICE9PSBuZXh0UHJvcHMuYXJyb3cpIHtcbiAgICAgICAgYm94LnJlbW92ZUNoaWxkKGFycm93KTtcbiAgICAgICAgYm94LmFwcGVuZENoaWxkKGNyZWF0ZUFycm93RWxlbWVudChuZXh0UHJvcHMuYXJyb3cpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGFycm93KSB7XG4gICAgICBib3gucmVtb3ZlQ2hpbGQoYXJyb3cpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcG9wcGVyOiBwb3BwZXIsXG4gICAgb25VcGRhdGU6IG9uVXBkYXRlXG4gIH07XG59IC8vIFJ1bnRpbWUgY2hlY2sgdG8gaWRlbnRpZnkgaWYgdGhlIHJlbmRlciBmdW5jdGlvbiBpcyB0aGUgZGVmYXVsdCBvbmU7IHRoaXNcbi8vIHdheSB3ZSBjYW4gYXBwbHkgZGVmYXVsdCBDU1MgdHJhbnNpdGlvbnMgbG9naWMgYW5kIGl0IGNhbiBiZSB0cmVlLXNoYWtlbiBhd2F5XG5cbnJlbmRlci4kJHRpcHB5ID0gdHJ1ZTtcblxudmFyIGlkQ291bnRlciA9IDE7XG52YXIgbW91c2VNb3ZlTGlzdGVuZXJzID0gW107IC8vIFVzZWQgYnkgYGhpZGVBbGwoKWBcblxudmFyIG1vdW50ZWRJbnN0YW5jZXMgPSBbXTtcbmZ1bmN0aW9uIGNyZWF0ZVRpcHB5KHJlZmVyZW5jZSwgcGFzc2VkUHJvcHMpIHtcbiAgdmFyIHByb3BzID0gZXZhbHVhdGVQcm9wcyhyZWZlcmVuY2UsIE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRQcm9wcywgZ2V0RXh0ZW5kZWRQYXNzZWRQcm9wcyhyZW1vdmVVbmRlZmluZWRQcm9wcyhwYXNzZWRQcm9wcykpKSk7IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyDwn5SSIFByaXZhdGUgbWVtYmVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgc2hvd1RpbWVvdXQ7XG4gIHZhciBoaWRlVGltZW91dDtcbiAgdmFyIHNjaGVkdWxlSGlkZUFuaW1hdGlvbkZyYW1lO1xuICB2YXIgaXNWaXNpYmxlRnJvbUNsaWNrID0gZmFsc2U7XG4gIHZhciBkaWRIaWRlRHVlVG9Eb2N1bWVudE1vdXNlRG93biA9IGZhbHNlO1xuICB2YXIgZGlkVG91Y2hNb3ZlID0gZmFsc2U7XG4gIHZhciBpZ25vcmVPbkZpcnN0VXBkYXRlID0gZmFsc2U7XG4gIHZhciBsYXN0VHJpZ2dlckV2ZW50O1xuICB2YXIgY3VycmVudFRyYW5zaXRpb25FbmRMaXN0ZW5lcjtcbiAgdmFyIG9uRmlyc3RVcGRhdGU7XG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIGRlYm91bmNlZE9uTW91c2VNb3ZlID0gZGVib3VuY2Uob25Nb3VzZU1vdmUsIHByb3BzLmludGVyYWN0aXZlRGVib3VuY2UpO1xuICB2YXIgY3VycmVudFRhcmdldDsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIPCflJEgUHVibGljIG1lbWJlcnNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIGlkID0gaWRDb3VudGVyKys7XG4gIHZhciBwb3BwZXJJbnN0YW5jZSA9IG51bGw7XG4gIHZhciBwbHVnaW5zID0gdW5pcXVlKHByb3BzLnBsdWdpbnMpO1xuICB2YXIgc3RhdGUgPSB7XG4gICAgLy8gSXMgdGhlIGluc3RhbmNlIGN1cnJlbnRseSBlbmFibGVkP1xuICAgIGlzRW5hYmxlZDogdHJ1ZSxcbiAgICAvLyBJcyB0aGUgdGlwcHkgY3VycmVudGx5IHNob3dpbmcgYW5kIG5vdCB0cmFuc2l0aW9uaW5nIG91dD9cbiAgICBpc1Zpc2libGU6IGZhbHNlLFxuICAgIC8vIEhhcyB0aGUgaW5zdGFuY2UgYmVlbiBkZXN0cm95ZWQ/XG4gICAgaXNEZXN0cm95ZWQ6IGZhbHNlLFxuICAgIC8vIElzIHRoZSB0aXBweSBjdXJyZW50bHkgbW91bnRlZCB0byB0aGUgRE9NP1xuICAgIGlzTW91bnRlZDogZmFsc2UsXG4gICAgLy8gSGFzIHRoZSB0aXBweSBmaW5pc2hlZCB0cmFuc2l0aW9uaW5nIGluP1xuICAgIGlzU2hvd246IGZhbHNlXG4gIH07XG4gIHZhciBpbnN0YW5jZSA9IHtcbiAgICAvLyBwcm9wZXJ0aWVzXG4gICAgaWQ6IGlkLFxuICAgIHJlZmVyZW5jZTogcmVmZXJlbmNlLFxuICAgIHBvcHBlcjogZGl2KCksXG4gICAgcG9wcGVySW5zdGFuY2U6IHBvcHBlckluc3RhbmNlLFxuICAgIHByb3BzOiBwcm9wcyxcbiAgICBzdGF0ZTogc3RhdGUsXG4gICAgcGx1Z2luczogcGx1Z2lucyxcbiAgICAvLyBtZXRob2RzXG4gICAgY2xlYXJEZWxheVRpbWVvdXRzOiBjbGVhckRlbGF5VGltZW91dHMsXG4gICAgc2V0UHJvcHM6IHNldFByb3BzLFxuICAgIHNldENvbnRlbnQ6IHNldENvbnRlbnQsXG4gICAgc2hvdzogc2hvdyxcbiAgICBoaWRlOiBoaWRlLFxuICAgIGhpZGVXaXRoSW50ZXJhY3Rpdml0eTogaGlkZVdpdGhJbnRlcmFjdGl2aXR5LFxuICAgIGVuYWJsZTogZW5hYmxlLFxuICAgIGRpc2FibGU6IGRpc2FibGUsXG4gICAgdW5tb3VudDogdW5tb3VudCxcbiAgICBkZXN0cm95OiBkZXN0cm95XG4gIH07IC8vIFRPRE86IEludmVzdGlnYXRlIHdoeSB0aGlzIGVhcmx5IHJldHVybiBjYXVzZXMgYSBURFogZXJyb3IgaW4gdGhlIHRlc3RzIOKAlFxuICAvLyBpdCBkb2Vzbid0IHNlZW0gdG8gaGFwcGVuIGluIHRoZSBicm93c2VyXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG5cbiAgaWYgKCFwcm9wcy5yZW5kZXIpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBlcnJvcldoZW4odHJ1ZSwgJ3JlbmRlcigpIGZ1bmN0aW9uIGhhcyBub3QgYmVlbiBzdXBwbGllZC4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zdGFuY2U7XG4gIH0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEluaXRpYWwgbXV0YXRpb25zXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbiAgdmFyIF9wcm9wcyRyZW5kZXIgPSBwcm9wcy5yZW5kZXIoaW5zdGFuY2UpLFxuICAgICAgcG9wcGVyID0gX3Byb3BzJHJlbmRlci5wb3BwZXIsXG4gICAgICBvblVwZGF0ZSA9IF9wcm9wcyRyZW5kZXIub25VcGRhdGU7XG5cbiAgcG9wcGVyLnNldEF0dHJpYnV0ZSgnZGF0YS10aXBweS1yb290JywgJycpO1xuICBwb3BwZXIuaWQgPSBcInRpcHB5LVwiICsgaW5zdGFuY2UuaWQ7XG4gIGluc3RhbmNlLnBvcHBlciA9IHBvcHBlcjtcbiAgcmVmZXJlbmNlLl90aXBweSA9IGluc3RhbmNlO1xuICBwb3BwZXIuX3RpcHB5ID0gaW5zdGFuY2U7XG4gIHZhciBwbHVnaW5zSG9va3MgPSBwbHVnaW5zLm1hcChmdW5jdGlvbiAocGx1Z2luKSB7XG4gICAgcmV0dXJuIHBsdWdpbi5mbihpbnN0YW5jZSk7XG4gIH0pO1xuICB2YXIgaGFzQXJpYUV4cGFuZGVkID0gcmVmZXJlbmNlLmhhc0F0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpO1xuICBhZGRMaXN0ZW5lcnMoKTtcbiAgaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCk7XG4gIGhhbmRsZVN0eWxlcygpO1xuICBpbnZva2VIb29rKCdvbkNyZWF0ZScsIFtpbnN0YW5jZV0pO1xuXG4gIGlmIChwcm9wcy5zaG93T25DcmVhdGUpIHtcbiAgICBzY2hlZHVsZVNob3coKTtcbiAgfSAvLyBQcmV2ZW50IGEgdGlwcHkgd2l0aCBhIGRlbGF5IGZyb20gaGlkaW5nIGlmIHRoZSBjdXJzb3IgbGVmdCB0aGVuIHJldHVybmVkXG4gIC8vIGJlZm9yZSBpdCBzdGFydGVkIGhpZGluZ1xuXG5cbiAgcG9wcGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSkge1xuICAgICAgaW5zdGFuY2UuY2xlYXJEZWxheVRpbWVvdXRzKCk7XG4gICAgfVxuICB9KTtcbiAgcG9wcGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGluc3RhbmNlLnByb3BzLnRyaWdnZXIuaW5kZXhPZignbW91c2VlbnRlcicpID49IDApIHtcbiAgICAgIGdldERvY3VtZW50KCkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZGVib3VuY2VkT25Nb3VzZU1vdmUpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBpbnN0YW5jZTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIPCflJIgUHJpdmF0ZSBtZXRob2RzXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRUb3VjaFNldHRpbmdzKCkge1xuICAgIHZhciB0b3VjaCA9IGluc3RhbmNlLnByb3BzLnRvdWNoO1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHRvdWNoKSA/IHRvdWNoIDogW3RvdWNoLCAwXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldElzQ3VzdG9tVG91Y2hCZWhhdmlvcigpIHtcbiAgICByZXR1cm4gZ2V0Tm9ybWFsaXplZFRvdWNoU2V0dGluZ3MoKVswXSA9PT0gJ2hvbGQnO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSB7XG4gICAgdmFyIF9pbnN0YW5jZSRwcm9wcyRyZW5kZTtcblxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gISEoKF9pbnN0YW5jZSRwcm9wcyRyZW5kZSA9IGluc3RhbmNlLnByb3BzLnJlbmRlcikgIT0gbnVsbCAmJiBfaW5zdGFuY2UkcHJvcHMkcmVuZGUuJCR0aXBweSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDdXJyZW50VGFyZ2V0KCkge1xuICAgIHJldHVybiBjdXJyZW50VGFyZ2V0IHx8IHJlZmVyZW5jZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIHZhciBwYXJlbnQgPSBnZXRDdXJyZW50VGFyZ2V0KCkucGFyZW50Tm9kZTtcbiAgICByZXR1cm4gcGFyZW50ID8gZ2V0T3duZXJEb2N1bWVudChwYXJlbnQpIDogZG9jdW1lbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBnZXREZWZhdWx0VGVtcGxhdGVDaGlsZHJlbigpIHtcbiAgICByZXR1cm4gZ2V0Q2hpbGRyZW4ocG9wcGVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldERlbGF5KGlzU2hvdykge1xuICAgIC8vIEZvciB0b3VjaCBvciBrZXlib2FyZCBpbnB1dCwgZm9yY2UgYDBgIGRlbGF5IGZvciBVWCByZWFzb25zXG4gICAgLy8gQWxzbyBpZiB0aGUgaW5zdGFuY2UgaXMgbW91bnRlZCBidXQgbm90IHZpc2libGUgKHRyYW5zaXRpb25pbmcgb3V0KSxcbiAgICAvLyBpZ25vcmUgZGVsYXlcbiAgICBpZiAoaW5zdGFuY2Uuc3RhdGUuaXNNb3VudGVkICYmICFpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgfHwgY3VycmVudElucHV0LmlzVG91Y2ggfHwgbGFzdFRyaWdnZXJFdmVudCAmJiBsYXN0VHJpZ2dlckV2ZW50LnR5cGUgPT09ICdmb2N1cycpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRWYWx1ZUF0SW5kZXhPclJldHVybihpbnN0YW5jZS5wcm9wcy5kZWxheSwgaXNTaG93ID8gMCA6IDEsIGRlZmF1bHRQcm9wcy5kZWxheSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVTdHlsZXMoZnJvbUhpZGUpIHtcbiAgICBpZiAoZnJvbUhpZGUgPT09IHZvaWQgMCkge1xuICAgICAgZnJvbUhpZGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwb3BwZXIuc3R5bGUucG9pbnRlckV2ZW50cyA9IGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmICFmcm9tSGlkZSA/ICcnIDogJ25vbmUnO1xuICAgIHBvcHBlci5zdHlsZS56SW5kZXggPSBcIlwiICsgaW5zdGFuY2UucHJvcHMuekluZGV4O1xuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlSG9vayhob29rLCBhcmdzLCBzaG91bGRJbnZva2VQcm9wc0hvb2spIHtcbiAgICBpZiAoc2hvdWxkSW52b2tlUHJvcHNIb29rID09PSB2b2lkIDApIHtcbiAgICAgIHNob3VsZEludm9rZVByb3BzSG9vayA9IHRydWU7XG4gICAgfVxuXG4gICAgcGx1Z2luc0hvb2tzLmZvckVhY2goZnVuY3Rpb24gKHBsdWdpbkhvb2tzKSB7XG4gICAgICBpZiAocGx1Z2luSG9va3NbaG9va10pIHtcbiAgICAgICAgcGx1Z2luSG9va3NbaG9va10uYXBwbHkocGx1Z2luSG9va3MsIGFyZ3MpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHNob3VsZEludm9rZVByb3BzSG9vaykge1xuICAgICAgdmFyIF9pbnN0YW5jZSRwcm9wcztcblxuICAgICAgKF9pbnN0YW5jZSRwcm9wcyA9IGluc3RhbmNlLnByb3BzKVtob29rXS5hcHBseShfaW5zdGFuY2UkcHJvcHMsIGFyZ3MpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUFyaWFDb250ZW50QXR0cmlidXRlKCkge1xuICAgIHZhciBhcmlhID0gaW5zdGFuY2UucHJvcHMuYXJpYTtcblxuICAgIGlmICghYXJpYS5jb250ZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGF0dHIgPSBcImFyaWEtXCIgKyBhcmlhLmNvbnRlbnQ7XG4gICAgdmFyIGlkID0gcG9wcGVyLmlkO1xuICAgIHZhciBub2RlcyA9IG5vcm1hbGl6ZVRvQXJyYXkoaW5zdGFuY2UucHJvcHMudHJpZ2dlclRhcmdldCB8fCByZWZlcmVuY2UpO1xuICAgIG5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBub2RlLmdldEF0dHJpYnV0ZShhdHRyKTtcblxuICAgICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSkge1xuICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShhdHRyLCBjdXJyZW50VmFsdWUgPyBjdXJyZW50VmFsdWUgKyBcIiBcIiArIGlkIDogaWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIG5leHRWYWx1ZSA9IGN1cnJlbnRWYWx1ZSAmJiBjdXJyZW50VmFsdWUucmVwbGFjZShpZCwgJycpLnRyaW0oKTtcblxuICAgICAgICBpZiAobmV4dFZhbHVlKSB7XG4gICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoYXR0ciwgbmV4dFZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShhdHRyKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCkge1xuICAgIGlmIChoYXNBcmlhRXhwYW5kZWQgfHwgIWluc3RhbmNlLnByb3BzLmFyaWEuZXhwYW5kZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbm9kZXMgPSBub3JtYWxpemVUb0FycmF5KGluc3RhbmNlLnByb3BzLnRyaWdnZXJUYXJnZXQgfHwgcmVmZXJlbmNlKTtcbiAgICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICBpZiAoaW5zdGFuY2UucHJvcHMuaW50ZXJhY3RpdmUpIHtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgJiYgbm9kZSA9PT0gZ2V0Q3VycmVudFRhcmdldCgpID8gJ3RydWUnIDogJ2ZhbHNlJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xlYW51cEludGVyYWN0aXZlTW91c2VMaXN0ZW5lcnMoKSB7XG4gICAgZ2V0RG9jdW1lbnQoKS5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkZWJvdW5jZWRPbk1vdXNlTW92ZSk7XG4gICAgbW91c2VNb3ZlTGlzdGVuZXJzID0gbW91c2VNb3ZlTGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lciAhPT0gZGVib3VuY2VkT25Nb3VzZU1vdmU7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBvbkRvY3VtZW50UHJlc3MoZXZlbnQpIHtcbiAgICAvLyBNb3ZlZCBmaW5nZXIgdG8gc2Nyb2xsIGluc3RlYWQgb2YgYW4gaW50ZW50aW9uYWwgdGFwIG91dHNpZGVcbiAgICBpZiAoY3VycmVudElucHV0LmlzVG91Y2gpIHtcbiAgICAgIGlmIChkaWRUb3VjaE1vdmUgfHwgZXZlbnQudHlwZSA9PT0gJ21vdXNlZG93bicpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBhY3R1YWxUYXJnZXQgPSBldmVudC5jb21wb3NlZFBhdGggJiYgZXZlbnQuY29tcG9zZWRQYXRoKClbMF0gfHwgZXZlbnQudGFyZ2V0OyAvLyBDbGlja2VkIG9uIGludGVyYWN0aXZlIHBvcHBlclxuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGFjdHVhbENvbnRhaW5zKHBvcHBlciwgYWN0dWFsVGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gQ2xpY2tlZCBvbiB0aGUgZXZlbnQgbGlzdGVuZXJzIHRhcmdldFxuXG5cbiAgICBpZiAobm9ybWFsaXplVG9BcnJheShpbnN0YW5jZS5wcm9wcy50cmlnZ2VyVGFyZ2V0IHx8IHJlZmVyZW5jZSkuc29tZShmdW5jdGlvbiAoZWwpIHtcbiAgICAgIHJldHVybiBhY3R1YWxDb250YWlucyhlbCwgYWN0dWFsVGFyZ2V0KTtcbiAgICB9KSkge1xuICAgICAgaWYgKGN1cnJlbnRJbnB1dC5pc1RvdWNoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSAmJiBpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ2NsaWNrJykgPj0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGludm9rZUhvb2soJ29uQ2xpY2tPdXRzaWRlJywgW2luc3RhbmNlLCBldmVudF0pO1xuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5oaWRlT25DbGljayA9PT0gdHJ1ZSkge1xuICAgICAgaW5zdGFuY2UuY2xlYXJEZWxheVRpbWVvdXRzKCk7XG4gICAgICBpbnN0YW5jZS5oaWRlKCk7IC8vIGBtb3VzZWRvd25gIGV2ZW50IGlzIGZpcmVkIHJpZ2h0IGJlZm9yZSBgZm9jdXNgIGlmIHByZXNzaW5nIHRoZVxuICAgICAgLy8gY3VycmVudFRhcmdldC4gVGhpcyBsZXRzIGEgdGlwcHkgd2l0aCBgZm9jdXNgIHRyaWdnZXIga25vdyB0aGF0IGl0XG4gICAgICAvLyBzaG91bGQgbm90IHNob3dcblxuICAgICAgZGlkSGlkZUR1ZVRvRG9jdW1lbnRNb3VzZURvd24gPSB0cnVlO1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRpZEhpZGVEdWVUb0RvY3VtZW50TW91c2VEb3duID0gZmFsc2U7XG4gICAgICB9KTsgLy8gVGhlIGxpc3RlbmVyIGdldHMgYWRkZWQgaW4gYHNjaGVkdWxlU2hvdygpYCwgYnV0IHRoaXMgbWF5IGJlIGhpZGluZyBpdFxuICAgICAgLy8gYmVmb3JlIGl0IHNob3dzLCBhbmQgaGlkZSgpJ3MgZWFybHkgYmFpbC1vdXQgYmVoYXZpb3IgY2FuIHByZXZlbnQgaXRcbiAgICAgIC8vIGZyb20gYmVpbmcgY2xlYW5lZCB1cFxuXG4gICAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCkge1xuICAgICAgICByZW1vdmVEb2N1bWVudFByZXNzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25Ub3VjaE1vdmUoKSB7XG4gICAgZGlkVG91Y2hNb3ZlID0gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVG91Y2hTdGFydCgpIHtcbiAgICBkaWRUb3VjaE1vdmUgPSBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZERvY3VtZW50UHJlc3MoKSB7XG4gICAgdmFyIGRvYyA9IGdldERvY3VtZW50KCk7XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG9uRG9jdW1lbnRQcmVzcywgdHJ1ZSk7XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgb25Eb2N1bWVudFByZXNzLCBUT1VDSF9PUFRJT05TKTtcbiAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uVG91Y2hTdGFydCwgVE9VQ0hfT1BUSU9OUyk7XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIG9uVG91Y2hNb3ZlLCBUT1VDSF9PUFRJT05TKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZURvY3VtZW50UHJlc3MoKSB7XG4gICAgdmFyIGRvYyA9IGdldERvY3VtZW50KCk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG9uRG9jdW1lbnRQcmVzcywgdHJ1ZSk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgb25Eb2N1bWVudFByZXNzLCBUT1VDSF9PUFRJT05TKTtcbiAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uVG91Y2hTdGFydCwgVE9VQ0hfT1BUSU9OUyk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIG9uVG91Y2hNb3ZlLCBUT1VDSF9PUFRJT05TKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVHJhbnNpdGlvbmVkT3V0KGR1cmF0aW9uLCBjYWxsYmFjaykge1xuICAgIG9uVHJhbnNpdGlvbkVuZChkdXJhdGlvbiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUgJiYgcG9wcGVyLnBhcmVudE5vZGUgJiYgcG9wcGVyLnBhcmVudE5vZGUuY29udGFpbnMocG9wcGVyKSkge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gb25UcmFuc2l0aW9uZWRJbihkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgICBvblRyYW5zaXRpb25FbmQoZHVyYXRpb24sIGNhbGxiYWNrKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVHJhbnNpdGlvbkVuZChkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgICB2YXIgYm94ID0gZ2V0RGVmYXVsdFRlbXBsYXRlQ2hpbGRyZW4oKS5ib3g7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcihldmVudCkge1xuICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gYm94KSB7XG4gICAgICAgIHVwZGF0ZVRyYW5zaXRpb25FbmRMaXN0ZW5lcihib3gsICdyZW1vdmUnLCBsaXN0ZW5lcik7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfSAvLyBNYWtlIGNhbGxiYWNrIHN5bmNocm9ub3VzIGlmIGR1cmF0aW9uIGlzIDBcbiAgICAvLyBgdHJhbnNpdGlvbmVuZGAgd29uJ3QgZmlyZSBvdGhlcndpc2VcblxuXG4gICAgaWYgKGR1cmF0aW9uID09PSAwKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB9XG5cbiAgICB1cGRhdGVUcmFuc2l0aW9uRW5kTGlzdGVuZXIoYm94LCAncmVtb3ZlJywgY3VycmVudFRyYW5zaXRpb25FbmRMaXN0ZW5lcik7XG4gICAgdXBkYXRlVHJhbnNpdGlvbkVuZExpc3RlbmVyKGJveCwgJ2FkZCcsIGxpc3RlbmVyKTtcbiAgICBjdXJyZW50VHJhbnNpdGlvbkVuZExpc3RlbmVyID0gbGlzdGVuZXI7XG4gIH1cblxuICBmdW5jdGlvbiBvbihldmVudFR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIG5vZGVzID0gbm9ybWFsaXplVG9BcnJheShpbnN0YW5jZS5wcm9wcy50cmlnZ2VyVGFyZ2V0IHx8IHJlZmVyZW5jZSk7XG4gICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgICBsaXN0ZW5lcnMucHVzaCh7XG4gICAgICAgIG5vZGU6IG5vZGUsXG4gICAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLFxuICAgICAgICBoYW5kbGVyOiBoYW5kbGVyLFxuICAgICAgICBvcHRpb25zOiBvcHRpb25zXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZExpc3RlbmVycygpIHtcbiAgICBpZiAoZ2V0SXNDdXN0b21Ub3VjaEJlaGF2aW9yKCkpIHtcbiAgICAgIG9uKCd0b3VjaHN0YXJ0Jywgb25UcmlnZ2VyLCB7XG4gICAgICAgIHBhc3NpdmU6IHRydWVcbiAgICAgIH0pO1xuICAgICAgb24oJ3RvdWNoZW5kJywgb25Nb3VzZUxlYXZlLCB7XG4gICAgICAgIHBhc3NpdmU6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHNwbGl0QnlTcGFjZXMoaW5zdGFuY2UucHJvcHMudHJpZ2dlcikuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnRUeXBlKSB7XG4gICAgICBpZiAoZXZlbnRUeXBlID09PSAnbWFudWFsJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uKGV2ZW50VHlwZSwgb25UcmlnZ2VyKTtcblxuICAgICAgc3dpdGNoIChldmVudFR5cGUpIHtcbiAgICAgICAgY2FzZSAnbW91c2VlbnRlcic6XG4gICAgICAgICAgb24oJ21vdXNlbGVhdmUnLCBvbk1vdXNlTGVhdmUpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2ZvY3VzJzpcbiAgICAgICAgICBvbihpc0lFMTEgPyAnZm9jdXNvdXQnIDogJ2JsdXInLCBvbkJsdXJPckZvY3VzT3V0KTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdmb2N1c2luJzpcbiAgICAgICAgICBvbignZm9jdXNvdXQnLCBvbkJsdXJPckZvY3VzT3V0KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgdmFyIG5vZGUgPSBfcmVmLm5vZGUsXG4gICAgICAgICAgZXZlbnRUeXBlID0gX3JlZi5ldmVudFR5cGUsXG4gICAgICAgICAgaGFuZGxlciA9IF9yZWYuaGFuZGxlcixcbiAgICAgICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgfSk7XG4gICAgbGlzdGVuZXJzID0gW107XG4gIH1cblxuICBmdW5jdGlvbiBvblRyaWdnZXIoZXZlbnQpIHtcbiAgICB2YXIgX2xhc3RUcmlnZ2VyRXZlbnQ7XG5cbiAgICB2YXIgc2hvdWxkU2NoZWR1bGVDbGlja0hpZGUgPSBmYWxzZTtcblxuICAgIGlmICghaW5zdGFuY2Uuc3RhdGUuaXNFbmFibGVkIHx8IGlzRXZlbnRMaXN0ZW5lclN0b3BwZWQoZXZlbnQpIHx8IGRpZEhpZGVEdWVUb0RvY3VtZW50TW91c2VEb3duKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHdhc0ZvY3VzZWQgPSAoKF9sYXN0VHJpZ2dlckV2ZW50ID0gbGFzdFRyaWdnZXJFdmVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9sYXN0VHJpZ2dlckV2ZW50LnR5cGUpID09PSAnZm9jdXMnO1xuICAgIGxhc3RUcmlnZ2VyRXZlbnQgPSBldmVudDtcbiAgICBjdXJyZW50VGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICBoYW5kbGVBcmlhRXhwYW5kZWRBdHRyaWJ1dGUoKTtcblxuICAgIGlmICghaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlICYmIGlzTW91c2VFdmVudChldmVudCkpIHtcbiAgICAgIC8vIElmIHNjcm9sbGluZywgYG1vdXNlZW50ZXJgIGV2ZW50cyBjYW4gYmUgZmlyZWQgaWYgdGhlIGN1cnNvciBsYW5kc1xuICAgICAgLy8gb3ZlciBhIG5ldyB0YXJnZXQsIGJ1dCBgbW91c2Vtb3ZlYCBldmVudHMgZG9uJ3QgZ2V0IGZpcmVkLiBUaGlzXG4gICAgICAvLyBjYXVzZXMgaW50ZXJhY3RpdmUgdG9vbHRpcHMgdG8gZ2V0IHN0dWNrIG9wZW4gdW50aWwgdGhlIGN1cnNvciBpc1xuICAgICAgLy8gbW92ZWRcbiAgICAgIG1vdXNlTW92ZUxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgICByZXR1cm4gbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSAvLyBUb2dnbGUgc2hvdy9oaWRlIHdoZW4gY2xpY2tpbmcgY2xpY2stdHJpZ2dlcmVkIHRvb2x0aXBzXG5cblxuICAgIGlmIChldmVudC50eXBlID09PSAnY2xpY2snICYmIChpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ21vdXNlZW50ZXInKSA8IDAgfHwgaXNWaXNpYmxlRnJvbUNsaWNrKSAmJiBpbnN0YW5jZS5wcm9wcy5oaWRlT25DbGljayAhPT0gZmFsc2UgJiYgaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlKSB7XG4gICAgICBzaG91bGRTY2hlZHVsZUNsaWNrSGlkZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjaGVkdWxlU2hvdyhldmVudCk7XG4gICAgfVxuXG4gICAgaWYgKGV2ZW50LnR5cGUgPT09ICdjbGljaycpIHtcbiAgICAgIGlzVmlzaWJsZUZyb21DbGljayA9ICFzaG91bGRTY2hlZHVsZUNsaWNrSGlkZTtcbiAgICB9XG5cbiAgICBpZiAoc2hvdWxkU2NoZWR1bGVDbGlja0hpZGUgJiYgIXdhc0ZvY3VzZWQpIHtcbiAgICAgIHNjaGVkdWxlSGlkZShldmVudCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25Nb3VzZU1vdmUoZXZlbnQpIHtcbiAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgIHZhciBpc0N1cnNvck92ZXJSZWZlcmVuY2VPclBvcHBlciA9IGdldEN1cnJlbnRUYXJnZXQoKS5jb250YWlucyh0YXJnZXQpIHx8IHBvcHBlci5jb250YWlucyh0YXJnZXQpO1xuXG4gICAgaWYgKGV2ZW50LnR5cGUgPT09ICdtb3VzZW1vdmUnICYmIGlzQ3Vyc29yT3ZlclJlZmVyZW5jZU9yUG9wcGVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHBvcHBlclRyZWVEYXRhID0gZ2V0TmVzdGVkUG9wcGVyVHJlZSgpLmNvbmNhdChwb3BwZXIpLm1hcChmdW5jdGlvbiAocG9wcGVyKSB7XG4gICAgICB2YXIgX2luc3RhbmNlJHBvcHBlckluc3RhO1xuXG4gICAgICB2YXIgaW5zdGFuY2UgPSBwb3BwZXIuX3RpcHB5O1xuICAgICAgdmFyIHN0YXRlID0gKF9pbnN0YW5jZSRwb3BwZXJJbnN0YSA9IGluc3RhbmNlLnBvcHBlckluc3RhbmNlKSA9PSBudWxsID8gdm9pZCAwIDogX2luc3RhbmNlJHBvcHBlckluc3RhLnN0YXRlO1xuXG4gICAgICBpZiAoc3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwb3BwZXJSZWN0OiBwb3BwZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgcG9wcGVyU3RhdGU6IHN0YXRlLFxuICAgICAgICAgIHByb3BzOiBwcm9wc1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KS5maWx0ZXIoQm9vbGVhbik7XG5cbiAgICBpZiAoaXNDdXJzb3JPdXRzaWRlSW50ZXJhY3RpdmVCb3JkZXIocG9wcGVyVHJlZURhdGEsIGV2ZW50KSkge1xuICAgICAgY2xlYW51cEludGVyYWN0aXZlTW91c2VMaXN0ZW5lcnMoKTtcbiAgICAgIHNjaGVkdWxlSGlkZShldmVudCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25Nb3VzZUxlYXZlKGV2ZW50KSB7XG4gICAgdmFyIHNob3VsZEJhaWwgPSBpc0V2ZW50TGlzdGVuZXJTdG9wcGVkKGV2ZW50KSB8fCBpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ2NsaWNrJykgPj0gMCAmJiBpc1Zpc2libGVGcm9tQ2xpY2s7XG5cbiAgICBpZiAoc2hvdWxkQmFpbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5pbnRlcmFjdGl2ZSkge1xuICAgICAgaW5zdGFuY2UuaGlkZVdpdGhJbnRlcmFjdGl2aXR5KGV2ZW50KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzY2hlZHVsZUhpZGUoZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25CbHVyT3JGb2N1c091dChldmVudCkge1xuICAgIGlmIChpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ2ZvY3VzaW4nKSA8IDAgJiYgZXZlbnQudGFyZ2V0ICE9PSBnZXRDdXJyZW50VGFyZ2V0KCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIElmIGZvY3VzIHdhcyBtb3ZlZCB0byB3aXRoaW4gdGhlIHBvcHBlclxuXG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMuaW50ZXJhY3RpdmUgJiYgZXZlbnQucmVsYXRlZFRhcmdldCAmJiBwb3BwZXIuY29udGFpbnMoZXZlbnQucmVsYXRlZFRhcmdldCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzY2hlZHVsZUhpZGUoZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNFdmVudExpc3RlbmVyU3RvcHBlZChldmVudCkge1xuICAgIHJldHVybiBjdXJyZW50SW5wdXQuaXNUb3VjaCA/IGdldElzQ3VzdG9tVG91Y2hCZWhhdmlvcigpICE9PSBldmVudC50eXBlLmluZGV4T2YoJ3RvdWNoJykgPj0gMCA6IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUG9wcGVySW5zdGFuY2UoKSB7XG4gICAgZGVzdHJveVBvcHBlckluc3RhbmNlKCk7XG4gICAgdmFyIF9pbnN0YW5jZSRwcm9wczIgPSBpbnN0YW5jZS5wcm9wcyxcbiAgICAgICAgcG9wcGVyT3B0aW9ucyA9IF9pbnN0YW5jZSRwcm9wczIucG9wcGVyT3B0aW9ucyxcbiAgICAgICAgcGxhY2VtZW50ID0gX2luc3RhbmNlJHByb3BzMi5wbGFjZW1lbnQsXG4gICAgICAgIG9mZnNldCA9IF9pbnN0YW5jZSRwcm9wczIub2Zmc2V0LFxuICAgICAgICBnZXRSZWZlcmVuY2VDbGllbnRSZWN0ID0gX2luc3RhbmNlJHByb3BzMi5nZXRSZWZlcmVuY2VDbGllbnRSZWN0LFxuICAgICAgICBtb3ZlVHJhbnNpdGlvbiA9IF9pbnN0YW5jZSRwcm9wczIubW92ZVRyYW5zaXRpb247XG4gICAgdmFyIGFycm93ID0gZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSA/IGdldENoaWxkcmVuKHBvcHBlcikuYXJyb3cgOiBudWxsO1xuICAgIHZhciBjb21wdXRlZFJlZmVyZW5jZSA9IGdldFJlZmVyZW5jZUNsaWVudFJlY3QgPyB7XG4gICAgICBnZXRCb3VuZGluZ0NsaWVudFJlY3Q6IGdldFJlZmVyZW5jZUNsaWVudFJlY3QsXG4gICAgICBjb250ZXh0RWxlbWVudDogZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdC5jb250ZXh0RWxlbWVudCB8fCBnZXRDdXJyZW50VGFyZ2V0KClcbiAgICB9IDogcmVmZXJlbmNlO1xuICAgIHZhciB0aXBweU1vZGlmaWVyID0ge1xuICAgICAgbmFtZTogJyQkdGlwcHknLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgIHBoYXNlOiAnYmVmb3JlV3JpdGUnLFxuICAgICAgcmVxdWlyZXM6IFsnY29tcHV0ZVN0eWxlcyddLFxuICAgICAgZm46IGZ1bmN0aW9uIGZuKF9yZWYyKSB7XG4gICAgICAgIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlO1xuXG4gICAgICAgIGlmIChnZXRJc0RlZmF1bHRSZW5kZXJGbigpKSB7XG4gICAgICAgICAgdmFyIF9nZXREZWZhdWx0VGVtcGxhdGVDaCA9IGdldERlZmF1bHRUZW1wbGF0ZUNoaWxkcmVuKCksXG4gICAgICAgICAgICAgIGJveCA9IF9nZXREZWZhdWx0VGVtcGxhdGVDaC5ib3g7XG5cbiAgICAgICAgICBbJ3BsYWNlbWVudCcsICdyZWZlcmVuY2UtaGlkZGVuJywgJ2VzY2FwZWQnXS5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyKSB7XG4gICAgICAgICAgICBpZiAoYXR0ciA9PT0gJ3BsYWNlbWVudCcpIHtcbiAgICAgICAgICAgICAgYm94LnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZW1lbnQnLCBzdGF0ZS5wbGFjZW1lbnQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyW1wiZGF0YS1wb3BwZXItXCIgKyBhdHRyXSkge1xuICAgICAgICAgICAgICAgIGJveC5zZXRBdHRyaWJ1dGUoXCJkYXRhLVwiICsgYXR0ciwgJycpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGJveC5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLVwiICsgYXR0cik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IHt9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgbW9kaWZpZXJzID0gW3tcbiAgICAgIG5hbWU6ICdvZmZzZXQnLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBvZmZzZXQ6IG9mZnNldFxuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBwYWRkaW5nOiB7XG4gICAgICAgICAgdG9wOiAyLFxuICAgICAgICAgIGJvdHRvbTogMixcbiAgICAgICAgICBsZWZ0OiA1LFxuICAgICAgICAgIHJpZ2h0OiA1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAnZmxpcCcsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHBhZGRpbmc6IDVcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAnY29tcHV0ZVN0eWxlcycsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGFkYXB0aXZlOiAhbW92ZVRyYW5zaXRpb25cbiAgICAgIH1cbiAgICB9LCB0aXBweU1vZGlmaWVyXTtcblxuICAgIGlmIChnZXRJc0RlZmF1bHRSZW5kZXJGbigpICYmIGFycm93KSB7XG4gICAgICBtb2RpZmllcnMucHVzaCh7XG4gICAgICAgIG5hbWU6ICdhcnJvdycsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBlbGVtZW50OiBhcnJvdyxcbiAgICAgICAgICBwYWRkaW5nOiAzXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIG1vZGlmaWVycy5wdXNoLmFwcGx5KG1vZGlmaWVycywgKHBvcHBlck9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IHBvcHBlck9wdGlvbnMubW9kaWZpZXJzKSB8fCBbXSk7XG4gICAgaW5zdGFuY2UucG9wcGVySW5zdGFuY2UgPSBjcmVhdGVQb3BwZXIoY29tcHV0ZWRSZWZlcmVuY2UsIHBvcHBlciwgT2JqZWN0LmFzc2lnbih7fSwgcG9wcGVyT3B0aW9ucywge1xuICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBvbkZpcnN0VXBkYXRlOiBvbkZpcnN0VXBkYXRlLFxuICAgICAgbW9kaWZpZXJzOiBtb2RpZmllcnNcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZXN0cm95UG9wcGVySW5zdGFuY2UoKSB7XG4gICAgaWYgKGluc3RhbmNlLnBvcHBlckluc3RhbmNlKSB7XG4gICAgICBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbW91bnQoKSB7XG4gICAgdmFyIGFwcGVuZFRvID0gaW5zdGFuY2UucHJvcHMuYXBwZW5kVG87XG4gICAgdmFyIHBhcmVudE5vZGU7IC8vIEJ5IGRlZmF1bHQsIHdlJ2xsIGFwcGVuZCB0aGUgcG9wcGVyIHRvIHRoZSB0cmlnZ2VyVGFyZ2V0cydzIHBhcmVudE5vZGUgc29cbiAgICAvLyBpdCdzIGRpcmVjdGx5IGFmdGVyIHRoZSByZWZlcmVuY2UgZWxlbWVudCBzbyB0aGUgZWxlbWVudHMgaW5zaWRlIHRoZVxuICAgIC8vIHRpcHB5IGNhbiBiZSB0YWJiZWQgdG9cbiAgICAvLyBJZiB0aGVyZSBhcmUgY2xpcHBpbmcgaXNzdWVzLCB0aGUgdXNlciBjYW4gc3BlY2lmeSBhIGRpZmZlcmVudCBhcHBlbmRUb1xuICAgIC8vIGFuZCBlbnN1cmUgZm9jdXMgbWFuYWdlbWVudCBpcyBoYW5kbGVkIGNvcnJlY3RseSBtYW51YWxseVxuXG4gICAgdmFyIG5vZGUgPSBnZXRDdXJyZW50VGFyZ2V0KCk7XG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMuaW50ZXJhY3RpdmUgJiYgYXBwZW5kVG8gPT09IFRJUFBZX0RFRkFVTFRfQVBQRU5EX1RPIHx8IGFwcGVuZFRvID09PSAncGFyZW50Jykge1xuICAgICAgcGFyZW50Tm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyZW50Tm9kZSA9IGludm9rZVdpdGhBcmdzT3JSZXR1cm4oYXBwZW5kVG8sIFtub2RlXSk7XG4gICAgfSAvLyBUaGUgcG9wcGVyIGVsZW1lbnQgbmVlZHMgdG8gZXhpc3Qgb24gdGhlIERPTSBiZWZvcmUgaXRzIHBvc2l0aW9uIGNhbiBiZVxuICAgIC8vIHVwZGF0ZWQgYXMgUG9wcGVyIG5lZWRzIHRvIHJlYWQgaXRzIGRpbWVuc2lvbnNcblxuXG4gICAgaWYgKCFwYXJlbnROb2RlLmNvbnRhaW5zKHBvcHBlcikpIHtcbiAgICAgIHBhcmVudE5vZGUuYXBwZW5kQ2hpbGQocG9wcGVyKTtcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQgPSB0cnVlO1xuICAgIGNyZWF0ZVBvcHBlckluc3RhbmNlKCk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIC8vIEFjY2Vzc2liaWxpdHkgY2hlY2tcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlICYmIGFwcGVuZFRvID09PSBkZWZhdWx0UHJvcHMuYXBwZW5kVG8gJiYgbm9kZS5uZXh0RWxlbWVudFNpYmxpbmcgIT09IHBvcHBlciwgWydJbnRlcmFjdGl2ZSB0aXBweSBlbGVtZW50IG1heSBub3QgYmUgYWNjZXNzaWJsZSB2aWEga2V5Ym9hcmQnLCAnbmF2aWdhdGlvbiBiZWNhdXNlIGl0IGlzIG5vdCBkaXJlY3RseSBhZnRlciB0aGUgcmVmZXJlbmNlIGVsZW1lbnQnLCAnaW4gdGhlIERPTSBzb3VyY2Ugb3JkZXIuJywgJ1xcblxcbicsICdVc2luZyBhIHdyYXBwZXIgPGRpdj4gb3IgPHNwYW4+IHRhZyBhcm91bmQgdGhlIHJlZmVyZW5jZSBlbGVtZW50JywgJ3NvbHZlcyB0aGlzIGJ5IGNyZWF0aW5nIGEgbmV3IHBhcmVudE5vZGUgY29udGV4dC4nLCAnXFxuXFxuJywgJ1NwZWNpZnlpbmcgYGFwcGVuZFRvOiBkb2N1bWVudC5ib2R5YCBzaWxlbmNlcyB0aGlzIHdhcm5pbmcsIGJ1dCBpdCcsICdhc3N1bWVzIHlvdSBhcmUgdXNpbmcgYSBmb2N1cyBtYW5hZ2VtZW50IHNvbHV0aW9uIHRvIGhhbmRsZScsICdrZXlib2FyZCBuYXZpZ2F0aW9uLicsICdcXG5cXG4nLCAnU2VlOiBodHRwczovL2F0b21pa3MuZ2l0aHViLmlvL3RpcHB5anMvdjYvYWNjZXNzaWJpbGl0eS8jaW50ZXJhY3Rpdml0eSddLmpvaW4oJyAnKSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TmVzdGVkUG9wcGVyVHJlZSgpIHtcbiAgICByZXR1cm4gYXJyYXlGcm9tKHBvcHBlci5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS10aXBweS1yb290XScpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlU2hvdyhldmVudCkge1xuICAgIGluc3RhbmNlLmNsZWFyRGVsYXlUaW1lb3V0cygpO1xuXG4gICAgaWYgKGV2ZW50KSB7XG4gICAgICBpbnZva2VIb29rKCdvblRyaWdnZXInLCBbaW5zdGFuY2UsIGV2ZW50XSk7XG4gICAgfVxuXG4gICAgYWRkRG9jdW1lbnRQcmVzcygpO1xuICAgIHZhciBkZWxheSA9IGdldERlbGF5KHRydWUpO1xuXG4gICAgdmFyIF9nZXROb3JtYWxpemVkVG91Y2hTZSA9IGdldE5vcm1hbGl6ZWRUb3VjaFNldHRpbmdzKCksXG4gICAgICAgIHRvdWNoVmFsdWUgPSBfZ2V0Tm9ybWFsaXplZFRvdWNoU2VbMF0sXG4gICAgICAgIHRvdWNoRGVsYXkgPSBfZ2V0Tm9ybWFsaXplZFRvdWNoU2VbMV07XG5cbiAgICBpZiAoY3VycmVudElucHV0LmlzVG91Y2ggJiYgdG91Y2hWYWx1ZSA9PT0gJ2hvbGQnICYmIHRvdWNoRGVsYXkpIHtcbiAgICAgIGRlbGF5ID0gdG91Y2hEZWxheTtcbiAgICB9XG5cbiAgICBpZiAoZGVsYXkpIHtcbiAgICAgIHNob3dUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlLnNob3coKTtcbiAgICAgIH0sIGRlbGF5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5zdGFuY2Uuc2hvdygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlSGlkZShldmVudCkge1xuICAgIGluc3RhbmNlLmNsZWFyRGVsYXlUaW1lb3V0cygpO1xuICAgIGludm9rZUhvb2soJ29uVW50cmlnZ2VyJywgW2luc3RhbmNlLCBldmVudF0pO1xuXG4gICAgaWYgKCFpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgIHJlbW92ZURvY3VtZW50UHJlc3MoKTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEZvciBpbnRlcmFjdGl2ZSB0aXBwaWVzLCBzY2hlZHVsZUhpZGUgaXMgYWRkZWQgdG8gYSBkb2N1bWVudC5ib2R5IGhhbmRsZXJcbiAgICAvLyBmcm9tIG9uTW91c2VMZWF2ZSBzbyBtdXN0IGludGVyY2VwdCBzY2hlZHVsZWQgaGlkZXMgZnJvbSBtb3VzZW1vdmUvbGVhdmVcbiAgICAvLyBldmVudHMgd2hlbiB0cmlnZ2VyIGNvbnRhaW5zIG1vdXNlZW50ZXIgYW5kIGNsaWNrLCBhbmQgdGhlIHRpcCBpc1xuICAgIC8vIGN1cnJlbnRseSBzaG93biBhcyBhIHJlc3VsdCBvZiBhIGNsaWNrLlxuXG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMudHJpZ2dlci5pbmRleE9mKCdtb3VzZWVudGVyJykgPj0gMCAmJiBpbnN0YW5jZS5wcm9wcy50cmlnZ2VyLmluZGV4T2YoJ2NsaWNrJykgPj0gMCAmJiBbJ21vdXNlbGVhdmUnLCAnbW91c2Vtb3ZlJ10uaW5kZXhPZihldmVudC50eXBlKSA+PSAwICYmIGlzVmlzaWJsZUZyb21DbGljaykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBkZWxheSA9IGdldERlbGF5KGZhbHNlKTtcblxuICAgIGlmIChkZWxheSkge1xuICAgICAgaGlkZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSkge1xuICAgICAgICAgIGluc3RhbmNlLmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgfSwgZGVsYXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBGaXhlcyBhIGB0cmFuc2l0aW9uZW5kYCBwcm9ibGVtIHdoZW4gaXQgZmlyZXMgMSBmcmFtZSB0b29cbiAgICAgIC8vIGxhdGUgc29tZXRpbWVzLCB3ZSBkb24ndCB3YW50IGhpZGUoKSB0byBiZSBjYWxsZWQuXG4gICAgICBzY2hlZHVsZUhpZGVBbmltYXRpb25GcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlLmhpZGUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8g8J+UkSBQdWJsaWMgbWV0aG9kc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4gIGZ1bmN0aW9uIGVuYWJsZSgpIHtcbiAgICBpbnN0YW5jZS5zdGF0ZS5pc0VuYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAvLyBEaXNhYmxpbmcgdGhlIGluc3RhbmNlIHNob3VsZCBhbHNvIGhpZGUgaXRcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYXRvbWlrcy90aXBweS5qcy1yZWFjdC9pc3N1ZXMvMTA2XG4gICAgaW5zdGFuY2UuaGlkZSgpO1xuICAgIGluc3RhbmNlLnN0YXRlLmlzRW5hYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xlYXJEZWxheVRpbWVvdXRzKCkge1xuICAgIGNsZWFyVGltZW91dChzaG93VGltZW91dCk7XG4gICAgY2xlYXJUaW1lb3V0KGhpZGVUaW1lb3V0KTtcbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZShzY2hlZHVsZUhpZGVBbmltYXRpb25GcmFtZSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRQcm9wcyhwYXJ0aWFsUHJvcHMpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkLCBjcmVhdGVNZW1vcnlMZWFrV2FybmluZygnc2V0UHJvcHMnKSk7XG4gICAgfVxuXG4gICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW52b2tlSG9vaygnb25CZWZvcmVVcGRhdGUnLCBbaW5zdGFuY2UsIHBhcnRpYWxQcm9wc10pO1xuICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgIHZhciBwcmV2UHJvcHMgPSBpbnN0YW5jZS5wcm9wcztcbiAgICB2YXIgbmV4dFByb3BzID0gZXZhbHVhdGVQcm9wcyhyZWZlcmVuY2UsIE9iamVjdC5hc3NpZ24oe30sIHByZXZQcm9wcywgcmVtb3ZlVW5kZWZpbmVkUHJvcHMocGFydGlhbFByb3BzKSwge1xuICAgICAgaWdub3JlQXR0cmlidXRlczogdHJ1ZVxuICAgIH0pKTtcbiAgICBpbnN0YW5jZS5wcm9wcyA9IG5leHRQcm9wcztcbiAgICBhZGRMaXN0ZW5lcnMoKTtcblxuICAgIGlmIChwcmV2UHJvcHMuaW50ZXJhY3RpdmVEZWJvdW5jZSAhPT0gbmV4dFByb3BzLmludGVyYWN0aXZlRGVib3VuY2UpIHtcbiAgICAgIGNsZWFudXBJbnRlcmFjdGl2ZU1vdXNlTGlzdGVuZXJzKCk7XG4gICAgICBkZWJvdW5jZWRPbk1vdXNlTW92ZSA9IGRlYm91bmNlKG9uTW91c2VNb3ZlLCBuZXh0UHJvcHMuaW50ZXJhY3RpdmVEZWJvdW5jZSk7XG4gICAgfSAvLyBFbnN1cmUgc3RhbGUgYXJpYS1leHBhbmRlZCBhdHRyaWJ1dGVzIGFyZSByZW1vdmVkXG5cblxuICAgIGlmIChwcmV2UHJvcHMudHJpZ2dlclRhcmdldCAmJiAhbmV4dFByb3BzLnRyaWdnZXJUYXJnZXQpIHtcbiAgICAgIG5vcm1hbGl6ZVRvQXJyYXkocHJldlByb3BzLnRyaWdnZXJUYXJnZXQpLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAobmV4dFByb3BzLnRyaWdnZXJUYXJnZXQpIHtcbiAgICAgIHJlZmVyZW5jZS5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKTtcbiAgICB9XG5cbiAgICBoYW5kbGVBcmlhRXhwYW5kZWRBdHRyaWJ1dGUoKTtcbiAgICBoYW5kbGVTdHlsZXMoKTtcblxuICAgIGlmIChvblVwZGF0ZSkge1xuICAgICAgb25VcGRhdGUocHJldlByb3BzLCBuZXh0UHJvcHMpO1xuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSkge1xuICAgICAgY3JlYXRlUG9wcGVySW5zdGFuY2UoKTsgLy8gRml4ZXMgYW4gaXNzdWUgd2l0aCBuZXN0ZWQgdGlwcGllcyBpZiB0aGV5IGFyZSBhbGwgZ2V0dGluZyByZS1yZW5kZXJlZCxcbiAgICAgIC8vIGFuZCB0aGUgbmVzdGVkIG9uZXMgZ2V0IHJlLXJlbmRlcmVkIGZpcnN0LlxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2F0b21pa3MvdGlwcHlqcy1yZWFjdC9pc3N1ZXMvMTc3XG4gICAgICAvLyBUT0RPOiBmaW5kIGEgY2xlYW5lciAvIG1vcmUgZWZmaWNpZW50IHNvbHV0aW9uKCEpXG5cbiAgICAgIGdldE5lc3RlZFBvcHBlclRyZWUoKS5mb3JFYWNoKGZ1bmN0aW9uIChuZXN0ZWRQb3BwZXIpIHtcbiAgICAgICAgLy8gUmVhY3QgKGFuZCBvdGhlciBVSSBsaWJzIGxpa2VseSkgcmVxdWlyZXMgYSByQUYgd3JhcHBlciBhcyBpdCBmbHVzaGVzXG4gICAgICAgIC8vIGl0cyB3b3JrIGluIG9uZVxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobmVzdGVkUG9wcGVyLl90aXBweS5wb3BwZXJJbnN0YW5jZS5mb3JjZVVwZGF0ZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpbnZva2VIb29rKCdvbkFmdGVyVXBkYXRlJywgW2luc3RhbmNlLCBwYXJ0aWFsUHJvcHNdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldENvbnRlbnQoY29udGVudCkge1xuICAgIGluc3RhbmNlLnNldFByb3BzKHtcbiAgICAgIGNvbnRlbnQ6IGNvbnRlbnRcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3coKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB3YXJuV2hlbihpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZCwgY3JlYXRlTWVtb3J5TGVha1dhcm5pbmcoJ3Nob3cnKSk7XG4gICAgfSAvLyBFYXJseSBiYWlsLW91dFxuXG5cbiAgICB2YXIgaXNBbHJlYWR5VmlzaWJsZSA9IGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZTtcbiAgICB2YXIgaXNEZXN0cm95ZWQgPSBpbnN0YW5jZS5zdGF0ZS5pc0Rlc3Ryb3llZDtcbiAgICB2YXIgaXNEaXNhYmxlZCA9ICFpbnN0YW5jZS5zdGF0ZS5pc0VuYWJsZWQ7XG4gICAgdmFyIGlzVG91Y2hBbmRUb3VjaERpc2FibGVkID0gY3VycmVudElucHV0LmlzVG91Y2ggJiYgIWluc3RhbmNlLnByb3BzLnRvdWNoO1xuICAgIHZhciBkdXJhdGlvbiA9IGdldFZhbHVlQXRJbmRleE9yUmV0dXJuKGluc3RhbmNlLnByb3BzLmR1cmF0aW9uLCAwLCBkZWZhdWx0UHJvcHMuZHVyYXRpb24pO1xuXG4gICAgaWYgKGlzQWxyZWFkeVZpc2libGUgfHwgaXNEZXN0cm95ZWQgfHwgaXNEaXNhYmxlZCB8fCBpc1RvdWNoQW5kVG91Y2hEaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gTm9ybWFsaXplIGBkaXNhYmxlZGAgYmVoYXZpb3IgYWNyb3NzIGJyb3dzZXJzLlxuICAgIC8vIEZpcmVmb3ggYWxsb3dzIGV2ZW50cyBvbiBkaXNhYmxlZCBlbGVtZW50cywgYnV0IENocm9tZSBkb2Vzbid0LlxuICAgIC8vIFVzaW5nIGEgd3JhcHBlciBlbGVtZW50IChpLmUuIDxzcGFuPikgaXMgcmVjb21tZW5kZWQuXG5cblxuICAgIGlmIChnZXRDdXJyZW50VGFyZ2V0KCkuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW52b2tlSG9vaygnb25TaG93JywgW2luc3RhbmNlXSwgZmFsc2UpO1xuXG4gICAgaWYgKGluc3RhbmNlLnByb3BzLm9uU2hvdyhpbnN0YW5jZSkgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlID0gdHJ1ZTtcblxuICAgIGlmIChnZXRJc0RlZmF1bHRSZW5kZXJGbigpKSB7XG4gICAgICBwb3BwZXIuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICB9XG5cbiAgICBoYW5kbGVTdHlsZXMoKTtcbiAgICBhZGREb2N1bWVudFByZXNzKCk7XG5cbiAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCkge1xuICAgICAgcG9wcGVyLnN0eWxlLnRyYW5zaXRpb24gPSAnbm9uZSc7XG4gICAgfSAvLyBJZiBmbGlwcGluZyB0byB0aGUgb3Bwb3NpdGUgc2lkZSBhZnRlciBoaWRpbmcgYXQgbGVhc3Qgb25jZSwgdGhlXG4gICAgLy8gYW5pbWF0aW9uIHdpbGwgdXNlIHRoZSB3cm9uZyBwbGFjZW1lbnQgd2l0aG91dCByZXNldHRpbmcgdGhlIGR1cmF0aW9uXG5cblxuICAgIGlmIChnZXRJc0RlZmF1bHRSZW5kZXJGbigpKSB7XG4gICAgICB2YXIgX2dldERlZmF1bHRUZW1wbGF0ZUNoMiA9IGdldERlZmF1bHRUZW1wbGF0ZUNoaWxkcmVuKCksXG4gICAgICAgICAgYm94ID0gX2dldERlZmF1bHRUZW1wbGF0ZUNoMi5ib3gsXG4gICAgICAgICAgY29udGVudCA9IF9nZXREZWZhdWx0VGVtcGxhdGVDaDIuY29udGVudDtcblxuICAgICAgc2V0VHJhbnNpdGlvbkR1cmF0aW9uKFtib3gsIGNvbnRlbnRdLCAwKTtcbiAgICB9XG5cbiAgICBvbkZpcnN0VXBkYXRlID0gZnVuY3Rpb24gb25GaXJzdFVwZGF0ZSgpIHtcbiAgICAgIHZhciBfaW5zdGFuY2UkcG9wcGVySW5zdGEyO1xuXG4gICAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSB8fCBpZ25vcmVPbkZpcnN0VXBkYXRlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWdub3JlT25GaXJzdFVwZGF0ZSA9IHRydWU7IC8vIHJlZmxvd1xuXG4gICAgICB2b2lkIHBvcHBlci5vZmZzZXRIZWlnaHQ7XG4gICAgICBwb3BwZXIuc3R5bGUudHJhbnNpdGlvbiA9IGluc3RhbmNlLnByb3BzLm1vdmVUcmFuc2l0aW9uO1xuXG4gICAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSAmJiBpbnN0YW5jZS5wcm9wcy5hbmltYXRpb24pIHtcbiAgICAgICAgdmFyIF9nZXREZWZhdWx0VGVtcGxhdGVDaDMgPSBnZXREZWZhdWx0VGVtcGxhdGVDaGlsZHJlbigpLFxuICAgICAgICAgICAgX2JveCA9IF9nZXREZWZhdWx0VGVtcGxhdGVDaDMuYm94LFxuICAgICAgICAgICAgX2NvbnRlbnQgPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2gzLmNvbnRlbnQ7XG5cbiAgICAgICAgc2V0VHJhbnNpdGlvbkR1cmF0aW9uKFtfYm94LCBfY29udGVudF0sIGR1cmF0aW9uKTtcbiAgICAgICAgc2V0VmlzaWJpbGl0eVN0YXRlKFtfYm94LCBfY29udGVudF0sICd2aXNpYmxlJyk7XG4gICAgICB9XG5cbiAgICAgIGhhbmRsZUFyaWFDb250ZW50QXR0cmlidXRlKCk7XG4gICAgICBoYW5kbGVBcmlhRXhwYW5kZWRBdHRyaWJ1dGUoKTtcbiAgICAgIHB1c2hJZlVuaXF1ZShtb3VudGVkSW5zdGFuY2VzLCBpbnN0YW5jZSk7IC8vIGNlcnRhaW4gbW9kaWZpZXJzIChlLmcuIGBtYXhTaXplYCkgcmVxdWlyZSBhIHNlY29uZCB1cGRhdGUgYWZ0ZXIgdGhlXG4gICAgICAvLyBwb3BwZXIgaGFzIGJlZW4gcG9zaXRpb25lZCBmb3IgdGhlIGZpcnN0IHRpbWVcblxuICAgICAgKF9pbnN0YW5jZSRwb3BwZXJJbnN0YTIgPSBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9pbnN0YW5jZSRwb3BwZXJJbnN0YTIuZm9yY2VVcGRhdGUoKTtcbiAgICAgIGludm9rZUhvb2soJ29uTW91bnQnLCBbaW5zdGFuY2VdKTtcblxuICAgICAgaWYgKGluc3RhbmNlLnByb3BzLmFuaW1hdGlvbiAmJiBnZXRJc0RlZmF1bHRSZW5kZXJGbigpKSB7XG4gICAgICAgIG9uVHJhbnNpdGlvbmVkSW4oZHVyYXRpb24sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpbnN0YW5jZS5zdGF0ZS5pc1Nob3duID0gdHJ1ZTtcbiAgICAgICAgICBpbnZva2VIb29rKCdvblNob3duJywgW2luc3RhbmNlXSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBtb3VudCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZSgpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkLCBjcmVhdGVNZW1vcnlMZWFrV2FybmluZygnaGlkZScpKTtcbiAgICB9IC8vIEVhcmx5IGJhaWwtb3V0XG5cblxuICAgIHZhciBpc0FscmVhZHlIaWRkZW4gPSAhaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlO1xuICAgIHZhciBpc0Rlc3Ryb3llZCA9IGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkO1xuICAgIHZhciBpc0Rpc2FibGVkID0gIWluc3RhbmNlLnN0YXRlLmlzRW5hYmxlZDtcbiAgICB2YXIgZHVyYXRpb24gPSBnZXRWYWx1ZUF0SW5kZXhPclJldHVybihpbnN0YW5jZS5wcm9wcy5kdXJhdGlvbiwgMSwgZGVmYXVsdFByb3BzLmR1cmF0aW9uKTtcblxuICAgIGlmIChpc0FscmVhZHlIaWRkZW4gfHwgaXNEZXN0cm95ZWQgfHwgaXNEaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGludm9rZUhvb2soJ29uSGlkZScsIFtpbnN0YW5jZV0sIGZhbHNlKTtcblxuICAgIGlmIChpbnN0YW5jZS5wcm9wcy5vbkhpZGUoaW5zdGFuY2UpID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGluc3RhbmNlLnN0YXRlLmlzVmlzaWJsZSA9IGZhbHNlO1xuICAgIGluc3RhbmNlLnN0YXRlLmlzU2hvd24gPSBmYWxzZTtcbiAgICBpZ25vcmVPbkZpcnN0VXBkYXRlID0gZmFsc2U7XG4gICAgaXNWaXNpYmxlRnJvbUNsaWNrID0gZmFsc2U7XG5cbiAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgcG9wcGVyLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICB9XG5cbiAgICBjbGVhbnVwSW50ZXJhY3RpdmVNb3VzZUxpc3RlbmVycygpO1xuICAgIHJlbW92ZURvY3VtZW50UHJlc3MoKTtcbiAgICBoYW5kbGVTdHlsZXModHJ1ZSk7XG5cbiAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgdmFyIF9nZXREZWZhdWx0VGVtcGxhdGVDaDQgPSBnZXREZWZhdWx0VGVtcGxhdGVDaGlsZHJlbigpLFxuICAgICAgICAgIGJveCA9IF9nZXREZWZhdWx0VGVtcGxhdGVDaDQuYm94LFxuICAgICAgICAgIGNvbnRlbnQgPSBfZ2V0RGVmYXVsdFRlbXBsYXRlQ2g0LmNvbnRlbnQ7XG5cbiAgICAgIGlmIChpbnN0YW5jZS5wcm9wcy5hbmltYXRpb24pIHtcbiAgICAgICAgc2V0VHJhbnNpdGlvbkR1cmF0aW9uKFtib3gsIGNvbnRlbnRdLCBkdXJhdGlvbik7XG4gICAgICAgIHNldFZpc2liaWxpdHlTdGF0ZShbYm94LCBjb250ZW50XSwgJ2hpZGRlbicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUFyaWFDb250ZW50QXR0cmlidXRlKCk7XG4gICAgaGFuZGxlQXJpYUV4cGFuZGVkQXR0cmlidXRlKCk7XG5cbiAgICBpZiAoaW5zdGFuY2UucHJvcHMuYW5pbWF0aW9uKSB7XG4gICAgICBpZiAoZ2V0SXNEZWZhdWx0UmVuZGVyRm4oKSkge1xuICAgICAgICBvblRyYW5zaXRpb25lZE91dChkdXJhdGlvbiwgaW5zdGFuY2UudW5tb3VudCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGluc3RhbmNlLnVubW91bnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoaWRlV2l0aEludGVyYWN0aXZpdHkoZXZlbnQpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkLCBjcmVhdGVNZW1vcnlMZWFrV2FybmluZygnaGlkZVdpdGhJbnRlcmFjdGl2aXR5JykpO1xuICAgIH1cblxuICAgIGdldERvY3VtZW50KCkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZGVib3VuY2VkT25Nb3VzZU1vdmUpO1xuICAgIHB1c2hJZlVuaXF1ZShtb3VzZU1vdmVMaXN0ZW5lcnMsIGRlYm91bmNlZE9uTW91c2VNb3ZlKTtcbiAgICBkZWJvdW5jZWRPbk1vdXNlTW92ZShldmVudCk7XG4gIH1cblxuICBmdW5jdGlvbiB1bm1vdW50KCkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgd2FybldoZW4oaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQsIGNyZWF0ZU1lbW9yeUxlYWtXYXJuaW5nKCd1bm1vdW50JykpO1xuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZS5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgIGluc3RhbmNlLmhpZGUoKTtcbiAgICB9XG5cbiAgICBpZiAoIWluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGRlc3Ryb3lQb3BwZXJJbnN0YW5jZSgpOyAvLyBJZiBhIHBvcHBlciBpcyBub3QgaW50ZXJhY3RpdmUsIGl0IHdpbGwgYmUgYXBwZW5kZWQgb3V0c2lkZSB0aGUgcG9wcGVyXG4gICAgLy8gdHJlZSBieSBkZWZhdWx0LiBUaGlzIHNlZW1zIG1haW5seSBmb3IgaW50ZXJhY3RpdmUgdGlwcGllcywgYnV0IHdlIHNob3VsZFxuICAgIC8vIGZpbmQgYSB3b3JrYXJvdW5kIGlmIHBvc3NpYmxlXG5cbiAgICBnZXROZXN0ZWRQb3BwZXJUcmVlKCkuZm9yRWFjaChmdW5jdGlvbiAobmVzdGVkUG9wcGVyKSB7XG4gICAgICBuZXN0ZWRQb3BwZXIuX3RpcHB5LnVubW91bnQoKTtcbiAgICB9KTtcblxuICAgIGlmIChwb3BwZXIucGFyZW50Tm9kZSkge1xuICAgICAgcG9wcGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocG9wcGVyKTtcbiAgICB9XG5cbiAgICBtb3VudGVkSW5zdGFuY2VzID0gbW91bnRlZEluc3RhbmNlcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgIHJldHVybiBpICE9PSBpbnN0YW5jZTtcbiAgICB9KTtcbiAgICBpbnN0YW5jZS5zdGF0ZS5pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBpbnZva2VIb29rKCdvbkhpZGRlbicsIFtpbnN0YW5jZV0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHdhcm5XaGVuKGluc3RhbmNlLnN0YXRlLmlzRGVzdHJveWVkLCBjcmVhdGVNZW1vcnlMZWFrV2FybmluZygnZGVzdHJveScpKTtcbiAgICB9XG5cbiAgICBpZiAoaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5jbGVhckRlbGF5VGltZW91dHMoKTtcbiAgICBpbnN0YW5jZS51bm1vdW50KCk7XG4gICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgZGVsZXRlIHJlZmVyZW5jZS5fdGlwcHk7XG4gICAgaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQgPSB0cnVlO1xuICAgIGludm9rZUhvb2soJ29uRGVzdHJveScsIFtpbnN0YW5jZV0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRpcHB5KHRhcmdldHMsIG9wdGlvbmFsUHJvcHMpIHtcbiAgaWYgKG9wdGlvbmFsUHJvcHMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbmFsUHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBwbHVnaW5zID0gZGVmYXVsdFByb3BzLnBsdWdpbnMuY29uY2F0KG9wdGlvbmFsUHJvcHMucGx1Z2lucyB8fCBbXSk7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHZhbGlkYXRlVGFyZ2V0cyh0YXJnZXRzKTtcbiAgICB2YWxpZGF0ZVByb3BzKG9wdGlvbmFsUHJvcHMsIHBsdWdpbnMpO1xuICB9XG5cbiAgYmluZEdsb2JhbEV2ZW50TGlzdGVuZXJzKCk7XG4gIHZhciBwYXNzZWRQcm9wcyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbmFsUHJvcHMsIHtcbiAgICBwbHVnaW5zOiBwbHVnaW5zXG4gIH0pO1xuICB2YXIgZWxlbWVudHMgPSBnZXRBcnJheU9mRWxlbWVudHModGFyZ2V0cyk7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHZhciBpc1NpbmdsZUNvbnRlbnRFbGVtZW50ID0gaXNFbGVtZW50KHBhc3NlZFByb3BzLmNvbnRlbnQpO1xuICAgIHZhciBpc01vcmVUaGFuT25lUmVmZXJlbmNlRWxlbWVudCA9IGVsZW1lbnRzLmxlbmd0aCA+IDE7XG4gICAgd2FybldoZW4oaXNTaW5nbGVDb250ZW50RWxlbWVudCAmJiBpc01vcmVUaGFuT25lUmVmZXJlbmNlRWxlbWVudCwgWyd0aXBweSgpIHdhcyBwYXNzZWQgYW4gRWxlbWVudCBhcyB0aGUgYGNvbnRlbnRgIHByb3AsIGJ1dCBtb3JlIHRoYW4nLCAnb25lIHRpcHB5IGluc3RhbmNlIHdhcyBjcmVhdGVkIGJ5IHRoaXMgaW52b2NhdGlvbi4gVGhpcyBtZWFucyB0aGUnLCAnY29udGVudCBlbGVtZW50IHdpbGwgb25seSBiZSBhcHBlbmRlZCB0byB0aGUgbGFzdCB0aXBweSBpbnN0YW5jZS4nLCAnXFxuXFxuJywgJ0luc3RlYWQsIHBhc3MgdGhlIC5pbm5lckhUTUwgb2YgdGhlIGVsZW1lbnQsIG9yIHVzZSBhIGZ1bmN0aW9uIHRoYXQnLCAncmV0dXJucyBhIGNsb25lZCB2ZXJzaW9uIG9mIHRoZSBlbGVtZW50IGluc3RlYWQuJywgJ1xcblxcbicsICcxKSBjb250ZW50OiBlbGVtZW50LmlubmVySFRNTFxcbicsICcyKSBjb250ZW50OiAoKSA9PiBlbGVtZW50LmNsb25lTm9kZSh0cnVlKSddLmpvaW4oJyAnKSk7XG4gIH1cblxuICB2YXIgaW5zdGFuY2VzID0gZWxlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHJlZmVyZW5jZSkge1xuICAgIHZhciBpbnN0YW5jZSA9IHJlZmVyZW5jZSAmJiBjcmVhdGVUaXBweShyZWZlcmVuY2UsIHBhc3NlZFByb3BzKTtcblxuICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgYWNjLnB1c2goaW5zdGFuY2UpO1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIGlzRWxlbWVudCh0YXJnZXRzKSA/IGluc3RhbmNlc1swXSA6IGluc3RhbmNlcztcbn1cblxudGlwcHkuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xudGlwcHkuc2V0RGVmYXVsdFByb3BzID0gc2V0RGVmYXVsdFByb3BzO1xudGlwcHkuY3VycmVudElucHV0ID0gY3VycmVudElucHV0O1xudmFyIGhpZGVBbGwgPSBmdW5jdGlvbiBoaWRlQWxsKF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBleGNsdWRlZFJlZmVyZW5jZU9ySW5zdGFuY2UgPSBfcmVmLmV4Y2x1ZGUsXG4gICAgICBkdXJhdGlvbiA9IF9yZWYuZHVyYXRpb247XG5cbiAgbW91bnRlZEluc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgIHZhciBpc0V4Y2x1ZGVkID0gZmFsc2U7XG5cbiAgICBpZiAoZXhjbHVkZWRSZWZlcmVuY2VPckluc3RhbmNlKSB7XG4gICAgICBpc0V4Y2x1ZGVkID0gaXNSZWZlcmVuY2VFbGVtZW50KGV4Y2x1ZGVkUmVmZXJlbmNlT3JJbnN0YW5jZSkgPyBpbnN0YW5jZS5yZWZlcmVuY2UgPT09IGV4Y2x1ZGVkUmVmZXJlbmNlT3JJbnN0YW5jZSA6IGluc3RhbmNlLnBvcHBlciA9PT0gZXhjbHVkZWRSZWZlcmVuY2VPckluc3RhbmNlLnBvcHBlcjtcbiAgICB9XG5cbiAgICBpZiAoIWlzRXhjbHVkZWQpIHtcbiAgICAgIHZhciBvcmlnaW5hbER1cmF0aW9uID0gaW5zdGFuY2UucHJvcHMuZHVyYXRpb247XG4gICAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvblxuICAgICAgfSk7XG4gICAgICBpbnN0YW5jZS5oaWRlKCk7XG5cbiAgICAgIGlmICghaW5zdGFuY2Uuc3RhdGUuaXNEZXN0cm95ZWQpIHtcbiAgICAgICAgaW5zdGFuY2Uuc2V0UHJvcHMoe1xuICAgICAgICAgIGR1cmF0aW9uOiBvcmlnaW5hbER1cmF0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG4vLyBldmVyeSB0aW1lIHRoZSBwb3BwZXIgaXMgZGVzdHJveWVkIChpLmUuIGEgbmV3IHRhcmdldCksIHJlbW92aW5nIHRoZSBzdHlsZXNcbi8vIGFuZCBjYXVzaW5nIHRyYW5zaXRpb25zIHRvIGJyZWFrIGZvciBzaW5nbGV0b25zIHdoZW4gdGhlIGNvbnNvbGUgaXMgb3BlbiwgYnV0XG4vLyBtb3N0IG5vdGFibHkgZm9yIG5vbi10cmFuc2Zvcm0gc3R5bGVzIGJlaW5nIHVzZWQsIGBncHVBY2NlbGVyYXRpb246IGZhbHNlYC5cblxudmFyIGFwcGx5U3R5bGVzTW9kaWZpZXIgPSBPYmplY3QuYXNzaWduKHt9LCBhcHBseVN0eWxlcywge1xuICBlZmZlY3Q6IGZ1bmN0aW9uIGVmZmVjdChfcmVmKSB7XG4gICAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZTtcbiAgICB2YXIgaW5pdGlhbFN0eWxlcyA9IHtcbiAgICAgIHBvcHBlcjoge1xuICAgICAgICBwb3NpdGlvbjogc3RhdGUub3B0aW9ucy5zdHJhdGVneSxcbiAgICAgICAgbGVmdDogJzAnLFxuICAgICAgICB0b3A6ICcwJyxcbiAgICAgICAgbWFyZ2luOiAnMCdcbiAgICAgIH0sXG4gICAgICBhcnJvdzoge1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJ1xuICAgICAgfSxcbiAgICAgIHJlZmVyZW5jZToge31cbiAgICB9O1xuICAgIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLCBpbml0aWFsU3R5bGVzLnBvcHBlcik7XG4gICAgc3RhdGUuc3R5bGVzID0gaW5pdGlhbFN0eWxlcztcblxuICAgIGlmIChzdGF0ZS5lbGVtZW50cy5hcnJvdykge1xuICAgICAgT2JqZWN0LmFzc2lnbihzdGF0ZS5lbGVtZW50cy5hcnJvdy5zdHlsZSwgaW5pdGlhbFN0eWxlcy5hcnJvdyk7XG4gICAgfSAvLyBpbnRlbnRpb25hbGx5IHJldHVybiBubyBjbGVhbnVwIGZ1bmN0aW9uXG4gICAgLy8gcmV0dXJuICgpID0+IHsgLi4uIH1cblxuICB9XG59KTtcblxudmFyIGNyZWF0ZVNpbmdsZXRvbiA9IGZ1bmN0aW9uIGNyZWF0ZVNpbmdsZXRvbih0aXBweUluc3RhbmNlcywgb3B0aW9uYWxQcm9wcykge1xuICB2YXIgX29wdGlvbmFsUHJvcHMkcG9wcGVyO1xuXG4gIGlmIChvcHRpb25hbFByb3BzID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25hbFByb3BzID0ge307XG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgZXJyb3JXaGVuKCFBcnJheS5pc0FycmF5KHRpcHB5SW5zdGFuY2VzKSwgWydUaGUgZmlyc3QgYXJndW1lbnQgcGFzc2VkIHRvIGNyZWF0ZVNpbmdsZXRvbigpIG11c3QgYmUgYW4gYXJyYXkgb2YnLCAndGlwcHkgaW5zdGFuY2VzLiBUaGUgcGFzc2VkIHZhbHVlIHdhcycsIFN0cmluZyh0aXBweUluc3RhbmNlcyldLmpvaW4oJyAnKSk7XG4gIH1cblxuICB2YXIgaW5kaXZpZHVhbEluc3RhbmNlcyA9IHRpcHB5SW5zdGFuY2VzO1xuICB2YXIgcmVmZXJlbmNlcyA9IFtdO1xuICB2YXIgdHJpZ2dlclRhcmdldHMgPSBbXTtcbiAgdmFyIGN1cnJlbnRUYXJnZXQ7XG4gIHZhciBvdmVycmlkZXMgPSBvcHRpb25hbFByb3BzLm92ZXJyaWRlcztcbiAgdmFyIGludGVyY2VwdFNldFByb3BzQ2xlYW51cHMgPSBbXTtcbiAgdmFyIHNob3duT25DcmVhdGUgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBzZXRUcmlnZ2VyVGFyZ2V0cygpIHtcbiAgICB0cmlnZ2VyVGFyZ2V0cyA9IGluZGl2aWR1YWxJbnN0YW5jZXMubWFwKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZVRvQXJyYXkoaW5zdGFuY2UucHJvcHMudHJpZ2dlclRhcmdldCB8fCBpbnN0YW5jZS5yZWZlcmVuY2UpO1xuICAgIH0pLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBpdGVtKSB7XG4gICAgICByZXR1cm4gYWNjLmNvbmNhdChpdGVtKTtcbiAgICB9LCBbXSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRSZWZlcmVuY2VzKCkge1xuICAgIHJlZmVyZW5jZXMgPSBpbmRpdmlkdWFsSW5zdGFuY2VzLm1hcChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZS5yZWZlcmVuY2U7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBlbmFibGVJbnN0YW5jZXMoaXNFbmFibGVkKSB7XG4gICAgaW5kaXZpZHVhbEluc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgaWYgKGlzRW5hYmxlZCkge1xuICAgICAgICBpbnN0YW5jZS5lbmFibGUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluc3RhbmNlLmRpc2FibGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludGVyY2VwdFNldFByb3BzKHNpbmdsZXRvbikge1xuICAgIHJldHVybiBpbmRpdmlkdWFsSW5zdGFuY2VzLm1hcChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgIHZhciBvcmlnaW5hbFNldFByb3BzID0gaW5zdGFuY2Uuc2V0UHJvcHM7XG5cbiAgICAgIGluc3RhbmNlLnNldFByb3BzID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIG9yaWdpbmFsU2V0UHJvcHMocHJvcHMpO1xuXG4gICAgICAgIGlmIChpbnN0YW5jZS5yZWZlcmVuY2UgPT09IGN1cnJlbnRUYXJnZXQpIHtcbiAgICAgICAgICBzaW5nbGV0b24uc2V0UHJvcHMocHJvcHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZS5zZXRQcm9wcyA9IG9yaWdpbmFsU2V0UHJvcHM7XG4gICAgICB9O1xuICAgIH0pO1xuICB9IC8vIGhhdmUgdG8gcGFzcyBzaW5nbGV0b24sIGFzIGl0IG1heWJlIHVuZGVmaW5lZCBvbiBmaXJzdCBjYWxsXG5cblxuICBmdW5jdGlvbiBwcmVwYXJlSW5zdGFuY2Uoc2luZ2xldG9uLCB0YXJnZXQpIHtcbiAgICB2YXIgaW5kZXggPSB0cmlnZ2VyVGFyZ2V0cy5pbmRleE9mKHRhcmdldCk7IC8vIGJhaWwtb3V0XG5cbiAgICBpZiAodGFyZ2V0ID09PSBjdXJyZW50VGFyZ2V0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY3VycmVudFRhcmdldCA9IHRhcmdldDtcbiAgICB2YXIgb3ZlcnJpZGVQcm9wcyA9IChvdmVycmlkZXMgfHwgW10pLmNvbmNhdCgnY29udGVudCcpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwcm9wKSB7XG4gICAgICBhY2NbcHJvcF0gPSBpbmRpdmlkdWFsSW5zdGFuY2VzW2luZGV4XS5wcm9wc1twcm9wXTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICAgIHNpbmdsZXRvbi5zZXRQcm9wcyhPYmplY3QuYXNzaWduKHt9LCBvdmVycmlkZVByb3BzLCB7XG4gICAgICBnZXRSZWZlcmVuY2VDbGllbnRSZWN0OiB0eXBlb2Ygb3ZlcnJpZGVQcm9wcy5nZXRSZWZlcmVuY2VDbGllbnRSZWN0ID09PSAnZnVuY3Rpb24nID8gb3ZlcnJpZGVQcm9wcy5nZXRSZWZlcmVuY2VDbGllbnRSZWN0IDogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3JlZmVyZW5jZXMkaW5kZXg7XG5cbiAgICAgICAgcmV0dXJuIChfcmVmZXJlbmNlcyRpbmRleCA9IHJlZmVyZW5jZXNbaW5kZXhdKSA9PSBudWxsID8gdm9pZCAwIDogX3JlZmVyZW5jZXMkaW5kZXguZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB9XG4gICAgfSkpO1xuICB9XG5cbiAgZW5hYmxlSW5zdGFuY2VzKGZhbHNlKTtcbiAgc2V0UmVmZXJlbmNlcygpO1xuICBzZXRUcmlnZ2VyVGFyZ2V0cygpO1xuICB2YXIgcGx1Z2luID0ge1xuICAgIGZuOiBmdW5jdGlvbiBmbigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG9uRGVzdHJveTogZnVuY3Rpb24gb25EZXN0cm95KCkge1xuICAgICAgICAgIGVuYWJsZUluc3RhbmNlcyh0cnVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25IaWRkZW46IGZ1bmN0aW9uIG9uSGlkZGVuKCkge1xuICAgICAgICAgIGN1cnJlbnRUYXJnZXQgPSBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBvbkNsaWNrT3V0c2lkZTogZnVuY3Rpb24gb25DbGlja091dHNpZGUoaW5zdGFuY2UpIHtcbiAgICAgICAgICBpZiAoaW5zdGFuY2UucHJvcHMuc2hvd09uQ3JlYXRlICYmICFzaG93bk9uQ3JlYXRlKSB7XG4gICAgICAgICAgICBzaG93bk9uQ3JlYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgIGN1cnJlbnRUYXJnZXQgPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25TaG93OiBmdW5jdGlvbiBvblNob3coaW5zdGFuY2UpIHtcbiAgICAgICAgICBpZiAoaW5zdGFuY2UucHJvcHMuc2hvd09uQ3JlYXRlICYmICFzaG93bk9uQ3JlYXRlKSB7XG4gICAgICAgICAgICBzaG93bk9uQ3JlYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgIHByZXBhcmVJbnN0YW5jZShpbnN0YW5jZSwgcmVmZXJlbmNlc1swXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvblRyaWdnZXI6IGZ1bmN0aW9uIG9uVHJpZ2dlcihpbnN0YW5jZSwgZXZlbnQpIHtcbiAgICAgICAgICBwcmVwYXJlSW5zdGFuY2UoaW5zdGFuY2UsIGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgdmFyIHNpbmdsZXRvbiA9IHRpcHB5KGRpdigpLCBPYmplY3QuYXNzaWduKHt9LCByZW1vdmVQcm9wZXJ0aWVzKG9wdGlvbmFsUHJvcHMsIFsnb3ZlcnJpZGVzJ10pLCB7XG4gICAgcGx1Z2luczogW3BsdWdpbl0uY29uY2F0KG9wdGlvbmFsUHJvcHMucGx1Z2lucyB8fCBbXSksXG4gICAgdHJpZ2dlclRhcmdldDogdHJpZ2dlclRhcmdldHMsXG4gICAgcG9wcGVyT3B0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9uYWxQcm9wcy5wb3BwZXJPcHRpb25zLCB7XG4gICAgICBtb2RpZmllcnM6IFtdLmNvbmNhdCgoKF9vcHRpb25hbFByb3BzJHBvcHBlciA9IG9wdGlvbmFsUHJvcHMucG9wcGVyT3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9vcHRpb25hbFByb3BzJHBvcHBlci5tb2RpZmllcnMpIHx8IFtdLCBbYXBwbHlTdHlsZXNNb2RpZmllcl0pXG4gICAgfSlcbiAgfSkpO1xuICB2YXIgb3JpZ2luYWxTaG93ID0gc2luZ2xldG9uLnNob3c7XG5cbiAgc2luZ2xldG9uLnNob3cgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgb3JpZ2luYWxTaG93KCk7IC8vIGZpcnN0IHRpbWUsIHNob3dPbkNyZWF0ZSBvciBwcm9ncmFtbWF0aWMgY2FsbCB3aXRoIG5vIHBhcmFtc1xuICAgIC8vIGRlZmF1bHQgdG8gc2hvd2luZyBmaXJzdCBpbnN0YW5jZVxuXG4gICAgaWYgKCFjdXJyZW50VGFyZ2V0ICYmIHRhcmdldCA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gcHJlcGFyZUluc3RhbmNlKHNpbmdsZXRvbiwgcmVmZXJlbmNlc1swXSk7XG4gICAgfSAvLyB0cmlnZ2VyZWQgZnJvbSBldmVudCAoZG8gbm90aGluZyBhcyBwcmVwYXJlSW5zdGFuY2UgYWxyZWFkeSBjYWxsZWQgYnkgb25UcmlnZ2VyKVxuICAgIC8vIHByb2dyYW1tYXRpYyBjYWxsIHdpdGggbm8gcGFyYW1zIHdoZW4gYWxyZWFkeSB2aXNpYmxlIChkbyBub3RoaW5nIGFnYWluKVxuXG5cbiAgICBpZiAoY3VycmVudFRhcmdldCAmJiB0YXJnZXQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gdGFyZ2V0IGlzIGluZGV4IG9mIGluc3RhbmNlXG5cblxuICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuIHJlZmVyZW5jZXNbdGFyZ2V0XSAmJiBwcmVwYXJlSW5zdGFuY2Uoc2luZ2xldG9uLCByZWZlcmVuY2VzW3RhcmdldF0pO1xuICAgIH0gLy8gdGFyZ2V0IGlzIGEgY2hpbGQgdGlwcHkgaW5zdGFuY2VcblxuXG4gICAgaWYgKGluZGl2aWR1YWxJbnN0YW5jZXMuaW5kZXhPZih0YXJnZXQpID49IDApIHtcbiAgICAgIHZhciByZWYgPSB0YXJnZXQucmVmZXJlbmNlO1xuICAgICAgcmV0dXJuIHByZXBhcmVJbnN0YW5jZShzaW5nbGV0b24sIHJlZik7XG4gICAgfSAvLyB0YXJnZXQgaXMgYSBSZWZlcmVuY2VFbGVtZW50XG5cblxuICAgIGlmIChyZWZlcmVuY2VzLmluZGV4T2YodGFyZ2V0KSA+PSAwKSB7XG4gICAgICByZXR1cm4gcHJlcGFyZUluc3RhbmNlKHNpbmdsZXRvbiwgdGFyZ2V0KTtcbiAgICB9XG4gIH07XG5cbiAgc2luZ2xldG9uLnNob3dOZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBmaXJzdCA9IHJlZmVyZW5jZXNbMF07XG5cbiAgICBpZiAoIWN1cnJlbnRUYXJnZXQpIHtcbiAgICAgIHJldHVybiBzaW5nbGV0b24uc2hvdygwKTtcbiAgICB9XG5cbiAgICB2YXIgaW5kZXggPSByZWZlcmVuY2VzLmluZGV4T2YoY3VycmVudFRhcmdldCk7XG4gICAgc2luZ2xldG9uLnNob3cocmVmZXJlbmNlc1tpbmRleCArIDFdIHx8IGZpcnN0KTtcbiAgfTtcblxuICBzaW5nbGV0b24uc2hvd1ByZXZpb3VzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBsYXN0ID0gcmVmZXJlbmNlc1tyZWZlcmVuY2VzLmxlbmd0aCAtIDFdO1xuXG4gICAgaWYgKCFjdXJyZW50VGFyZ2V0KSB7XG4gICAgICByZXR1cm4gc2luZ2xldG9uLnNob3cobGFzdCk7XG4gICAgfVxuXG4gICAgdmFyIGluZGV4ID0gcmVmZXJlbmNlcy5pbmRleE9mKGN1cnJlbnRUYXJnZXQpO1xuICAgIHZhciB0YXJnZXQgPSByZWZlcmVuY2VzW2luZGV4IC0gMV0gfHwgbGFzdDtcbiAgICBzaW5nbGV0b24uc2hvdyh0YXJnZXQpO1xuICB9O1xuXG4gIHZhciBvcmlnaW5hbFNldFByb3BzID0gc2luZ2xldG9uLnNldFByb3BzO1xuXG4gIHNpbmdsZXRvbi5zZXRQcm9wcyA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgIG92ZXJyaWRlcyA9IHByb3BzLm92ZXJyaWRlcyB8fCBvdmVycmlkZXM7XG4gICAgb3JpZ2luYWxTZXRQcm9wcyhwcm9wcyk7XG4gIH07XG5cbiAgc2luZ2xldG9uLnNldEluc3RhbmNlcyA9IGZ1bmN0aW9uIChuZXh0SW5zdGFuY2VzKSB7XG4gICAgZW5hYmxlSW5zdGFuY2VzKHRydWUpO1xuICAgIGludGVyY2VwdFNldFByb3BzQ2xlYW51cHMuZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgIHJldHVybiBmbigpO1xuICAgIH0pO1xuICAgIGluZGl2aWR1YWxJbnN0YW5jZXMgPSBuZXh0SW5zdGFuY2VzO1xuICAgIGVuYWJsZUluc3RhbmNlcyhmYWxzZSk7XG4gICAgc2V0UmVmZXJlbmNlcygpO1xuICAgIHNldFRyaWdnZXJUYXJnZXRzKCk7XG4gICAgaW50ZXJjZXB0U2V0UHJvcHNDbGVhbnVwcyA9IGludGVyY2VwdFNldFByb3BzKHNpbmdsZXRvbik7XG4gICAgc2luZ2xldG9uLnNldFByb3BzKHtcbiAgICAgIHRyaWdnZXJUYXJnZXQ6IHRyaWdnZXJUYXJnZXRzXG4gICAgfSk7XG4gIH07XG5cbiAgaW50ZXJjZXB0U2V0UHJvcHNDbGVhbnVwcyA9IGludGVyY2VwdFNldFByb3BzKHNpbmdsZXRvbik7XG4gIHJldHVybiBzaW5nbGV0b247XG59O1xuXG52YXIgQlVCQkxJTkdfRVZFTlRTX01BUCA9IHtcbiAgbW91c2VvdmVyOiAnbW91c2VlbnRlcicsXG4gIGZvY3VzaW46ICdmb2N1cycsXG4gIGNsaWNrOiAnY2xpY2snXG59O1xuLyoqXG4gKiBDcmVhdGVzIGEgZGVsZWdhdGUgaW5zdGFuY2UgdGhhdCBjb250cm9scyB0aGUgY3JlYXRpb24gb2YgdGlwcHkgaW5zdGFuY2VzXG4gKiBmb3IgY2hpbGQgZWxlbWVudHMgKGB0YXJnZXRgIENTUyBzZWxlY3RvcikuXG4gKi9cblxuZnVuY3Rpb24gZGVsZWdhdGUodGFyZ2V0cywgcHJvcHMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGVycm9yV2hlbighKHByb3BzICYmIHByb3BzLnRhcmdldCksIFsnWW91IG11c3Qgc3BlY2l0eSBhIGB0YXJnZXRgIHByb3AgaW5kaWNhdGluZyBhIENTUyBzZWxlY3RvciBzdHJpbmcgbWF0Y2hpbmcnLCAndGhlIHRhcmdldCBlbGVtZW50cyB0aGF0IHNob3VsZCByZWNlaXZlIGEgdGlwcHkuJ10uam9pbignICcpKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIGNoaWxkVGlwcHlJbnN0YW5jZXMgPSBbXTtcbiAgdmFyIGRpc2FibGVkID0gZmFsc2U7XG4gIHZhciB0YXJnZXQgPSBwcm9wcy50YXJnZXQ7XG4gIHZhciBuYXRpdmVQcm9wcyA9IHJlbW92ZVByb3BlcnRpZXMocHJvcHMsIFsndGFyZ2V0J10pO1xuICB2YXIgcGFyZW50UHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBuYXRpdmVQcm9wcywge1xuICAgIHRyaWdnZXI6ICdtYW51YWwnLFxuICAgIHRvdWNoOiBmYWxzZVxuICB9KTtcbiAgdmFyIGNoaWxkUHJvcHMgPSBPYmplY3QuYXNzaWduKHtcbiAgICB0b3VjaDogZGVmYXVsdFByb3BzLnRvdWNoXG4gIH0sIG5hdGl2ZVByb3BzLCB7XG4gICAgc2hvd09uQ3JlYXRlOiB0cnVlXG4gIH0pO1xuICB2YXIgcmV0dXJuVmFsdWUgPSB0aXBweSh0YXJnZXRzLCBwYXJlbnRQcm9wcyk7XG4gIHZhciBub3JtYWxpemVkUmV0dXJuVmFsdWUgPSBub3JtYWxpemVUb0FycmF5KHJldHVyblZhbHVlKTtcblxuICBmdW5jdGlvbiBvblRyaWdnZXIoZXZlbnQpIHtcbiAgICBpZiAoIWV2ZW50LnRhcmdldCB8fCBkaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXROb2RlID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QodGFyZ2V0KTtcblxuICAgIGlmICghdGFyZ2V0Tm9kZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gR2V0IHJlbGV2YW50IHRyaWdnZXIgd2l0aCBmYWxsYmFja3M6XG4gICAgLy8gMS4gQ2hlY2sgYGRhdGEtdGlwcHktdHJpZ2dlcmAgYXR0cmlidXRlIG9uIHRhcmdldCBub2RlXG4gICAgLy8gMi4gRmFsbGJhY2sgdG8gYHRyaWdnZXJgIHBhc3NlZCB0byBgZGVsZWdhdGUoKWBcbiAgICAvLyAzLiBGYWxsYmFjayB0byBgZGVmYXVsdFByb3BzLnRyaWdnZXJgXG5cblxuICAgIHZhciB0cmlnZ2VyID0gdGFyZ2V0Tm9kZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGlwcHktdHJpZ2dlcicpIHx8IHByb3BzLnRyaWdnZXIgfHwgZGVmYXVsdFByb3BzLnRyaWdnZXI7IC8vIEB0cy1pZ25vcmVcblxuICAgIGlmICh0YXJnZXROb2RlLl90aXBweSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChldmVudC50eXBlID09PSAndG91Y2hzdGFydCcgJiYgdHlwZW9mIGNoaWxkUHJvcHMudG91Y2ggPT09ICdib29sZWFuJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChldmVudC50eXBlICE9PSAndG91Y2hzdGFydCcgJiYgdHJpZ2dlci5pbmRleE9mKEJVQkJMSU5HX0VWRU5UU19NQVBbZXZlbnQudHlwZV0pIDwgMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBpbnN0YW5jZSA9IHRpcHB5KHRhcmdldE5vZGUsIGNoaWxkUHJvcHMpO1xuXG4gICAgaWYgKGluc3RhbmNlKSB7XG4gICAgICBjaGlsZFRpcHB5SW5zdGFuY2VzID0gY2hpbGRUaXBweUluc3RhbmNlcy5jb25jYXQoaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uKG5vZGUsIGV2ZW50VHlwZSwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBoYW5kbGVyLCBvcHRpb25zKTtcbiAgICBsaXN0ZW5lcnMucHVzaCh7XG4gICAgICBub2RlOiBub2RlLFxuICAgICAgZXZlbnRUeXBlOiBldmVudFR5cGUsXG4gICAgICBoYW5kbGVyOiBoYW5kbGVyLFxuICAgICAgb3B0aW9uczogb3B0aW9uc1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcnMoaW5zdGFuY2UpIHtcbiAgICB2YXIgcmVmZXJlbmNlID0gaW5zdGFuY2UucmVmZXJlbmNlO1xuICAgIG9uKHJlZmVyZW5jZSwgJ3RvdWNoc3RhcnQnLCBvblRyaWdnZXIsIFRPVUNIX09QVElPTlMpO1xuICAgIG9uKHJlZmVyZW5jZSwgJ21vdXNlb3ZlcicsIG9uVHJpZ2dlcik7XG4gICAgb24ocmVmZXJlbmNlLCAnZm9jdXNpbicsIG9uVHJpZ2dlcik7XG4gICAgb24ocmVmZXJlbmNlLCAnY2xpY2snLCBvblRyaWdnZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHtcbiAgICAgIHZhciBub2RlID0gX3JlZi5ub2RlLFxuICAgICAgICAgIGV2ZW50VHlwZSA9IF9yZWYuZXZlbnRUeXBlLFxuICAgICAgICAgIGhhbmRsZXIgPSBfcmVmLmhhbmRsZXIsXG4gICAgICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucztcbiAgICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgIH0pO1xuICAgIGxpc3RlbmVycyA9IFtdO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlNdXRhdGlvbnMoaW5zdGFuY2UpIHtcbiAgICB2YXIgb3JpZ2luYWxEZXN0cm95ID0gaW5zdGFuY2UuZGVzdHJveTtcbiAgICB2YXIgb3JpZ2luYWxFbmFibGUgPSBpbnN0YW5jZS5lbmFibGU7XG4gICAgdmFyIG9yaWdpbmFsRGlzYWJsZSA9IGluc3RhbmNlLmRpc2FibGU7XG5cbiAgICBpbnN0YW5jZS5kZXN0cm95ID0gZnVuY3Rpb24gKHNob3VsZERlc3Ryb3lDaGlsZEluc3RhbmNlcykge1xuICAgICAgaWYgKHNob3VsZERlc3Ryb3lDaGlsZEluc3RhbmNlcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHNob3VsZERlc3Ryb3lDaGlsZEluc3RhbmNlcyA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChzaG91bGREZXN0cm95Q2hpbGRJbnN0YW5jZXMpIHtcbiAgICAgICAgY2hpbGRUaXBweUluc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICAgIGluc3RhbmNlLmRlc3Ryb3koKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGNoaWxkVGlwcHlJbnN0YW5jZXMgPSBbXTtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICBvcmlnaW5hbERlc3Ryb3koKTtcbiAgICB9O1xuXG4gICAgaW5zdGFuY2UuZW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgb3JpZ2luYWxFbmFibGUoKTtcbiAgICAgIGNoaWxkVGlwcHlJbnN0YW5jZXMuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmVuYWJsZSgpO1xuICAgICAgfSk7XG4gICAgICBkaXNhYmxlZCA9IGZhbHNlO1xuICAgIH07XG5cbiAgICBpbnN0YW5jZS5kaXNhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgb3JpZ2luYWxEaXNhYmxlKCk7XG4gICAgICBjaGlsZFRpcHB5SW5zdGFuY2VzLmZvckVhY2goZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgIHJldHVybiBpbnN0YW5jZS5kaXNhYmxlKCk7XG4gICAgICB9KTtcbiAgICAgIGRpc2FibGVkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgYWRkRXZlbnRMaXN0ZW5lcnMoaW5zdGFuY2UpO1xuICB9XG5cbiAgbm9ybWFsaXplZFJldHVyblZhbHVlLmZvckVhY2goYXBwbHlNdXRhdGlvbnMpO1xuICByZXR1cm4gcmV0dXJuVmFsdWU7XG59XG5cbnZhciBhbmltYXRlRmlsbCA9IHtcbiAgbmFtZTogJ2FuaW1hdGVGaWxsJyxcbiAgZGVmYXVsdFZhbHVlOiBmYWxzZSxcbiAgZm46IGZ1bmN0aW9uIGZuKGluc3RhbmNlKSB7XG4gICAgdmFyIF9pbnN0YW5jZSRwcm9wcyRyZW5kZTtcblxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAoISgoX2luc3RhbmNlJHByb3BzJHJlbmRlID0gaW5zdGFuY2UucHJvcHMucmVuZGVyKSAhPSBudWxsICYmIF9pbnN0YW5jZSRwcm9wcyRyZW5kZS4kJHRpcHB5KSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICBlcnJvcldoZW4oaW5zdGFuY2UucHJvcHMuYW5pbWF0ZUZpbGwsICdUaGUgYGFuaW1hdGVGaWxsYCBwbHVnaW4gcmVxdWlyZXMgdGhlIGRlZmF1bHQgcmVuZGVyIGZ1bmN0aW9uLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge307XG4gICAgfVxuXG4gICAgdmFyIF9nZXRDaGlsZHJlbiA9IGdldENoaWxkcmVuKGluc3RhbmNlLnBvcHBlciksXG4gICAgICAgIGJveCA9IF9nZXRDaGlsZHJlbi5ib3gsXG4gICAgICAgIGNvbnRlbnQgPSBfZ2V0Q2hpbGRyZW4uY29udGVudDtcblxuICAgIHZhciBiYWNrZHJvcCA9IGluc3RhbmNlLnByb3BzLmFuaW1hdGVGaWxsID8gY3JlYXRlQmFja2Ryb3BFbGVtZW50KCkgOiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBvbkNyZWF0ZTogZnVuY3Rpb24gb25DcmVhdGUoKSB7XG4gICAgICAgIGlmIChiYWNrZHJvcCkge1xuICAgICAgICAgIGJveC5pbnNlcnRCZWZvcmUoYmFja2Ryb3AsIGJveC5maXJzdEVsZW1lbnRDaGlsZCk7XG4gICAgICAgICAgYm94LnNldEF0dHJpYnV0ZSgnZGF0YS1hbmltYXRlZmlsbCcsICcnKTtcbiAgICAgICAgICBib3guc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgICAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICAgICAgICBhcnJvdzogZmFsc2UsXG4gICAgICAgICAgICBhbmltYXRpb246ICdzaGlmdC1hd2F5J1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgaWYgKGJhY2tkcm9wKSB7XG4gICAgICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IGJveC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb247XG4gICAgICAgICAgdmFyIGR1cmF0aW9uID0gTnVtYmVyKHRyYW5zaXRpb25EdXJhdGlvbi5yZXBsYWNlKCdtcycsICcnKSk7IC8vIFRoZSBjb250ZW50IHNob3VsZCBmYWRlIGluIGFmdGVyIHRoZSBiYWNrZHJvcCBoYXMgbW9zdGx5IGZpbGxlZCB0aGVcbiAgICAgICAgICAvLyB0b29sdGlwIGVsZW1lbnQuIGBjbGlwLXBhdGhgIGlzIHRoZSBvdGhlciBhbHRlcm5hdGl2ZSBidXQgaXMgbm90XG4gICAgICAgICAgLy8gd2VsbC1zdXBwb3J0ZWQgYW5kIGlzIGJ1Z2d5IG9uIHNvbWUgZGV2aWNlcy5cblxuICAgICAgICAgIGNvbnRlbnQuc3R5bGUudHJhbnNpdGlvbkRlbGF5ID0gTWF0aC5yb3VuZChkdXJhdGlvbiAvIDEwKSArIFwibXNcIjtcbiAgICAgICAgICBiYWNrZHJvcC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSB0cmFuc2l0aW9uRHVyYXRpb247XG4gICAgICAgICAgc2V0VmlzaWJpbGl0eVN0YXRlKFtiYWNrZHJvcF0sICd2aXNpYmxlJyk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblNob3c6IGZ1bmN0aW9uIG9uU2hvdygpIHtcbiAgICAgICAgaWYgKGJhY2tkcm9wKSB7XG4gICAgICAgICAgYmFja2Ryb3Auc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gJzBtcyc7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbkhpZGU6IGZ1bmN0aW9uIG9uSGlkZSgpIHtcbiAgICAgICAgaWYgKGJhY2tkcm9wKSB7XG4gICAgICAgICAgc2V0VmlzaWJpbGl0eVN0YXRlKFtiYWNrZHJvcF0sICdoaWRkZW4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2tkcm9wRWxlbWVudCgpIHtcbiAgdmFyIGJhY2tkcm9wID0gZGl2KCk7XG4gIGJhY2tkcm9wLmNsYXNzTmFtZSA9IEJBQ0tEUk9QX0NMQVNTO1xuICBzZXRWaXNpYmlsaXR5U3RhdGUoW2JhY2tkcm9wXSwgJ2hpZGRlbicpO1xuICByZXR1cm4gYmFja2Ryb3A7XG59XG5cbnZhciBtb3VzZUNvb3JkcyA9IHtcbiAgY2xpZW50WDogMCxcbiAgY2xpZW50WTogMFxufTtcbnZhciBhY3RpdmVJbnN0YW5jZXMgPSBbXTtcblxuZnVuY3Rpb24gc3RvcmVNb3VzZUNvb3JkcyhfcmVmKSB7XG4gIHZhciBjbGllbnRYID0gX3JlZi5jbGllbnRYLFxuICAgICAgY2xpZW50WSA9IF9yZWYuY2xpZW50WTtcbiAgbW91c2VDb29yZHMgPSB7XG4gICAgY2xpZW50WDogY2xpZW50WCxcbiAgICBjbGllbnRZOiBjbGllbnRZXG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZE1vdXNlQ29vcmRzTGlzdGVuZXIoZG9jKSB7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBzdG9yZU1vdXNlQ29vcmRzKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlTW91c2VDb29yZHNMaXN0ZW5lcihkb2MpIHtcbiAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHN0b3JlTW91c2VDb29yZHMpO1xufVxuXG52YXIgZm9sbG93Q3Vyc29yID0ge1xuICBuYW1lOiAnZm9sbG93Q3Vyc29yJyxcbiAgZGVmYXVsdFZhbHVlOiBmYWxzZSxcbiAgZm46IGZ1bmN0aW9uIGZuKGluc3RhbmNlKSB7XG4gICAgdmFyIHJlZmVyZW5jZSA9IGluc3RhbmNlLnJlZmVyZW5jZTtcbiAgICB2YXIgZG9jID0gZ2V0T3duZXJEb2N1bWVudChpbnN0YW5jZS5wcm9wcy50cmlnZ2VyVGFyZ2V0IHx8IHJlZmVyZW5jZSk7XG4gICAgdmFyIGlzSW50ZXJuYWxVcGRhdGUgPSBmYWxzZTtcbiAgICB2YXIgd2FzRm9jdXNFdmVudCA9IGZhbHNlO1xuICAgIHZhciBpc1VubW91bnRlZCA9IHRydWU7XG4gICAgdmFyIHByZXZQcm9wcyA9IGluc3RhbmNlLnByb3BzO1xuXG4gICAgZnVuY3Rpb24gZ2V0SXNJbml0aWFsQmVoYXZpb3IoKSB7XG4gICAgICByZXR1cm4gaW5zdGFuY2UucHJvcHMuZm9sbG93Q3Vyc29yID09PSAnaW5pdGlhbCcgJiYgaW5zdGFuY2Uuc3RhdGUuaXNWaXNpYmxlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZExpc3RlbmVyKCkge1xuICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uTW91c2VNb3ZlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcigpIHtcbiAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBvbk1vdXNlTW92ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdW5zZXRHZXRSZWZlcmVuY2VDbGllbnRSZWN0KCkge1xuICAgICAgaXNJbnRlcm5hbFVwZGF0ZSA9IHRydWU7XG4gICAgICBpbnN0YW5jZS5zZXRQcm9wcyh7XG4gICAgICAgIGdldFJlZmVyZW5jZUNsaWVudFJlY3Q6IG51bGxcbiAgICAgIH0pO1xuICAgICAgaXNJbnRlcm5hbFVwZGF0ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgICAvLyBJZiB0aGUgaW5zdGFuY2UgaXMgaW50ZXJhY3RpdmUsIGF2b2lkIHVwZGF0aW5nIHRoZSBwb3NpdGlvbiB1bmxlc3MgaXQnc1xuICAgICAgLy8gb3ZlciB0aGUgcmVmZXJlbmNlIGVsZW1lbnRcbiAgICAgIHZhciBpc0N1cnNvck92ZXJSZWZlcmVuY2UgPSBldmVudC50YXJnZXQgPyByZWZlcmVuY2UuY29udGFpbnMoZXZlbnQudGFyZ2V0KSA6IHRydWU7XG4gICAgICB2YXIgZm9sbG93Q3Vyc29yID0gaW5zdGFuY2UucHJvcHMuZm9sbG93Q3Vyc29yO1xuICAgICAgdmFyIGNsaWVudFggPSBldmVudC5jbGllbnRYLFxuICAgICAgICAgIGNsaWVudFkgPSBldmVudC5jbGllbnRZO1xuICAgICAgdmFyIHJlY3QgPSByZWZlcmVuY2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB2YXIgcmVsYXRpdmVYID0gY2xpZW50WCAtIHJlY3QubGVmdDtcbiAgICAgIHZhciByZWxhdGl2ZVkgPSBjbGllbnRZIC0gcmVjdC50b3A7XG5cbiAgICAgIGlmIChpc0N1cnNvck92ZXJSZWZlcmVuY2UgfHwgIWluc3RhbmNlLnByb3BzLmludGVyYWN0aXZlKSB7XG4gICAgICAgIGluc3RhbmNlLnNldFByb3BzKHtcbiAgICAgICAgICAvLyBAdHMtaWdub3JlIC0gdW5uZWVkZWQgRE9NUmVjdCBwcm9wZXJ0aWVzXG4gICAgICAgICAgZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdDogZnVuY3Rpb24gZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdCgpIHtcbiAgICAgICAgICAgIHZhciByZWN0ID0gcmVmZXJlbmNlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgdmFyIHggPSBjbGllbnRYO1xuICAgICAgICAgICAgdmFyIHkgPSBjbGllbnRZO1xuXG4gICAgICAgICAgICBpZiAoZm9sbG93Q3Vyc29yID09PSAnaW5pdGlhbCcpIHtcbiAgICAgICAgICAgICAgeCA9IHJlY3QubGVmdCArIHJlbGF0aXZlWDtcbiAgICAgICAgICAgICAgeSA9IHJlY3QudG9wICsgcmVsYXRpdmVZO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdG9wID0gZm9sbG93Q3Vyc29yID09PSAnaG9yaXpvbnRhbCcgPyByZWN0LnRvcCA6IHk7XG4gICAgICAgICAgICB2YXIgcmlnaHQgPSBmb2xsb3dDdXJzb3IgPT09ICd2ZXJ0aWNhbCcgPyByZWN0LnJpZ2h0IDogeDtcbiAgICAgICAgICAgIHZhciBib3R0b20gPSBmb2xsb3dDdXJzb3IgPT09ICdob3Jpem9udGFsJyA/IHJlY3QuYm90dG9tIDogeTtcbiAgICAgICAgICAgIHZhciBsZWZ0ID0gZm9sbG93Q3Vyc29yID09PSAndmVydGljYWwnID8gcmVjdC5sZWZ0IDogeDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHdpZHRoOiByaWdodCAtIGxlZnQsXG4gICAgICAgICAgICAgIGhlaWdodDogYm90dG9tIC0gdG9wLFxuICAgICAgICAgICAgICB0b3A6IHRvcCxcbiAgICAgICAgICAgICAgcmlnaHQ6IHJpZ2h0LFxuICAgICAgICAgICAgICBib3R0b206IGJvdHRvbSxcbiAgICAgICAgICAgICAgbGVmdDogbGVmdFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgIGlmIChpbnN0YW5jZS5wcm9wcy5mb2xsb3dDdXJzb3IpIHtcbiAgICAgICAgYWN0aXZlSW5zdGFuY2VzLnB1c2goe1xuICAgICAgICAgIGluc3RhbmNlOiBpbnN0YW5jZSxcbiAgICAgICAgICBkb2M6IGRvY1xuICAgICAgICB9KTtcbiAgICAgICAgYWRkTW91c2VDb29yZHNMaXN0ZW5lcihkb2MpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICBhY3RpdmVJbnN0YW5jZXMgPSBhY3RpdmVJbnN0YW5jZXMuZmlsdGVyKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHJldHVybiBkYXRhLmluc3RhbmNlICE9PSBpbnN0YW5jZTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoYWN0aXZlSW5zdGFuY2VzLmZpbHRlcihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICByZXR1cm4gZGF0YS5kb2MgPT09IGRvYztcbiAgICAgIH0pLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZW1vdmVNb3VzZUNvb3Jkc0xpc3RlbmVyKGRvYyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIG9uQ3JlYXRlOiBjcmVhdGUsXG4gICAgICBvbkRlc3Ryb3k6IGRlc3Ryb3ksXG4gICAgICBvbkJlZm9yZVVwZGF0ZTogZnVuY3Rpb24gb25CZWZvcmVVcGRhdGUoKSB7XG4gICAgICAgIHByZXZQcm9wcyA9IGluc3RhbmNlLnByb3BzO1xuICAgICAgfSxcbiAgICAgIG9uQWZ0ZXJVcGRhdGU6IGZ1bmN0aW9uIG9uQWZ0ZXJVcGRhdGUoXywgX3JlZjIpIHtcbiAgICAgICAgdmFyIGZvbGxvd0N1cnNvciA9IF9yZWYyLmZvbGxvd0N1cnNvcjtcblxuICAgICAgICBpZiAoaXNJbnRlcm5hbFVwZGF0ZSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChmb2xsb3dDdXJzb3IgIT09IHVuZGVmaW5lZCAmJiBwcmV2UHJvcHMuZm9sbG93Q3Vyc29yICE9PSBmb2xsb3dDdXJzb3IpIHtcbiAgICAgICAgICBkZXN0cm95KCk7XG5cbiAgICAgICAgICBpZiAoZm9sbG93Q3Vyc29yKSB7XG4gICAgICAgICAgICBjcmVhdGUoKTtcblxuICAgICAgICAgICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCAmJiAhd2FzRm9jdXNFdmVudCAmJiAhZ2V0SXNJbml0aWFsQmVoYXZpb3IoKSkge1xuICAgICAgICAgICAgICBhZGRMaXN0ZW5lcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcigpO1xuICAgICAgICAgICAgdW5zZXRHZXRSZWZlcmVuY2VDbGllbnRSZWN0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnByb3BzLmZvbGxvd0N1cnNvciAmJiAhd2FzRm9jdXNFdmVudCkge1xuICAgICAgICAgIGlmIChpc1VubW91bnRlZCkge1xuICAgICAgICAgICAgb25Nb3VzZU1vdmUobW91c2VDb29yZHMpO1xuICAgICAgICAgICAgaXNVbm1vdW50ZWQgPSBmYWxzZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIWdldElzSW5pdGlhbEJlaGF2aW9yKCkpIHtcbiAgICAgICAgICAgIGFkZExpc3RlbmVyKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25UcmlnZ2VyOiBmdW5jdGlvbiBvblRyaWdnZXIoXywgZXZlbnQpIHtcbiAgICAgICAgaWYgKGlzTW91c2VFdmVudChldmVudCkpIHtcbiAgICAgICAgICBtb3VzZUNvb3JkcyA9IHtcbiAgICAgICAgICAgIGNsaWVudFg6IGV2ZW50LmNsaWVudFgsXG4gICAgICAgICAgICBjbGllbnRZOiBldmVudC5jbGllbnRZXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdhc0ZvY3VzRXZlbnQgPSBldmVudC50eXBlID09PSAnZm9jdXMnO1xuICAgICAgfSxcbiAgICAgIG9uSGlkZGVuOiBmdW5jdGlvbiBvbkhpZGRlbigpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnByb3BzLmZvbGxvd0N1cnNvcikge1xuICAgICAgICAgIHVuc2V0R2V0UmVmZXJlbmNlQ2xpZW50UmVjdCgpO1xuICAgICAgICAgIHJlbW92ZUxpc3RlbmVyKCk7XG4gICAgICAgICAgaXNVbm1vdW50ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxufTtcblxuZnVuY3Rpb24gZ2V0UHJvcHMocHJvcHMsIG1vZGlmaWVyKSB7XG4gIHZhciBfcHJvcHMkcG9wcGVyT3B0aW9ucztcblxuICByZXR1cm4ge1xuICAgIHBvcHBlck9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLnBvcHBlck9wdGlvbnMsIHtcbiAgICAgIG1vZGlmaWVyczogW10uY29uY2F0KCgoKF9wcm9wcyRwb3BwZXJPcHRpb25zID0gcHJvcHMucG9wcGVyT3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9wcm9wcyRwb3BwZXJPcHRpb25zLm1vZGlmaWVycykgfHwgW10pLmZpbHRlcihmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZTtcbiAgICAgICAgcmV0dXJuIG5hbWUgIT09IG1vZGlmaWVyLm5hbWU7XG4gICAgICB9KSwgW21vZGlmaWVyXSlcbiAgICB9KVxuICB9O1xufVxuXG52YXIgaW5saW5lUG9zaXRpb25pbmcgPSB7XG4gIG5hbWU6ICdpbmxpbmVQb3NpdGlvbmluZycsXG4gIGRlZmF1bHRWYWx1ZTogZmFsc2UsXG4gIGZuOiBmdW5jdGlvbiBmbihpbnN0YW5jZSkge1xuICAgIHZhciByZWZlcmVuY2UgPSBpbnN0YW5jZS5yZWZlcmVuY2U7XG5cbiAgICBmdW5jdGlvbiBpc0VuYWJsZWQoKSB7XG4gICAgICByZXR1cm4gISFpbnN0YW5jZS5wcm9wcy5pbmxpbmVQb3NpdGlvbmluZztcbiAgICB9XG5cbiAgICB2YXIgcGxhY2VtZW50O1xuICAgIHZhciBjdXJzb3JSZWN0SW5kZXggPSAtMTtcbiAgICB2YXIgaXNJbnRlcm5hbFVwZGF0ZSA9IGZhbHNlO1xuICAgIHZhciB0cmllZFBsYWNlbWVudHMgPSBbXTtcbiAgICB2YXIgbW9kaWZpZXIgPSB7XG4gICAgICBuYW1lOiAndGlwcHlJbmxpbmVQb3NpdGlvbmluZycsXG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgcGhhc2U6ICdhZnRlcldyaXRlJyxcbiAgICAgIGZuOiBmdW5jdGlvbiBmbihfcmVmMikge1xuICAgICAgICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZTtcblxuICAgICAgICBpZiAoaXNFbmFibGVkKCkpIHtcbiAgICAgICAgICBpZiAodHJpZWRQbGFjZW1lbnRzLmluZGV4T2Yoc3RhdGUucGxhY2VtZW50KSAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRyaWVkUGxhY2VtZW50cyA9IFtdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChwbGFjZW1lbnQgIT09IHN0YXRlLnBsYWNlbWVudCAmJiB0cmllZFBsYWNlbWVudHMuaW5kZXhPZihzdGF0ZS5wbGFjZW1lbnQpID09PSAtMSkge1xuICAgICAgICAgICAgdHJpZWRQbGFjZW1lbnRzLnB1c2goc3RhdGUucGxhY2VtZW50KTtcbiAgICAgICAgICAgIGluc3RhbmNlLnNldFByb3BzKHtcbiAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIHVubmVlZGVkIERPTVJlY3QgcHJvcGVydGllc1xuICAgICAgICAgICAgICBnZXRSZWZlcmVuY2VDbGllbnRSZWN0OiBmdW5jdGlvbiBnZXRSZWZlcmVuY2VDbGllbnRSZWN0KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0UmVmZXJlbmNlQ2xpZW50UmVjdChzdGF0ZS5wbGFjZW1lbnQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwbGFjZW1lbnQgPSBzdGF0ZS5wbGFjZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gX2dldFJlZmVyZW5jZUNsaWVudFJlY3QocGxhY2VtZW50KSB7XG4gICAgICByZXR1cm4gZ2V0SW5saW5lQm91bmRpbmdDbGllbnRSZWN0KGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSwgcmVmZXJlbmNlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLCBhcnJheUZyb20ocmVmZXJlbmNlLmdldENsaWVudFJlY3RzKCkpLCBjdXJzb3JSZWN0SW5kZXgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldEludGVybmFsUHJvcHMocGFydGlhbFByb3BzKSB7XG4gICAgICBpc0ludGVybmFsVXBkYXRlID0gdHJ1ZTtcbiAgICAgIGluc3RhbmNlLnNldFByb3BzKHBhcnRpYWxQcm9wcyk7XG4gICAgICBpc0ludGVybmFsVXBkYXRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkTW9kaWZpZXIoKSB7XG4gICAgICBpZiAoIWlzSW50ZXJuYWxVcGRhdGUpIHtcbiAgICAgICAgc2V0SW50ZXJuYWxQcm9wcyhnZXRQcm9wcyhpbnN0YW5jZS5wcm9wcywgbW9kaWZpZXIpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgb25DcmVhdGU6IGFkZE1vZGlmaWVyLFxuICAgICAgb25BZnRlclVwZGF0ZTogYWRkTW9kaWZpZXIsXG4gICAgICBvblRyaWdnZXI6IGZ1bmN0aW9uIG9uVHJpZ2dlcihfLCBldmVudCkge1xuICAgICAgICBpZiAoaXNNb3VzZUV2ZW50KGV2ZW50KSkge1xuICAgICAgICAgIHZhciByZWN0cyA9IGFycmF5RnJvbShpbnN0YW5jZS5yZWZlcmVuY2UuZ2V0Q2xpZW50UmVjdHMoKSk7XG4gICAgICAgICAgdmFyIGN1cnNvclJlY3QgPSByZWN0cy5maW5kKGZ1bmN0aW9uIChyZWN0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmVjdC5sZWZ0IC0gMiA8PSBldmVudC5jbGllbnRYICYmIHJlY3QucmlnaHQgKyAyID49IGV2ZW50LmNsaWVudFggJiYgcmVjdC50b3AgLSAyIDw9IGV2ZW50LmNsaWVudFkgJiYgcmVjdC5ib3R0b20gKyAyID49IGV2ZW50LmNsaWVudFk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdmFyIGluZGV4ID0gcmVjdHMuaW5kZXhPZihjdXJzb3JSZWN0KTtcbiAgICAgICAgICBjdXJzb3JSZWN0SW5kZXggPSBpbmRleCA+IC0xID8gaW5kZXggOiBjdXJzb3JSZWN0SW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbkhpZGRlbjogZnVuY3Rpb24gb25IaWRkZW4oKSB7XG4gICAgICAgIGN1cnNvclJlY3RJbmRleCA9IC0xO1xuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG5mdW5jdGlvbiBnZXRJbmxpbmVCb3VuZGluZ0NsaWVudFJlY3QoY3VycmVudEJhc2VQbGFjZW1lbnQsIGJvdW5kaW5nUmVjdCwgY2xpZW50UmVjdHMsIGN1cnNvclJlY3RJbmRleCkge1xuICAvLyBOb3QgYW4gaW5saW5lIGVsZW1lbnQsIG9yIHBsYWNlbWVudCBpcyBub3QgeWV0IGtub3duXG4gIGlmIChjbGllbnRSZWN0cy5sZW5ndGggPCAyIHx8IGN1cnJlbnRCYXNlUGxhY2VtZW50ID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGJvdW5kaW5nUmVjdDtcbiAgfSAvLyBUaGVyZSBhcmUgdHdvIHJlY3RzIGFuZCB0aGV5IGFyZSBkaXNqb2luZWRcblxuXG4gIGlmIChjbGllbnRSZWN0cy5sZW5ndGggPT09IDIgJiYgY3Vyc29yUmVjdEluZGV4ID49IDAgJiYgY2xpZW50UmVjdHNbMF0ubGVmdCA+IGNsaWVudFJlY3RzWzFdLnJpZ2h0KSB7XG4gICAgcmV0dXJuIGNsaWVudFJlY3RzW2N1cnNvclJlY3RJbmRleF0gfHwgYm91bmRpbmdSZWN0O1xuICB9XG5cbiAgc3dpdGNoIChjdXJyZW50QmFzZVBsYWNlbWVudCkge1xuICAgIGNhc2UgJ3RvcCc6XG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICAgIHtcbiAgICAgICAgdmFyIGZpcnN0UmVjdCA9IGNsaWVudFJlY3RzWzBdO1xuICAgICAgICB2YXIgbGFzdFJlY3QgPSBjbGllbnRSZWN0c1tjbGllbnRSZWN0cy5sZW5ndGggLSAxXTtcbiAgICAgICAgdmFyIGlzVG9wID0gY3VycmVudEJhc2VQbGFjZW1lbnQgPT09ICd0b3AnO1xuICAgICAgICB2YXIgdG9wID0gZmlyc3RSZWN0LnRvcDtcbiAgICAgICAgdmFyIGJvdHRvbSA9IGxhc3RSZWN0LmJvdHRvbTtcbiAgICAgICAgdmFyIGxlZnQgPSBpc1RvcCA/IGZpcnN0UmVjdC5sZWZ0IDogbGFzdFJlY3QubGVmdDtcbiAgICAgICAgdmFyIHJpZ2h0ID0gaXNUb3AgPyBmaXJzdFJlY3QucmlnaHQgOiBsYXN0UmVjdC5yaWdodDtcbiAgICAgICAgdmFyIHdpZHRoID0gcmlnaHQgLSBsZWZ0O1xuICAgICAgICB2YXIgaGVpZ2h0ID0gYm90dG9tIC0gdG9wO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRvcDogdG9wLFxuICAgICAgICAgIGJvdHRvbTogYm90dG9tLFxuICAgICAgICAgIGxlZnQ6IGxlZnQsXG4gICAgICAgICAgcmlnaHQ6IHJpZ2h0LFxuICAgICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IGhlaWdodFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgY2FzZSAnbGVmdCc6XG4gICAgY2FzZSAncmlnaHQnOlxuICAgICAge1xuICAgICAgICB2YXIgbWluTGVmdCA9IE1hdGgubWluLmFwcGx5KE1hdGgsIGNsaWVudFJlY3RzLm1hcChmdW5jdGlvbiAocmVjdHMpIHtcbiAgICAgICAgICByZXR1cm4gcmVjdHMubGVmdDtcbiAgICAgICAgfSkpO1xuICAgICAgICB2YXIgbWF4UmlnaHQgPSBNYXRoLm1heC5hcHBseShNYXRoLCBjbGllbnRSZWN0cy5tYXAoZnVuY3Rpb24gKHJlY3RzKSB7XG4gICAgICAgICAgcmV0dXJuIHJlY3RzLnJpZ2h0O1xuICAgICAgICB9KSk7XG4gICAgICAgIHZhciBtZWFzdXJlUmVjdHMgPSBjbGllbnRSZWN0cy5maWx0ZXIoZnVuY3Rpb24gKHJlY3QpIHtcbiAgICAgICAgICByZXR1cm4gY3VycmVudEJhc2VQbGFjZW1lbnQgPT09ICdsZWZ0JyA/IHJlY3QubGVmdCA9PT0gbWluTGVmdCA6IHJlY3QucmlnaHQgPT09IG1heFJpZ2h0O1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIF90b3AgPSBtZWFzdXJlUmVjdHNbMF0udG9wO1xuICAgICAgICB2YXIgX2JvdHRvbSA9IG1lYXN1cmVSZWN0c1ttZWFzdXJlUmVjdHMubGVuZ3RoIC0gMV0uYm90dG9tO1xuICAgICAgICB2YXIgX2xlZnQgPSBtaW5MZWZ0O1xuICAgICAgICB2YXIgX3JpZ2h0ID0gbWF4UmlnaHQ7XG5cbiAgICAgICAgdmFyIF93aWR0aCA9IF9yaWdodCAtIF9sZWZ0O1xuXG4gICAgICAgIHZhciBfaGVpZ2h0ID0gX2JvdHRvbSAtIF90b3A7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0b3A6IF90b3AsXG4gICAgICAgICAgYm90dG9tOiBfYm90dG9tLFxuICAgICAgICAgIGxlZnQ6IF9sZWZ0LFxuICAgICAgICAgIHJpZ2h0OiBfcmlnaHQsXG4gICAgICAgICAgd2lkdGg6IF93aWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IF9oZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgIGRlZmF1bHQ6XG4gICAgICB7XG4gICAgICAgIHJldHVybiBib3VuZGluZ1JlY3Q7XG4gICAgICB9XG4gIH1cbn1cblxudmFyIHN0aWNreSA9IHtcbiAgbmFtZTogJ3N0aWNreScsXG4gIGRlZmF1bHRWYWx1ZTogZmFsc2UsXG4gIGZuOiBmdW5jdGlvbiBmbihpbnN0YW5jZSkge1xuICAgIHZhciByZWZlcmVuY2UgPSBpbnN0YW5jZS5yZWZlcmVuY2UsXG4gICAgICAgIHBvcHBlciA9IGluc3RhbmNlLnBvcHBlcjtcblxuICAgIGZ1bmN0aW9uIGdldFJlZmVyZW5jZSgpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZSA/IGluc3RhbmNlLnBvcHBlckluc3RhbmNlLnN0YXRlLmVsZW1lbnRzLnJlZmVyZW5jZSA6IHJlZmVyZW5jZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzaG91bGRDaGVjayh2YWx1ZSkge1xuICAgICAgcmV0dXJuIGluc3RhbmNlLnByb3BzLnN0aWNreSA9PT0gdHJ1ZSB8fCBpbnN0YW5jZS5wcm9wcy5zdGlja3kgPT09IHZhbHVlO1xuICAgIH1cblxuICAgIHZhciBwcmV2UmVmUmVjdCA9IG51bGw7XG4gICAgdmFyIHByZXZQb3BSZWN0ID0gbnVsbDtcblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uKCkge1xuICAgICAgdmFyIGN1cnJlbnRSZWZSZWN0ID0gc2hvdWxkQ2hlY2soJ3JlZmVyZW5jZScpID8gZ2V0UmVmZXJlbmNlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkgOiBudWxsO1xuICAgICAgdmFyIGN1cnJlbnRQb3BSZWN0ID0gc2hvdWxkQ2hlY2soJ3BvcHBlcicpID8gcG9wcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpIDogbnVsbDtcblxuICAgICAgaWYgKGN1cnJlbnRSZWZSZWN0ICYmIGFyZVJlY3RzRGlmZmVyZW50KHByZXZSZWZSZWN0LCBjdXJyZW50UmVmUmVjdCkgfHwgY3VycmVudFBvcFJlY3QgJiYgYXJlUmVjdHNEaWZmZXJlbnQocHJldlBvcFJlY3QsIGN1cnJlbnRQb3BSZWN0KSkge1xuICAgICAgICBpZiAoaW5zdGFuY2UucG9wcGVySW5zdGFuY2UpIHtcbiAgICAgICAgICBpbnN0YW5jZS5wb3BwZXJJbnN0YW5jZS51cGRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwcmV2UmVmUmVjdCA9IGN1cnJlbnRSZWZSZWN0O1xuICAgICAgcHJldlBvcFJlY3QgPSBjdXJyZW50UG9wUmVjdDtcblxuICAgICAgaWYgKGluc3RhbmNlLnN0YXRlLmlzTW91bnRlZCkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodXBkYXRlUG9zaXRpb24pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBpZiAoaW5zdGFuY2UucHJvcHMuc3RpY2t5KSB7XG4gICAgICAgICAgdXBkYXRlUG9zaXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGFyZVJlY3RzRGlmZmVyZW50KHJlY3RBLCByZWN0Qikge1xuICBpZiAocmVjdEEgJiYgcmVjdEIpIHtcbiAgICByZXR1cm4gcmVjdEEudG9wICE9PSByZWN0Qi50b3AgfHwgcmVjdEEucmlnaHQgIT09IHJlY3RCLnJpZ2h0IHx8IHJlY3RBLmJvdHRvbSAhPT0gcmVjdEIuYm90dG9tIHx8IHJlY3RBLmxlZnQgIT09IHJlY3RCLmxlZnQ7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxudGlwcHkuc2V0RGVmYXVsdFByb3BzKHtcbiAgcmVuZGVyOiByZW5kZXJcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB0aXBweTtcbmV4cG9ydCB7IGFuaW1hdGVGaWxsLCBjcmVhdGVTaW5nbGV0b24sIGRlbGVnYXRlLCBmb2xsb3dDdXJzb3IsIGhpZGVBbGwsIGlubGluZVBvc2l0aW9uaW5nLCBST1VORF9BUlJPVyBhcyByb3VuZEFycm93LCBzdGlja3kgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpcHB5LmVzbS5qcy5tYXBcbiIsImltcG9ydCB0aXBweSBmcm9tICd0aXBweS5qcydcblxuY29uc3QgdG9vbHRpcHNCeUlkID0ge1xuICAgIFwiZWFzeS1sYWJlbFwiOiBcIk1vc3RseSB3ZWxsIGtub3duIGNvdW50cmllcyBhbmQgZmxhZ3NcIixcbiAgICBcIm5vcm1hbC1sYWJlbFwiOiBcIk1hbnkgc21hbGxlciBhbmQgbGVzc2VyIGtub3duIGNvdW50cmllcyBhcmUgaW5jbHVkZWQsIGJ1dCB0aGVyZSBhcmVuJ3QgYW55IHRpbnkgaXNsYW5kIG5hdGlvbnNcIixcbiAgICBcImV4cGVydC1sYWJlbFwiOiBcIkFsbW9zdCBldmVyeSBjb3VudHJ5IGFuZCB0ZXJyaXRvcnkgaXMgaW5jbHVkZWQsIG9ubHkgZm9yIGdlb2dyYXBoeSBzdXBlciBuZXJkc1wiLFxuICAgIFwiZW5kbGVzcy1sYWJlbFwiOiBcIktlZXAgZ29pbmcgZm9yZXZlciBhbmQgZXZlciwgbm8gY29uc2VxdWVuY2VzXCIsXG4gICAgXCJxdWVzdGlvbnMtbGFiZWxcIjogXCJBc2sgYW4gYXJiaXRyYXJ5IG51bWJlciBvZiBxdWVzdGlvbnMgYmVmb3JlIHRoZSBnYW1lIGlzIG92ZXIgYW5kIHlvdSBnZXQgYSBzY29yZVwiLFxuICAgIFwic3RyZWFrLWxhYmVsXCI6IFwiS2VlcCBwbGF5aW5nIGFuZCBncm93aW5nIHlvdXIgc3RyZWFrIHVudGlsIHlvdSBnZXQgYSBxdWVzdGlvbiB3cm9uZ1wiLFxuICAgIFwic3AtZmxhZ3NQZXJjZW50XCI6IFwiUGVyY2VudGFnZSBvZiB0aGUgd29ybGQncyBmbGFncyB0aGF0IHlvdSd2ZSBlbmNvdW50ZXJlZCB3aGlsZSBwbGF5aW5nXCIsXG4gICAgXCJyZXBsYXktYnRuXCI6IFwiU3RhcnQgb3ZlciB1c2luZyB0aGUgc2FtZSBvcHRpb25zXCJcbn1cblxuZm9yIChsZXQgZWxlbWVudElkIGluIHRvb2x0aXBzQnlJZCkge1xuICAgIHRpcHB5KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1lbnRJZCksIHtcbiAgICAgICAgY29udGVudDogdG9vbHRpcHNCeUlkW2VsZW1lbnRJZF0sXG4gICAgICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgICAgIGFuaW1hdGlvbjogJ3NoaWZ0LWF3YXktc3VidGxlJ1xuICAgIH0pXG59IiwiY29uc3QgbG9yZW0gPSBcIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuXCJcblxuZnVuY3Rpb24gc2V0Q29udGVudChlbGVtZW50LCBjb250ZW50LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMucGxhaW5UZXh0KSB7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJUZXh0ID0gY29udGVudFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gY29udGVudFxuICAgIH1cbn1cblxuY2xhc3MgUG9wdXAge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCEoJ2NvbnRlbnQnIGluIG9wdGlvbnMpKSB7XG4gICAgICAgICAgICBvcHRpb25zLmNvbnRlbnQgPSBsb3JlbVxuICAgICAgICB9XG4gICAgICAgIGlmICghKCd0aXRsZScgaW4gb3B0aW9ucykpIG9wdGlvbnMudGl0bGUgPSBcIlwiXG4gICAgICAgIGlmICghKCdwbGFpblRleHQnIGluIG9wdGlvbnMpKSBvcHRpb25zLnBsYWluVGV4dCA9IHRydWVcbiAgICAgICAgaWYgKCEoJ2NsaWNrQmFja2Ryb3BUb0Nsb3NlJyBpbiBvcHRpb25zKSkgb3B0aW9ucy5jbGlja0JhY2tkcm9wVG9DbG9zZSA9IHRydWVcbiAgICAgICAgaWYgKCEoJ2Nsb3NlS2V5cycgaW4gb3B0aW9ucykpIG9wdGlvbnMuY2xvc2VLZXlzID0gWydFc2NhcGUnXVxuICAgICAgICBjb25zdCBiYWNrZHJvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcbiAgICAgICAgYmFja2Ryb3AuY2xhc3NOYW1lID0gXCJwb3B1cC1iYWNrZHJvcFwiXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYmFja2Ryb3ApXG4gICAgICAgIGNvbnN0IFBvcHVwRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcbiAgICAgICAgUG9wdXBFbGVtZW50LmNsYXNzTmFtZSA9IFwicG9wdXAtY29udGFpbmVyXCJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChQb3B1cEVsZW1lbnQpXG4gICAgICAgIGNvbnN0IGhlYWRlckNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoZWFkZXJcIilcbiAgICAgICAgaGVhZGVyQ29udGFpbmVyLmNsYXNzTmFtZSA9IFwicG9wdXAtaGVhZGVyXCJcbiAgICAgICAgUG9wdXBFbGVtZW50LmFwcGVuZENoaWxkKGhlYWRlckNvbnRhaW5lcilcbiAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIilcbiAgICAgICAgdGl0bGVFbGVtZW50LmNsYXNzTmFtZSA9IFwicG9wdXAtdGl0bGVcIlxuICAgICAgICBzZXRDb250ZW50KHRpdGxlRWxlbWVudCwgb3B0aW9ucy50aXRsZSwgb3B0aW9ucylcbiAgICAgICAgaGVhZGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlRWxlbWVudClcbiAgICAgICAgY29uc3QgeEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICAgICAgeEJ1dHRvbi5pbm5lckhUTUwgPSBcIlhcIlxuICAgICAgICB4QnV0dG9uLmNsYXNzTmFtZSA9ICdwb3B1cC1jbG9zZSdcbiAgICAgICAgaGVhZGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHhCdXR0b24pXG4gICAgICAgIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxuICAgICAgICBtYWluQ29udGVudC5jbGFzc05hbWUgPSAncG9wdXAtY29udGVudCdcbiAgICAgICAgc2V0Q29udGVudChtYWluQ29udGVudCwgb3B0aW9ucy5jb250ZW50LCBvcHRpb25zKVxuICAgICAgICBQb3B1cEVsZW1lbnQuYXBwZW5kQ2hpbGQobWFpbkNvbnRlbnQpXG4gICAgICAgIHRoaXMuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5jYWxsYmFja1JlcGxhY2VEZWZhdWx0KSB7XG4gICAgICAgICAgICAgICAgUG9wdXBFbGVtZW50LnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgYmFja2Ryb3AucmVtb3ZlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgnb25DbG9zZScgaW4gb3B0aW9ucykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMub25DbG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBwcm9jZXNzS2V5RG93bilcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwcm9jZXNzS2V5RG93bihldmVudCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuY2xvc2VLZXlzLmluY2x1ZGVzKGV2ZW50LmtleSkgfHwgb3B0aW9ucy5jbG9zZUtleXMuaW5jbHVkZXMoZXZlbnQua2V5Q29kZSkpIHtcbiAgICAgICAgICAgICAgICB4QnV0dG9uLmNsaWNrKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBwcm9jZXNzS2V5RG93bilcbiAgICAgICAgeEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZSlcbiAgICAgICAgaWYgKG9wdGlvbnMuY2xpY2tCYWNrZHJvcFRvQ2xvc2UpIHtcbiAgICAgICAgICAgIGJhY2tkcm9wLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlKVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cCIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4Lmxlc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gICAgaW5jb3JyZWN0RW5kbGVzc01lc3NhZ2VzOiBbXG4gICAgICAgIFwiRHVzdCB5b3Vyc2VsZiBvZmYhIFRoZSBjb3JyZWN0IGFuc3dlciB3YXMgJSVcIixcbiAgICAgICAgXCJPb3BzISBUaGUgY29ycmVjdCBhbnN3ZXIgd2FzICUlXCIsXG4gICAgICAgIFwiU29ycnkhIFRoZSBhY3R1YWwgYW5zd2VyIHdhcyAlJVwiLFxuICAgICAgICBcIllvdSdsbCBnZXQgaXQgbmV4dCB0aW1lISBUaGUgYW5zd2VyIHdhcyAlJS5cIixcbiAgICAgICAgXCJJIGJlbGlldmUgaW4geW91ISBUaGUgY29ycmVjdCBhbnN3ZXIgd2FzICUlXCIsXG4gICAgICAgIFwiRG9uJ3Qgc3dlYXQhIFRoZSBjb3JyZWN0IGFuc3dlciB3YXMgJSVcIixcbiAgICAgICAgXCJOaWNlIHRyeSwgdGhlIGNvcnJlY3QgYW5zd2VyIHdhcyAlJVwiXG4gICAgXSxcbiAgICBzdHJlYWtDb3JyZWN0TWVzc2FnZXM6IFtcbiAgICAgICAgXCJBd2Vzb21lISBZb3VyIHN0cmVhayBpcyBub3cgJSUhXCIsXG4gICAgICAgIFwiWW91ciBzdHJlYWsgaXMgbm93ICUlIVwiLFxuICAgICAgICBcIlNpY2shIFlvdXIgbmV3IHN0cmVhayBpcyAlJSFcIixcbiAgICAgICAgXCJTd2VldCEgU3RyZWFrOiAlJVwiLFxuICAgICAgICBcIktlZXAgZ29pbmchIFN0cmVhazogJSVcIixcbiAgICAgICAgXCJHRyEgU3RyZWFrOiAlJVwiXG4gICAgXSxcbiAgICBsb3NlU3RyZWFrTWVzc2FnZXM6IFtcbiAgICAgICAgXCJBdyBtYW4hIEJldHRlciBsdWNrIG5leHQgdGltZS4gWW91IGdvdCBhIHN0cmVhayBvZiAlJSBxdWVzdGlvbnMuXCIsXG4gICAgICAgIFwiQmV0dGVyIGx1Y2sgbmV4dCB0aW1lISBZb3VyIHN0cmVhayB3YXMgJSUgcXVlc3Rpb25zLlwiLFxuICAgICAgICBcIiUlIHF1ZXN0aW9ucywgbm90IGJhZCFcIixcbiAgICAgICAgXCJNYXliZSBuZXh0IHRpbWUhIFlvdSBnb3QgYSBzdHJlYWsgb2YgJSUgcXVlc3Rpb25zLlwiXG4gICAgXSxcbiAgICBxdWVzdGlvbnNGYWlsOiBbXG4gICAgICAgIFwiWW91IGZpbmlzaGVkIHdpdGggYSBzY29yZSBvZiAlJSBvdXQgb2YgJSUuIEJldHRlciBsdWNrIG5leHQgdGltZSFcIixcbiAgICAgICAgXCJZb3UgZ290ICUlLyUlLiBJIGJldCB5b3UnbGwgZG8gYmV0dGVyIG5leHQgdGltZSFcIixcbiAgICAgICAgXCJLZWVwIHRyeWluZyEgWW91IGZpbmlzaGVkIHdpdGggYSBzY29yZSBvZiAlJS8lJS5cIlxuICAgIF0sXG4gICAgcXVlc3Rpb25zRmluaXNoOiBbXG4gICAgICAgIFwiQXdlc29tZSEgWW91ciBzY29yZSBpcyAlJS8lJSFcIixcbiAgICAgICAgXCJOaWNlIGpvYiEgWW91IGZpbmlzaGVkIHdpdGggYSBzY29yZSBvZiAlJSBvdXQgb2YgJSUhXCIsXG4gICAgICAgIFwiU3VwZXIhIFlvdXIgc2NvcmUgaXMgJSUvJSVcIixcbiAgICAgICAgXCJOaWNlISBZb3UgZ290ICUlIG91dCBvZiAlJSBjb3JyZWN0IVwiXG4gICAgXVxufSIsImltcG9ydCB7IFJlcG9ydCB9IGZyb20gJ25vdGlmbGl4L2J1aWxkL25vdGlmbGl4LXJlcG9ydC1haW8nO1xuaW1wb3J0IHsgTG9hZGluZyB9IGZyb20gJ25vdGlmbGl4L2J1aWxkL25vdGlmbGl4LWxvYWRpbmctYWlvJztcbmltcG9ydCB7IENvbmZpcm0gfSBmcm9tICdub3RpZmxpeC9idWlsZC9ub3RpZmxpeC1jb25maXJtLWFpbyc7XG5pbXBvcnQgeyBnZXREYXRhVXJsLCBnZXRVc2VyT3B0aW9ucyB9IGZyb20gJy4vb3B0aW9ucyc7XG5pbXBvcnQgeyBpbmNyZW1lbnRTdGF0LCB1cGRhdGVTdGF0LCBnZXRTdGF0LCBpbmNyZW1lbnRHYW1lU3RhdCwgc2hvd0VuZFNjcmVlbiwgdXBkYXRlR2FtZVN0YXQgfSBmcm9tICcuL3N0YXRpc3RpY3MnO1xuaW1wb3J0ICcuL3Rvb2x0aXBzJ1xuaW1wb3J0ICcuL29wdGlvbnMnXG5pbXBvcnQge3Nob3dBYm91dH0gZnJvbSAnLi9hYm91dCdcbmltcG9ydCAnLi9zdHlsZXMvaW5kZXgubGVzcydcbmltcG9ydCBzdHJpbmdzIGZyb20gJy4vc3RyaW5ncydcbmltcG9ydCBQb3B1cCBmcm9tICdzdXBlci1zaW1wbGUtcG9wdXAnO1xuaW1wb3J0IHsgY29uZmlybU9wdGlvbnMsIHJlcG9ydE9wdGlvbnMgfSBmcm9tICcuL3RoZW1lcyc7XG5cbmNvbnN0IHZlcnNpb24gPSAnJXZlciUnXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZlcnNpb25cIikuaW5uZXJUZXh0ID0gXCJWZXJzaW9uOiBcIiArIHZlcnNpb25cblxubGV0IG9wdGlvbkNvdW50ID0gNFxubGV0IGRhdGEgPSB7fVxubGV0IGN1cnJlbnRDb3VudHJ5OyAvLyBncnIgbm8gY2hlYXRpbmdcbmxldCBwcmV2aW91c0NvdW50cnk7XG5sZXQgcXVlc3Rpb25OdW0gPSAwXG5sZXQgcXVlc3Rpb25Db3VudCA9IDEwXG5sZXQgc2NvcmUgPSAwXG5sZXQgY2FuQ29udGludWUgPSB0cnVlXG5jb25zdCBmbGFnQXBpRW5kcG9pbnQgPSBcImZsYWdzL1wiIC8vIGlnbm9yZSB0aGUgdmFyaWFibGUgbmFtZSBYRFxuY29uc3QgZmxhZ0ZhbGxiYWNrVXJsU3RhcnQgPSBcImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vY291bnRyeS1mbGFnLWVtb2ppLWpzb25AMi4wLjAvZGlzdC9pbWFnZXMvXCJcbi8vIE5vdGU6IFVwZGF0ZSB0aGUgdXNlRmFsbGJhY2sgdmFyaWFibGUgaW4gZ2FsbGVyeS5odG1sIGFsc29cbmNvbnN0IHVzZUZhbGxiYWNrID0gW1wiQUNcIixcIkNQXCIsXCJER1wiLFwiRUFcIixcIklDXCIsXCJUQVwiXSAvLyBGbGFncyB0aGF0IG5lZWQgdG8gdXNlIHRoZSBzaW1wbGlmaWVkIHN0eWxlIGZyb20gb3Blbm1vamlcbmxldCBwcm9ncmVzc0JhclBlcmNlbnQgPSAwXG5sZXQgdXNlck9wdGlvbnMgPSB7fVxubGV0IHN0cmVhayA9IDBcbmxldCB1bnNhdmVkQ2hhbmdlcyA9IGZhbHNlXG5cbmNvbnN0IHByb2dyZXNzQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9ncmVzcy1maWxsXCIpXG5jb25zdCBzdHJlYWtOdW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0cmVhay1udW1cIilcbmNvbnN0IHN0cmVha0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RyZWFrLWNvbnRhaW5lclwiKVxuY29uc3QgdHlwaW5nRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHlwaW5nLWZvcm1cIilcbmNvbnN0IHR5cGluZ0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0eXBpbmctaW5wdXRcIilcbmNvbnN0IGNvcnJlY3RUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3JyZWN0LXRleHRcIilcblxudHlwaW5nRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG59KVxuXG5mdW5jdGlvbiBjaGVja0Fuc3dlcihhbnN3ZXIsIGNvdW50cnkpIHtcbiAgICBsZXQgdmFsaWRBbnN3ZXJzID0gW11cbiAgICB2YWxpZEFuc3dlcnMucHVzaChjb3VudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKSlcbiAgICBpZiAoJ2FsdCcgaW4gY291bnRyeSkge1xuICAgICAgICBjb3VudHJ5LmFsdC5mb3JFYWNoKChhbHQpID0+IHtcbiAgICAgICAgICAgIHZhbGlkQW5zd2Vycy5wdXNoKGFsdC50b0xvd2VyQ2FzZSgpKVxuICAgICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gdmFsaWRBbnN3ZXJzLmluY2x1ZGVzKGFuc3dlci50b0xvd2VyQ2FzZSgpLnRyaW0oKSlcbn1cblxuZnVuY3Rpb24gc2hvd1VzZXJFcnJvcihlcnJvck0pIHtcbiAgICBMb2FkaW5nLnJlbW92ZSgpXG4gICAgY29uc29sZS5lcnJvcihlcnJvck0pXG4gICAgUmVwb3J0LmZhaWx1cmUoXCJFcnJvclwiLCBlcnJvck0udG9TdHJpbmcoKSB8fCBcIkFuIHVua25vd24gZXJyb3Igb2NjdXJyZWQuXCIsIFwiT2tcIiwgcmVwb3J0T3B0aW9ucylcbn1cblxuZnVuY3Rpb24gcmFuZG9tQ291bnRyeSgpIHtcbiAgICByZXR1cm4gZGF0YVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBkYXRhLmxlbmd0aCldXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaWRlQWxsU2NyZWVucygpIHtcbiAgICBjb25zdCBzY3JlZW5zID0gQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2NyZWVuXCIpKVxuICAgIHNjcmVlbnMuZm9yRWFjaCgoc2NyZWVuKSA9PiB7XG4gICAgICAgIHNjcmVlbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9KVxufVxuXG5mdW5jdGlvbiBjbGVhck9wdGlvbnMoKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9wdGlvblwiKSlcbiAgICBvcHRpb25zLmZvckVhY2goKG9wdGlvbikgPT4ge1xuICAgICAgICBvcHRpb24ucmVtb3ZlKClcbiAgICB9KVxufVxuXG5mdW5jdGlvbiByZXNldCgpIHtcbiAgICBjdXJyZW50Q291bnRyeSA9IG51bGxcbiAgICBwcmV2aW91c0NvdW50cnkgPSBudWxsXG4gICAgcXVlc3Rpb25OdW0gPSAwXG4gICAgcHJvZ3Jlc3NCYXJQZXJjZW50ID0gMFxuICAgIHNjb3JlID0gMFxuICAgIHN0cmVhayA9IDBcbiAgICB1bnNhdmVkQ2hhbmdlcyA9IGZhbHNlXG59XG5cbmZ1bmN0aW9uIHJldHVyblRvSG9tZSgpIHtcbiAgICByZXNldCgpXG4gICAgaGlkZUFsbFNjcmVlbnMoKVxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VsY29tZVwiKS5zdHlsZS5kaXNwbGF5ID0gXCJ1bnNldFwiXG59XG5cbmZ1bmN0aW9uIGdldEZsYWdVcmwoY291bnRyeSkge1xuICAgIGlmICh1c2VyT3B0aW9ucy5zZXQgPT0gXCJ1cy1zdGF0ZXNcIikge1xuICAgICAgICByZXR1cm4gJ2ZsYWdzL3N0YXRlLycgKyBjb3VudHJ5LmNvZGUgKyAnLnBuZydcbiAgICB9XG4gICAgaWYgKHVzZUZhbGxiYWNrLmluY2x1ZGVzKGNvdW50cnkuY29kZSkpIHtcbiAgICAgICAgcmV0dXJuIGZsYWdGYWxsYmFja1VybFN0YXJ0ICsgY291bnRyeS5pbWFnZVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmbGFnQXBpRW5kcG9pbnQgKyBjb3VudHJ5LmNvZGUgKyBcIi5zdmdcIlxuICAgIH1cbn1cblxuY29uc3QgZ3Vlc3NTY3JlZW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImd1ZXNzXCIpXG5jb25zdCBmbGFnU3ZnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmbGFnLXN2Z1wiKVxuY29uc3Qgb3B0aW9uc0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3Vlc3NUeXBlLW11bHRpXCIpXG5cbmNvbnN0IGFuc3dlclR5cGVzID0gW11cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPSdhbnN3ZXJUeXBlJ11cIikuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgIGFuc3dlclR5cGVzLnB1c2goZWxlbWVudC5pZClcbn0pXG5mdW5jdGlvbiBzaG93QW5zd2VyTW9kZShhbnN3ZXJUeXBlKSB7XG4gICAgYW5zd2VyVHlwZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3Vlc3NUeXBlLVwiICsgZWxlbWVudClcbiAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9KVxuICAgIGxldCBhbnN3ZXJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZ3Vlc3NUeXBlLSR7YW5zd2VyVHlwZX1gKVxuICAgIGlmIChhbnN3ZXJEaXYpIHtcbiAgICAgICAgYW5zd2VyRGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiXCIpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBtb3ZlT24oY291bnRyeSkge1xuICAgIHF1ZXN0aW9uTnVtKytcbiAgICBwcm9ncmVzc0JhclBlcmNlbnQgPSAoMTAwICogcXVlc3Rpb25OdW0pIC8gcXVlc3Rpb25Db3VudFxuICAgIHByb2dyZXNzQmFyLnN0eWxlLndpZHRoID0gcHJvZ3Jlc3NCYXJQZXJjZW50ICsgXCIlXCJcbiAgICBwcmV2aW91c0NvdW50cnkgPSBjb3VudHJ5XG4gICAgaW5jcmVtZW50U3RhdCgndG90YWxRdWVzdGlvbnMnKVxuICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbFF1ZXN0aW9ucycpXG4gICAgaWYgKHF1ZXN0aW9uTnVtICsgMSA+IHF1ZXN0aW9uQ291bnQgJiYgdXNlck9wdGlvbnMubW9kZSA9PSBcInF1ZXN0aW9uc1wiKSB7XG4gICAgICAgIHVuc2F2ZWRDaGFuZ2VzID0gZmFsc2U7IHJldHVybiBzaG93RW5kU2NyZWVuKHVzZXJPcHRpb25zLm1vZGUsIHN0cmVhaywgc2NvcmUsIHVzZXJPcHRpb25zLnF1ZXN0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgICBndWVzc0ZvcihyYW5kb21Db3VudHJ5KCkpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBndWVzc0Zvcihjb3VudHJ5KSB7XG4gICAgbGV0IG9wdGlvbnMgPSBbXVxuICAgIGN1cnJlbnRDb3VudHJ5ID0gY291bnRyeVxuICAgIGlmIChjdXJyZW50Q291bnRyeSA9PSBwcmV2aW91c0NvdW50cnkpIHtcbiAgICAgICAgZ3Vlc3NGb3IocmFuZG9tQ291bnRyeSgpKVxuICAgICAgICByZXR1cm5cbiAgICB9XG4gICAgZmxhZ1N2Zy5zcmMgPSBnZXRGbGFnVXJsKGNvdW50cnkpICAgICAgICBcbiAgICBmdW5jdGlvbiBwaWNrKCkge1xuICAgICAgICBjb25zdCByQ291bnRyeSA9IHJhbmRvbUNvdW50cnkoKVxuICAgICAgICBpZiAob3B0aW9ucy5pbmNsdWRlcyhyQ291bnRyeS5uYW1lKSB8fCByQ291bnRyeS5uYW1lID09IGNvdW50cnkubmFtZSkgeyAvLyBObyBkdXBsaWNhdGVzIVxuICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcIkR1cGxpY2F0ZSBkZXRlY3RlZDogXCIgKyByQ291bnRyeS5uYW1lKVxuICAgICAgICAgICAgcGljaygpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBvcHRpb25zLnB1c2gockNvdW50cnkubmFtZSlcbiAgICB9XG4gICAgZnVuY3Rpb24gcHJvY2Vzc0NhbkNvbnRpbnVlKCkge1xuICAgICAgICBjYW5Db250aW51ZSA9IGZhbHNlXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY2FuQ29udGludWUgPSB0cnVlXG4gICAgICAgIH0sIDM3MClcbiAgICB9XG4gICAgZnVuY3Rpb24gc3RyZWFrSW5jb3JyZWN0KCkge1xuICAgICAgICBpZiAodXNlck9wdGlvbnMubW9kZSA9PSBcInN0cmVha1wiKSB7XG4gICAgICAgICAgICBpZiAoIWNhbkNvbnRpbnVlKSByZXR1cm5cbiAgICAgICAgICAgIHByb2Nlc3NDYW5Db250aW51ZSgpXG4gICAgICAgICAgICBpbmNyZW1lbnRTdGF0KCd0b3RhbFF1ZXN0aW9ucycpXG4gICAgICAgICAgICBpbmNyZW1lbnRHYW1lU3RhdCgndG90YWxRdWVzdGlvbnMnKVxuICAgICAgICAgICAgaW5jcmVtZW50U3RhdCgndG90YWxJbmNvcnJlY3QnKVxuICAgICAgICAgICAgaW5jcmVtZW50R2FtZVN0YXQoJ3RvdGFsSW5jb3JyZWN0JylcbiAgICAgICAgICAgIGlmIChnZXRTdGF0KCdzdHJlYWsnKSA8IHN0cmVhaykge1xuICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXQoJ3N0cmVhaycsIHN0cmVhaylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVuc2F2ZWRDaGFuZ2VzID0gZmFsc2U7IHJldHVybiBzaG93RW5kU2NyZWVuKHVzZXJPcHRpb25zLm1vZGUsIHN0cmVhaywgc2NvcmUsIHVzZXJPcHRpb25zLnF1ZXN0aW9ucywgY291bnRyeS5uYW1lKVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh1c2VyT3B0aW9ucy5hbnN3ZXJUeXBlID09IFwibXVsdGlcIikge1xuICAgICAgICBjbGVhck9wdGlvbnMoKVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9wdGlvbkNvdW50IC0gMTsgaSsrKSB7XG4gICAgICAgICAgICBwaWNrKClcbiAgICAgICAgfVxuICAgICAgICAvLyBBZGQgY29ycmVjdCBvcHRpb24gcmFuZG9tbHlcbiAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAob3B0aW9ucy5sZW5ndGggKyAxKSk7XG4gICAgICAgIG9wdGlvbnMuc3BsaWNlKHJhbmRvbUluZGV4LCAwLCBjb3VudHJ5Lm5hbWUpO1xuICAgICAgICBvcHRpb25zLmZvckVhY2goKG9wdGlvbikgPT4ge1xuICAgICAgICAgICAgbGV0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICAgICAgICAgIGJ0bi5jbGFzc05hbWUgPSBcIm9wdGlvblwiXG4gICAgICAgICAgICBidG4uaW5uZXJUZXh0ID0gb3B0aW9uXG4gICAgICAgICAgICBvcHRpb25zRGl2LmFwcGVuZENoaWxkKGJ0bilcbiAgICAgICAgICAgIGZ1bmN0aW9uIG9uQnRuQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJ0bi5nZXRBdHRyaWJ1dGUoXCJjbGlja2VkXCIpKSByZXR1cm5cbiAgICAgICAgICAgICAgICBpZiAoY2hlY2tBbnN3ZXIob3B0aW9uLCBjb3VudHJ5KSkgeyAvLyBZQVkgSVQnUyBDT1JSRUNUISEhISBMRVQnUyBHTyEhIVxuICAgICAgICAgICAgICAgICAgICBzdHJlYWsrK1xuICAgICAgICAgICAgICAgICAgICBzdHJlYWtOdW0uaW5uZXJUZXh0ID0gc3RyZWFrXG4gICAgICAgICAgICAgICAgICAgIFJlcG9ydC5zdWNjZXNzKFwiQ29ycmVjdCFcIiwgdXNlck9wdGlvbnMubW9kZSA9PSBcInN0cmVha1wiID8gc3RyaW5ncy5zdHJlYWtDb3JyZWN0TWVzc2FnZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc3RyaW5ncy5zdHJlYWtDb3JyZWN0TWVzc2FnZXMubGVuZ3RoKV0ucmVwbGFjZUFsbChcIiUlXCIsIHN0cmVhaykgOiBcIlwiLCBcIk5leHQgUXVlc3Rpb25cIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjYW5Db250aW51ZSkgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzQ2FuQ29udGludWUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50U3RhdCgndG90YWxDb3JyZWN0JylcbiAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbENvcnJlY3QnKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChnZXRTdGF0KCdzdHJlYWsnKSA8IHN0cmVhaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVTdGF0KCdzdHJlYWsnLCBzdHJlYWspXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2NvcmUrK1xuICAgICAgICAgICAgICAgICAgICAgICAgbW92ZU9uKGNvdW50cnkpXG4gICAgICAgICAgICAgICAgICAgIH0sIHJlcG9ydE9wdGlvbnMpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHsgLy8gWU9VJ1JFIFdST05HIFhEIEdFVCBUUk9MTEVEXG4gICAgICAgICAgICAgICAgICAgIGlmICh1c2VyT3B0aW9ucy5tb2RlID09IFwic3RyZWFrXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVha0luY29ycmVjdCgpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBSZXBvcnQuZmFpbHVyZShcIkluY29ycmVjdFwiLCBzdHJpbmdzLmluY29ycmVjdEVuZGxlc3NNZXNzYWdlc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzdHJpbmdzLmluY29ycmVjdEVuZGxlc3NNZXNzYWdlcy5sZW5ndGgpXS5yZXBsYWNlQWxsKFwiJSVcIiwgJzxiPicgKyBjb3VudHJ5Lm5hbWUgKyAnPC9iPicpLCBcIk5leHQgUXVlc3Rpb25cIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2FuQ29udGludWUpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NDYW5Db250aW51ZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50U3RhdCgndG90YWxJbmNvcnJlY3QnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbEluY29ycmVjdCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW92ZU9uKGNvdW50cnkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNDb3VudHJ5ID0gY291bnRyeVxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgcmVwb3J0T3B0aW9ucylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBidG4uc2V0QXR0cmlidXRlKFwiY2xpY2tlZFwiLCB0cnVlKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkJ0bkNsaWNrKVxuICAgICAgICB9KVxuICAgIH0gZWxzZSBpZiAodXNlck9wdGlvbnMuYW5zd2VyVHlwZSA9PSBcInR5cGluZ1wiKSB7XG4gICAgICAgIGNvbnN0IGZvcm1MaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGd1ZXNzID0gdHlwaW5nSW5wdXQudmFsdWVcbiAgICAgICAgICAgIGlmIChndWVzcyA9PT0gXCJcIikgcmV0dXJuIC8vIE1pc3Rha2UgZmFpbHNhZmVcbiAgICAgICAgICAgIHR5cGluZ0lucHV0LnZhbHVlID0gXCJcIlxuICAgICAgICAgICAgdHlwaW5nSW5wdXQuZm9jdXMoKVxuICAgICAgICAgICAgaWYgKGNoZWNrQW5zd2VyKGd1ZXNzLCBjb3VudHJ5KSkge1xuICAgICAgICAgICAgICAgIC8vIFR5cGluZyBjb3JyZWN0XG4gICAgICAgICAgICAgICAgdHlwaW5nSW5wdXQuY2xhc3NMaXN0LmFkZChcImNvcnJlY3RcIilcbiAgICAgICAgICAgICAgICBzdHJlYWsrK1xuICAgICAgICAgICAgICAgIHN0cmVha051bS5pbm5lclRleHQgPSBzdHJlYWsgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsQ29ycmVjdCcpXG4gICAgICAgICAgICAgICAgaW5jcmVtZW50R2FtZVN0YXQoJ3RvdGFsQ29ycmVjdCcpXG4gICAgICAgICAgICAgICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0U3RhdCgnc3RyZWFrJykgPCBzdHJlYWspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXQoJ3N0cmVhaycsIHN0cmVhaylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzY29yZSsrXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGluZ0lucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJjb3JyZWN0XCIpXG4gICAgICAgICAgICAgICAgICAgIG1vdmVPbigpXG4gICAgICAgICAgICAgICAgfSwgNjAwKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUeXBpbmcgaW5jb3JyZWN0XG4gICAgICAgICAgICAgICAgdHlwaW5nSW5wdXQuY2xhc3NMaXN0LmFkZChcImluY29ycmVjdFwiKVxuICAgICAgICAgICAgICAgIGNvcnJlY3RUZXh0LnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIlxuICAgICAgICAgICAgICAgIGNvcnJlY3RUZXh0LnF1ZXJ5U2VsZWN0b3IoXCIudmFsdWVcIikuaW5uZXJUZXh0ID0gY291bnRyeS5uYW1lXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvcnJlY3RUZXh0LnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGluZ0lucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJpbmNvcnJlY3RcIilcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgPT0gXCJzdHJlYWtcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFrSW5jb3JyZWN0KClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudFN0YXQoJ3RvdGFsSW5jb3JyZWN0JylcbiAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCd0b3RhbEluY29ycmVjdCcpXG4gICAgICAgICAgICAgICAgICAgICAgICBtb3ZlT24oKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgNjAwKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHlwaW5nRm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZvcm1MaXN0ZW5lcilcbiAgICAgICAgfVxuICAgICAgICB0eXBpbmdGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZm9ybUxpc3RlbmVyKVxuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodXNlck9wdGlvbnMuc2V0ICE9IFwidXMtc3RhdGVzXCIpIHtcbiAgICAgICAgICAgIGlmICghZ2V0U3RhdCgnZmxhZ3NTZWVuJykuaW5jbHVkZXMoY291bnRyeS5jb2RlKSkge1xuICAgICAgICAgICAgICAgIGxldCBuZXdTdGF0ID0gZ2V0U3RhdCgnZmxhZ3NTZWVuJylcbiAgICAgICAgICAgICAgICBuZXdTdGF0LnB1c2goY291bnRyeS5jb2RlKVxuICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXQoJ2ZsYWdzU2VlbicsIG5ld1N0YXQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGNhdGNoKGVycm9yTSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBzdGF0aXN0aWNzIVwiKVxuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yTSlcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHN0YXJ0KCkge1xuICAgIHVzZXJPcHRpb25zID0gZ2V0VXNlck9wdGlvbnMoKVxuICAgIG9wdGlvbkNvdW50ID0gdXNlck9wdGlvbnMub3B0aW9ucy5zcGxpdChcIm9wdC1cIilbMV1cbiAgICBxdWVzdGlvbkNvdW50ID0gdXNlck9wdGlvbnMucXVlc3Rpb25zLnNwbGl0KFwicS1cIilbMV1cbiAgICBjb25zb2xlLmxvZyhcIkRhdGEgdXJsOiBcIiArIGdldERhdGFVcmwoKSlcbiAgICBjb25zb2xlLmxvZyhcIk9wdGlvbiBjb3VudDogXCIgKyBvcHRpb25Db3VudClcbiAgICBpbmNyZW1lbnRTdGF0KCd0b3RhbEdhbWVzJylcbiAgICBzaG93QW5zd2VyTW9kZSh1c2VyT3B0aW9ucy5hbnN3ZXJUeXBlKVxuICAgIHVuc2F2ZWRDaGFuZ2VzID0gdHJ1ZVxuICAgIGlmICh1c2VyT3B0aW9ucy5tb2RlICE9PSBcInF1ZXN0aW9uc1wiKSB7XG4gICAgICAgIHByb2dyZXNzQmFyLnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvZ3Jlc3NCYXIucGFyZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCAnJylcbiAgICB9XG4gICAgaWYgKHVzZXJPcHRpb25zLm1vZGUgIT09IFwic3RyZWFrXCIpIHtcbiAgICAgICAgc3RyZWFrQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgIH0gZWxzZSB7XG4gICAgICAgIHN0cmVha0NvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiXG4gICAgfVxuICAgIGlmICh1c2VyT3B0aW9ucy5hdXRvY29tcGxldGUgPT0gXCJhdXRvY29tcGxldGUtb25cIikge1xuICAgICAgICB0eXBpbmdJbnB1dC5zZXRBdHRyaWJ1dGUoXCJsaXN0XCIsIFwiY291bnRyaWVzLWF1dG9cIilcbiAgICB9IGVsc2Uge1xuICAgICAgICB0eXBpbmdJbnB1dC5zZXRBdHRyaWJ1dGUoXCJsaXN0XCIsIFwiXCIpXG4gICAgfVxuICAgIHR5cGluZ0lucHV0LnZhbHVlID0gXCJcIlxuICAgIHVwZGF0ZUdhbWVTdGF0KCdkaWZmaWN1bHR5JywgdXNlck9wdGlvbnMuc2V0KVxuICAgIHVwZGF0ZUdhbWVTdGF0KCdxdWVzdGlvbnMnLCB1c2VyT3B0aW9ucy5xdWVzdGlvbnMuc3BsaXQoXCJxLVwiKVsxXSlcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2luZm8tZGlmZmljdWx0eSA+IHNwYW5cIikuaW5uZXJUZXh0ID0gdXNlck9wdGlvbnMuc2V0LnJlcGxhY2UoXCItXCIsIFwiIFwiKVxuICAgIHN0cmVha051bS5pbm5lclRleHQgPSBzdHJlYWtcbiAgICBMb2FkaW5nLmNpcmNsZSgnRmV0Y2hpbmcgZGF0YS4uLicpXG4gICAgZmV0Y2goZ2V0RGF0YVVybCgpKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgTG9hZGluZy5jaGFuZ2UoJ1BhcnNpbmcgZGF0YS4uLicpXG4gICAgICAgIHJlcy5qc29uKCkudGhlbigoZmV0Y2hlZERhdGEpID0+IHtcbiAgICAgICAgICAgIGRhdGEgPSBmZXRjaGVkRGF0YVxuICAgICAgICAgICAgY29uc3QgYXV0b2NvbXBsZXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3VudHJpZXMtYXV0b1wiKVxuICAgICAgICAgICAgYXV0b2NvbXBsZXRlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJvcHRpb25cIikuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBkYXRhLmZvckVhY2goY291bnRyeSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpXG4gICAgICAgICAgICAgICAgZWxlbWVudC52YWx1ZSA9IGNvdW50cnkubmFtZVxuICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZS5hcHBlbmRDaGlsZChlbGVtZW50KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGlmICh1c2VyT3B0aW9ucy5hbnN3ZXJUeXBlID09IFwidHlwaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwaW5nSW5wdXQuZm9jdXMoKVxuICAgICAgICAgICAgICAgIH0sIDMwMClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIExvYWRpbmcucmVtb3ZlKClcbiAgICAgICAgICAgIGhpZGVBbGxTY3JlZW5zKClcbiAgICAgICAgICAgIGd1ZXNzU2NyZWVuLnN0eWxlLmRpc3BsYXkgPSBcInVuc2V0XCJcbiAgICAgICAgICAgIHByb2dyZXNzQmFyLnN0eWxlLndpZHRoID0gcHJvZ3Jlc3NCYXJQZXJjZW50ICsgXCIlXCJcbiAgICAgICAgICAgIGd1ZXNzRm9yKHJhbmRvbUNvdW50cnkoKSlcbiAgICAgICAgfSkuY2F0Y2goc2hvd1VzZXJFcnJvcilcbiAgICB9KS5jYXRjaChzaG93VXNlckVycm9yKVxufVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT0gXCJFbnRlclwiIHx8IGUua2V5ID09IFwiIFwiIHx8IGUua2V5ID09IFwiRXNjYXBlXCIpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTlhSZXBvcnRCdXR0b25cIikpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTlhSZXBvcnRCdXR0b25cIikuY2xpY2soKVxuICAgICAgICB9XG4gICAgfVxufSlcblxuLy8gU2hvdyB0aGUgdW5zYXZlZCBjaGFuZ2VzIHByb21wdFxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGV2ZW50ID0+IHtcbiAgICBpZiAodW5zYXZlZENoYW5nZXMpIHtcbiAgICAgICAgZXZlbnQucmV0dXJuVmFsdWUgPSB0cnVlXG4gICAgfVxufSlcblxuLy8gVGljayBwbGF5dGltZSBzdGF0XG5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgaWYgKHVuc2F2ZWRDaGFuZ2VzKSB7XG4gICAgICAgIGluY3JlbWVudEdhbWVTdGF0KCdwbGF5dGltZScpXG4gICAgfVxufSwgMTAwMClcblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjbG9zZS1idG5cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBDb25maXJtLnNob3coXCJBcmUgeW91IHN1cmU/XCIsIFwiWW91ciBzdGF0aXN0aWNzIGFyZSBhbHJlYWR5IHNhdmVkLCBidXQgYW55IGN1cnJlbnQgZ2FtZSBwcm9ncmVzcyB3aWxsIGJlIGxvc3QuXCIsIFwiTGVhdmVcIiwgXCJTdGF5XCIsIHJldHVyblRvSG9tZSwgdW5kZWZpbmVkLCBjb25maXJtT3B0aW9ucylcbn0pXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVwbGF5LWJ0bicpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgaGlkZUFsbFNjcmVlbnMoKVxuICAgIHJlc2V0KClcbiAgICBzdGFydCgpXG59KVxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZpZXctZmxhZy1idG4nKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIG5ldyBQb3B1cCh7XG4gICAgICAgIHRpdGxlOiBgRmxhZyBvZiAke2N1cnJlbnRDb3VudHJ5Lm5hbWV9YCxcbiAgICAgICAgY29udGVudDogYDxpbWcgc3JjPVwiJHtnZXRGbGFnVXJsKGN1cnJlbnRDb3VudHJ5KX1cIiBjbGFzcz1cInZpZXctZmxhZy1pbWdcIj5gLFxuICAgICAgICBwbGFpblRleHQ6IGZhbHNlXG4gICAgfSlcbn0pXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaG9tZS1idG4nKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcmV0dXJuVG9Ib21lKVxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYXktYnRuJykuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHN0YXJ0KVxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Fib3V0LWJ0bicpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzaG93QWJvdXQpIiwiaW1wb3J0IFBvcHVwIGZyb20gXCJzdXBlci1zaW1wbGUtcG9wdXBcIlxuXG5jb25zdCBjb250ZW50ID0gYFxuPGgzPldoYXQgaXMgdGhpcz88L2gzPlxuRmxhZyBndWVzc2VyIGlzIGFuIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcGlrYXBvd2VyOTA4MC9mbGFnLWd1ZXNzZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5vcGVuIHNvdXJjZTwvYT4gdmFuaWxsYSBqYXZhc2NyaXB0IGdhbWUgYWJvdXQgZ3Vlc3Npbmcgd29ybGQgZmxhZ3MuXG48aDM+RGlmZmljdWx0eTwvaDM+XG5JbiBhbiBhdHRlbXB0IHRvIG1ha2UgdGhlIGdhbWUgZnVuIGZvciBldmVyeW9uZSwgYSBkaWZmaWN1bHR5IG9wdGlvbiBoYXMgYmVlbiBhZGRlZC4gVGhlIHRocmVlIGRpZmZpY3VsdGllcyBhcmUgZGVzY3JpYmVkIHdoZW4geW91IGhvdmVyIG92ZXIgdGhlaXIgYnV0dG9ucy4gWW91IG1pZ2h0IG5vdCBhZ3JlZSB3aXRoIHRoZXNlIHByZXNldHMsIGFuZCBpZiB5b3UgaGF2ZSBhbnkgZmVlZGJhY2sgcGxlYXNlIG9wZW4gYSA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3Bpa2Fwb3dlcjkwODAvZmxhZy1ndWVzc2VyL2lzc3Vlc1wiIHRhcmdldD1cIl9ibGFua1wiPmdpdGh1YiBpc3N1ZTwvYT4uXG48aDM+Q3VzdG9taXphdGlvbjwvaDM+XG5GbGFnIGd1ZXNzZXIgaXMgZXh0cmVtZWx5IGN1c3RvbWl6YWJsZSEgQmVsb3cgdGhlIHBsYXkgYnV0dG9uIHlvdSdsbCBmaW5kIGEgbWVudSB3aXRoIG1hbnkgb3B0aW9ucy4gQWZ0ZXIgdGhlIGdhbWUgZW5kcywgeW91IGNhbiBwcmVzcyB0aGUgcGxheSBhZ2FpbiBidXR0b24gdG8gcmV0cnkgd2l0aCB0aGUgZXhhY3Qgc2FtZSBvcHRpb25zLlxuPGgzPkJ1Z3MgLyBGZWF0dXJlIFJlcXVlc3RzPC9oMz5cbklmIHlvdSd2ZSBmb3VuZCBhIGJ1ZyBvciBoYXZlIGFuIGlkZWEgZm9yIGEgZmVhdHVyZSwgcGxlYXNlIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcGlrYXBvd2VyOTA4MC9mbGFnLWd1ZXNzZXIvaXNzdWVzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+b3BlbiBhbiBpc3N1ZTwvYT4gb24gZ2l0aHViLiBZb3UgdW5mb3J0dW5hdGVseSB3aWxsIG5lZWQgdG8gc2lnbiB1cCBmb3IgYW4gYWNjb3VudC5cbjxoMz5BY2tub3dsZWRnZW1lbnRzPC9oMz5cbjx1bD5cbjxsaT5FeHRyYSBzcGVjaWFsIHRoYW5rcyB0byA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3Jpc2FuL2NvdW50cnktZmxhZy1lbW9qaS1qc29uXCIgdGFyZ2V0PVwiX2JsYW5rXCI+Y291bnRyeS1mbGFnLWVtb2ppLWpzb248L2E+LCB0aGlzIHByb2plY3Qgd291bGQgbm90IGJlIHBvc3NpYmxlIHdpdGhvdXQgaXQuPC9saT5cbjxsaT5GbGFnIGltYWdlcyBjb3VydGVzeSBvZiA8YSBocmVmPVwiaHR0cHM6Ly9jb3VudHJ5ZmxhZ3NhcGkuY29tL1wiIHRhcmdldD1cIl9ibGFua1wiPmNvdW50cnlmbGFnc2FwaS5jb208L2E+PC9saT5cbjxsaT5SYWRpbyBidXR0b24gc3R5bGVzIHRha2VuIGZyb20gPGEgaHJlZj1cImh0dHBzOi8vbWFya2hlYXRoLm5ldC9wb3N0L2N1c3RvbWl6ZS1yYWRpby1idXR0b24tY3NzXCIgdGFyZ2V0PVwiX2JsYW5rXCI+aGVyZTwvYT48L2xpPlxuPGxpPkljb25zIGJ5IDxhIGhyZWY9XCJodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5Gb250QXdlc29tZTwvYT48L2xpPlxuPC91bD5cbmBcblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dBYm91dCgpIHtcbiAgICBuZXcgUG9wdXAoe1xuICAgICAgICB0aXRsZTogJ0Fib3V0JyxcbiAgICAgICAgcGxhaW5UZXh0OiBmYWxzZSxcbiAgICAgICAgY29udGVudDogY29udGVudFxuICAgIH0pXG59XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwicm9vdCIsImciLCJ3aW5kb3ciLCJkb2N1bWVudCIsIm5ld0NvbmZpcm1TZXR0aW5ncyIsInR5cGVzQ29uZmlybSIsImNvbmZpcm1TZXR0aW5ncyIsIklEIiwiY2xhc3NOYW1lIiwid2lkdGgiLCJ6aW5kZXgiLCJwb3NpdGlvbiIsImRpc3RhbmNlIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwiYmFja092ZXJsYXkiLCJiYWNrT3ZlcmxheUNvbG9yIiwicnRsIiwiZm9udEZhbWlseSIsImNzc0FuaW1hdGlvbiIsImNzc0FuaW1hdGlvbkR1cmF0aW9uIiwiY3NzQW5pbWF0aW9uU3R5bGUiLCJwbGFpblRleHQiLCJ0aXRsZUNvbG9yIiwidGl0bGVGb250U2l6ZSIsInRpdGxlTWF4TGVuZ3RoIiwibWVzc2FnZUNvbG9yIiwibWVzc2FnZUZvbnRTaXplIiwibWVzc2FnZU1heExlbmd0aCIsImJ1dHRvbnNGb250U2l6ZSIsImJ1dHRvbnNNYXhMZW5ndGgiLCJva0J1dHRvbkNvbG9yIiwib2tCdXR0b25CYWNrZ3JvdW5kIiwiY2FuY2VsQnV0dG9uQ29sb3IiLCJjYW5jZWxCdXR0b25CYWNrZ3JvdW5kIiwiY29tbW9uQ29uc29sZUVycm9yIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsImNvbW1vbkNoZWNrSGVhZE9yQm9keSIsImVsZW1lbnQiLCJjb21tb25FeHRlbmRPcHRpb25zIiwiZXh0ZW5kZWQiLCJkZWVwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiY2FsbCIsImFyZ3VtZW50cyIsIm1lcmdlIiwib2JqIiwicHJvcCIsImhhc093blByb3BlcnR5IiwiY29tbW9uR2V0UGxhaW50ZXh0IiwiaHRtbCIsImh0bWxQb29sIiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsInRleHRDb250ZW50IiwiaW5uZXJUZXh0IiwiY29uZmlybUdldEludGVybmFsQ1NTQ29kZXMiLCJjb25maXJtQ3JlYXRlIiwiY29uZmlybVR5cGUiLCJ0aXRsZSIsIm1lc3NhZ2VPclF1ZXN0aW9uIiwiYW5zd2VyIiwib2tCdXR0b25UZXh0IiwiY2FuY2VsQnV0dG9uVGV4dCIsIm9rQnV0dG9uQ2FsbGJhY2siLCJjYW5jZWxCdXR0b25DYWxsYmFjayIsIm9wdGlvbnMiLCJOb3RpZmxpeCIsIkNvbmZpcm0iLCJpbml0IiwibmV3Q29uZmlybVNldHRpbmdzQmFja3VwIiwiQXJyYXkiLCJpc0FycmF5Iiwic3Vic3RyaW5nIiwibnRmbHhDb25maXJtV3JhcCIsInN0eWxlIiwiekluZGV4IiwicGFkZGluZyIsInNldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsImNvbmZpcm1Qb3NpdGlvbiIsInRyaW0iLCJjb25maXJtT3ZlcmxheSIsImNhbmNlbEJ1dHRvbkhUTUwiLCJzZXRWYWxpZGF0aW9uSW5wdXQiLCJ0aGVFeHBlY3RlZEFuc3dlciIsInRoZUNsaWVudEFuc3dlciIsImlucHV0TWF4TGVuZ3RoIiwiTWF0aCIsImNlaWwiLCJnZXRFbGVtZW50QnlJZCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNvbmZpcm1DbG9zZVdyYXAiLCJva0J1dHRvbiIsInZhbGlkYXRpb25JbnB1dCIsImZvY3VzIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJ2YWx1ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInRoaXNWYWx1ZSIsInRhcmdldCIsInByZXZlbnREZWZhdWx0IiwicmVtb3ZlIiwia2V5IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJrZXlDb2RlIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwicmV0dXJuVmFsdWUiLCJjYW5jZWxCdWJibGUiLCJ0aW1lb3V0Iiwic2V0VGltZW91dCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImNsZWFyVGltZW91dCIsInVzZXJDb25maXJtT3B0aW9ucyIsImdldEludGVybmFsQ1NTQ29kZXMiLCJzdHlsZUVsZW1lbnRJZCIsImludGVybmFsQ1NTIiwiaGVhZCIsImNvbW1vblNldEludGVybmFsQ1NTQ29kZXMiLCJ1c2VyQ29uZmlybUV4dGVuZE9wdGlvbnMiLCJzaG93IiwiYXNrIiwicXVlc3Rpb24iLCJwcm9tcHQiLCJkZWZhdWx0QW5zd2VyIiwiZmFjdG9yeSIsIm5ld0xvYWRpbmdTZXR0aW5ncyIsInR5cGVzTG9hZGluZyIsImxvYWRpbmdTZXR0aW5ncyIsImNsaWNrVG9DbG9zZSIsImN1c3RvbVN2Z1VybCIsImN1c3RvbVN2Z0NvZGUiLCJzdmdTaXplIiwic3ZnQ29sb3IiLCJtZXNzYWdlSUQiLCJsb2FkaW5nR2V0SW50ZXJuYWxDU1NDb2RlcyIsImxvYWRpbmdDcmVhdGUiLCJsb2FkaW5nVHlwZSIsIm1lc3NhZ2VPck9wdGlvbnMiLCJkaXNwbGF5IiwiZGVsYXkiLCJMb2FkaW5nIiwibmV3TG9hZGluZ1NldHRpbmdzQmFja3VwIiwibmV3T3B0aW9ucyIsImNvbG9yIiwibWVzc2FnZUhUTUwiLCJzdmdJY29uIiwibG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkhvdXJnbGFzcyIsImxvYWRpbmdBbmRCbG9ja1N2Z0ljb25DaXJjbGUiLCJsb2FkaW5nQW5kQmxvY2tTdmdJY29uQXJyb3dzIiwibG9hZGluZ0FuZEJsb2NrU3ZnSWNvbkRvdHMiLCJsb2FkaW5nQW5kQmxvY2tTdmdJY29uUHVsc2UiLCJ3aGl0ZSIsImdyZWVuIiwibG9hZGluZ0FuZEJsb2NrU3ZnSWNvbk5vdGlmbGl4Iiwic3ZnU2l6ZUFzRGlnaXQiLCJwYXJzZUludCIsInJlcGxhY2UiLCJ3aW5XaWR0aCIsImlubmVyV2lkdGgiLCJtYXhTdmdXaWR0aFB4Iiwic3ZnSWNvbkhUTUwiLCJudGZseExvYWRpbmdXcmFwIiwiYmFja2dyb3VuZCIsImFuaW1hdGlvbkR1cmF0aW9uIiwiZmxleFdyYXAiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwibG9hZGluZ0VsbSIsInRpbWVvdXQyIiwidXNlckxvYWRpbmdPcHRpb25zIiwidXNlckxvYWRpbmdFeHRlbmRPcHRpb25zIiwic3RhbmRhcmQiLCJob3VyZ2xhc3MiLCJjaXJjbGUiLCJhcnJvd3MiLCJkb3RzIiwicHVsc2UiLCJjdXN0b20iLCJub3RpZmxpeCIsImNoYW5nZSIsIm5ld01lc3NhZ2UiLCJtZXNzYWdlV3JhcCIsIm9sZE1lc3NhZ2VFbG0iLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIm5ld01lc3NhZ2VIVE1MIiwiZm9udFNpemUiLCJsb2FkaW5nQ2hhbmdlTWVzc2FnZSIsIm5ld1JlcG9ydFNldHRpbmdzIiwidHlwZXNSZXBvcnQiLCJyZXBvcnRTZXR0aW5ncyIsImJhY2tPdmVybGF5Q2xpY2tUb0Nsb3NlIiwiYnV0dG9uRm9udFNpemUiLCJidXR0b25NYXhMZW5ndGgiLCJzdWNjZXNzIiwiYnV0dG9uQmFja2dyb3VuZCIsImJ1dHRvbkNvbG9yIiwiZmFpbHVyZSIsIndhcm5pbmciLCJpbmZvIiwicmVwb3J0R2V0SW50ZXJuYWxDU1NDb2RlcyIsInJlcG9ydENyZWF0ZSIsInJlcG9ydFR5cGUiLCJidXR0b25UZXh0IiwiY2FsbGJhY2tPck9wdGlvbnMiLCJSZXBvcnQiLCJuZXdSZXBvcnRTZXR0aW5nc0JhY2t1cCIsInRoZVR5cGUiLCJudGZseFJlcG9ydFdyYXAiLCJyZXBvcnRPdmVybGF5IiwicmVwb3J0T3ZlcmxheUNsaWNrVG9DbG9zZSIsInJlcG9ydFN2Z0ljb25GYWlsdXJlIiwicmVwb3J0U3ZnSWNvbldhcm5pbmciLCJyZXBvcnRTdmdJY29uSW5mbyIsInJlcG9ydFJlbW92ZSIsImVsZW1lbnRXcmFwcGVyIiwicXVlcnlTZWxlY3RvciIsInVzZXJSZXBvcnRPcHRpb25zIiwidXNlclJlcG9ydEV4dGVuZE9wdGlvbnMiLCJ0IiwiZSIsImEiLCJuIiwibyIsInIiLCJzIiwibCIsIm0iLCJ3cmFwSUQiLCJvdmVybGF5SUQiLCJvcGFjaXR5Iiwic2hvd09ubHlUaGVMYXN0T25lIiwicGF1c2VPbkhvdmVyIiwiY2xvc2VCdXR0b24iLCJ1c2VJY29uIiwidXNlRm9udEF3ZXNvbWUiLCJmb250QXdlc29tZUljb25TdHlsZSIsImZvbnRBd2Vzb21lSWNvblNpemUiLCJ0ZXh0Q29sb3IiLCJjaGlsZENsYXNzTmFtZSIsIm5vdGlmbGl4SWNvbkNvbG9yIiwiZm9udEF3ZXNvbWVDbGFzc05hbWUiLCJmb250QXdlc29tZUljb25Db2xvciIsImMiLCJwIiwiZiIsImQiLCJ4IiwiYiIsInUiLCJxdWVyeVNlbGVjdG9yTGltaXQiLCJ5IiwibG9nIiwidyIsImgiLCJ2IiwiTiIsIlciLCJJIiwiUiIsIkEiLCJNIiwiQiIsIkQiLCJUIiwiRiIsIkciLCJOb3RpZnkiLCJsZWZ0IiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJtYXJnaW4iLCJtYXhIZWlnaHQiLCJwb2ludGVyRXZlbnRzIiwiaGVpZ2h0IiwiaW5zZXJ0QmVmb3JlIiwiZmlyc3RDaGlsZCIsIkMiLCJ6IiwiY2hpbGRFbGVtZW50Q291bnQiLCJTIiwicXVlcnlTZWxlY3RvckFsbCIsIkUiLCJqIiwiTCIsIk8iLCJIIiwiUCIsIlUiLCJYIiwiViIsInEiLCJRIiwiWSIsImlzUHJvdG90eXBlT2YiLCJOb2RlTGlzdCIsInNsaWNlIiwiQmxvY2siLCJpbmRleE9mIiwidGFnTmFtZSIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicm91bmQiLCJvZmZzZXRIZWlnaHQiLCJnZXRBdHRyaWJ1dGUiLCJLIiwiJCIsIkoiLCJjcmVhdGVSYW5nZSIsInNlbGVjdE5vZGUiLCJaIiwiY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50IiwiXyIsInR0IiwiZXQiLCJpdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZVRhcmdldCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJuYyIsInJlcG9ydE9wdGlvbnMiLCJjb25maXJtT3B0aW9ucyIsInRoZW1lcyIsImFwcGx5VGhlbWUiLCJ0aGVtZU5hbWUiLCJyZXNldFRoZW1lIiwidGhlbWUiLCJ3YXJuIiwicHJvcGVydHkiLCJzdGFydHNXaXRoIiwiZG9jdW1lbnRFbGVtZW50Iiwic2V0UHJvcGVydHkiLCJnbG9iYWxPcHRpb25zIiwibmV3R2xvYmFsT3B0aW9ucyIsImdldFNldHRpbmciLCJjaGVja2VkIiwiYWxlcnQiLCJiZyIsIm5vVGhlbWVDb2xvciIsInJhZGlvcyIsImZyb20iLCJ1c2VyT3B0aW9ucyIsInVzZXJTZXR0aW5ncyIsImdldERhdGFVcmwiLCJzZXQiLCJsb2FkU2V0dGluZ3MiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzYXZlU2V0dGluZ3MiLCJzZXR0aW5ncyIsInNldEl0ZW0iLCJzZXR0aW5nTmFtZSIsImZvckVhY2giLCJpbnB1dCIsIm5hbWUiLCJkZWJ1ZyIsInByb2Nlc3NTdWJTZXRzIiwibG9hZGVkU2V0dGluZ3MiLCJzdWJzZXQiLCJkYXRhc2V0IiwicmVxdWlyZXMiLCJ0eXBlIiwic3RhdGlzdGljcyIsInN0cmVhayIsInRvdGFsUXVlc3Rpb25zIiwidG90YWxDb3JyZWN0IiwidG90YWxJbmNvcnJlY3QiLCJ0b3RhbEdhbWVzIiwiZmxhZ3NTZWVuIiwiZ2FtZVN0YXRpc3RpY3MiLCJwbGF5dGltZSIsImRpZmZpY3VsdHkiLCJzYXZlU3RhdHMiLCJzdGF0cyIsInVwZGF0ZVN0YXRSZWFkaW5nIiwibG9hZFN0YXRzIiwiZ2V0U3RhdCIsInN0YXROYW1lIiwidXBkYXRlU3RhdCIsIm5ld1ZhbHVlIiwiaW5jcmVtZW50U3RhdCIsInVwZGF0ZUdhbWVTdGF0IiwiaW5jcmVtZW50R2FtZVN0YXQiLCJzaG93RW5kU2NyZWVuIiwiZ2FtZU1vZGUiLCJzY29yZSIsIm1heFNjb3JlIiwiY29ycmVjdEFuc3dlciIsImhpZGVBbGxTY3JlZW5zIiwic3RhdElkIiwic3RhdEVsZW1lbnQiLCJzZWNvbmRzIiwiZmxvb3IiLCJzdWJTdHJlYWsiLCJzdWJRdWl6U2NvcmUiLCJzcGxpdCIsImNvcnJlY3RQZXJjZW50YWdlIiwiZW5kQ29ycmVjdEFuc3dlciIsInF1ZXN0aW9uQ291bnRTdGF0Iiwic3RhdCIsImNsZWFyR2FtZVN0YXRzIiwiaXNOYU4iLCJmbGFnc1NlZW5QZXJjZW50YWdlIiwibG9hZGVkU3RhdHMiLCJnZXRXaW5kb3ciLCJub2RlIiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3IiwiaXNFbGVtZW50IiwiRWxlbWVudCIsImlzSFRNTEVsZW1lbnQiLCJIVE1MRWxlbWVudCIsImlzU2hhZG93Um9vdCIsIlNoYWRvd1Jvb3QiLCJyZW1vdmVJdGVtIiwibG9jYXRpb24iLCJyZWxvYWQiLCJ0ZXh0RWxlbWVudCIsImxpbmVzIiwibGlzdEl0ZW0iLCJnZW5lcmF0ZUNvcHlUZXh0Iiwic2VsZWN0IiwiZXhlY0NvbW1hbmQiLCJlcnJvck0iLCJtYXgiLCJtaW4iLCJnZXRVQVN0cmluZyIsInVhRGF0YSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudERhdGEiLCJicmFuZHMiLCJicmFuZCIsInZlcnNpb24iLCJ1c2VyQWdlbnQiLCJpc0xheW91dFZpZXdwb3J0IiwidGVzdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImluY2x1ZGVTY2FsZSIsImlzRml4ZWRTdHJhdGVneSIsImNsaWVudFJlY3QiLCJzY2FsZVgiLCJzY2FsZVkiLCJvZmZzZXRXaWR0aCIsInZpc3VhbFZpZXdwb3J0IiwiYWRkVmlzdWFsT2Zmc2V0cyIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJnZXRXaW5kb3dTY3JvbGwiLCJ3aW4iLCJzY3JvbGxMZWZ0IiwicGFnZVhPZmZzZXQiLCJzY3JvbGxUb3AiLCJwYWdlWU9mZnNldCIsImdldE5vZGVOYW1lIiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsImdldERvY3VtZW50RWxlbWVudCIsImdldFdpbmRvd1Njcm9sbEJhclgiLCJpc1Njcm9sbFBhcmVudCIsIl9nZXRDb21wdXRlZFN0eWxlIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJnZXRDb21wb3NpdGVSZWN0IiwiZWxlbWVudE9yVmlydHVhbEVsZW1lbnQiLCJvZmZzZXRQYXJlbnQiLCJpc0ZpeGVkIiwiaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQiLCJvZmZzZXRQYXJlbnRJc1NjYWxlZCIsInJlY3QiLCJpc0VsZW1lbnRTY2FsZWQiLCJzY3JvbGwiLCJvZmZzZXRzIiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsImdldExheW91dFJlY3QiLCJhYnMiLCJnZXRQYXJlbnROb2RlIiwiYXNzaWduZWRTbG90IiwiaG9zdCIsImdldFNjcm9sbFBhcmVudCIsImxpc3RTY3JvbGxQYXJlbnRzIiwiX2VsZW1lbnQkb3duZXJEb2N1bWVuIiwic2Nyb2xsUGFyZW50IiwiaXNCb2R5IiwidXBkYXRlZExpc3QiLCJpc1RhYmxlRWxlbWVudCIsImdldFRydWVPZmZzZXRQYXJlbnQiLCJnZXRPZmZzZXRQYXJlbnQiLCJpc0ZpcmVmb3giLCJjdXJyZW50Tm9kZSIsInRyYW5zZm9ybSIsInBlcnNwZWN0aXZlIiwiY29udGFpbiIsIndpbGxDaGFuZ2UiLCJmaWx0ZXIiLCJnZXRDb250YWluaW5nQmxvY2siLCJhdXRvIiwiYmFzZVBsYWNlbWVudHMiLCJzdGFydCIsImVuZCIsInZpZXdwb3J0IiwicG9wcGVyIiwidmFyaWF0aW9uUGxhY2VtZW50cyIsInJlZHVjZSIsImFjYyIsInBsYWNlbWVudCIsIm1vZGlmaWVyUGhhc2VzIiwib3JkZXIiLCJtb2RpZmllcnMiLCJNYXAiLCJ2aXNpdGVkIiwiU2V0Iiwic29ydCIsIm1vZGlmaWVyIiwicmVxdWlyZXNJZkV4aXN0cyIsImRlcCIsImhhcyIsImRlcE1vZGlmaWVyIiwiREVGQVVMVF9PUFRJT05TIiwic3RyYXRlZ3kiLCJhcmVWYWxpZEVsZW1lbnRzIiwiX2xlbiIsImFyZ3MiLCJfa2V5Iiwic29tZSIsInBvcHBlckdlbmVyYXRvciIsImdlbmVyYXRvck9wdGlvbnMiLCJfZ2VuZXJhdG9yT3B0aW9ucyIsIl9nZW5lcmF0b3JPcHRpb25zJGRlZiIsImRlZmF1bHRNb2RpZmllcnMiLCJfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyIiwiZGVmYXVsdE9wdGlvbnMiLCJyZWZlcmVuY2UiLCJmbiIsInBlbmRpbmciLCJzdGF0ZSIsIm9yZGVyZWRNb2RpZmllcnMiLCJhc3NpZ24iLCJtb2RpZmllcnNEYXRhIiwiZWxlbWVudHMiLCJzdHlsZXMiLCJlZmZlY3RDbGVhbnVwRm5zIiwiaXNEZXN0cm95ZWQiLCJpbnN0YW5jZSIsInNldE9wdGlvbnMiLCJzZXRPcHRpb25zQWN0aW9uIiwiY2xlYW51cE1vZGlmaWVyRWZmZWN0cyIsInNjcm9sbFBhcmVudHMiLCJjb250ZXh0RWxlbWVudCIsIm1lcmdlZCIsInBoYXNlIiwib3JkZXJNb2RpZmllcnMiLCJjdXJyZW50IiwiZXhpc3RpbmciLCJrZXlzIiwiZW5hYmxlZCIsIl9yZWYzIiwiX3JlZjMkb3B0aW9ucyIsImVmZmVjdCIsImNsZWFudXBGbiIsImZvcmNlVXBkYXRlIiwiX3N0YXRlJGVsZW1lbnRzIiwicmVjdHMiLCJyZXNldCIsIl9zdGF0ZSRvcmRlcmVkTW9kaWZpZSIsIl9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIiLCJfb3B0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsImRlc3Ryb3kiLCJvbkZpcnN0VXBkYXRlIiwicGFzc2l2ZSIsIl9yZWYiLCJfb3B0aW9ucyRzY3JvbGwiLCJfb3B0aW9ucyRyZXNpemUiLCJyZXNpemUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0QmFzZVBsYWNlbWVudCIsImdldFZhcmlhdGlvbiIsImdldE1haW5BeGlzRnJvbVBsYWNlbWVudCIsImNvbXB1dGVPZmZzZXRzIiwiYmFzZVBsYWNlbWVudCIsInZhcmlhdGlvbiIsImNvbW1vblgiLCJjb21tb25ZIiwibWFpbkF4aXMiLCJsZW4iLCJ1bnNldFNpZGVzIiwibWFwVG9TdHlsZXMiLCJfcmVmMiIsIl9PYmplY3QkYXNzaWduMiIsInBvcHBlclJlY3QiLCJncHVBY2NlbGVyYXRpb24iLCJhZGFwdGl2ZSIsInJvdW5kT2Zmc2V0cyIsIl9vZmZzZXRzJHgiLCJfb2Zmc2V0cyR5IiwiaGFzWCIsImhhc1kiLCJzaWRlWCIsInNpZGVZIiwiaGVpZ2h0UHJvcCIsIndpZHRoUHJvcCIsIl9PYmplY3QkYXNzaWduIiwiY29tbW9uU3R5bGVzIiwiX3JlZjQiLCJkcHIiLCJkZXZpY2VQaXhlbFJhdGlvIiwicm91bmRPZmZzZXRzQnlEUFIiLCJfcmVmNSIsIl9vcHRpb25zJGdwdUFjY2VsZXJhdCIsIl9vcHRpb25zJGFkYXB0aXZlIiwiX29wdGlvbnMkcm91bmRPZmZzZXRzIiwicG9wcGVyT2Zmc2V0cyIsImFycm93IiwicmVtb3ZlQXR0cmlidXRlIiwiaW5pdGlhbFN0eWxlcyIsImF0dHJpYnV0ZSIsIl9vcHRpb25zJG9mZnNldCIsIm9mZnNldCIsImludmVydERpc3RhbmNlIiwic2tpZGRpbmciLCJkaXN0YW5jZUFuZFNraWRkaW5nVG9YWSIsIl9kYXRhJHN0YXRlJHBsYWNlbWVudCIsImhhc2giLCJnZXRPcHBvc2l0ZVBsYWNlbWVudCIsIm1hdGNoZWQiLCJnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudCIsImNvbnRhaW5zIiwicGFyZW50IiwiY2hpbGQiLCJyb290Tm9kZSIsImdldFJvb3ROb2RlIiwibmV4dCIsImlzU2FtZU5vZGUiLCJyZWN0VG9DbGllbnRSZWN0IiwiZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUiLCJjbGlwcGluZ1BhcmVudCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwibGF5b3V0Vmlld3BvcnQiLCJnZXRWaWV3cG9ydFJlY3QiLCJnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdCIsIndpblNjcm9sbCIsInNjcm9sbFdpZHRoIiwic2Nyb2xsSGVpZ2h0IiwiZGlyZWN0aW9uIiwiZ2V0RG9jdW1lbnRSZWN0IiwibWVyZ2VQYWRkaW5nT2JqZWN0IiwicGFkZGluZ09iamVjdCIsImV4cGFuZFRvSGFzaE1hcCIsImhhc2hNYXAiLCJkZXRlY3RPdmVyZmxvdyIsIl9vcHRpb25zJHBsYWNlbWVudCIsIl9vcHRpb25zJHN0cmF0ZWd5IiwiX29wdGlvbnMkYm91bmRhcnkiLCJib3VuZGFyeSIsIl9vcHRpb25zJHJvb3RCb3VuZGFyeSIsInJvb3RCb3VuZGFyeSIsIl9vcHRpb25zJGVsZW1lbnRDb250ZSIsImVsZW1lbnRDb250ZXh0IiwiX29wdGlvbnMkYWx0Qm91bmRhcnkiLCJhbHRCb3VuZGFyeSIsIl9vcHRpb25zJHBhZGRpbmciLCJhbHRDb250ZXh0IiwiY2xpcHBpbmdDbGllbnRSZWN0IiwibWFpbkNsaXBwaW5nUGFyZW50cyIsImNsaXBwaW5nUGFyZW50cyIsImNsaXBwZXJFbGVtZW50IiwiZ2V0Q2xpcHBpbmdQYXJlbnRzIiwiZmlyc3RDbGlwcGluZ1BhcmVudCIsImNsaXBwaW5nUmVjdCIsImFjY1JlY3QiLCJnZXRDbGlwcGluZ1JlY3QiLCJyZWZlcmVuY2VDbGllbnRSZWN0IiwicG9wcGVyQ2xpZW50UmVjdCIsImVsZW1lbnRDbGllbnRSZWN0Iiwib3ZlcmZsb3dPZmZzZXRzIiwib2Zmc2V0RGF0YSIsIm11bHRpcGx5IiwiYXhpcyIsIl9za2lwIiwiX29wdGlvbnMkbWFpbkF4aXMiLCJjaGVja01haW5BeGlzIiwiX29wdGlvbnMkYWx0QXhpcyIsImFsdEF4aXMiLCJjaGVja0FsdEF4aXMiLCJzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMiLCJmYWxsYmFja1BsYWNlbWVudHMiLCJfb3B0aW9ucyRmbGlwVmFyaWF0aW8iLCJmbGlwVmFyaWF0aW9ucyIsImFsbG93ZWRBdXRvUGxhY2VtZW50cyIsInByZWZlcnJlZFBsYWNlbWVudCIsIm9wcG9zaXRlUGxhY2VtZW50IiwiZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMiLCJwbGFjZW1lbnRzIiwiX29wdGlvbnMkYWxsb3dlZEF1dG9QIiwiYWxsb3dlZFBsYWNlbWVudHMiLCJvdmVyZmxvd3MiLCJjb21wdXRlQXV0b1BsYWNlbWVudCIsInJlZmVyZW5jZVJlY3QiLCJjaGVja3NNYXAiLCJtYWtlRmFsbGJhY2tDaGVja3MiLCJmaXJzdEZpdHRpbmdQbGFjZW1lbnQiLCJfYmFzZVBsYWNlbWVudCIsImlzU3RhcnRWYXJpYXRpb24iLCJpc1ZlcnRpY2FsIiwibWFpblZhcmlhdGlvblNpZGUiLCJhbHRWYXJpYXRpb25TaWRlIiwiY2hlY2tzIiwiZXZlcnkiLCJjaGVjayIsIl9sb29wIiwiZml0dGluZ1BsYWNlbWVudCIsImZpbmQiLCJ3aXRoaW4iLCJfb3B0aW9ucyR0ZXRoZXIiLCJ0ZXRoZXIiLCJfb3B0aW9ucyR0ZXRoZXJPZmZzZXQiLCJ0ZXRoZXJPZmZzZXQiLCJpc0Jhc2VQbGFjZW1lbnQiLCJ0ZXRoZXJPZmZzZXRWYWx1ZSIsIm5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZSIsIm9mZnNldE1vZGlmaWVyU3RhdGUiLCJfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQiLCJtYWluU2lkZSIsImFsdFNpZGUiLCJhZGRpdGl2ZSIsIm1pbkxlbiIsIm1heExlbiIsImFycm93RWxlbWVudCIsImFycm93UmVjdCIsImFycm93UGFkZGluZ09iamVjdCIsImFycm93UGFkZGluZ01pbiIsImFycm93UGFkZGluZ01heCIsImFycm93TGVuIiwibWluT2Zmc2V0IiwibWF4T2Zmc2V0IiwiYXJyb3dPZmZzZXRQYXJlbnQiLCJjbGllbnRPZmZzZXQiLCJvZmZzZXRNb2RpZmllclZhbHVlIiwidGV0aGVyTWF4IiwicHJldmVudGVkT2Zmc2V0IiwiX29mZnNldE1vZGlmaWVyU3RhdGUkMiIsIl9tYWluU2lkZSIsIl9hbHRTaWRlIiwiX29mZnNldCIsIl9taW4iLCJfbWF4IiwiaXNPcmlnaW5TaWRlIiwiX29mZnNldE1vZGlmaWVyVmFsdWUiLCJfdGV0aGVyTWluIiwiX3RldGhlck1heCIsIl9wcmV2ZW50ZWRPZmZzZXQiLCJ3aXRoaW5NYXhDbGFtcCIsIl9zdGF0ZSRtb2RpZmllcnNEYXRhJCIsInRvUGFkZGluZ09iamVjdCIsIm1pblByb3AiLCJtYXhQcm9wIiwiZW5kRGlmZiIsInN0YXJ0RGlmZiIsImNsaWVudFNpemUiLCJjZW50ZXJUb1JlZmVyZW5jZSIsImNlbnRlciIsImF4aXNQcm9wIiwiY2VudGVyT2Zmc2V0IiwiX29wdGlvbnMkZWxlbWVudCIsImdldFNpZGVPZmZzZXRzIiwicHJldmVudGVkT2Zmc2V0cyIsImlzQW55U2lkZUZ1bGx5Q2xpcHBlZCIsInNpZGUiLCJldmVudExpc3RlbmVycyIsInByZXZlbnRPdmVyZmxvdyIsInJlZmVyZW5jZU92ZXJmbG93IiwicG9wcGVyQWx0T3ZlcmZsb3ciLCJyZWZlcmVuY2VDbGlwcGluZ09mZnNldHMiLCJwb3BwZXJFc2NhcGVPZmZzZXRzIiwiaXNSZWZlcmVuY2VIaWRkZW4iLCJoYXNQb3BwZXJFc2NhcGVkIiwiQ09OVEVOVF9DTEFTUyIsIkFSUk9XX0NMQVNTIiwiU1ZHX0FSUk9XX0NMQVNTIiwiVE9VQ0hfT1BUSU9OUyIsImNhcHR1cmUiLCJUSVBQWV9ERUZBVUxUX0FQUEVORF9UTyIsImdldFZhbHVlQXRJbmRleE9yUmV0dXJuIiwiZGVmYXVsdFZhbHVlIiwiaXNUeXBlIiwic3RyIiwiaW52b2tlV2l0aEFyZ3NPclJldHVybiIsIm1zIiwiYXJnIiwibm9ybWFsaXplVG9BcnJheSIsInB1c2hJZlVuaXF1ZSIsImFyciIsImFycmF5RnJvbSIsInJlbW92ZVVuZGVmaW5lZFByb3BzIiwiZGl2Iiwic2V0VHJhbnNpdGlvbkR1cmF0aW9uIiwiZWxzIiwiZWwiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJzZXRWaXNpYmlsaXR5U3RhdGUiLCJ1cGRhdGVUcmFuc2l0aW9uRW5kTGlzdGVuZXIiLCJib3giLCJhY3Rpb24iLCJsaXN0ZW5lciIsIm1ldGhvZCIsImFjdHVhbENvbnRhaW5zIiwiX3RhcmdldCRnZXRSb290Tm9kZSIsImN1cnJlbnRJbnB1dCIsImlzVG91Y2giLCJsYXN0TW91c2VNb3ZlVGltZSIsIm9uRG9jdW1lbnRUb3VjaFN0YXJ0IiwicGVyZm9ybWFuY2UiLCJvbkRvY3VtZW50TW91c2VNb3ZlIiwibm93Iiwib25XaW5kb3dCbHVyIiwiYWN0aXZlRWxlbWVudCIsIl90aXBweSIsImJsdXIiLCJpc1Zpc2libGUiLCJpc0lFMTEiLCJtc0NyeXB0byIsImRlZmF1bHRQcm9wcyIsImFwcGVuZFRvIiwiYXJpYSIsImV4cGFuZGVkIiwiZHVyYXRpb24iLCJnZXRSZWZlcmVuY2VDbGllbnRSZWN0IiwiaGlkZU9uQ2xpY2siLCJpZ25vcmVBdHRyaWJ1dGVzIiwiaW50ZXJhY3RpdmUiLCJpbnRlcmFjdGl2ZUJvcmRlciIsImludGVyYWN0aXZlRGVib3VuY2UiLCJtb3ZlVHJhbnNpdGlvbiIsIm9uQWZ0ZXJVcGRhdGUiLCJvbkJlZm9yZVVwZGF0ZSIsIm9uQ3JlYXRlIiwib25EZXN0cm95Iiwib25IaWRkZW4iLCJvbkhpZGUiLCJvbk1vdW50Iiwib25TaG93Iiwib25TaG93biIsIm9uVHJpZ2dlciIsIm9uVW50cmlnZ2VyIiwib25DbGlja091dHNpZGUiLCJwbHVnaW5zIiwicG9wcGVyT3B0aW9ucyIsInJlbmRlciIsInNob3dPbkNyZWF0ZSIsInRvdWNoIiwidHJpZ2dlciIsInRyaWdnZXJUYXJnZXQiLCJhbmltYXRlRmlsbCIsImZvbGxvd0N1cnNvciIsImlubGluZVBvc2l0aW9uaW5nIiwic3RpY2t5IiwiYWxsb3dIVE1MIiwiYW5pbWF0aW9uIiwiaW5lcnRpYSIsIm1heFdpZHRoIiwicm9sZSIsImRlZmF1bHRLZXlzIiwiZ2V0RXh0ZW5kZWRQYXNzZWRQcm9wcyIsInBhc3NlZFByb3BzIiwicGx1Z2luUHJvcHMiLCJwbHVnaW4iLCJfbmFtZSIsImV2YWx1YXRlUHJvcHMiLCJwcm9wcyIsIm91dCIsInZhbHVlQXNTdHJpbmciLCJnZXREYXRhQXR0cmlidXRlUHJvcHMiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNyZWF0ZUFycm93RWxlbWVudCIsInNldENvbnRlbnQiLCJnZXRDaGlsZHJlbiIsImZpcnN0RWxlbWVudENoaWxkIiwiYm94Q2hpbGRyZW4iLCJjaGlsZHJlbiIsImJhY2tkcm9wIiwib25VcGRhdGUiLCJwcmV2UHJvcHMiLCJuZXh0UHJvcHMiLCJfZ2V0Q2hpbGRyZW4iLCIkJHRpcHB5IiwiaWRDb3VudGVyIiwibW91c2VNb3ZlTGlzdGVuZXJzIiwibW91bnRlZEluc3RhbmNlcyIsImNyZWF0ZVRpcHB5Iiwic2hvd1RpbWVvdXQiLCJoaWRlVGltZW91dCIsInNjaGVkdWxlSGlkZUFuaW1hdGlvbkZyYW1lIiwibGFzdFRyaWdnZXJFdmVudCIsImN1cnJlbnRUcmFuc2l0aW9uRW5kTGlzdGVuZXIiLCJjdXJyZW50VGFyZ2V0IiwiaXNWaXNpYmxlRnJvbUNsaWNrIiwiZGlkSGlkZUR1ZVRvRG9jdW1lbnRNb3VzZURvd24iLCJkaWRUb3VjaE1vdmUiLCJpZ25vcmVPbkZpcnN0VXBkYXRlIiwibGlzdGVuZXJzIiwiZGVib3VuY2VkT25Nb3VzZU1vdmUiLCJvbk1vdXNlTW92ZSIsInBvcHBlckluc3RhbmNlIiwiaXNFbmFibGVkIiwiaXNNb3VudGVkIiwiaXNTaG93biIsImNsZWFyRGVsYXlUaW1lb3V0cyIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwic2V0UHJvcHMiLCJwYXJ0aWFsUHJvcHMiLCJpbnZva2VIb29rIiwicmVtb3ZlTGlzdGVuZXJzIiwiYWRkTGlzdGVuZXJzIiwiY2xlYW51cEludGVyYWN0aXZlTW91c2VMaXN0ZW5lcnMiLCJoYW5kbGVBcmlhRXhwYW5kZWRBdHRyaWJ1dGUiLCJoYW5kbGVTdHlsZXMiLCJjcmVhdGVQb3BwZXJJbnN0YW5jZSIsImdldE5lc3RlZFBvcHBlclRyZWUiLCJuZXN0ZWRQb3BwZXIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpc0FscmVhZHlWaXNpYmxlIiwiaXNEaXNhYmxlZCIsImlzVG91Y2hBbmRUb3VjaERpc2FibGVkIiwiZ2V0Q3VycmVudFRhcmdldCIsImhhc0F0dHJpYnV0ZSIsImdldElzRGVmYXVsdFJlbmRlckZuIiwidmlzaWJpbGl0eSIsImFkZERvY3VtZW50UHJlc3MiLCJ0cmFuc2l0aW9uIiwiX2dldERlZmF1bHRUZW1wbGF0ZUNoMiIsImdldERlZmF1bHRUZW1wbGF0ZUNoaWxkcmVuIiwiX2luc3RhbmNlJHBvcHBlckluc3RhMiIsIl9nZXREZWZhdWx0VGVtcGxhdGVDaDMiLCJfYm94IiwiX2NvbnRlbnQiLCJoYW5kbGVBcmlhQ29udGVudEF0dHJpYnV0ZSIsImNhbGxiYWNrIiwib25UcmFuc2l0aW9uRW5kIiwib25UcmFuc2l0aW9uZWRJbiIsImhpZGUiLCJpc0FscmVhZHlIaWRkZW4iLCJyZW1vdmVEb2N1bWVudFByZXNzIiwiX2dldERlZmF1bHRUZW1wbGF0ZUNoNCIsIm9uVHJhbnNpdGlvbmVkT3V0IiwidW5tb3VudCIsImhpZGVXaXRoSW50ZXJhY3Rpdml0eSIsImdldERvY3VtZW50IiwiZW5hYmxlIiwiZGlzYWJsZSIsImRlc3Ryb3lQb3BwZXJJbnN0YW5jZSIsIl9wcm9wcyRyZW5kZXIiLCJwbHVnaW5zSG9va3MiLCJoYXNBcmlhRXhwYW5kZWQiLCJzY2hlZHVsZVNob3ciLCJnZXROb3JtYWxpemVkVG91Y2hTZXR0aW5ncyIsImdldElzQ3VzdG9tVG91Y2hCZWhhdmlvciIsIl9pbnN0YW5jZSRwcm9wcyRyZW5kZSIsImdldERlbGF5IiwiaXNTaG93IiwiZnJvbUhpZGUiLCJob29rIiwic2hvdWxkSW52b2tlUHJvcHNIb29rIiwiX2luc3RhbmNlJHByb3BzIiwicGx1Z2luSG9va3MiLCJhdHRyIiwiY3VycmVudFZhbHVlIiwibmV4dFZhbHVlIiwib25Eb2N1bWVudFByZXNzIiwiYWN0dWFsVGFyZ2V0IiwiY29tcG9zZWRQYXRoIiwib25Ub3VjaE1vdmUiLCJvblRvdWNoU3RhcnQiLCJkb2MiLCJvbiIsImV2ZW50VHlwZSIsImhhbmRsZXIiLCJvbk1vdXNlTGVhdmUiLCJCb29sZWFuIiwib25CbHVyT3JGb2N1c091dCIsIl9sYXN0VHJpZ2dlckV2ZW50Iiwic2hvdWxkU2NoZWR1bGVDbGlja0hpZGUiLCJpc0V2ZW50TGlzdGVuZXJTdG9wcGVkIiwid2FzRm9jdXNlZCIsInNjaGVkdWxlSGlkZSIsImlzQ3Vyc29yT3ZlclJlZmVyZW5jZU9yUG9wcGVyIiwicG9wcGVyVHJlZURhdGEiLCJfaW5zdGFuY2UkcG9wcGVySW5zdGEiLCJwb3BwZXJTdGF0ZSIsImNsaWVudFgiLCJjbGllbnRZIiwidG9wRGlzdGFuY2UiLCJib3R0b21EaXN0YW5jZSIsImxlZnREaXN0YW5jZSIsInJpZ2h0RGlzdGFuY2UiLCJleGNlZWRzVG9wIiwiZXhjZWVkc0JvdHRvbSIsImV4Y2VlZHNMZWZ0IiwiZXhjZWVkc1JpZ2h0IiwiaXNDdXJzb3JPdXRzaWRlSW50ZXJhY3RpdmVCb3JkZXIiLCJyZWxhdGVkVGFyZ2V0IiwiX2luc3RhbmNlJHByb3BzMiIsImNvbXB1dGVkUmVmZXJlbmNlIiwiX2dldE5vcm1hbGl6ZWRUb3VjaFNlIiwidG91Y2hWYWx1ZSIsInRvdWNoRGVsYXkiLCJ0aXBweSIsInRhcmdldHMiLCJvcHRpb25hbFByb3BzIiwiaW5zdGFuY2VzIiwiaXNOb2RlTGlzdCIsInNldERlZmF1bHRQcm9wcyIsInRvb2x0aXBzQnlJZCIsImVsZW1lbnRJZCIsImNvbnN0cnVjdG9yIiwiY2xpY2tCYWNrZHJvcFRvQ2xvc2UiLCJjbG9zZUtleXMiLCJQb3B1cEVsZW1lbnQiLCJoZWFkZXJDb250YWluZXIiLCJ0aXRsZUVsZW1lbnQiLCJ4QnV0dG9uIiwibWFpbkNvbnRlbnQiLCJwcm9jZXNzS2V5RG93biIsImluY2x1ZGVzIiwiY2xpY2siLCJjbG9zZSIsImNhbGxiYWNrUmVwbGFjZURlZmF1bHQiLCJvbkNsb3NlIiwiaW5jb3JyZWN0RW5kbGVzc01lc3NhZ2VzIiwic3RyZWFrQ29ycmVjdE1lc3NhZ2VzIiwibG9zZVN0cmVha01lc3NhZ2VzIiwicXVlc3Rpb25zRmFpbCIsInF1ZXN0aW9uc0ZpbmlzaCIsImN1cnJlbnRDb3VudHJ5IiwicHJldmlvdXNDb3VudHJ5Iiwib3B0aW9uQ291bnQiLCJxdWVzdGlvbk51bSIsInF1ZXN0aW9uQ291bnQiLCJjYW5Db250aW51ZSIsInVzZUZhbGxiYWNrIiwicHJvZ3Jlc3NCYXJQZXJjZW50IiwidW5zYXZlZENoYW5nZXMiLCJwcm9ncmVzc0JhciIsInN0cmVha051bSIsInN0cmVha0NvbnRhaW5lciIsInR5cGluZ0Zvcm0iLCJ0eXBpbmdJbnB1dCIsImNvcnJlY3RUZXh0IiwiY2hlY2tBbnN3ZXIiLCJjb3VudHJ5IiwidmFsaWRBbnN3ZXJzIiwiYWx0Iiwic2hvd1VzZXJFcnJvciIsInJhbmRvbUNvdW50cnkiLCJyYW5kb20iLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic2NyZWVuIiwicmV0dXJuVG9Ib21lIiwiZ2V0RmxhZ1VybCIsImNvZGUiLCJpbWFnZSIsImd1ZXNzU2NyZWVuIiwiZmxhZ1N2ZyIsIm9wdGlvbnNEaXYiLCJhbnN3ZXJUeXBlcyIsIm1vdmVPbiIsIm1vZGUiLCJxdWVzdGlvbnMiLCJndWVzc0ZvciIsInNyYyIsImFuc3dlclR5cGUiLCJvcHRpb24iLCJwaWNrIiwicmFuZG9tSW5kZXgiLCJidG4iLCJzdHJpbmdzIiwicmVwbGFjZUFsbCIsInByb2Nlc3NDYW5Db250aW51ZSIsInN0cmVha0luY29ycmVjdCIsImZvcm1MaXN0ZW5lciIsImd1ZXNzIiwibmV3U3RhdCIsInJDb3VudHJ5IiwiYW5zd2VyRGl2Iiwic2hvd0Fuc3dlck1vZGUiLCJwYXJlbnRFbGVtZW50IiwiYXV0b2NvbXBsZXRlIiwiZmV0Y2giLCJyZXMiLCJqc29uIiwiZmV0Y2hlZERhdGEiLCJjYXRjaCIsInNldEludGVydmFsIl0sInNvdXJjZVJvb3QiOiIifQ==